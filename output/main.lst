mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E A6 2C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 005D			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 2CC2			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 A3			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 1F 2C E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 1F 85 02 A9 2D + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 33 2C			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D C7 2C		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD C7 2C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 2CC7			RESULT	= DATAORIGIN+$000B
   182
   183 = 2CC7			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 034  ---------------------
   304
   305 1123 A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   306
   307 1129			@exit
   308 					.ifdef @new
   309 					lda <@VarData
   310 					sta :ztmp
   311 					lda >@VarData
   312 					ldy #@VarDataSize-1
   313 					jmp @FreeMem
   314 					els
   315 1129 60				rts						; ret
   316 					eif
   317 				.endl
   318
   319 112A			.local	PAUSE_006C					; PROCEDURE | ASSEMBLER | OVERLOAD
   320
   321 				; ---------------------  ASM Block 035  ---------------------
   322
   323
   324 112A AD C8 2C		loop  lda n
   325 112D 0D C9 2C		  ora n+1
   326 1130 F0 14		  beq stop
   327
   328 1132 A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   329
   330 1138 AD C8 2C D0 03 CE +   dew n
   331
   332 1143 4C 2A 11		  jmp loop
   333 1146			stop
   334
   335
   336 				; ------------------------------------------------------------
   337
   338 = 2CC8			N	= DATAORIGIN+$000C
   339
   340 = 2CC8			@VarData	= N
   341 = 0002			@VarDataSize	= 2
   342
   343 1146			@exit
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					els
   351 1146 60				rts						; ret
   352 					eif
   353 				.endl
   354
   355 1147			.local	RANDOM_006D					; FUNCTION | ASSEMBLER | OVERLOAD
   356 1147 8D CA 2C			sta RANGE
   357
   358 				; ---------------------  ASM Block 039  ---------------------
   359
   360
   361 114A AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   362 114D 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   363 1150 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   364 1153 6D 1E FF		  adc ted_hcount    //Horizontal counter
   365 1156 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   366 1159 4D 1E FF		  eor ted_hcount    //Horizontal counter
   367 115C A8			  tay
   368
   369 115D AD CA 2C		  lda range
   370 1160 F0 08		  beq stop
   371
   372 1162 85 0C		  sta ecx
   373 1164 84 04		  sty eax
   374
   375 1166 20 A3 10		  jsr imulCL
   376 1169 A8			  tay
   377
   378 116A 8C CB 2C		stop  sty Result
   379
   380 116D			@exit
   381
   382 				; ------------------------------------------------------------
   383
   384 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   385 				; as Pointer
   386
   387 116D E8				inx
   388 116E AD CB 2C 95 18		mva RESULT :STACKORIGIN,x
   389
   390 					.ifdef @new
   391 					lda <@VarData
   392 					sta :ztmp
   393 					lda >@VarData
   394 					ldy #@VarDataSize-1
   395 					jmp @FreeMem
   396 					eif
   397
   398 				; ------------------------------------------------------------
   399
   400 = 2CCA			RANGE	= DATAORIGIN+$000E
   401 = 2CCB			RESULT	= DATAORIGIN+$000F
   402
   403 = 2CCA			@VarData	= RANGE
   404 = 0002			@VarDataSize	= 2
   405
   406 1173 60				rts						; ret
   407 				.endl
   408
   409 				; ------------------------------------------------------------
   410
   411 = 0101			__PORTB_BANKS	= $0101
   412 = 0648			M_PI_2	= $0648
   413 = 0192			D_PI_2	= $0192
   414 = 0004			D_PI_180	= $04
   415 = 0000			MGTIA	= $00
   416 = 0080			MVBXE	= $80
   417 = 0000			VBXE_XDLADR	= $00
   418 = 0100			VBXE_BCBADR	= $0100
   419 = 1000			VBXE_MAPADR	= $1000
   420 = 5000			VBXE_OVRADR	= $5000
   421 = B000			VBXE_WINDOW	= $B000
   422 = 0000			IDLI	= $00
   423 = 0001			IVBL	= $01
   424 = 00FE			CH_DELCHR	= $FE
   425 = 009B			CH_ENTER	= $9B
   426 = 001B			CH_ESC	= $1B
   427 = 001C			CH_CURS_UP	= $1C
   428 = 001D			CH_CURS_DOWN	= $1D
   429 = 001E			CH_CURS_LEFT	= $1E
   430 = 001F			CH_CURS_RIGHT	= $1F
   431 = 007F			CH_TAB	= $7F
   432 = 009B			CH_EOL	= $9B
   433 = 007D			CH_CLR	= $7D
   434 = 00FD			CH_BELL	= $FD
   435 = 007E			CH_DEL	= $7E
   436 = 009C			CH_DELLINE	= $9C
   437 = 009D			CH_INSLINE	= $9D
   438 = 0000			COLOR_BLACK	= $00
   439 = 000E			COLOR_WHITE	= $0E
   440 = 0032			COLOR_RED	= $32
   441 = 0096			COLOR_CYAN	= $96
   442 = 0068			COLOR_VIOLET	= $68
   443 = 00C4			COLOR_GREEN	= $C4
   444 = 0074			COLOR_BLUE	= $74
   445 = 00EE			COLOR_YELLOW	= $EE
   446 = 0028			COLOR_ORANGE	= $28
   447 = 00E4			COLOR_BROWN	= $E4
   448 = 003C			COLOR_LIGHTRED	= $3C
   449 = 0004			COLOR_GRAY1	= $04
   450 = 0006			COLOR_GRAY2	= $06
   451 = 000A			COLOR_GRAY3	= $0A
   452 = 00CC			COLOR_LIGHTGREEN	= $CC
   453 = 007C			COLOR_LIGHTBLUE	= $7C
   454 = 0004			FMOPENREAD	= $04
   455 = 0008			FMOPENWRITE	= $08
   456 = 0009			FMOPENAPPEND	= $09
   457 = 000C			FMOPENREADWRITE	= $0C
   458 = 2CBC			SCREENWIDTH	= DATAORIGIN+$0000
   459 = 2CBE			SCREENHEIGHT	= DATAORIGIN+$0002
   460 = 2CC0			DATESEPARATOR	= DATAORIGIN+$0004
   461 = D014			TVSYSTEM	= $D014
   462 = D20A			RND	= $D20A
   463 = 02C0			adr.PALETTE	= $02C0
   464 1174			.var PALETTE	= adr.PALETTE .word
   465 = D012			adr.HPALETTE	= $D012
   466 1174			.var HPALETTE	= adr.HPALETTE .word
   467 = 2CC1			FILEMODE	= DATAORIGIN+$0005
   468 = 2CC2			GRAPHMODE	= DATAORIGIN+$0006
   469 = 2CC3			IORESULT	= DATAORIGIN+$0007
   470 = 2CC4			EOLN	= DATAORIGIN+$0008
   471 = 2CC5			RNDSEED	= DATAORIGIN+$0009
   472
   473 = 1174 C0 02		PALETTE
   473 = 1176 12 D0		HPALETTE
   473 				.endl							; UNIT SYSTEM
   474
   475 1178			.local	PUTCHAR_0072					; PROCEDURE | OVERLOAD
   476
   477 				; optimize OK (tools.inc), line = 5
   478
   479 1178 AD FF 2C			lda Y
   480 117B 0A				asl @
   481 117C A8				tay
   482 117D B9 0E 10			lda adr.MUL40,y
   483 1180 18 6D FE 2C			add X
   484 1184 85 5D			sta T0W
   485 1186 B9 0F 10			lda adr.MUL40+1,y
   486 1189 69 08			adc #$08
   487 118B 85 5E			sta T0W+1
   488
   489 				; optimize OK (tools.inc), line = 6
   490
   491 118D 85 11			sta :bp+1
   492 118F A4 5D			ldy T0W
   493 1191 AD 01 2D			lda C
   494 1194 91 10			sta (:bp),y
   495 1196 A5 5E			lda T0W+1
   496 1198 18 69 04			add #$04
   497 119B 85 11			sta :bp+1
   498 119D AD 00 2D			lda V
   499 11A0 91 10			sta (:bp),y
   500
   501 				; ------------------------------------------------------------
   502
   503 = 2CFE			X	= DATAORIGIN+$0042
   504 = 2CFF			Y	= DATAORIGIN+$0043
   505 = 2D00			V	= DATAORIGIN+$0044
   506 = 2D01			C	= DATAORIGIN+$0045
   507
   508 = 2CFE			@VarData	= X
   509 = 0004			@VarDataSize	= 4
   510
   511 11A2			@exit
   512 					.ifdef @new
   513 					lda <@VarData
   514 					sta :ztmp
   515 					lda >@VarData
   516 					ldy #@VarDataSize-1
   517 					jmp @FreeMem
   518 					els
   519 11A2 60				rts						; ret
   520 					eif
   521 				.endl
   522
   523 11A3			.local	PUTCHAR_0098					; PROCEDURE | OVERLOAD
   524
   525 				; optimize OK (tools.inc), line = 11
   526
   527 11A3 AD 03 2D			lda Y
   528 11A6 0A				asl @
   529 11A7 A8				tay
   530 11A8 B9 0E 10			lda adr.MUL40,y
   531 11AB 18 6D 02 2D			add X
   532 11AF 85 5D			sta T0W
   533 11B1 B9 0F 10			lda adr.MUL40+1,y
   534 11B4 69 0C			adc #$0C
   535 11B6 85 5E			sta T0W+1
   536 11B8 A4 5E			ldy T0W+1
   537 11BA 84 11			sty :bp+1
   538 11BC A4 5D			ldy T0W
   539 11BE AD 04 2D			lda V
   540 11C1 91 10			sta (:bp),y
   541
   542 				; ------------------------------------------------------------
   543
   544 = 2D02			X	= DATAORIGIN+$0046
   545 = 2D03			Y	= DATAORIGIN+$0047
   546 = 2D04			V	= DATAORIGIN+$0048
   547
   548 = 2D02			@VarData	= X
   549 = 0003			@VarDataSize	= 3
   550
   551 11C3			@exit
   552 					.ifdef @new
   553 					lda <@VarData
   554 					sta :ztmp
   555 					lda >@VarData
   556 					ldy #@VarDataSize-1
   557 					jmp @FreeMem
   558 					els
   559 11C3 60				rts						; ret
   560 					eif
   561 				.endl
   562
   563 11C4			.local	SHOWSCORE					; PROCEDURE
   564
   565 				; optimize OK (tools.inc), line = 18
   566
   567 11C4 AD D1 2C			lda PLAYER1.COLOUR
   568 11C7 8D 01 2D			sta PUTCHAR_0072.C
   569 11CA AD D4 2C			lda PLAYER1.SCORE
   570 11CD 8D 00 2D			sta PUTCHAR_0072.V
   571 11D0 A9 00			lda #$00
   572 11D2 8D FF 2C			sta PUTCHAR_0072.Y
   573 11D5 A9 1E			lda #$1E
   574 11D7 8D FE 2C			sta PUTCHAR_0072.X
   575 11DA 20 78 11			jsr PUTCHAR_0072
   576
   577 				; optimize OK (tools.inc), line = 19
   578
   579 11DD AD D9 2C			lda PLAYER2.COLOUR
   580 11E0 8D 01 2D			sta PUTCHAR_0072.C
   581 11E3 AD DC 2C			lda PLAYER2.SCORE
   582 11E6 8D 00 2D			sta PUTCHAR_0072.V
   583 11E9 A9 00			lda #$00
   584 11EB 8D FF 2C			sta PUTCHAR_0072.Y
   585 11EE A9 20			lda #$20
   586 11F0 8D FE 2C			sta PUTCHAR_0072.X
   587 11F3 20 78 11			jsr PUTCHAR_0072
   588
   589 				; optimize OK (tools.inc), line = 20
   590
   591 11F6 AD E1 2C			lda PLAYER3.COLOUR
   592 11F9 8D 01 2D			sta PUTCHAR_0072.C
   593 11FC AD E4 2C			lda PLAYER3.SCORE
   594 11FF 8D 00 2D			sta PUTCHAR_0072.V
   595 1202 A9 00			lda #$00
   596 1204 8D FF 2C			sta PUTCHAR_0072.Y
   597 1207 A9 22			lda #$22
   598 1209 8D FE 2C			sta PUTCHAR_0072.X
   599 120C 20 78 11			jsr PUTCHAR_0072
   600
   601 				; optimize OK (tools.inc), line = 21
   602
   603 120F AD E9 2C			lda PLAYER4.COLOUR
   604 1212 8D 01 2D			sta PUTCHAR_0072.C
   605 1215 AD EC 2C			lda PLAYER4.SCORE
   606 1218 8D 00 2D			sta PUTCHAR_0072.V
   607 121B A9 00			lda #$00
   608 121D 8D FF 2C			sta PUTCHAR_0072.Y
   609 1220 A9 24			lda #$24
   610 1222 8D FE 2C			sta PUTCHAR_0072.X
   611 1225 20 78 11			jsr PUTCHAR_0072
   612 1228			@exit
   613 					.ifdef @new
   614 					lda <@VarData
   615 					sta :ztmp
   616 					lda >@VarData
   617 					ldy #@VarDataSize-1
   618 					jmp @FreeMem
   619 					els
   620 1228 60				rts						; ret
   621 					eif
   622 				.endl
   623
   624 1229			.local	CHECKAVAILDIR					; PROCEDURE
   625
   626 				; optimize OK (tools.inc), line = 28
   627
   628 1229 A9 00			lda #$00
   629 122B 85 5C			sta AVAILDIR
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 122D AC AD 2C 84 12 AC + 	mwy PLY :bp2
   634 1237 A0 01			ldy #PLY.Y-DATAORIGIN
   635 1239 B1 12			lda (:bp2),y
   636 123B 0A				asl @
   637 123C A8				tay
   638 123D A9 00			lda #$00
   639 123F 18 79 0E 10			add adr.MUL40,y
   640 1243 85 21			sta :STACKORIGIN+9
   641 1245 A9 0C			lda #$0C
   642 1247 79 0F 10			adc adr.MUL40+1,y
   643 124A 85 31			sta :STACKORIGIN+STACKWIDTH+9
   644 124C A0 00			ldy #PLY.X-DATAORIGIN
   645 124E A5 21			lda :STACKORIGIN+9
   646 1250 18 71 12			add (:bp2),y
   647 1253 85 5D			sta T0W
   648 1255 A5 31			lda :STACKORIGIN+STACKWIDTH+9
   649 1257 69 00			adc #$00
   650 1259 85 5E			sta T0W+1
   651
   652 				; optimize OK (tools.inc), line = 31
   653
   654 125B A5 5D			lda T0W
   655 125D 38 E9 28			sub #$28
   656 1260 85 21			sta :STACKORIGIN+9
   657 1262 A5 5E			lda T0W+1
   658 1264 E9 00			sbc #$00
   659 1266 85 11			sta :bp+1
   660 1268 A4 21			ldy :STACKORIGIN+9
   661 126A B1 10			lda (:bp),y
   662 126C C9 20			cmp #$20
   663 126E D0 06			jne l_010B
   664 1270 A5 5C			lda AVAILDIR
   665 1272 09 01			ora #$01
   666 1274 85 5C			sta AVAILDIR
   667 1276			l_010B
   668
   669 				; optimize OK (tools.inc), line = 32
   670
   671 1276 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   672 127E A0 28			ldy #$28
   673 1280 B1 12			lda (:bp2),y
   674 1282 C9 20			cmp #$20
   675 1284 D0 06			jne l_012E
   676 1286 A5 5C			lda AVAILDIR
   677 1288 09 02			ora #$02
   678 128A 85 5C			sta AVAILDIR
   679 128C			l_012E
   680
   681 				; optimize OK (tools.inc), line = 33
   682
   683 128C A5 5D			lda T0W
   684 128E 38 E9 01			sub #$01
   685 1291 85 21			sta :STACKORIGIN+9
   686 1293 A5 5E			lda T0W+1
   687 1295 E9 00			sbc #$00
   688 1297 85 11			sta :bp+1
   689 1299 A4 21			ldy :STACKORIGIN+9
   690 129B B1 10			lda (:bp),y
   691 129D C9 20			cmp #$20
   692 129F D0 06			jne l_0151
   693 12A1 A5 5C			lda AVAILDIR
   694 12A3 09 04			ora #$04
   695 12A5 85 5C			sta AVAILDIR
   696 12A7			l_0151
   697
   698 				; optimize OK (tools.inc), line = 34
   699
   700 12A7 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   701 12AF A0 01			ldy #$01
   702 12B1 B1 12			lda (:bp2),y
   703 12B3 C9 20			cmp #$20
   704 12B5 D0 06			jne l_0174
   705 12B7 A5 5C			lda AVAILDIR
   706 12B9 09 08			ora #$08
   707 12BB 85 5C			sta AVAILDIR
   708 12BD			l_0174
   709 12BD			@exit
   710 					.ifdef @new
   711 					lda <@VarData
   712 					sta :ztmp
   713 					lda >@VarData
   714 					ldy #@VarDataSize-1
   715 					jmp @FreeMem
   716 					els
   717 12BD 60				rts						; ret
   718 					eif
   719 				.endl
   720
   721 12BE			.local	ANIMATEOBSTACLES				; PROCEDURE
   722
   723 				; optimize FAIL (0, tools.inc), line = 43
   724
   725 12BE EE 05 2D			inc COUNTER
   726
   727 				; optimize OK (tools.inc), line = 44
   728
   729 12C1 AD 05 2D			lda COUNTER
   730 12C4 29 01			and #$01
   731 12C6 F0 08			jeq l_019F
   732 12C8 A9 56			lda #$56
   733 12CA 8D 06 2D			sta OBST
   734 12CD 4C D5 12			jmp l_01AD
   735 12D0			l_019F
   736 12D0 A9 5B			lda #$5B
   737 12D2 8D 06 2D			sta OBST
   738 12D5			l_01AD
   739
   740 				; optimize OK (tools.inc), line = 45
   741
   742 12D5 A9 07			lda #$07
   743 12D7 85 59			sta I0B
   744
   745 12D9			l_01BA
   746 				; --- ForToDoCondition
   747 12D9 A5 59			lda I0B
   748 12DB 0A				asl @
   749 12DC A8				tay
   750 12DD B9 EE 2C			lda adr.OBSTACLES,y
   751 12E0 85 21			sta :STACKORIGIN+9
   752 12E2 B9 EF 2C			lda adr.OBSTACLES+1,y
   753 12E5 85 11			sta :bp+1
   754 12E7 A4 21			ldy :STACKORIGIN+9
   755 12E9 AD 06 2D			lda OBST
   756 12EC 91 10			sta (:bp),y
   757 12EE C6 59			dec I0B
   758 12F0 10 E7			jpl l_01BA
   759 12F2			l_01C8
   760
   761 				; ------------------------------------------------------------
   762
   763 = 2D05			COUNTER	= DATAORIGIN+$0049
   764 = 2D06			OBST	= DATAORIGIN+$004A
   765 = 0000			@FORTMP_01B7	= $00
   766
   767 = 2D05			@VarData	= COUNTER
   768 = 0002			@VarDataSize	= 2
   769
   770 12F2			@exit
   771 					.ifdef @new
   772 					lda <@VarData
   773 					sta :ztmp
   774 					lda >@VarData
   775 					ldy #@VarDataSize-1
   776 					jmp @FreeMem
   777 					els
   778 12F2 60				rts						; ret
   779 					eif
   780 				.endl
   781
   782 12F3			.local	CALCOBSTACLEADDR				; FUNCTION
   783
   784 				; optimize OK (tools.inc), line = 52
   785
   786 12F3 AD 08 2D			lda Y
   787 12F6 0A				asl @
   788 12F7 A8				tay
   789 12F8 AD 07 2D			lda X
   790 12FB 18 79 0E 10			add adr.MUL40,y
   791 12FF 8D 09 2D			sta RESULT
   792 1302 A9 0C			lda #$0C
   793 1304 79 0F 10			adc adr.MUL40+1,y
   794 1307 8D 0A 2D			sta RESULT+1
   795 130A			@exit
   796
   797 				; ------------------------------------------------------------
   798
   799 				; Push WORD / SMALLINT / SHORTREAL / POINTER
   800 				; as Pointer
   801
   802 130A E8				inx
   803 130B AD 09 2D 95 18		mva RESULT :STACKORIGIN,x
   804 1310 AD 0A 2D 95 28		mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
   805
   806 					.ifdef @new
   807 					lda <@VarData
   808 					sta :ztmp
   809 					lda >@VarData
   810 					ldy #@VarDataSize-1
   811 					jmp @FreeMem
   812 					eif
   813
   814 				; ------------------------------------------------------------
   815
   816 = 2D07			X	= DATAORIGIN+$004B
   817 = 2D08			Y	= DATAORIGIN+$004C
   818 = 2D09			RESULT	= DATAORIGIN+$004D
   819
   820 = 2D07			@VarData	= X
   821 = 0004			@VarDataSize	= 4
   822
   823 1315 60				rts						; ret
   824 				.endl
   825
   826 1316			.local	SAVEOBSTACLES					; PROCEDURE
   827
   828 				; optimize OK (tools.inc), line = 59
   829
   830 1316 A9 07			lda #$07
   831 1318 85 59			sta I0B
   832
   833 131A			l_01FB
   834 				; --- ForToDoCondition
   835
   836 				; optimize OK (tools.inc), line = 60
   837
   838 131A A5 59			lda I0B
   839 131C 0A				asl @
   840 131D A8				tay
   841 131E B9 EF 2C			lda adr.OBSTACLES+1,y
   842 1321 C9 00			cmp #$00
   843 1323 D0 05			bne @+
   844 1325 B9 EE 2C			lda adr.OBSTACLES,y
   845 1328 C9 7E			cmp #$7E
   846 132A			@
   847 132A F0 29			jeq l_021D
   848
   849 				; optimize OK (tools.inc), line = 61
   850
   851 132C B9 EE 2C			lda adr.OBSTACLES,y
   852 132F 85 21			sta :STACKORIGIN+9
   853 1331 B9 EF 2C			lda adr.OBSTACLES+1,y
   854 1334 85 11			sta :bp+1
   855 1336 A4 21			ldy :STACKORIGIN+9
   856 1338 A9 56			lda #$56
   857 133A 91 10			sta (:bp),y
   858
   859 				; optimize OK (tools.inc), line = 62
   860
   861 133C A5 59			lda I0B
   862 133E 0A				asl @
   863 133F A8				tay
   864 1340 B9 EE 2C			lda adr.OBSTACLES,y
   865 1343 38 E9 00			sub #$00
   866 1346 85 21			sta :STACKORIGIN+9
   867 1348 B9 EF 2C			lda adr.OBSTACLES+1,y
   868 134B E9 04			sbc #$04
   869 134D 85 11			sta :bp+1
   870 134F A4 21			ldy :STACKORIGIN+9
   871 1351 A9 35			lda #$35
   872 1353 91 10			sta (:bp),y
   873 1355			l_021D
   874
   875 				; --- ForToDoEpilog
   876 1355 C6 59			dec I0B
   877 1357 10 C1			jpl l_01FB
   878 1359			l_0209
   879
   880 				; ------------------------------------------------------------
   881
   882 = 0000			@FORTMP_01F8	= $00
   883 1359			@exit
   884 					.ifdef @new
   885 					lda <@VarData
   886 					sta :ztmp
   887 					lda >@VarData
   888 					ldy #@VarDataSize-1
   889 					jmp @FreeMem
   890 					els
   891 1359 60				rts						; ret
   892 					eif
   893 				.endl
   894
   895 135A			.local	DRAWTAIL					; PROCEDURE
   896
   897 				; optimize OK (tools.inc), line = 71
   898
   899 135A AC AD 2C 84 12 AC + 	mwy PLY :bp2
   900 1364 A0 04			ldy #PLY.DIR-DATAORIGIN
   901 1366 B1 12			lda (:bp2),y
   902 1368 C5 5B			cmp NEWDIR
   903 136A D0 14			jne l_024F
   904
   905 				; optimize OK (tools.inc), line = 72
   906
   907 136C A5 5B			lda NEWDIR
   908 136E 29 0C			and #$0C
   909 1370 F0 07			jeq l_0266
   910 1372 A9 40			lda #$40
   911 1374 85 58			sta T0B
   912 1376 4C 7D 13			jmp l_0274
   913 1379			l_0266
   914 1379 A9 42			lda #$42
   915 137B 85 58			sta T0B
   916 137D			l_0274
   917 137D 4C F0 13			jmp l_0281
   918 1380			l_024F
   919
   920 				; optimize OK (tools.inc), line = 74
   921
   922 1380 AC AD 2C 84 12 AC + 	mwy PLY :bp2
   923 138A A0 04			ldy #PLY.DIR-DATAORIGIN
   924 138C B1 12			lda (:bp2),y
   925 138E 29 0A			and #$0A
   926 1390 F0 0A			jeq l_02A7
   927 1392 A5 5B			lda NEWDIR
   928 1394 29 05			and #$05
   929 1396 F0 04			jeq l_02A7
   930 1398 A9 7D			lda #$7D
   931 139A 85 58			sta T0B
   932 139C			l_02A7
   933
   934 				; optimize OK (tools.inc), line = 75
   935
   936 139C AC AD 2C 84 12 AC + 	mwy PLY :bp2
   937 13A6 A0 04			ldy #PLY.DIR-DATAORIGIN
   938 13A8 B1 12			lda (:bp2),y
   939 13AA 29 09			and #$09
   940 13AC F0 0A			jeq l_02D4
   941 13AE A5 5B			lda NEWDIR
   942 13B0 29 06			and #$06
   943 13B2 F0 04			jeq l_02D4
   944 13B4 A9 6E			lda #$6E
   945 13B6 85 58			sta T0B
   946 13B8			l_02D4
   947
   948 				; optimize OK (tools.inc), line = 76
   949
   950 13B8 AC AD 2C 84 12 AC + 	mwy PLY :bp2
   951 13C2 A0 04			ldy #PLY.DIR-DATAORIGIN
   952 13C4 B1 12			lda (:bp2),y
   953 13C6 29 06			and #$06
   954 13C8 F0 0A			jeq l_0301
   955 13CA A5 5B			lda NEWDIR
   956 13CC 29 09			and #$09
   957 13CE F0 04			jeq l_0301
   958 13D0 A9 6D			lda #$6D
   959 13D2 85 58			sta T0B
   960 13D4			l_0301
   961
   962 				; optimize OK (tools.inc), line = 77
   963
   964 13D4 AC AD 2C 84 12 AC + 	mwy PLY :bp2
   965 13DE A0 04			ldy #PLY.DIR-DATAORIGIN
   966 13E0 B1 12			lda (:bp2),y
   967 13E2 29 05			and #$05
   968 13E4 F0 0A			jeq l_032E
   969 13E6 A5 5B			lda NEWDIR
   970 13E8 29 0A			and #$0A
   971 13EA F0 04			jeq l_032E
   972 13EC A9 70			lda #$70
   973 13EE 85 58			sta T0B
   974 13F0			l_032E
   975 13F0			l_0281
   976
   977 				; optimize OK (tools.inc), line = 79
   978
   979 13F0 AC AD 2C 84 12 AC + 	mwy PLY :bp2
   980 13FA A0 00			ldy #PLY.X-DATAORIGIN
   981 13FC B1 12			lda (:bp2),y
   982 13FE 8D 02 2D			sta PUTCHAR_0098.X
   983 1401 A0 01			ldy #PLY.Y-DATAORIGIN
   984 1403 B1 12			lda (:bp2),y
   985 1405 8D 03 2D			sta PUTCHAR_0098.Y
   986 1408 A5 58			lda T0B
   987 140A 8D 04 2D			sta PUTCHAR_0098.V
   988 140D 20 A3 11			jsr PUTCHAR_0098
   989 1410			@exit
   990 					.ifdef @new
   991 					lda <@VarData
   992 					sta :ztmp
   993 					lda >@VarData
   994 					ldy #@VarDataSize-1
   995 					jmp @FreeMem
   996 					els
   997 1410 60				rts						; ret
   998 					eif
   999 				.endl
  1000
  1001 1411			.local	CHECKJOYSTATUS					; PROCEDURE
  1002
  1003 				; optimize OK (tools.inc), line = 86
  1004
  1005 1411 A9 02			lda #$02
  1006 1413 8D 08 FF			sta JOY
  1007 1416 A9 FF			lda #$FF
  1008 1418 8D 30 FD			sta KEYSCAN
  1009
  1010 				; optimize OK (tools.inc), line = 87
  1011
  1012 141B AD 08 FF			lda JOY
  1013 141E 49 FF			eor #$FF
  1014 1420 85 63			sta JOYSTATUS
  1015 1422			@exit
  1016 					.ifdef @new
  1017 					lda <@VarData
  1018 					sta :ztmp
  1019 					lda >@VarData
  1020 					ldy #@VarDataSize-1
  1021 					jmp @FreeMem
  1022 					els
  1023 1422 60				rts						; ret
  1024 					eif
  1025 				.endl
  1026
  1027 1423			.local	SETPLAYER					; PROCEDURE
  1028
  1029 				; optimize OK (tools.inc), line = 94
  1030
  1031 1423 AD 0B 2D			lda P
  1032 1426 8D AD 2C			sta PLY
  1033 1429 85 12			sta :bp2
  1034 142B AD 0C 2D			lda P+1
  1035 142E 8D AE 2C			sta PLY+1
  1036 1431 85 13			sta :bp2+1
  1037 				; optimize OK (tools.inc), line = 95
  1038 1433 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1039 1435 AD 10 2D			lda BRAIN
  1040 1438 91 12			sta (:bp2),y
  1041 143A A0 00			ldy #PLY.X-DATAORIGIN
  1042 143C AD 0D 2D			lda X
  1043 143F 91 12			sta (:bp2),y
  1044 1441 A0 01			ldy #PLY.Y-DATAORIGIN
  1045 1443 AD 0E 2D			lda Y
  1046 1446 91 12			sta (:bp2),y
  1047 1448 A0 04			ldy #PLY.DIR-DATAORIGIN
  1048 144A AD 0F 2D			lda DIR
  1049 144D 91 12			sta (:bp2),y
  1050
  1051 				; optimize OK (tools.inc), line = 96
  1052
  1053 144F A0 02			ldy #PLY.HEAD-DATAORIGIN
  1054 1451 AD 11 2D			lda HEAD
  1055 1454 91 12			sta (:bp2),y
  1056 1456 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1057 1458 AD 12 2D			lda COLOUR
  1058 145B 91 12			sta (:bp2),y
  1059 145D A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1060 145F AD 13 2D			lda ISALIVE
  1061 1462 91 12			sta (:bp2),y
  1062
  1063 				; optimize OK (tools.inc), line = 97
  1064
  1065 1464 AD 13 2D			lda ISALIVE
  1066 1467 F0 1D			jeq l_0394
  1067
  1068 				; optimize FAIL (0, tools.inc), line = 98
  1069
  1070 1469 E6 5A			inc ALIVE
  1071 146B AD 12 2D			lda COLOUR
  1072 146E 8D 01 2D			sta PUTCHAR_0072.C
  1073 1471 AD 11 2D			lda HEAD
  1074 1474 8D 00 2D			sta PUTCHAR_0072.V
  1075 1477 AD 0E 2D			lda Y
  1076 147A 8D FF 2C			sta PUTCHAR_0072.Y
  1077 147D AD 0D 2D			lda X
  1078 1480 8D FE 2C			sta PUTCHAR_0072.X
  1079 1483 20 78 11			jsr PUTCHAR_0072
  1080 1486			l_0394
  1081
  1082 				; ------------------------------------------------------------
  1083
  1084 = 2D0B			P	= DATAORIGIN+$004F
  1085 = 2D0D			X	= DATAORIGIN+$0051
  1086 = 2D0E			Y	= DATAORIGIN+$0052
  1087 = 2D0F			DIR	= DATAORIGIN+$0053
  1088 = 2D10			BRAIN	= DATAORIGIN+$0054
  1089 = 2D11			HEAD	= DATAORIGIN+$0055
  1090 = 2D12			COLOUR	= DATAORIGIN+$0056
  1091 = 2D13			ISALIVE	= DATAORIGIN+$0057
  1092
  1093 = 2D0B			@VarData	= P
  1094 = 0009			@VarDataSize	= 9
  1095
  1096 1486			@exit
  1097 					.ifdef @new
  1098 					lda <@VarData
  1099 					sta :ztmp
  1100 					lda >@VarData
  1101 					ldy #@VarDataSize-1
  1102 					jmp @FreeMem
  1103 					els
  1104 1486 60				rts						; ret
  1105 					eif
  1106 				.endl
  1107
  1108 1487			.local	INITPLAYFIELD					; PROCEDURE
  1109
  1110 				; optimize OK (init.inc), line = 5
  1111
  1112 1487 A9 1F			lda #$1F
  1113 1489 8D 15 FF			sta BACKGROUND
  1114 148C A9 00			lda #$00
  1115 148E 8D 19 FF			sta BOREDER
  1116
  1117 				; optimize OK (init.inc), line = 6
  1118
  1119 1491 A9 20			lda #$20
  1120 1493 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
  1121 1495 A9 C0			lda #$C0
  1122 1497 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
  1123 1499 A9 03			lda #$03
  1124 149B 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
  1125 149D A9 00			lda #$00
  1126 149F 85 08			sta SYSTEM.FILLCHAR_0056.A
  1127 14A1 A9 0C			lda #$0C
  1128 14A3 85 09			sta SYSTEM.FILLCHAR_0056.A+1
  1129 14A5 20 1F 11			jsr SYSTEM.FILLCHAR_0056
  1130
  1131 				; optimize OK (init.inc), line = 8
  1132
  1133 14A8 A9 27			lda #$27
  1134 14AA 85 58			sta T0B
  1135
  1136 14AC			l_03C1
  1137 				; --- ForToDoCondition
  1138
  1139 				; optimize OK (init.inc), line = 9
  1140
  1141 14AC A4 58			ldy T0B
  1142 14AE A9 A0			lda #$A0
  1143 14B0 99 00 0C			sta $0C00,y
  1144
  1145 				; optimize OK (init.inc), line = 10
  1146
  1147 14B3 99 C0 0F			sta $0FC0,y
  1148
  1149 				; optimize OK (init.inc), line = 11
  1150
  1151 14B6 A9 41			lda #$41
  1152 14B8 99 00 08			sta $0800,y
  1153
  1154 				; optimize OK (init.inc), line = 12
  1155
  1156 14BB 99 C0 0B			sta $0BC0,y
  1157
  1158 				; --- ForToDoEpilog
  1159 14BE C6 58			dec T0B
  1160 14C0 10 EA			jpl l_03C1
  1161 14C2			l_03CF
  1162
  1163 				; optimize OK (init.inc), line = 15
  1164
  1165 14C2 A9 18			lda #$18
  1166 14C4 85 58			sta T0B
  1167
  1168 14C6			l_0401
  1169 				; --- ForToDoCondition
  1170 14C6 A5 58			lda T0B
  1171 14C8 C9 01			cmp #$01
  1172 14CA 90 3A			jcc l_040F
  1173
  1174 				; optimize OK (init.inc), line = 16
  1175
  1176 14CC 0A				asl @
  1177 14CD A8				tay
  1178 14CE A9 FF			lda #$FF
  1179 14D0 18 79 0E 10			add adr.MUL40,y
  1180 14D4 85 12			sta :bp2
  1181 14D6 A9 0B			lda #$0B
  1182 14D8 79 0F 10			adc adr.MUL40+1,y
  1183 14DB 85 13			sta :bp2+1
  1184 14DD A0 00			ldy #$00
  1185 14DF A9 A0			lda #$A0
  1186 14E1 91 12			sta (:bp2),y
  1187 14E3 C8				iny
  1188 14E4 91 12			sta (:bp2),y
  1189
  1190 				; optimize OK (init.inc), line = 17
  1191
  1192 14E6 A5 58			lda T0B
  1193 14E8 0A				asl @
  1194 14E9 A8				tay
  1195 14EA A9 FF			lda #$FF
  1196 14EC 18 79 0E 10			add adr.MUL40,y
  1197 14F0 85 12			sta :bp2
  1198 14F2 A9 07			lda #$07
  1199 14F4 79 0F 10			adc adr.MUL40+1,y
  1200 14F7 85 13			sta :bp2+1
  1201 14F9 A0 00			ldy #$00
  1202 14FB A9 41			lda #$41
  1203 14FD 91 12			sta (:bp2),y
  1204 14FF C8				iny
  1205 1500 91 12			sta (:bp2),y
  1206
  1207 				; --- ForToDoEpilog
  1208 1502 C6 58			dec T0B
  1209 1504 10 C0			jpl l_0401
  1210 1506			l_040F
  1211
  1212 				; ------------------------------------------------------------
  1213
  1214 = 0000			@FORTMP_03BE	= $00
  1215 = 0001			@FORTMP_03FE	= $01
  1216 1506			@exit
  1217 					.ifdef @new
  1218 					lda <@VarData
  1219 					sta :ztmp
  1220 					lda >@VarData
  1221 					ldy #@VarDataSize-1
  1222 					jmp @FreeMem
  1223 					els
  1224 1506 60				rts						; ret
  1225 					eif
  1226 				.endl
  1227
  1228 1507			.local	AISTRAIGHT					; PROCEDURE
  1229
  1230 				; optimize OK (ai.inc), line = 5
  1231
  1232 1507 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  1233 1511 A0 04			ldy #PLY.DIR-DATAORIGIN
  1234 1513 B1 12			lda (:bp2),y
  1235 1515 25 5C			and AVAILDIR
  1236 1517 F0 07			jeq l_0446
  1237 1519 B1 12			lda (:bp2),y
  1238 151B 85 5B			sta NEWDIR
  1239 151D 4C 8B 15			jmp l_0456
  1240 1520			l_0446
  1241
  1242 				; optimize OK (ai.inc), line = 7
  1243
  1244 1520 A5 5C			lda AVAILDIR
  1245 1522 C9 03			cmp #$03
  1246 1524 D0 10			jne l_0468
  1247 1526 A9 02			lda #$02
  1248 1528 20 47 11			jsr SYSTEM.RANDOM_006D
  1249 152B B4 18			ldy :STACKORIGIN,x
  1250 152D B9 40 10			lda adr.DIRECTION,y
  1251 1530 85 5B			sta NEWDIR
  1252 1532 CA				dex
  1253 1533 4C 4E 15			jmp l_047A
  1254 1536			l_0468
  1255
  1256 				; optimize OK (ai.inc), line = 9
  1257
  1258 1536 A5 5C			lda AVAILDIR
  1259 1538 8D 14 2D			sta @CASETMP_0003
  1260 153B C9 01			cmp #$01
  1261 153D D0 07			jne l_0485
  1262 153F			@
  1263
  1264 				; optimize OK (ai.inc), line = 10
  1265
  1266 153F A9 01			lda #$01
  1267 1541 85 5B			sta NEWDIR
  1268
  1269 1543 4C 4E 15			jmp a_0003
  1270 1546			l_0485
  1271 1546 C9 02			cmp #$02
  1272 1548 D0 04			jne l_0492
  1273 154A			@
  1274
  1275 				; optimize OK (ai.inc), line = 11
  1276
  1277 154A A9 02			lda #$02
  1278 154C 85 5B			sta NEWDIR
  1279
  1280 154E			l_0492
  1281 154E			a_0003
  1282 154E			l_047A
  1283
  1284 				; optimize OK (ai.inc), line = 14
  1285
  1286 154E A5 5C			lda AVAILDIR
  1287 1550 C9 0C			cmp #$0C
  1288 1552 D0 1F			jne l_04AE
  1289 1554 A9 02			lda #$02
  1290 1556 20 47 11			jsr SYSTEM.RANDOM_006D
  1291 1559 E8				inx
  1292 155A A9 02 95 18			mva #$02 :STACKORIGIN,x
  1293 155E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1294 1562 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1295 1564 20 44 10			jsr addAX_CX
  1296 1567 CA				dex
  1297 1568 B4 18			ldy :STACKORIGIN,x
  1298 156A B9 40 10			lda adr.DIRECTION,y
  1299 156D 85 5B			sta NEWDIR
  1300 156F CA				dex
  1301 1570 4C 8B 15			jmp l_04C4
  1302 1573			l_04AE
  1303
  1304 				; optimize OK (ai.inc), line = 16
  1305
  1306 1573 A5 5C			lda AVAILDIR
  1307 1575 8D 15 2D			sta @CASETMP_0004
  1308 1578 C9 04			cmp #$04
  1309 157A D0 07			jne l_04CF
  1310 157C			@
  1311
  1312 				; optimize OK (ai.inc), line = 17
  1313
  1314 157C A9 04			lda #$04
  1315 157E 85 5B			sta NEWDIR
  1316
  1317 1580 4C 8B 15			jmp a_0004
  1318 1583			l_04CF
  1319 1583 C9 08			cmp #$08
  1320 1585 D0 04			jne l_04DC
  1321 1587			@
  1322
  1323 				; optimize OK (ai.inc), line = 18
  1324
  1325 1587 A9 08			lda #$08
  1326 1589 85 5B			sta NEWDIR
  1327
  1328 158B			l_04DC
  1329 158B			a_0004
  1330 158B			l_04C4
  1331 158B			l_0456
  1332
  1333 				; ------------------------------------------------------------
  1334
  1335 = 2D14			@CASETMP_0003	= DATAORIGIN+$0058
  1336 = 2D15			@CASETMP_0004	= DATAORIGIN+$0059
  1337
  1338 = 2D14			@VarData	= @CASETMP_0003
  1339 = 0002			@VarDataSize	= 2
  1340
  1341 158B			@exit
  1342 					.ifdef @new
  1343 					lda <@VarData
  1344 					sta :ztmp
  1345 					lda >@VarData
  1346 					ldy #@VarDataSize-1
  1347 					jmp @FreeMem
  1348 					els
  1349 158B 60				rts						; ret
  1350 					eif
  1351 				.endl
  1352
  1353 158C			.local	AISAPPER					; PROCEDURE
  1354
  1355 				; optimize OK (ai.inc), line = 31
  1356
  1357 158C A9 00			lda #$00
  1358 158E 8D 16 2D			sta L
  1359 1591 8D 17 2D			sta R
  1360 1594 8D 18 2D			sta U
  1361 1597 8D 19 2D			sta D
  1362
  1363 				; optimize OK (ai.inc), line = 32
  1364
  1365 159A AC AD 2C 84 12 AC + 	mwy PLY :bp2
  1366 15A4 A0 01			ldy #PLY.Y-DATAORIGIN
  1367 15A6 B1 12			lda (:bp2),y
  1368 15A8 0A				asl @
  1369 15A9 A8				tay
  1370 15AA A9 00			lda #$00
  1371 15AC 18 79 0E 10			add adr.MUL40,y
  1372 15B0 85 21			sta :STACKORIGIN+9
  1373 15B2 A9 0C			lda #$0C
  1374 15B4 79 0F 10			adc adr.MUL40+1,y
  1375 15B7 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1376 15B9 A0 00			ldy #PLY.X-DATAORIGIN
  1377 15BB A5 21			lda :STACKORIGIN+9
  1378 15BD 18 71 12			add (:bp2),y
  1379 15C0 85 5D			sta T0W
  1380 15C2 A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1381 15C4 69 00			adc #$00
  1382 15C6 85 5E			sta T0W+1
  1383
  1384 				; optimize OK (ai.inc), line = 34
  1385
  1386 15C8 A5 5C			lda AVAILDIR
  1387 15CA 29 01			and #$01
  1388 15CC F0 73			jeq l_0522
  1389
  1390 				; optimize OK (ai.inc), line = 35
  1391
  1392 15CE A9 05			lda #$05
  1393 15D0 85 59			sta I0B
  1394
  1395 15D2			l_052C
  1396 				; --- ForToDoCondition
  1397 15D2 A5 59			lda I0B
  1398 15D4 C9 01			cmp #$01
  1399 15D6 90 69			jcc l_053A
  1400
  1401 				; optimize OK (ai.inc), line = 36
  1402
  1403 15D8 0A				asl @
  1404 15D9 A8				tay
  1405 15DA A5 5D			lda T0W
  1406 15DC 38 F9 0E 10			sub adr.MUL40,y
  1407 15E0 85 21			sta :STACKORIGIN+9
  1408 15E2 A5 5E			lda T0W+1
  1409 15E4 F9 0F 10			sbc adr.MUL40+1,y
  1410 15E7 85 11			sta :bp+1
  1411 15E9 A4 21			ldy :STACKORIGIN+9
  1412 15EB B1 10			lda (:bp),y
  1413 15ED C9 20			cmp #$20
  1414 15EF D0 03			jne l_0554
  1415 15F1 EE 18 2D			inc U
  1416 15F4			l_0554
  1417
  1418 				; optimize OK (ai.inc), line = 37
  1419
  1420 15F4 A5 59			lda I0B
  1421 15F6 0A				asl @
  1422 15F7 A8				tay
  1423 15F8 A5 5D			lda T0W
  1424 15FA 38 F9 0E 10			sub adr.MUL40,y
  1425 15FE 85 21			sta :STACKORIGIN+9
  1426 1600 A5 5E			lda T0W+1
  1427 1602 F9 0F 10			sbc adr.MUL40+1,y
  1428 1605 85 11			sta :bp+1
  1429 1607 A5 21			lda :STACKORIGIN+9
  1430 1609 18 69 01			add #$01
  1431 160C A8				tay
  1432 160D 90 02			scc
  1433 160F E6 11			inc :bp+1
  1434 1611 B1 10			lda (:bp),y
  1435 1613 C9 20			cmp #$20
  1436 1615 D0 03			jne l_0579
  1437 1617 EE 18 2D			inc U
  1438 161A			l_0579
  1439
  1440 				; optimize OK (ai.inc), line = 38
  1441
  1442 161A A5 59			lda I0B
  1443 161C 0A				asl @
  1444 161D A8				tay
  1445 161E A5 5D			lda T0W
  1446 1620 38 F9 0E 10			sub adr.MUL40,y
  1447 1624 85 21			sta :STACKORIGIN+9
  1448 1626 A5 5E			lda T0W+1
  1449 1628 F9 0F 10			sbc adr.MUL40+1,y
  1450 162B 85 11			sta :bp+1
  1451 162D A4 21			ldy :STACKORIGIN+9
  1452 162F 88				dey
  1453 1630 B0 02			scs
  1454 1632 C6 11			dec :bp+1
  1455 1634 B1 10			lda (:bp),y
  1456 1636 C9 20			cmp #$20
  1457 1638 D0 03			jne l_059E
  1458 163A EE 18 2D			inc U
  1459 163D			l_059E
  1460
  1461 				; --- ForToDoEpilog
  1462 163D C6 59			dec I0B
  1463 163F 10 91			jpl l_052C
  1464 1641			l_053A
  1465 1641			l_0522
  1466
  1467 				; optimize OK (ai.inc), line = 42
  1468
  1469 1641 A5 5C			lda AVAILDIR
  1470 1643 29 02			and #$02
  1471 1645 F0 73			jeq l_05C2
  1472
  1473 				; optimize OK (ai.inc), line = 43
  1474
  1475 1647 A9 05			lda #$05
  1476 1649 85 59			sta I0B
  1477
  1478 164B			l_05CC
  1479 				; --- ForToDoCondition
  1480 164B A5 59			lda I0B
  1481 164D C9 01			cmp #$01
  1482 164F 90 69			jcc l_05DA
  1483
  1484 				; optimize OK (ai.inc), line = 44
  1485
  1486 1651 0A				asl @
  1487 1652 A8				tay
  1488 1653 A5 5D			lda T0W
  1489 1655 18 79 0E 10			add adr.MUL40,y
  1490 1659 85 21			sta :STACKORIGIN+9
  1491 165B A5 5E			lda T0W+1
  1492 165D 79 0F 10			adc adr.MUL40+1,y
  1493 1660 85 11			sta :bp+1
  1494 1662 A4 21			ldy :STACKORIGIN+9
  1495 1664 B1 10			lda (:bp),y
  1496 1666 C9 20			cmp #$20
  1497 1668 D0 03			jne l_05F4
  1498 166A EE 19 2D			inc D
  1499 166D			l_05F4
  1500
  1501 				; optimize OK (ai.inc), line = 45
  1502
  1503 166D A5 59			lda I0B
  1504 166F 0A				asl @
  1505 1670 A8				tay
  1506 1671 A5 5D			lda T0W
  1507 1673 18 79 0E 10			add adr.MUL40,y
  1508 1677 85 21			sta :STACKORIGIN+9
  1509 1679 A5 5E			lda T0W+1
  1510 167B 79 0F 10			adc adr.MUL40+1,y
  1511 167E 85 11			sta :bp+1
  1512 1680 A5 21			lda :STACKORIGIN+9
  1513 1682 18 69 01			add #$01
  1514 1685 A8				tay
  1515 1686 90 02			scc
  1516 1688 E6 11			inc :bp+1
  1517 168A B1 10			lda (:bp),y
  1518 168C C9 20			cmp #$20
  1519 168E D0 03			jne l_0619
  1520 1690 EE 19 2D			inc D
  1521 1693			l_0619
  1522
  1523 				; optimize OK (ai.inc), line = 46
  1524
  1525 1693 A5 59			lda I0B
  1526 1695 0A				asl @
  1527 1696 A8				tay
  1528 1697 A5 5D			lda T0W
  1529 1699 18 79 0E 10			add adr.MUL40,y
  1530 169D 85 21			sta :STACKORIGIN+9
  1531 169F A5 5E			lda T0W+1
  1532 16A1 79 0F 10			adc adr.MUL40+1,y
  1533 16A4 85 11			sta :bp+1
  1534 16A6 A4 21			ldy :STACKORIGIN+9
  1535 16A8 88				dey
  1536 16A9 B0 02			scs
  1537 16AB C6 11			dec :bp+1
  1538 16AD B1 10			lda (:bp),y
  1539 16AF C9 20			cmp #$20
  1540 16B1 D0 03			jne l_063E
  1541 16B3 EE 19 2D			inc D
  1542 16B6			l_063E
  1543
  1544 				; --- ForToDoEpilog
  1545 16B6 C6 59			dec I0B
  1546 16B8 10 91			jpl l_05CC
  1547 16BA			l_05DA
  1548 16BA			l_05C2
  1549
  1550 				; optimize OK (ai.inc), line = 50
  1551
  1552 16BA A5 5C			lda AVAILDIR
  1553 16BC 29 04			and #$04
  1554 16BE F0 5F			jeq l_0662
  1555
  1556 				; optimize OK (ai.inc), line = 51
  1557
  1558 16C0 A9 05			lda #$05
  1559 16C2 85 59			sta I0B
  1560
  1561 16C4			l_066C
  1562 				; --- ForToDoCondition
  1563 16C4 A5 59			lda I0B
  1564 16C6 C9 01			cmp #$01
  1565 16C8 90 55			jcc l_067A
  1566
  1567 				; optimize OK (ai.inc), line = 52
  1568
  1569 16CA A5 5D			lda T0W
  1570 16CC 38 E5 59			sub I0B
  1571 16CF A8				tay
  1572 16D0 A5 5E			lda T0W+1
  1573 16D2 E9 00			sbc #$00
  1574 16D4 85 11			sta :bp+1
  1575 16D6 B1 10			lda (:bp),y
  1576 16D8 C9 20			cmp #$20
  1577 16DA D0 03			jne l_0692
  1578 16DC EE 16 2D			inc L
  1579 16DF			l_0692
  1580
  1581 				; optimize OK (ai.inc), line = 53
  1582
  1583 16DF A5 5D			lda T0W
  1584 16E1 38 E5 59			sub I0B
  1585 16E4 A8				tay
  1586 16E5 A5 5E			lda T0W+1
  1587 16E7 E9 00			sbc #$00
  1588 16E9 85 11			sta :bp+1
  1589 16EB 98				tya
  1590 16EC 18 69 28			add #$28
  1591 16EF A8				tay
  1592 16F0 90 02			scc
  1593 16F2 E6 11			inc :bp+1
  1594 16F4 B1 10			lda (:bp),y
  1595 16F6 C9 20			cmp #$20
  1596 16F8 D0 03			jne l_06B5
  1597 16FA EE 16 2D			inc L
  1598 16FD			l_06B5
  1599
  1600 				; optimize OK (ai.inc), line = 54
  1601
  1602 16FD A5 5D			lda T0W
  1603 16FF 38 E5 59			sub I0B
  1604 1702 A8				tay
  1605 1703 A5 5E			lda T0W+1
  1606 1705 E9 00			sbc #$00
  1607 1707 85 11			sta :bp+1
  1608 1709 98				tya
  1609 170A 38 E9 28			sub #$28
  1610 170D A8				tay
  1611 170E B0 02			scs
  1612 1710 C6 11			dec :bp+1
  1613 1712 B1 10			lda (:bp),y
  1614 1714 C9 20			cmp #$20
  1615 1716 D0 03			jne l_06D8
  1616 1718 EE 16 2D			inc L
  1617 171B			l_06D8
  1618
  1619 				; --- ForToDoEpilog
  1620 171B C6 59			dec I0B
  1621 171D 10 A5			jpl l_066C
  1622 171F			l_067A
  1623 171F			l_0662
  1624
  1625 				; optimize OK (ai.inc), line = 58
  1626
  1627 171F A5 5C			lda AVAILDIR
  1628 1721 29 08			and #$08
  1629 1723 F0 5D			jeq l_06FC
  1630
  1631 				; optimize OK (ai.inc), line = 59
  1632
  1633 1725 A9 05			lda #$05
  1634 1727 85 59			sta I0B
  1635
  1636 1729			l_0706
  1637 				; --- ForToDoCondition
  1638 1729 A5 59			lda I0B
  1639 172B C9 01			cmp #$01
  1640 172D 90 53			jcc l_0714
  1641
  1642 				; optimize OK (ai.inc), line = 60
  1643
  1644 172F A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1645 1737 A4 59			ldy I0B
  1646 1739 B1 12			lda (:bp2),y
  1647 173B C9 20			cmp #$20
  1648 173D D0 03			jne l_072C
  1649 173F EE 17 2D			inc R
  1650 1742			l_072C
  1651
  1652 				; optimize OK (ai.inc), line = 61
  1653
  1654 1742 A5 5D			lda T0W
  1655 1744 18 65 59			add I0B
  1656 1747 A8				tay
  1657 1748 A5 5E			lda T0W+1
  1658 174A 69 00			adc #$00
  1659 174C 85 11			sta :bp+1
  1660 174E 98				tya
  1661 174F 18 69 28			add #$28
  1662 1752 A8				tay
  1663 1753 90 02			scc
  1664 1755 E6 11			inc :bp+1
  1665 1757 B1 10			lda (:bp),y
  1666 1759 C9 20			cmp #$20
  1667 175B D0 03			jne l_074F
  1668 175D EE 17 2D			inc R
  1669 1760			l_074F
  1670
  1671 				; optimize OK (ai.inc), line = 62
  1672
  1673 1760 A5 5D			lda T0W
  1674 1762 18 65 59			add I0B
  1675 1765 A8				tay
  1676 1766 A5 5E			lda T0W+1
  1677 1768 69 00			adc #$00
  1678 176A 85 11			sta :bp+1
  1679 176C 98				tya
  1680 176D 38 E9 28			sub #$28
  1681 1770 A8				tay
  1682 1771 B0 02			scs
  1683 1773 C6 11			dec :bp+1
  1684 1775 B1 10			lda (:bp),y
  1685 1777 C9 20			cmp #$20
  1686 1779 D0 03			jne l_0772
  1687 177B EE 17 2D			inc R
  1688 177E			l_0772
  1689
  1690 				; --- ForToDoEpilog
  1691 177E C6 59			dec I0B
  1692 1780 10 A7			jpl l_0706
  1693 1782			l_0714
  1694 1782			l_06FC
  1695
  1696 				; optimize OK (ai.inc), line = 66
  1697
  1698 1782 AD 19 2D			lda D
  1699 1785 85 58			sta T0B
  1700
  1701 				; optimize OK (ai.inc), line = 67
  1702
  1703 1787 CD 18 2D			cmp U
  1704 178A B0 05			jcs l_079A
  1705 178C AD 18 2D			lda U
  1706 178F 85 58			sta T0B
  1707 1791			l_079A
  1708
  1709 				; optimize OK (ai.inc), line = 68
  1710
  1711 1791 A5 58			lda T0B
  1712 1793 CD 16 2D			cmp L
  1713 1796 B0 05			jcs l_07B7
  1714 1798 AD 16 2D			lda L
  1715 179B 85 58			sta T0B
  1716 179D			l_07B7
  1717
  1718 				; optimize OK (ai.inc), line = 69
  1719
  1720 179D A5 58			lda T0B
  1721 179F CD 17 2D			cmp R
  1722 17A2 B0 05			jcs l_07D4
  1723 17A4 AD 17 2D			lda R
  1724 17A7 85 58			sta T0B
  1725 17A9			l_07D4
  1726
  1727 				; optimize OK (ai.inc), line = 71
  1728
  1729 17A9 A5 58			lda T0B
  1730 17AB CD 19 2D			cmp D
  1731 17AE D0 04			jne l_07F1
  1732 17B0 A9 02			lda #$02
  1733 17B2 85 58			sta T0B
  1734 17B4			l_07F1
  1735
  1736 				; optimize OK (ai.inc), line = 72
  1737
  1738 17B4 A5 58			lda T0B
  1739 17B6 CD 18 2D			cmp U
  1740 17B9 D0 04			jne l_080C
  1741 17BB A9 01			lda #$01
  1742 17BD 85 58			sta T0B
  1743 17BF			l_080C
  1744
  1745 				; optimize OK (ai.inc), line = 73
  1746
  1747 17BF A5 58			lda T0B
  1748 17C1 CD 16 2D			cmp L
  1749 17C4 D0 04			jne l_0827
  1750 17C6 A9 04			lda #$04
  1751 17C8 85 58			sta T0B
  1752 17CA			l_0827
  1753
  1754 				; optimize OK (ai.inc), line = 74
  1755
  1756 17CA A5 58			lda T0B
  1757 17CC CD 17 2D			cmp R
  1758 17CF D0 04			jne l_0842
  1759 17D1 A9 08			lda #$08
  1760 17D3 85 58			sta T0B
  1761 17D5			l_0842
  1762
  1763 				; optimize OK (ai.inc), line = 76
  1764
  1765 17D5 A5 5C			lda AVAILDIR
  1766 17D7 25 58			and T0B
  1767 17D9 F0 07			jeq l_0861
  1768 17DB A5 58			lda T0B
  1769 17DD 85 5B			sta NEWDIR
  1770 17DF 4C E5 17			jmp l_0871
  1771 17E2			l_0861
  1772
  1773 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1774
  1775 17E2 20 07 15			jsr AISTRAIGHT
  1776 17E5			l_0871
  1777
  1778 				; ------------------------------------------------------------
  1779
  1780 = 2D16			L	= DATAORIGIN+$005A
  1781 = 2D17			R	= DATAORIGIN+$005B
  1782 = 2D18			U	= DATAORIGIN+$005C
  1783 = 2D19			D	= DATAORIGIN+$005D
  1784 = 0001			@FORTMP_0529	= $01
  1785 = 0001			@FORTMP_05C9	= $01
  1786 = 0001			@FORTMP_0669	= $01
  1787 = 0001			@FORTMP_0703	= $01
  1788
  1789 = 2D16			@VarData	= L
  1790 = 0004			@VarDataSize	= 4
  1791
  1792 17E5			@exit
  1793 					.ifdef @new
  1794 					lda <@VarData
  1795 					sta :ztmp
  1796 					lda >@VarData
  1797 					ldy #@VarDataSize-1
  1798 					jmp @FreeMem
  1799 					els
  1800 17E5 60				rts						; ret
  1801 					eif
  1802 				.endl
  1803
  1804 17E6			.local	AIBULLY						; PROCEDURE
  1805
  1806 				; optimize OK (ai.inc), line = 84
  1807
  1808 17E6 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  1809 17F0 A0 04			ldy #PLY.DIR-DATAORIGIN
  1810 17F2 B1 12			lda (:bp2),y
  1811 17F4 85 58			sta T0B
  1812
  1813 				; optimize OK (ai.inc), line = 86
  1814
  1815 17F6 AD D5 2C			lda PLAYER1.ISALIVE
  1816 17F9 0D DD 2C			ora PLAYER2.ISALIVE
  1817 17FC D0 03 4C A3 18		jeq l_088E
  1818
  1819 				; optimize OK (ai.inc), line = 88
  1820
  1821 1801 AD D5 2C			lda PLAYER1.ISALIVE
  1822 1804 F0 0F			jeq l_089B
  1823 1806 AD B1 2C			lda PLAYER1
  1824 1809 8D AF 2C			sta TMPPLY
  1825 180C AD B2 2C			lda PLAYER1+1
  1826 180F 8D B0 2C			sta TMPPLY+1
  1827 1812 4C 21 18			jmp l_08AA
  1828 1815			l_089B
  1829 1815 AD B3 2C			lda PLAYER2
  1830 1818 8D AF 2C			sta TMPPLY
  1831 181B AD B4 2C			lda PLAYER2+1
  1832 181E 8D B0 2C			sta TMPPLY+1
  1833 1821			l_08AA
  1834
  1835 				; optimize OK (ai.inc), line = 90
  1836
  1837 1821 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  1838 182B A0 01			ldy #PLY.Y-DATAORIGIN
  1839 182D B1 12			lda (:bp2),y
  1840 182F 85 21			sta :STACKORIGIN+9
  1841 1831 AC AF 2C 84 12 AC + 	mwy TMPPLY :bp2
  1842 183B A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1843 183D B1 12			lda (:bp2),y
  1844 183F C5 21			cmp :STACKORIGIN+9
  1845 1841 B0 07			jcs l_08C3
  1846 1843 A9 01			lda #$01
  1847 1845 85 58			sta T0B
  1848 1847 4C 4E 18			jmp l_08D1
  1849 184A			l_08C3
  1850 184A A9 02			lda #$02
  1851 184C 85 58			sta T0B
  1852 184E			l_08D1
  1853
  1854 				; optimize OK (ai.inc), line = 91
  1855
  1856 184E AC AD 2C 84 12 AC + 	mwy PLY :bp2
  1857 1858 A0 01			ldy #PLY.Y-DATAORIGIN
  1858 185A B1 12			lda (:bp2),y
  1859 185C 85 21			sta :STACKORIGIN+9
  1860 185E AC AF 2C 84 12 AC + 	mwy TMPPLY :bp2
  1861 1868 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1862 186A B1 12			lda (:bp2),y
  1863 186C C5 21			cmp :STACKORIGIN+9
  1864 186E F0 06			jeq l_08FBx
  1865 1870 A5 5C			lda AVAILDIR
  1866 1872 25 58			and T0B
  1867 1874 D0 2D			jne l_08FB
  1868 1876			l_08FBx
  1869
  1870 				; optimize OK (ai.inc), line = 92
  1871
  1872 1876 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  1873 1880 A0 00			ldy #PLY.X-DATAORIGIN
  1874 1882 B1 12			lda (:bp2),y
  1875 1884 85 21			sta :STACKORIGIN+9
  1876 1886 AC AF 2C 84 12 AC + 	mwy TMPPLY :bp2
  1877 1890 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1878 1892 B1 12			lda (:bp2),y
  1879 1894 C5 21			cmp :STACKORIGIN+9
  1880 1896 B0 07			jcs l_0910
  1881 1898 A9 04			lda #$04
  1882 189A 85 58			sta T0B
  1883 189C 4C A3 18			jmp l_091E
  1884 189F			l_0910
  1885 189F A9 08			lda #$08
  1886 18A1 85 58			sta T0B
  1887 18A3			l_091E
  1888 18A3			l_08FB
  1889 18A3			l_088E
  1890
  1891 				; optimize OK (ai.inc), line = 96
  1892
  1893 18A3 A5 5C			lda AVAILDIR
  1894 18A5 25 58			and T0B
  1895 18A7 F0 07			jeq l_093E
  1896 18A9 A5 58			lda T0B
  1897 18AB 85 5B			sta NEWDIR
  1898 18AD 4C B3 18			jmp l_094E
  1899 18B0			l_093E
  1900
  1901 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  1902
  1903 18B0 20 8C 15			jsr AISAPPER
  1904 18B3			l_094E
  1905 18B3			@exit
  1906 					.ifdef @new
  1907 					lda <@VarData
  1908 					sta :ztmp
  1909 					lda >@VarData
  1910 					ldy #@VarDataSize-1
  1911 					jmp @FreeMem
  1912 					els
  1913 18B3 60				rts						; ret
  1914 					eif
  1915 				.endl
  1916
  1917 18B4			.local	AIMIRROR					; PROCEDURE
  1918
  1919 				; optimize OK (ai.inc), line = 105
  1920
  1921 18B4 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  1922 18BE A0 04			ldy #PLY.DIR-DATAORIGIN
  1923 18C0 B1 12			lda (:bp2),y
  1924 18C2 85 58			sta T0B
  1925
  1926 				; optimize OK (ai.inc), line = 107
  1927
  1928 18C4 AD D5 2C			lda PLAYER1.ISALIVE
  1929 18C7 F0 2F			jeq l_0965
  1930
  1931 				; optimize OK (ai.inc), line = 108
  1932
  1933 18C9 AD D2 2C			lda PLAYER1.DIR
  1934 18CC 8D 1A 2D			sta @CASETMP_0005
  1935 18CF C9 01			cmp #$01
  1936 18D1 D0 07			jne l_0971
  1937 18D3			@
  1938
  1939 				; optimize OK (ai.inc), line = 109
  1940
  1941 18D3 A9 02			lda #$02
  1942 18D5 85 58			sta T0B
  1943
  1944 18D7 4C F8 18			jmp a_0005
  1945 18DA			l_0971
  1946 18DA C9 02			cmp #$02
  1947 18DC D0 07			jne l_097E
  1948 18DE			@
  1949
  1950 				; optimize OK (ai.inc), line = 110
  1951
  1952 18DE A9 01			lda #$01
  1953 18E0 85 58			sta T0B
  1954
  1955 18E2 4C F8 18			jmp a_0005
  1956 18E5			l_097E
  1957 18E5 C9 04			cmp #$04
  1958 18E7 D0 07			jne l_098B
  1959 18E9			@
  1960
  1961 				; optimize OK (ai.inc), line = 111
  1962
  1963 18E9 A9 08			lda #$08
  1964 18EB 85 58			sta T0B
  1965
  1966 18ED 4C F8 18			jmp a_0005
  1967 18F0			l_098B
  1968 18F0 C9 08			cmp #$08
  1969 18F2 D0 04			jne l_0998
  1970 18F4			@
  1971
  1972 				; optimize OK (ai.inc), line = 112
  1973
  1974 18F4 A9 04			lda #$04
  1975 18F6 85 58			sta T0B
  1976
  1977 18F8			l_0998
  1978 18F8			a_0005
  1979 18F8			l_0965
  1980
  1981 				; optimize OK (ai.inc), line = 116
  1982
  1983 18F8 A5 5C			lda AVAILDIR
  1984 18FA 25 58			and T0B
  1985 18FC F0 07			jeq l_09BE
  1986 18FE A5 58			lda T0B
  1987 1900 85 5B			sta NEWDIR
  1988 1902 4C 08 19			jmp l_09CE
  1989 1905			l_09BE
  1990
  1991 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  1992
  1993 1905 20 8C 15			jsr AISAPPER
  1994 1908			l_09CE
  1995
  1996 				; ------------------------------------------------------------
  1997
  1998 = 2D1A			@CASETMP_0005	= DATAORIGIN+$005E
  1999
  2000 = 2D1A			@VarData	= @CASETMP_0005
  2001 = 0001			@VarDataSize	= 1
  2002
  2003 1908			@exit
  2004 					.ifdef @new
  2005 					lda <@VarData
  2006 					sta :ztmp
  2007 					lda >@VarData
  2008 					ldy #@VarDataSize-1
  2009 					jmp @FreeMem
  2010 					els
  2011 1908 60				rts						; ret
  2012 					eif
  2013 				.endl
  2014
  2015 1909			.local	SETLEVEL00					; PROCEDURE
  2016
  2017 				; optimize OK (levels.inc), line = 5
  2018
  2019 1909 A9 01			lda #$01
  2020 190B 8D 13 2D			sta SETPLAYER.ISALIVE
  2021 190E A9 62			lda #$62
  2022 1910 8D 12 2D			sta SETPLAYER.COLOUR
  2023 1913 A9 51			lda #$51
  2024 1915 8D 11 2D			sta SETPLAYER.HEAD
  2025 1918 A9 00			lda #$00
  2026 191A 8D 10 2D			sta SETPLAYER.BRAIN
  2027 191D A9 08			lda #$08
  2028 191F 8D 0F 2D			sta SETPLAYER.DIR
  2029 1922 A9 0C			lda #$0C
  2030 1924 8D 0E 2D			sta SETPLAYER.Y
  2031 1927 A9 0A			lda #$0A
  2032 1929 8D 0D 2D			sta SETPLAYER.X
  2033 192C AD B1 2C			lda PLAYER1
  2034 192F 8D 0B 2D			sta SETPLAYER.P
  2035 1932 AD B2 2C			lda PLAYER1+1
  2036 1935 8D 0C 2D			sta SETPLAYER.P+1
  2037 1938 20 23 14			jsr SETPLAYER
  2038
  2039 				; optimize OK (levels.inc), line = 6
  2040
  2041 193B A9 01			lda #$01
  2042 193D 8D 13 2D			sta SETPLAYER.ISALIVE
  2043 1940 A9 5D			lda #$5D
  2044 1942 8D 12 2D			sta SETPLAYER.COLOUR
  2045 1945 A9 51			lda #$51
  2046 1947 8D 11 2D			sta SETPLAYER.HEAD
  2047 194A A9 01			lda #$01
  2048 194C 8D 10 2D			sta SETPLAYER.BRAIN
  2049 194F A9 04			lda #$04
  2050 1951 8D 0F 2D			sta SETPLAYER.DIR
  2051 1954 A9 0C			lda #$0C
  2052 1956 8D 0E 2D			sta SETPLAYER.Y
  2053 1959 A9 1E			lda #$1E
  2054 195B 8D 0D 2D			sta SETPLAYER.X
  2055 195E AD B3 2C			lda PLAYER2
  2056 1961 8D 0B 2D			sta SETPLAYER.P
  2057 1964 AD B4 2C			lda PLAYER2+1
  2058 1967 8D 0C 2D			sta SETPLAYER.P+1
  2059 196A 20 23 14			jsr SETPLAYER
  2060
  2061 				; optimize OK (levels.inc), line = 7
  2062
  2063 196D A9 00			lda #$00
  2064 196F 8D 13 2D			sta SETPLAYER.ISALIVE
  2065 1972 A9 71			lda #$71
  2066 1974 8D 12 2D			sta SETPLAYER.COLOUR
  2067 1977 A9 51			lda #$51
  2068 1979 8D 11 2D			sta SETPLAYER.HEAD
  2069 197C A9 03			lda #$03
  2070 197E 8D 10 2D			sta SETPLAYER.BRAIN
  2071 1981 A9 02			lda #$02
  2072 1983 8D 0F 2D			sta SETPLAYER.DIR
  2073 1986 A9 04			lda #$04
  2074 1988 8D 0E 2D			sta SETPLAYER.Y
  2075 198B A9 14			lda #$14
  2076 198D 8D 0D 2D			sta SETPLAYER.X
  2077 1990 AD B5 2C			lda PLAYER3
  2078 1993 8D 0B 2D			sta SETPLAYER.P
  2079 1996 AD B6 2C			lda PLAYER3+1
  2080 1999 8D 0C 2D			sta SETPLAYER.P+1
  2081 199C 20 23 14			jsr SETPLAYER
  2082
  2083 				; optimize OK (levels.inc), line = 8
  2084
  2085 199F A9 00			lda #$00
  2086 19A1 8D 13 2D			sta SETPLAYER.ISALIVE
  2087 19A4 A9 55			lda #$55
  2088 19A6 8D 12 2D			sta SETPLAYER.COLOUR
  2089 19A9 A9 51			lda #$51
  2090 19AB 8D 11 2D			sta SETPLAYER.HEAD
  2091 19AE A9 02			lda #$02
  2092 19B0 8D 10 2D			sta SETPLAYER.BRAIN
  2093 19B3 A9 01			lda #$01
  2094 19B5 8D 0F 2D			sta SETPLAYER.DIR
  2095 19B8 A9 12			lda #$12
  2096 19BA 8D 0E 2D			sta SETPLAYER.Y
  2097 19BD A9 14			lda #$14
  2098 19BF 8D 0D 2D			sta SETPLAYER.X
  2099 19C2 AD B7 2C			lda PLAYER4
  2100 19C5 8D 0B 2D			sta SETPLAYER.P
  2101 19C8 AD B8 2C			lda PLAYER4+1
  2102 19CB 8D 0C 2D			sta SETPLAYER.P+1
  2103 19CE 20 23 14			jsr SETPLAYER
  2104
  2105 				; optimize FAIL (1, levels.inc), line = 10
  2106
  2107 19D1 E8				inx
  2108 19D2 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2109 19D6 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2110 19D8 A9 06			lda #$06
  2111 19DA 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2112 19DD A9 0A			lda #$0A
  2113 19DF 8D 07 2D			sta CALCOBSTACLEADDR.X
  2114 19E2 20 F3 12			jsr CALCOBSTACLEADDR
  2115 19E5 B4 17			ldy :STACKORIGIN-1,x
  2116 19E7 B5 18			lda :STACKORIGIN,x
  2117 19E9 99 EE 2C			sta adr.OBSTACLES,y
  2118 19EC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2119 19EE 99 EF 2C			sta adr.OBSTACLES+1,y
  2120 19F1 CA				dex
  2121
  2122 				; optimize FAIL (1, levels.inc), line = 11
  2123
  2124 19F2 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2125 19F6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2126 19FA A9 06			lda #$06
  2127 19FC 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2128 19FF A9 1E			lda #$1E
  2129 1A01 8D 07 2D			sta CALCOBSTACLEADDR.X
  2130 1A04 20 F3 12			jsr CALCOBSTACLEADDR
  2131 1A07 B4 17			ldy :STACKORIGIN-1,x
  2132 1A09 B5 18			lda :STACKORIGIN,x
  2133 1A0B 99 EE 2C			sta adr.OBSTACLES,y
  2134 1A0E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2135 1A10 99 EF 2C			sta adr.OBSTACLES+1,y
  2136 1A13 CA				dex
  2137
  2138 				; optimize FAIL (1, levels.inc), line = 12
  2139
  2140 1A14 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2141 1A18 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2142 1A1C A9 12			lda #$12
  2143 1A1E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2144 1A21 A9 0A			lda #$0A
  2145 1A23 8D 07 2D			sta CALCOBSTACLEADDR.X
  2146 1A26 20 F3 12			jsr CALCOBSTACLEADDR
  2147 1A29 B4 17			ldy :STACKORIGIN-1,x
  2148 1A2B B5 18			lda :STACKORIGIN,x
  2149 1A2D 99 EE 2C			sta adr.OBSTACLES,y
  2150 1A30 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2151 1A32 99 EF 2C			sta adr.OBSTACLES+1,y
  2152 1A35 CA				dex
  2153
  2154 				; optimize FAIL (1, levels.inc), line = 13
  2155
  2156 1A36 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2157 1A3A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2158 1A3E A9 12			lda #$12
  2159 1A40 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2160 1A43 A9 1E			lda #$1E
  2161 1A45 8D 07 2D			sta CALCOBSTACLEADDR.X
  2162 1A48 20 F3 12			jsr CALCOBSTACLEADDR
  2163 1A4B B4 17			ldy :STACKORIGIN-1,x
  2164 1A4D B5 18			lda :STACKORIGIN,x
  2165 1A4F 99 EE 2C			sta adr.OBSTACLES,y
  2166 1A52 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2167 1A54 99 EF 2C			sta adr.OBSTACLES+1,y
  2168 1A57 CA				dex
  2169 1A58 CA				dex
  2170
  2171 				; optimize OK (levels.inc), line = 14
  2172
  2173 1A59 A9 7E			lda #$7E
  2174 1A5B 8D F6 2C			sta adr.OBSTACLES+$08
  2175 1A5E A9 00			lda #$00
  2176 1A60 8D F7 2C			sta adr.OBSTACLES+1+$08
  2177
  2178 				; optimize FAIL (1, levels.inc), line = 15
  2179
  2180 1A63 E8				inx
  2181 1A64 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2182 1A68 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2183 1A6C A9 02			lda #$02
  2184 1A6E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2185 1A71 A9 14			lda #$14
  2186 1A73 8D 07 2D			sta CALCOBSTACLEADDR.X
  2187 1A76 20 F3 12			jsr CALCOBSTACLEADDR
  2188 1A79 B4 17			ldy :STACKORIGIN-1,x
  2189 1A7B B5 18			lda :STACKORIGIN,x
  2190 1A7D 99 EE 2C			sta adr.OBSTACLES,y
  2191 1A80 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2192 1A82 99 EF 2C			sta adr.OBSTACLES+1,y
  2193 1A85 CA				dex
  2194
  2195 				; optimize FAIL (1, levels.inc), line = 16
  2196
  2197 1A86 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2198 1A8A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2199 1A8E A9 16			lda #$16
  2200 1A90 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2201 1A93 A9 14			lda #$14
  2202 1A95 8D 07 2D			sta CALCOBSTACLEADDR.X
  2203 1A98 20 F3 12			jsr CALCOBSTACLEADDR
  2204 1A9B B4 17			ldy :STACKORIGIN-1,x
  2205 1A9D B5 18			lda :STACKORIGIN,x
  2206 1A9F 99 EE 2C			sta adr.OBSTACLES,y
  2207 1AA2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2208 1AA4 99 EF 2C			sta adr.OBSTACLES+1,y
  2209 1AA7 CA				dex
  2210 1AA8 CA				dex
  2211
  2212 				; optimize OK (levels.inc), line = 17
  2213
  2214 1AA9 A9 7E			lda #$7E
  2215 1AAB 8D FC 2C			sta adr.OBSTACLES+$0E
  2216 1AAE A9 00			lda #$00
  2217 1AB0 8D FD 2C			sta adr.OBSTACLES+1+$0E
  2218
  2219 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 19
  2220
  2221 1AB3 20 16 13			jsr SAVEOBSTACLES
  2222 1AB6			@exit
  2223 					.ifdef @new
  2224 					lda <@VarData
  2225 					sta :ztmp
  2226 					lda >@VarData
  2227 					ldy #@VarDataSize-1
  2228 					jmp @FreeMem
  2229 					els
  2230 1AB6 60				rts						; ret
  2231 					eif
  2232 				.endl
  2233
  2234 1AB7			.local	SETLEVEL01					; PROCEDURE
  2235
  2236 				; optimize OK (levels.inc), line = 26
  2237
  2238 1AB7 A9 01			lda #$01
  2239 1AB9 8D 13 2D			sta SETPLAYER.ISALIVE
  2240 1ABC A9 62			lda #$62
  2241 1ABE 8D 12 2D			sta SETPLAYER.COLOUR
  2242 1AC1 A9 51			lda #$51
  2243 1AC3 8D 11 2D			sta SETPLAYER.HEAD
  2244 1AC6 A9 00			lda #$00
  2245 1AC8 8D 10 2D			sta SETPLAYER.BRAIN
  2246 1ACB A9 08			lda #$08
  2247 1ACD 8D 0F 2D			sta SETPLAYER.DIR
  2248 1AD0 A9 0C			lda #$0C
  2249 1AD2 8D 0E 2D			sta SETPLAYER.Y
  2250 1AD5 A9 0A			lda #$0A
  2251 1AD7 8D 0D 2D			sta SETPLAYER.X
  2252 1ADA AD B1 2C			lda PLAYER1
  2253 1ADD 8D 0B 2D			sta SETPLAYER.P
  2254 1AE0 AD B2 2C			lda PLAYER1+1
  2255 1AE3 8D 0C 2D			sta SETPLAYER.P+1
  2256 1AE6 20 23 14			jsr SETPLAYER
  2257
  2258 				; optimize OK (levels.inc), line = 27
  2259
  2260 1AE9 A9 01			lda #$01
  2261 1AEB 8D 13 2D			sta SETPLAYER.ISALIVE
  2262 1AEE A9 5D			lda #$5D
  2263 1AF0 8D 12 2D			sta SETPLAYER.COLOUR
  2264 1AF3 A9 51			lda #$51
  2265 1AF5 8D 11 2D			sta SETPLAYER.HEAD
  2266 1AF8 A9 01			lda #$01
  2267 1AFA 8D 10 2D			sta SETPLAYER.BRAIN
  2268 1AFD A9 04			lda #$04
  2269 1AFF 8D 0F 2D			sta SETPLAYER.DIR
  2270 1B02 A9 0C			lda #$0C
  2271 1B04 8D 0E 2D			sta SETPLAYER.Y
  2272 1B07 A9 1E			lda #$1E
  2273 1B09 8D 0D 2D			sta SETPLAYER.X
  2274 1B0C AD B3 2C			lda PLAYER2
  2275 1B0F 8D 0B 2D			sta SETPLAYER.P
  2276 1B12 AD B4 2C			lda PLAYER2+1
  2277 1B15 8D 0C 2D			sta SETPLAYER.P+1
  2278 1B18 20 23 14			jsr SETPLAYER
  2279
  2280 				; optimize OK (levels.inc), line = 28
  2281
  2282 1B1B A9 00			lda #$00
  2283 1B1D 8D 13 2D			sta SETPLAYER.ISALIVE
  2284 1B20 A9 71			lda #$71
  2285 1B22 8D 12 2D			sta SETPLAYER.COLOUR
  2286 1B25 A9 51			lda #$51
  2287 1B27 8D 11 2D			sta SETPLAYER.HEAD
  2288 1B2A A9 03			lda #$03
  2289 1B2C 8D 10 2D			sta SETPLAYER.BRAIN
  2290 1B2F A9 02			lda #$02
  2291 1B31 8D 0F 2D			sta SETPLAYER.DIR
  2292 1B34 A9 04			lda #$04
  2293 1B36 8D 0E 2D			sta SETPLAYER.Y
  2294 1B39 A9 14			lda #$14
  2295 1B3B 8D 0D 2D			sta SETPLAYER.X
  2296 1B3E AD B5 2C			lda PLAYER3
  2297 1B41 8D 0B 2D			sta SETPLAYER.P
  2298 1B44 AD B6 2C			lda PLAYER3+1
  2299 1B47 8D 0C 2D			sta SETPLAYER.P+1
  2300 1B4A 20 23 14			jsr SETPLAYER
  2301
  2302 				; optimize OK (levels.inc), line = 29
  2303
  2304 1B4D A9 00			lda #$00
  2305 1B4F 8D 13 2D			sta SETPLAYER.ISALIVE
  2306 1B52 A9 55			lda #$55
  2307 1B54 8D 12 2D			sta SETPLAYER.COLOUR
  2308 1B57 A9 51			lda #$51
  2309 1B59 8D 11 2D			sta SETPLAYER.HEAD
  2310 1B5C A9 02			lda #$02
  2311 1B5E 8D 10 2D			sta SETPLAYER.BRAIN
  2312 1B61 A9 01			lda #$01
  2313 1B63 8D 0F 2D			sta SETPLAYER.DIR
  2314 1B66 A9 12			lda #$12
  2315 1B68 8D 0E 2D			sta SETPLAYER.Y
  2316 1B6B A9 14			lda #$14
  2317 1B6D 8D 0D 2D			sta SETPLAYER.X
  2318 1B70 AD B7 2C			lda PLAYER4
  2319 1B73 8D 0B 2D			sta SETPLAYER.P
  2320 1B76 AD B8 2C			lda PLAYER4+1
  2321 1B79 8D 0C 2D			sta SETPLAYER.P+1
  2322 1B7C 20 23 14			jsr SETPLAYER
  2323
  2324 				; optimize FAIL (1, levels.inc), line = 31
  2325
  2326 1B7F E8				inx
  2327 1B80 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2328 1B84 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2329 1B86 A9 06			lda #$06
  2330 1B88 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2331 1B8B A9 0A			lda #$0A
  2332 1B8D 8D 07 2D			sta CALCOBSTACLEADDR.X
  2333 1B90 20 F3 12			jsr CALCOBSTACLEADDR
  2334 1B93 B4 17			ldy :STACKORIGIN-1,x
  2335 1B95 B5 18			lda :STACKORIGIN,x
  2336 1B97 99 EE 2C			sta adr.OBSTACLES,y
  2337 1B9A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2338 1B9C 99 EF 2C			sta adr.OBSTACLES+1,y
  2339 1B9F CA				dex
  2340
  2341 				; optimize FAIL (1, levels.inc), line = 32
  2342
  2343 1BA0 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2344 1BA4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2345 1BA8 A9 06			lda #$06
  2346 1BAA 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2347 1BAD A9 1E			lda #$1E
  2348 1BAF 8D 07 2D			sta CALCOBSTACLEADDR.X
  2349 1BB2 20 F3 12			jsr CALCOBSTACLEADDR
  2350 1BB5 B4 17			ldy :STACKORIGIN-1,x
  2351 1BB7 B5 18			lda :STACKORIGIN,x
  2352 1BB9 99 EE 2C			sta adr.OBSTACLES,y
  2353 1BBC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2354 1BBE 99 EF 2C			sta adr.OBSTACLES+1,y
  2355 1BC1 CA				dex
  2356
  2357 				; optimize FAIL (1, levels.inc), line = 33
  2358
  2359 1BC2 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2360 1BC6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2361 1BCA A9 12			lda #$12
  2362 1BCC 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2363 1BCF A9 0A			lda #$0A
  2364 1BD1 8D 07 2D			sta CALCOBSTACLEADDR.X
  2365 1BD4 20 F3 12			jsr CALCOBSTACLEADDR
  2366 1BD7 B4 17			ldy :STACKORIGIN-1,x
  2367 1BD9 B5 18			lda :STACKORIGIN,x
  2368 1BDB 99 EE 2C			sta adr.OBSTACLES,y
  2369 1BDE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2370 1BE0 99 EF 2C			sta adr.OBSTACLES+1,y
  2371 1BE3 CA				dex
  2372
  2373 				; optimize FAIL (1, levels.inc), line = 34
  2374
  2375 1BE4 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2376 1BE8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2377 1BEC A9 12			lda #$12
  2378 1BEE 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2379 1BF1 A9 1E			lda #$1E
  2380 1BF3 8D 07 2D			sta CALCOBSTACLEADDR.X
  2381 1BF6 20 F3 12			jsr CALCOBSTACLEADDR
  2382 1BF9 B4 17			ldy :STACKORIGIN-1,x
  2383 1BFB B5 18			lda :STACKORIGIN,x
  2384 1BFD 99 EE 2C			sta adr.OBSTACLES,y
  2385 1C00 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2386 1C02 99 EF 2C			sta adr.OBSTACLES+1,y
  2387 1C05 CA				dex
  2388 1C06 CA				dex
  2389
  2390 				; optimize OK (levels.inc), line = 35
  2391
  2392 1C07 A9 7E			lda #$7E
  2393 1C09 8D F6 2C			sta adr.OBSTACLES+$08
  2394 1C0C A9 00			lda #$00
  2395 1C0E 8D F7 2C			sta adr.OBSTACLES+1+$08
  2396
  2397 				; optimize FAIL (1, levels.inc), line = 36
  2398
  2399 1C11 E8				inx
  2400 1C12 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2401 1C16 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2402 1C1A A9 02			lda #$02
  2403 1C1C 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2404 1C1F A9 14			lda #$14
  2405 1C21 8D 07 2D			sta CALCOBSTACLEADDR.X
  2406 1C24 20 F3 12			jsr CALCOBSTACLEADDR
  2407 1C27 B4 17			ldy :STACKORIGIN-1,x
  2408 1C29 B5 18			lda :STACKORIGIN,x
  2409 1C2B 99 EE 2C			sta adr.OBSTACLES,y
  2410 1C2E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2411 1C30 99 EF 2C			sta adr.OBSTACLES+1,y
  2412 1C33 CA				dex
  2413
  2414 				; optimize FAIL (1, levels.inc), line = 37
  2415
  2416 1C34 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2417 1C38 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2418 1C3C A9 16			lda #$16
  2419 1C3E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2420 1C41 A9 14			lda #$14
  2421 1C43 8D 07 2D			sta CALCOBSTACLEADDR.X
  2422 1C46 20 F3 12			jsr CALCOBSTACLEADDR
  2423 1C49 B4 17			ldy :STACKORIGIN-1,x
  2424 1C4B B5 18			lda :STACKORIGIN,x
  2425 1C4D 99 EE 2C			sta adr.OBSTACLES,y
  2426 1C50 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2427 1C52 99 EF 2C			sta adr.OBSTACLES+1,y
  2428 1C55 CA				dex
  2429 1C56 CA				dex
  2430
  2431 				; optimize OK (levels.inc), line = 38
  2432
  2433 1C57 A9 7E			lda #$7E
  2434 1C59 8D FC 2C			sta adr.OBSTACLES+$0E
  2435 1C5C A9 00			lda #$00
  2436 1C5E 8D FD 2C			sta adr.OBSTACLES+1+$0E
  2437
  2438 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 40
  2439
  2440 1C61 20 16 13			jsr SAVEOBSTACLES
  2441 1C64			@exit
  2442 					.ifdef @new
  2443 					lda <@VarData
  2444 					sta :ztmp
  2445 					lda >@VarData
  2446 					ldy #@VarDataSize-1
  2447 					jmp @FreeMem
  2448 					els
  2449 1C64 60				rts						; ret
  2450 					eif
  2451 				.endl
  2452
  2453 1C65			.local	SETLEVEL02					; PROCEDURE
  2454
  2455 				; optimize OK (levels.inc), line = 47
  2456
  2457 1C65 A9 01			lda #$01
  2458 1C67 8D 13 2D			sta SETPLAYER.ISALIVE
  2459 1C6A A9 62			lda #$62
  2460 1C6C 8D 12 2D			sta SETPLAYER.COLOUR
  2461 1C6F A9 51			lda #$51
  2462 1C71 8D 11 2D			sta SETPLAYER.HEAD
  2463 1C74 A9 00			lda #$00
  2464 1C76 8D 10 2D			sta SETPLAYER.BRAIN
  2465 1C79 A9 08			lda #$08
  2466 1C7B 8D 0F 2D			sta SETPLAYER.DIR
  2467 1C7E A9 0C			lda #$0C
  2468 1C80 8D 0E 2D			sta SETPLAYER.Y
  2469 1C83 A9 0A			lda #$0A
  2470 1C85 8D 0D 2D			sta SETPLAYER.X
  2471 1C88 AD B1 2C			lda PLAYER1
  2472 1C8B 8D 0B 2D			sta SETPLAYER.P
  2473 1C8E AD B2 2C			lda PLAYER1+1
  2474 1C91 8D 0C 2D			sta SETPLAYER.P+1
  2475 1C94 20 23 14			jsr SETPLAYER
  2476
  2477 				; optimize OK (levels.inc), line = 48
  2478
  2479 1C97 A9 01			lda #$01
  2480 1C99 8D 13 2D			sta SETPLAYER.ISALIVE
  2481 1C9C A9 5D			lda #$5D
  2482 1C9E 8D 12 2D			sta SETPLAYER.COLOUR
  2483 1CA1 A9 51			lda #$51
  2484 1CA3 8D 11 2D			sta SETPLAYER.HEAD
  2485 1CA6 A9 03			lda #$03
  2486 1CA8 8D 10 2D			sta SETPLAYER.BRAIN
  2487 1CAB A9 04			lda #$04
  2488 1CAD 8D 0F 2D			sta SETPLAYER.DIR
  2489 1CB0 A9 0C			lda #$0C
  2490 1CB2 8D 0E 2D			sta SETPLAYER.Y
  2491 1CB5 A9 1E			lda #$1E
  2492 1CB7 8D 0D 2D			sta SETPLAYER.X
  2493 1CBA AD B3 2C			lda PLAYER2
  2494 1CBD 8D 0B 2D			sta SETPLAYER.P
  2495 1CC0 AD B4 2C			lda PLAYER2+1
  2496 1CC3 8D 0C 2D			sta SETPLAYER.P+1
  2497 1CC6 20 23 14			jsr SETPLAYER
  2498
  2499 				; optimize OK (levels.inc), line = 49
  2500
  2501 1CC9 A9 00			lda #$00
  2502 1CCB 8D 13 2D			sta SETPLAYER.ISALIVE
  2503 1CCE A9 71			lda #$71
  2504 1CD0 8D 12 2D			sta SETPLAYER.COLOUR
  2505 1CD3 A9 51			lda #$51
  2506 1CD5 8D 11 2D			sta SETPLAYER.HEAD
  2507 1CD8 A9 03			lda #$03
  2508 1CDA 8D 10 2D			sta SETPLAYER.BRAIN
  2509 1CDD A9 02			lda #$02
  2510 1CDF 8D 0F 2D			sta SETPLAYER.DIR
  2511 1CE2 A9 04			lda #$04
  2512 1CE4 8D 0E 2D			sta SETPLAYER.Y
  2513 1CE7 A9 14			lda #$14
  2514 1CE9 8D 0D 2D			sta SETPLAYER.X
  2515 1CEC AD B5 2C			lda PLAYER3
  2516 1CEF 8D 0B 2D			sta SETPLAYER.P
  2517 1CF2 AD B6 2C			lda PLAYER3+1
  2518 1CF5 8D 0C 2D			sta SETPLAYER.P+1
  2519 1CF8 20 23 14			jsr SETPLAYER
  2520
  2521 				; optimize OK (levels.inc), line = 50
  2522
  2523 1CFB A9 00			lda #$00
  2524 1CFD 8D 13 2D			sta SETPLAYER.ISALIVE
  2525 1D00 A9 55			lda #$55
  2526 1D02 8D 12 2D			sta SETPLAYER.COLOUR
  2527 1D05 A9 51			lda #$51
  2528 1D07 8D 11 2D			sta SETPLAYER.HEAD
  2529 1D0A A9 02			lda #$02
  2530 1D0C 8D 10 2D			sta SETPLAYER.BRAIN
  2531 1D0F A9 01			lda #$01
  2532 1D11 8D 0F 2D			sta SETPLAYER.DIR
  2533 1D14 A9 12			lda #$12
  2534 1D16 8D 0E 2D			sta SETPLAYER.Y
  2535 1D19 A9 14			lda #$14
  2536 1D1B 8D 0D 2D			sta SETPLAYER.X
  2537 1D1E AD B7 2C			lda PLAYER4
  2538 1D21 8D 0B 2D			sta SETPLAYER.P
  2539 1D24 AD B8 2C			lda PLAYER4+1
  2540 1D27 8D 0C 2D			sta SETPLAYER.P+1
  2541 1D2A 20 23 14			jsr SETPLAYER
  2542
  2543 				; optimize FAIL (1, levels.inc), line = 52
  2544
  2545 1D2D E8				inx
  2546 1D2E A9 00 95 18			mva #$00 :STACKORIGIN,x
  2547 1D32 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2548 1D34 A9 06			lda #$06
  2549 1D36 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2550 1D39 A9 0A			lda #$0A
  2551 1D3B 8D 07 2D			sta CALCOBSTACLEADDR.X
  2552 1D3E 20 F3 12			jsr CALCOBSTACLEADDR
  2553 1D41 B4 17			ldy :STACKORIGIN-1,x
  2554 1D43 B5 18			lda :STACKORIGIN,x
  2555 1D45 99 EE 2C			sta adr.OBSTACLES,y
  2556 1D48 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2557 1D4A 99 EF 2C			sta adr.OBSTACLES+1,y
  2558 1D4D CA				dex
  2559
  2560 				; optimize FAIL (1, levels.inc), line = 53
  2561
  2562 1D4E A9 02 95 18			mva #$02 :STACKORIGIN,x
  2563 1D52 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2564 1D56 A9 06			lda #$06
  2565 1D58 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2566 1D5B A9 1E			lda #$1E
  2567 1D5D 8D 07 2D			sta CALCOBSTACLEADDR.X
  2568 1D60 20 F3 12			jsr CALCOBSTACLEADDR
  2569 1D63 B4 17			ldy :STACKORIGIN-1,x
  2570 1D65 B5 18			lda :STACKORIGIN,x
  2571 1D67 99 EE 2C			sta adr.OBSTACLES,y
  2572 1D6A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2573 1D6C 99 EF 2C			sta adr.OBSTACLES+1,y
  2574 1D6F CA				dex
  2575
  2576 				; optimize FAIL (1, levels.inc), line = 54
  2577
  2578 1D70 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2579 1D74 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2580 1D78 A9 12			lda #$12
  2581 1D7A 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2582 1D7D A9 0A			lda #$0A
  2583 1D7F 8D 07 2D			sta CALCOBSTACLEADDR.X
  2584 1D82 20 F3 12			jsr CALCOBSTACLEADDR
  2585 1D85 B4 17			ldy :STACKORIGIN-1,x
  2586 1D87 B5 18			lda :STACKORIGIN,x
  2587 1D89 99 EE 2C			sta adr.OBSTACLES,y
  2588 1D8C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2589 1D8E 99 EF 2C			sta adr.OBSTACLES+1,y
  2590 1D91 CA				dex
  2591
  2592 				; optimize FAIL (1, levels.inc), line = 55
  2593
  2594 1D92 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2595 1D96 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2596 1D9A A9 12			lda #$12
  2597 1D9C 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2598 1D9F A9 1E			lda #$1E
  2599 1DA1 8D 07 2D			sta CALCOBSTACLEADDR.X
  2600 1DA4 20 F3 12			jsr CALCOBSTACLEADDR
  2601 1DA7 B4 17			ldy :STACKORIGIN-1,x
  2602 1DA9 B5 18			lda :STACKORIGIN,x
  2603 1DAB 99 EE 2C			sta adr.OBSTACLES,y
  2604 1DAE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2605 1DB0 99 EF 2C			sta adr.OBSTACLES+1,y
  2606 1DB3 CA				dex
  2607 1DB4 CA				dex
  2608
  2609 				; optimize OK (levels.inc), line = 56
  2610
  2611 1DB5 A9 7E			lda #$7E
  2612 1DB7 8D F6 2C			sta adr.OBSTACLES+$08
  2613 1DBA A9 00			lda #$00
  2614 1DBC 8D F7 2C			sta adr.OBSTACLES+1+$08
  2615
  2616 				; optimize FAIL (1, levels.inc), line = 57
  2617
  2618 1DBF E8				inx
  2619 1DC0 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2620 1DC4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2621 1DC8 A9 02			lda #$02
  2622 1DCA 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2623 1DCD A9 14			lda #$14
  2624 1DCF 8D 07 2D			sta CALCOBSTACLEADDR.X
  2625 1DD2 20 F3 12			jsr CALCOBSTACLEADDR
  2626 1DD5 B4 17			ldy :STACKORIGIN-1,x
  2627 1DD7 B5 18			lda :STACKORIGIN,x
  2628 1DD9 99 EE 2C			sta adr.OBSTACLES,y
  2629 1DDC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2630 1DDE 99 EF 2C			sta adr.OBSTACLES+1,y
  2631 1DE1 CA				dex
  2632
  2633 				; optimize FAIL (1, levels.inc), line = 58
  2634
  2635 1DE2 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2636 1DE6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2637 1DEA A9 16			lda #$16
  2638 1DEC 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2639 1DEF A9 14			lda #$14
  2640 1DF1 8D 07 2D			sta CALCOBSTACLEADDR.X
  2641 1DF4 20 F3 12			jsr CALCOBSTACLEADDR
  2642 1DF7 B4 17			ldy :STACKORIGIN-1,x
  2643 1DF9 B5 18			lda :STACKORIGIN,x
  2644 1DFB 99 EE 2C			sta adr.OBSTACLES,y
  2645 1DFE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2646 1E00 99 EF 2C			sta adr.OBSTACLES+1,y
  2647 1E03 CA				dex
  2648 1E04 CA				dex
  2649
  2650 				; optimize OK (levels.inc), line = 59
  2651
  2652 1E05 A9 7E			lda #$7E
  2653 1E07 8D FC 2C			sta adr.OBSTACLES+$0E
  2654 1E0A A9 00			lda #$00
  2655 1E0C 8D FD 2C			sta adr.OBSTACLES+1+$0E
  2656
  2657 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 61
  2658
  2659 1E0F 20 16 13			jsr SAVEOBSTACLES
  2660 1E12			@exit
  2661 					.ifdef @new
  2662 					lda <@VarData
  2663 					sta :ztmp
  2664 					lda >@VarData
  2665 					ldy #@VarDataSize-1
  2666 					jmp @FreeMem
  2667 					els
  2668 1E12 60				rts						; ret
  2669 					eif
  2670 				.endl
  2671
  2672 1E13			.local	SETLEVEL03					; PROCEDURE
  2673
  2674 				; optimize OK (levels.inc), line = 68
  2675
  2676 1E13 A9 01			lda #$01
  2677 1E15 8D 13 2D			sta SETPLAYER.ISALIVE
  2678 1E18 A9 62			lda #$62
  2679 1E1A 8D 12 2D			sta SETPLAYER.COLOUR
  2680 1E1D A9 51			lda #$51
  2681 1E1F 8D 11 2D			sta SETPLAYER.HEAD
  2682 1E22 A9 00			lda #$00
  2683 1E24 8D 10 2D			sta SETPLAYER.BRAIN
  2684 1E27 A9 08			lda #$08
  2685 1E29 8D 0F 2D			sta SETPLAYER.DIR
  2686 1E2C A9 0C			lda #$0C
  2687 1E2E 8D 0E 2D			sta SETPLAYER.Y
  2688 1E31 A9 0A			lda #$0A
  2689 1E33 8D 0D 2D			sta SETPLAYER.X
  2690 1E36 AD B1 2C			lda PLAYER1
  2691 1E39 8D 0B 2D			sta SETPLAYER.P
  2692 1E3C AD B2 2C			lda PLAYER1+1
  2693 1E3F 8D 0C 2D			sta SETPLAYER.P+1
  2694 1E42 20 23 14			jsr SETPLAYER
  2695
  2696 				; optimize OK (levels.inc), line = 69
  2697
  2698 1E45 A9 01			lda #$01
  2699 1E47 8D 13 2D			sta SETPLAYER.ISALIVE
  2700 1E4A A9 5D			lda #$5D
  2701 1E4C 8D 12 2D			sta SETPLAYER.COLOUR
  2702 1E4F A9 51			lda #$51
  2703 1E51 8D 11 2D			sta SETPLAYER.HEAD
  2704 1E54 A9 02			lda #$02
  2705 1E56 8D 10 2D			sta SETPLAYER.BRAIN
  2706 1E59 A9 04			lda #$04
  2707 1E5B 8D 0F 2D			sta SETPLAYER.DIR
  2708 1E5E A9 0C			lda #$0C
  2709 1E60 8D 0E 2D			sta SETPLAYER.Y
  2710 1E63 A9 1E			lda #$1E
  2711 1E65 8D 0D 2D			sta SETPLAYER.X
  2712 1E68 AD B3 2C			lda PLAYER2
  2713 1E6B 8D 0B 2D			sta SETPLAYER.P
  2714 1E6E AD B4 2C			lda PLAYER2+1
  2715 1E71 8D 0C 2D			sta SETPLAYER.P+1
  2716 1E74 20 23 14			jsr SETPLAYER
  2717
  2718 				; optimize OK (levels.inc), line = 70
  2719
  2720 1E77 A9 00			lda #$00
  2721 1E79 8D 13 2D			sta SETPLAYER.ISALIVE
  2722 1E7C A9 71			lda #$71
  2723 1E7E 8D 12 2D			sta SETPLAYER.COLOUR
  2724 1E81 A9 51			lda #$51
  2725 1E83 8D 11 2D			sta SETPLAYER.HEAD
  2726 1E86 A9 03			lda #$03
  2727 1E88 8D 10 2D			sta SETPLAYER.BRAIN
  2728 1E8B A9 02			lda #$02
  2729 1E8D 8D 0F 2D			sta SETPLAYER.DIR
  2730 1E90 A9 04			lda #$04
  2731 1E92 8D 0E 2D			sta SETPLAYER.Y
  2732 1E95 A9 14			lda #$14
  2733 1E97 8D 0D 2D			sta SETPLAYER.X
  2734 1E9A AD B5 2C			lda PLAYER3
  2735 1E9D 8D 0B 2D			sta SETPLAYER.P
  2736 1EA0 AD B6 2C			lda PLAYER3+1
  2737 1EA3 8D 0C 2D			sta SETPLAYER.P+1
  2738 1EA6 20 23 14			jsr SETPLAYER
  2739
  2740 				; optimize OK (levels.inc), line = 71
  2741
  2742 1EA9 A9 00			lda #$00
  2743 1EAB 8D 13 2D			sta SETPLAYER.ISALIVE
  2744 1EAE A9 55			lda #$55
  2745 1EB0 8D 12 2D			sta SETPLAYER.COLOUR
  2746 1EB3 A9 51			lda #$51
  2747 1EB5 8D 11 2D			sta SETPLAYER.HEAD
  2748 1EB8 A9 03			lda #$03
  2749 1EBA 8D 10 2D			sta SETPLAYER.BRAIN
  2750 1EBD A9 01			lda #$01
  2751 1EBF 8D 0F 2D			sta SETPLAYER.DIR
  2752 1EC2 A9 12			lda #$12
  2753 1EC4 8D 0E 2D			sta SETPLAYER.Y
  2754 1EC7 A9 14			lda #$14
  2755 1EC9 8D 0D 2D			sta SETPLAYER.X
  2756 1ECC AD B7 2C			lda PLAYER4
  2757 1ECF 8D 0B 2D			sta SETPLAYER.P
  2758 1ED2 AD B8 2C			lda PLAYER4+1
  2759 1ED5 8D 0C 2D			sta SETPLAYER.P+1
  2760 1ED8 20 23 14			jsr SETPLAYER
  2761
  2762 				; optimize FAIL (1, levels.inc), line = 73
  2763
  2764 1EDB E8				inx
  2765 1EDC A9 00 95 18			mva #$00 :STACKORIGIN,x
  2766 1EE0 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2767 1EE2 A9 06			lda #$06
  2768 1EE4 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2769 1EE7 A9 0A			lda #$0A
  2770 1EE9 8D 07 2D			sta CALCOBSTACLEADDR.X
  2771 1EEC 20 F3 12			jsr CALCOBSTACLEADDR
  2772 1EEF B4 17			ldy :STACKORIGIN-1,x
  2773 1EF1 B5 18			lda :STACKORIGIN,x
  2774 1EF3 99 EE 2C			sta adr.OBSTACLES,y
  2775 1EF6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2776 1EF8 99 EF 2C			sta adr.OBSTACLES+1,y
  2777 1EFB CA				dex
  2778
  2779 				; optimize FAIL (1, levels.inc), line = 74
  2780
  2781 1EFC A9 02 95 18			mva #$02 :STACKORIGIN,x
  2782 1F00 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2783 1F04 A9 06			lda #$06
  2784 1F06 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2785 1F09 A9 1E			lda #$1E
  2786 1F0B 8D 07 2D			sta CALCOBSTACLEADDR.X
  2787 1F0E 20 F3 12			jsr CALCOBSTACLEADDR
  2788 1F11 B4 17			ldy :STACKORIGIN-1,x
  2789 1F13 B5 18			lda :STACKORIGIN,x
  2790 1F15 99 EE 2C			sta adr.OBSTACLES,y
  2791 1F18 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2792 1F1A 99 EF 2C			sta adr.OBSTACLES+1,y
  2793 1F1D CA				dex
  2794
  2795 				; optimize FAIL (1, levels.inc), line = 75
  2796
  2797 1F1E A9 04 95 18			mva #$04 :STACKORIGIN,x
  2798 1F22 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2799 1F26 A9 12			lda #$12
  2800 1F28 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2801 1F2B A9 0A			lda #$0A
  2802 1F2D 8D 07 2D			sta CALCOBSTACLEADDR.X
  2803 1F30 20 F3 12			jsr CALCOBSTACLEADDR
  2804 1F33 B4 17			ldy :STACKORIGIN-1,x
  2805 1F35 B5 18			lda :STACKORIGIN,x
  2806 1F37 99 EE 2C			sta adr.OBSTACLES,y
  2807 1F3A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2808 1F3C 99 EF 2C			sta adr.OBSTACLES+1,y
  2809 1F3F CA				dex
  2810
  2811 				; optimize FAIL (1, levels.inc), line = 76
  2812
  2813 1F40 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2814 1F44 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2815 1F48 A9 12			lda #$12
  2816 1F4A 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2817 1F4D A9 1E			lda #$1E
  2818 1F4F 8D 07 2D			sta CALCOBSTACLEADDR.X
  2819 1F52 20 F3 12			jsr CALCOBSTACLEADDR
  2820 1F55 B4 17			ldy :STACKORIGIN-1,x
  2821 1F57 B5 18			lda :STACKORIGIN,x
  2822 1F59 99 EE 2C			sta adr.OBSTACLES,y
  2823 1F5C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2824 1F5E 99 EF 2C			sta adr.OBSTACLES+1,y
  2825 1F61 CA				dex
  2826
  2827 				; optimize FAIL (1, levels.inc), line = 77
  2828
  2829 1F62 A9 08 95 18			mva #$08 :STACKORIGIN,x
  2830 1F66 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2831 1F6A A9 0C			lda #$0C
  2832 1F6C 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2833 1F6F A9 01			lda #$01
  2834 1F71 8D 07 2D			sta CALCOBSTACLEADDR.X
  2835 1F74 20 F3 12			jsr CALCOBSTACLEADDR
  2836 1F77 B4 17			ldy :STACKORIGIN-1,x
  2837 1F79 B5 18			lda :STACKORIGIN,x
  2838 1F7B 99 EE 2C			sta adr.OBSTACLES,y
  2839 1F7E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2840 1F80 99 EF 2C			sta adr.OBSTACLES+1,y
  2841 1F83 CA				dex
  2842
  2843 				; optimize FAIL (1, levels.inc), line = 78
  2844
  2845 1F84 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2846 1F88 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2847 1F8C A9 02			lda #$02
  2848 1F8E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2849 1F91 A9 14			lda #$14
  2850 1F93 8D 07 2D			sta CALCOBSTACLEADDR.X
  2851 1F96 20 F3 12			jsr CALCOBSTACLEADDR
  2852 1F99 B4 17			ldy :STACKORIGIN-1,x
  2853 1F9B B5 18			lda :STACKORIGIN,x
  2854 1F9D 99 EE 2C			sta adr.OBSTACLES,y
  2855 1FA0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2856 1FA2 99 EF 2C			sta adr.OBSTACLES+1,y
  2857 1FA5 CA				dex
  2858
  2859 				; optimize FAIL (1, levels.inc), line = 79
  2860
  2861 1FA6 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2862 1FAA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2863 1FAE A9 16			lda #$16
  2864 1FB0 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2865 1FB3 A9 14			lda #$14
  2866 1FB5 8D 07 2D			sta CALCOBSTACLEADDR.X
  2867 1FB8 20 F3 12			jsr CALCOBSTACLEADDR
  2868 1FBB B4 17			ldy :STACKORIGIN-1,x
  2869 1FBD B5 18			lda :STACKORIGIN,x
  2870 1FBF 99 EE 2C			sta adr.OBSTACLES,y
  2871 1FC2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2872 1FC4 99 EF 2C			sta adr.OBSTACLES+1,y
  2873 1FC7 CA				dex
  2874 1FC8 CA				dex
  2875
  2876 				; optimize OK (levels.inc), line = 80
  2877
  2878 1FC9 A9 7E			lda #$7E
  2879 1FCB 8D FC 2C			sta adr.OBSTACLES+$0E
  2880 1FCE A9 00			lda #$00
  2881 1FD0 8D FD 2C			sta adr.OBSTACLES+1+$0E
  2882
  2883 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 82
  2884
  2885 1FD3 20 16 13			jsr SAVEOBSTACLES
  2886 1FD6			@exit
  2887 					.ifdef @new
  2888 					lda <@VarData
  2889 					sta :ztmp
  2890 					lda >@VarData
  2891 					ldy #@VarDataSize-1
  2892 					jmp @FreeMem
  2893 					els
  2894 1FD6 60				rts						; ret
  2895 					eif
  2896 				.endl
  2897
  2898 1FD7			.local	SETLEVEL04					; PROCEDURE
  2899
  2900 				; optimize OK (levels.inc), line = 89
  2901
  2902 1FD7 A9 01			lda #$01
  2903 1FD9 8D 13 2D			sta SETPLAYER.ISALIVE
  2904 1FDC A9 62			lda #$62
  2905 1FDE 8D 12 2D			sta SETPLAYER.COLOUR
  2906 1FE1 A9 51			lda #$51
  2907 1FE3 8D 11 2D			sta SETPLAYER.HEAD
  2908 1FE6 A9 00			lda #$00
  2909 1FE8 8D 10 2D			sta SETPLAYER.BRAIN
  2910 1FEB A9 04			lda #$04
  2911 1FED 8D 0F 2D			sta SETPLAYER.DIR
  2912 1FF0 A9 0C			lda #$0C
  2913 1FF2 8D 0E 2D			sta SETPLAYER.Y
  2914 1FF5 A9 12			lda #$12
  2915 1FF7 8D 0D 2D			sta SETPLAYER.X
  2916 1FFA AD B1 2C			lda PLAYER1
  2917 1FFD 8D 0B 2D			sta SETPLAYER.P
  2918 2000 AD B2 2C			lda PLAYER1+1
  2919 2003 8D 0C 2D			sta SETPLAYER.P+1
  2920 2006 20 23 14			jsr SETPLAYER
  2921
  2922 				; optimize OK (levels.inc), line = 90
  2923
  2924 2009 A9 01			lda #$01
  2925 200B 8D 13 2D			sta SETPLAYER.ISALIVE
  2926 200E A9 5D			lda #$5D
  2927 2010 8D 12 2D			sta SETPLAYER.COLOUR
  2928 2013 A9 51			lda #$51
  2929 2015 8D 11 2D			sta SETPLAYER.HEAD
  2930 2018 A9 04			lda #$04
  2931 201A 8D 10 2D			sta SETPLAYER.BRAIN
  2932 201D A9 08			lda #$08
  2933 201F 8D 0F 2D			sta SETPLAYER.DIR
  2934 2022 A9 0C			lda #$0C
  2935 2024 8D 0E 2D			sta SETPLAYER.Y
  2936 2027 A9 16			lda #$16
  2937 2029 8D 0D 2D			sta SETPLAYER.X
  2938 202C AD B3 2C			lda PLAYER2
  2939 202F 8D 0B 2D			sta SETPLAYER.P
  2940 2032 AD B4 2C			lda PLAYER2+1
  2941 2035 8D 0C 2D			sta SETPLAYER.P+1
  2942 2038 20 23 14			jsr SETPLAYER
  2943
  2944 				; optimize OK (levels.inc), line = 91
  2945
  2946 203B A9 00			lda #$00
  2947 203D 8D 13 2D			sta SETPLAYER.ISALIVE
  2948 2040 A9 71			lda #$71
  2949 2042 8D 12 2D			sta SETPLAYER.COLOUR
  2950 2045 A9 51			lda #$51
  2951 2047 8D 11 2D			sta SETPLAYER.HEAD
  2952 204A A9 03			lda #$03
  2953 204C 8D 10 2D			sta SETPLAYER.BRAIN
  2954 204F A9 02			lda #$02
  2955 2051 8D 0F 2D			sta SETPLAYER.DIR
  2956 2054 A9 04			lda #$04
  2957 2056 8D 0E 2D			sta SETPLAYER.Y
  2958 2059 A9 14			lda #$14
  2959 205B 8D 0D 2D			sta SETPLAYER.X
  2960 205E AD B5 2C			lda PLAYER3
  2961 2061 8D 0B 2D			sta SETPLAYER.P
  2962 2064 AD B6 2C			lda PLAYER3+1
  2963 2067 8D 0C 2D			sta SETPLAYER.P+1
  2964 206A 20 23 14			jsr SETPLAYER
  2965
  2966 				; optimize OK (levels.inc), line = 92
  2967
  2968 206D A9 00			lda #$00
  2969 206F 8D 13 2D			sta SETPLAYER.ISALIVE
  2970 2072 A9 55			lda #$55
  2971 2074 8D 12 2D			sta SETPLAYER.COLOUR
  2972 2077 A9 51			lda #$51
  2973 2079 8D 11 2D			sta SETPLAYER.HEAD
  2974 207C A9 03			lda #$03
  2975 207E 8D 10 2D			sta SETPLAYER.BRAIN
  2976 2081 A9 01			lda #$01
  2977 2083 8D 0F 2D			sta SETPLAYER.DIR
  2978 2086 A9 12			lda #$12
  2979 2088 8D 0E 2D			sta SETPLAYER.Y
  2980 208B A9 14			lda #$14
  2981 208D 8D 0D 2D			sta SETPLAYER.X
  2982 2090 AD B7 2C			lda PLAYER4
  2983 2093 8D 0B 2D			sta SETPLAYER.P
  2984 2096 AD B8 2C			lda PLAYER4+1
  2985 2099 8D 0C 2D			sta SETPLAYER.P+1
  2986 209C 20 23 14			jsr SETPLAYER
  2987
  2988 				; optimize FAIL (1, levels.inc), line = 94
  2989
  2990 209F E8				inx
  2991 20A0 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2992 20A4 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2993 20A6 A9 06			lda #$06
  2994 20A8 8D 08 2D			sta CALCOBSTACLEADDR.Y
  2995 20AB A9 0A			lda #$0A
  2996 20AD 8D 07 2D			sta CALCOBSTACLEADDR.X
  2997 20B0 20 F3 12			jsr CALCOBSTACLEADDR
  2998 20B3 B4 17			ldy :STACKORIGIN-1,x
  2999 20B5 B5 18			lda :STACKORIGIN,x
  3000 20B7 99 EE 2C			sta adr.OBSTACLES,y
  3001 20BA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3002 20BC 99 EF 2C			sta adr.OBSTACLES+1,y
  3003 20BF CA				dex
  3004
  3005 				; optimize FAIL (1, levels.inc), line = 95
  3006
  3007 20C0 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3008 20C4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3009 20C8 A9 06			lda #$06
  3010 20CA 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3011 20CD A9 1E			lda #$1E
  3012 20CF 8D 07 2D			sta CALCOBSTACLEADDR.X
  3013 20D2 20 F3 12			jsr CALCOBSTACLEADDR
  3014 20D5 B4 17			ldy :STACKORIGIN-1,x
  3015 20D7 B5 18			lda :STACKORIGIN,x
  3016 20D9 99 EE 2C			sta adr.OBSTACLES,y
  3017 20DC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3018 20DE 99 EF 2C			sta adr.OBSTACLES+1,y
  3019 20E1 CA				dex
  3020
  3021 				; optimize FAIL (1, levels.inc), line = 96
  3022
  3023 20E2 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3024 20E6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3025 20EA A9 12			lda #$12
  3026 20EC 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3027 20EF A9 0A			lda #$0A
  3028 20F1 8D 07 2D			sta CALCOBSTACLEADDR.X
  3029 20F4 20 F3 12			jsr CALCOBSTACLEADDR
  3030 20F7 B4 17			ldy :STACKORIGIN-1,x
  3031 20F9 B5 18			lda :STACKORIGIN,x
  3032 20FB 99 EE 2C			sta adr.OBSTACLES,y
  3033 20FE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3034 2100 99 EF 2C			sta adr.OBSTACLES+1,y
  3035 2103 CA				dex
  3036
  3037 				; optimize FAIL (1, levels.inc), line = 97
  3038
  3039 2104 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3040 2108 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3041 210C A9 12			lda #$12
  3042 210E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3043 2111 A9 1E			lda #$1E
  3044 2113 8D 07 2D			sta CALCOBSTACLEADDR.X
  3045 2116 20 F3 12			jsr CALCOBSTACLEADDR
  3046 2119 B4 17			ldy :STACKORIGIN-1,x
  3047 211B B5 18			lda :STACKORIGIN,x
  3048 211D 99 EE 2C			sta adr.OBSTACLES,y
  3049 2120 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3050 2122 99 EF 2C			sta adr.OBSTACLES+1,y
  3051 2125 CA				dex
  3052
  3053 				; optimize FAIL (1, levels.inc), line = 98
  3054
  3055 2126 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3056 212A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3057 212E A9 0C			lda #$0C
  3058 2130 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3059 2133 A9 01			lda #$01
  3060 2135 8D 07 2D			sta CALCOBSTACLEADDR.X
  3061 2138 20 F3 12			jsr CALCOBSTACLEADDR
  3062 213B B4 17			ldy :STACKORIGIN-1,x
  3063 213D B5 18			lda :STACKORIGIN,x
  3064 213F 99 EE 2C			sta adr.OBSTACLES,y
  3065 2142 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3066 2144 99 EF 2C			sta adr.OBSTACLES+1,y
  3067 2147 CA				dex
  3068
  3069 				; optimize FAIL (1, levels.inc), line = 99
  3070
  3071 2148 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3072 214C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3073 2150 A9 02			lda #$02
  3074 2152 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3075 2155 A9 14			lda #$14
  3076 2157 8D 07 2D			sta CALCOBSTACLEADDR.X
  3077 215A 20 F3 12			jsr CALCOBSTACLEADDR
  3078 215D B4 17			ldy :STACKORIGIN-1,x
  3079 215F B5 18			lda :STACKORIGIN,x
  3080 2161 99 EE 2C			sta adr.OBSTACLES,y
  3081 2164 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3082 2166 99 EF 2C			sta adr.OBSTACLES+1,y
  3083 2169 CA				dex
  3084
  3085 				; optimize FAIL (1, levels.inc), line = 100
  3086
  3087 216A A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3088 216E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3089 2172 A9 16			lda #$16
  3090 2174 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3091 2177 A9 14			lda #$14
  3092 2179 8D 07 2D			sta CALCOBSTACLEADDR.X
  3093 217C 20 F3 12			jsr CALCOBSTACLEADDR
  3094 217F B4 17			ldy :STACKORIGIN-1,x
  3095 2181 B5 18			lda :STACKORIGIN,x
  3096 2183 99 EE 2C			sta adr.OBSTACLES,y
  3097 2186 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3098 2188 99 EF 2C			sta adr.OBSTACLES+1,y
  3099 218B CA				dex
  3100
  3101 				; optimize FAIL (1, levels.inc), line = 101
  3102
  3103 218C A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3104 2190 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3105 2194 A9 0C			lda #$0C
  3106 2196 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3107 2199 A9 14			lda #$14
  3108 219B 8D 07 2D			sta CALCOBSTACLEADDR.X
  3109 219E 20 F3 12			jsr CALCOBSTACLEADDR
  3110 21A1 B4 17			ldy :STACKORIGIN-1,x
  3111 21A3 B5 18			lda :STACKORIGIN,x
  3112 21A5 99 EE 2C			sta adr.OBSTACLES,y
  3113 21A8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3114 21AA 99 EF 2C			sta adr.OBSTACLES+1,y
  3115 21AD CA				dex
  3116 21AE CA				dex
  3117
  3118 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 103
  3119
  3120 21AF 20 16 13			jsr SAVEOBSTACLES
  3121 21B2			@exit
  3122 					.ifdef @new
  3123 					lda <@VarData
  3124 					sta :ztmp
  3125 					lda >@VarData
  3126 					ldy #@VarDataSize-1
  3127 					jmp @FreeMem
  3128 					els
  3129 21B2 60				rts						; ret
  3130 					eif
  3131 				.endl
  3132
  3133 21B3			.local	SETLEVEL05					; PROCEDURE
  3134
  3135 				; optimize OK (levels.inc), line = 110
  3136
  3137 21B3 A9 01			lda #$01
  3138 21B5 8D 13 2D			sta SETPLAYER.ISALIVE
  3139 21B8 A9 62			lda #$62
  3140 21BA 8D 12 2D			sta SETPLAYER.COLOUR
  3141 21BD A9 51			lda #$51
  3142 21BF 8D 11 2D			sta SETPLAYER.HEAD
  3143 21C2 A9 00			lda #$00
  3144 21C4 8D 10 2D			sta SETPLAYER.BRAIN
  3145 21C7 A9 08			lda #$08
  3146 21C9 8D 0F 2D			sta SETPLAYER.DIR
  3147 21CC A9 0C			lda #$0C
  3148 21CE 8D 0E 2D			sta SETPLAYER.Y
  3149 21D1 A9 0A			lda #$0A
  3150 21D3 8D 0D 2D			sta SETPLAYER.X
  3151 21D6 AD B1 2C			lda PLAYER1
  3152 21D9 8D 0B 2D			sta SETPLAYER.P
  3153 21DC AD B2 2C			lda PLAYER1+1
  3154 21DF 8D 0C 2D			sta SETPLAYER.P+1
  3155 21E2 20 23 14			jsr SETPLAYER
  3156
  3157 				; optimize OK (levels.inc), line = 111
  3158
  3159 21E5 A9 01			lda #$01
  3160 21E7 8D 13 2D			sta SETPLAYER.ISALIVE
  3161 21EA A9 5D			lda #$5D
  3162 21EC 8D 12 2D			sta SETPLAYER.COLOUR
  3163 21EF A9 51			lda #$51
  3164 21F1 8D 11 2D			sta SETPLAYER.HEAD
  3165 21F4 A9 04			lda #$04
  3166 21F6 8D 10 2D			sta SETPLAYER.BRAIN
  3167 21F9 8D 0F 2D			sta SETPLAYER.DIR
  3168 21FC A9 0C			lda #$0C
  3169 21FE 8D 0E 2D			sta SETPLAYER.Y
  3170 2201 A9 1E			lda #$1E
  3171 2203 8D 0D 2D			sta SETPLAYER.X
  3172 2206 AD B3 2C			lda PLAYER2
  3173 2209 8D 0B 2D			sta SETPLAYER.P
  3174 220C AD B4 2C			lda PLAYER2+1
  3175 220F 8D 0C 2D			sta SETPLAYER.P+1
  3176 2212 20 23 14			jsr SETPLAYER
  3177
  3178 				; optimize OK (levels.inc), line = 112
  3179
  3180 2215 A9 01			lda #$01
  3181 2217 8D 13 2D			sta SETPLAYER.ISALIVE
  3182 221A A9 71			lda #$71
  3183 221C 8D 12 2D			sta SETPLAYER.COLOUR
  3184 221F A9 51			lda #$51
  3185 2221 8D 11 2D			sta SETPLAYER.HEAD
  3186 2224 A9 03			lda #$03
  3187 2226 8D 10 2D			sta SETPLAYER.BRAIN
  3188 2229 A9 02			lda #$02
  3189 222B 8D 0F 2D			sta SETPLAYER.DIR
  3190 222E A9 04			lda #$04
  3191 2230 8D 0E 2D			sta SETPLAYER.Y
  3192 2233 A9 14			lda #$14
  3193 2235 8D 0D 2D			sta SETPLAYER.X
  3194 2238 AD B5 2C			lda PLAYER3
  3195 223B 8D 0B 2D			sta SETPLAYER.P
  3196 223E AD B6 2C			lda PLAYER3+1
  3197 2241 8D 0C 2D			sta SETPLAYER.P+1
  3198 2244 20 23 14			jsr SETPLAYER
  3199
  3200 				; optimize OK (levels.inc), line = 113
  3201
  3202 2247 A9 01			lda #$01
  3203 2249 8D 13 2D			sta SETPLAYER.ISALIVE
  3204 224C A9 55			lda #$55
  3205 224E 8D 12 2D			sta SETPLAYER.COLOUR
  3206 2251 A9 51			lda #$51
  3207 2253 8D 11 2D			sta SETPLAYER.HEAD
  3208 2256 A9 02			lda #$02
  3209 2258 8D 10 2D			sta SETPLAYER.BRAIN
  3210 225B A9 01			lda #$01
  3211 225D 8D 0F 2D			sta SETPLAYER.DIR
  3212 2260 A9 12			lda #$12
  3213 2262 8D 0E 2D			sta SETPLAYER.Y
  3214 2265 A9 14			lda #$14
  3215 2267 8D 0D 2D			sta SETPLAYER.X
  3216 226A AD B7 2C			lda PLAYER4
  3217 226D 8D 0B 2D			sta SETPLAYER.P
  3218 2270 AD B8 2C			lda PLAYER4+1
  3219 2273 8D 0C 2D			sta SETPLAYER.P+1
  3220 2276 20 23 14			jsr SETPLAYER
  3221
  3222 				; optimize FAIL (1, levels.inc), line = 115
  3223
  3224 2279 E8				inx
  3225 227A A9 00 95 18			mva #$00 :STACKORIGIN,x
  3226 227E 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3227 2280 A9 06			lda #$06
  3228 2282 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3229 2285 A9 0A			lda #$0A
  3230 2287 8D 07 2D			sta CALCOBSTACLEADDR.X
  3231 228A 20 F3 12			jsr CALCOBSTACLEADDR
  3232 228D B4 17			ldy :STACKORIGIN-1,x
  3233 228F B5 18			lda :STACKORIGIN,x
  3234 2291 99 EE 2C			sta adr.OBSTACLES,y
  3235 2294 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3236 2296 99 EF 2C			sta adr.OBSTACLES+1,y
  3237 2299 CA				dex
  3238
  3239 				; optimize FAIL (1, levels.inc), line = 116
  3240
  3241 229A A9 02 95 18			mva #$02 :STACKORIGIN,x
  3242 229E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3243 22A2 A9 06			lda #$06
  3244 22A4 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3245 22A7 A9 1E			lda #$1E
  3246 22A9 8D 07 2D			sta CALCOBSTACLEADDR.X
  3247 22AC 20 F3 12			jsr CALCOBSTACLEADDR
  3248 22AF B4 17			ldy :STACKORIGIN-1,x
  3249 22B1 B5 18			lda :STACKORIGIN,x
  3250 22B3 99 EE 2C			sta adr.OBSTACLES,y
  3251 22B6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3252 22B8 99 EF 2C			sta adr.OBSTACLES+1,y
  3253 22BB CA				dex
  3254
  3255 				; optimize FAIL (1, levels.inc), line = 117
  3256
  3257 22BC A9 04 95 18			mva #$04 :STACKORIGIN,x
  3258 22C0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3259 22C4 A9 12			lda #$12
  3260 22C6 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3261 22C9 A9 0A			lda #$0A
  3262 22CB 8D 07 2D			sta CALCOBSTACLEADDR.X
  3263 22CE 20 F3 12			jsr CALCOBSTACLEADDR
  3264 22D1 B4 17			ldy :STACKORIGIN-1,x
  3265 22D3 B5 18			lda :STACKORIGIN,x
  3266 22D5 99 EE 2C			sta adr.OBSTACLES,y
  3267 22D8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3268 22DA 99 EF 2C			sta adr.OBSTACLES+1,y
  3269 22DD CA				dex
  3270
  3271 				; optimize FAIL (1, levels.inc), line = 118
  3272
  3273 22DE A9 06 95 18			mva #$06 :STACKORIGIN,x
  3274 22E2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3275 22E6 A9 12			lda #$12
  3276 22E8 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3277 22EB A9 1E			lda #$1E
  3278 22ED 8D 07 2D			sta CALCOBSTACLEADDR.X
  3279 22F0 20 F3 12			jsr CALCOBSTACLEADDR
  3280 22F3 B4 17			ldy :STACKORIGIN-1,x
  3281 22F5 B5 18			lda :STACKORIGIN,x
  3282 22F7 99 EE 2C			sta adr.OBSTACLES,y
  3283 22FA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3284 22FC 99 EF 2C			sta adr.OBSTACLES+1,y
  3285 22FF CA				dex
  3286
  3287 				; optimize FAIL (1, levels.inc), line = 119
  3288
  3289 2300 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3290 2304 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3291 2308 A9 0C			lda #$0C
  3292 230A 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3293 230D A9 01			lda #$01
  3294 230F 8D 07 2D			sta CALCOBSTACLEADDR.X
  3295 2312 20 F3 12			jsr CALCOBSTACLEADDR
  3296 2315 B4 17			ldy :STACKORIGIN-1,x
  3297 2317 B5 18			lda :STACKORIGIN,x
  3298 2319 99 EE 2C			sta adr.OBSTACLES,y
  3299 231C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3300 231E 99 EF 2C			sta adr.OBSTACLES+1,y
  3301 2321 CA				dex
  3302
  3303 				; optimize FAIL (1, levels.inc), line = 120
  3304
  3305 2322 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3306 2326 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3307 232A A9 02			lda #$02
  3308 232C 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3309 232F A9 14			lda #$14
  3310 2331 8D 07 2D			sta CALCOBSTACLEADDR.X
  3311 2334 20 F3 12			jsr CALCOBSTACLEADDR
  3312 2337 B4 17			ldy :STACKORIGIN-1,x
  3313 2339 B5 18			lda :STACKORIGIN,x
  3314 233B 99 EE 2C			sta adr.OBSTACLES,y
  3315 233E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3316 2340 99 EF 2C			sta adr.OBSTACLES+1,y
  3317 2343 CA				dex
  3318
  3319 				; optimize FAIL (1, levels.inc), line = 121
  3320
  3321 2344 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3322 2348 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3323 234C A9 16			lda #$16
  3324 234E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3325 2351 A9 14			lda #$14
  3326 2353 8D 07 2D			sta CALCOBSTACLEADDR.X
  3327 2356 20 F3 12			jsr CALCOBSTACLEADDR
  3328 2359 B4 17			ldy :STACKORIGIN-1,x
  3329 235B B5 18			lda :STACKORIGIN,x
  3330 235D 99 EE 2C			sta adr.OBSTACLES,y
  3331 2360 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3332 2362 99 EF 2C			sta adr.OBSTACLES+1,y
  3333 2365 CA				dex
  3334 2366 CA				dex
  3335
  3336 				; optimize OK (levels.inc), line = 122
  3337
  3338 2367 A9 7E			lda #$7E
  3339 2369 8D FC 2C			sta adr.OBSTACLES+$0E
  3340 236C A9 00			lda #$00
  3341 236E 8D FD 2C			sta adr.OBSTACLES+1+$0E
  3342
  3343 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 124
  3344
  3345 2371 20 16 13			jsr SAVEOBSTACLES
  3346 2374			@exit
  3347 					.ifdef @new
  3348 					lda <@VarData
  3349 					sta :ztmp
  3350 					lda >@VarData
  3351 					ldy #@VarDataSize-1
  3352 					jmp @FreeMem
  3353 					els
  3354 2374 60				rts						; ret
  3355 					eif
  3356 				.endl
  3357
  3358 2375			.local	SETLEVEL06					; PROCEDURE
  3359
  3360 				; optimize OK (levels.inc), line = 131
  3361
  3362 2375 A9 01			lda #$01
  3363 2377 8D 13 2D			sta SETPLAYER.ISALIVE
  3364 237A A9 62			lda #$62
  3365 237C 8D 12 2D			sta SETPLAYER.COLOUR
  3366 237F A9 51			lda #$51
  3367 2381 8D 11 2D			sta SETPLAYER.HEAD
  3368 2384 A9 00			lda #$00
  3369 2386 8D 10 2D			sta SETPLAYER.BRAIN
  3370 2389 A9 04			lda #$04
  3371 238B 8D 0F 2D			sta SETPLAYER.DIR
  3372 238E A9 0C			lda #$0C
  3373 2390 8D 0E 2D			sta SETPLAYER.Y
  3374 2393 A9 12			lda #$12
  3375 2395 8D 0D 2D			sta SETPLAYER.X
  3376 2398 AD B1 2C			lda PLAYER1
  3377 239B 8D 0B 2D			sta SETPLAYER.P
  3378 239E AD B2 2C			lda PLAYER1+1
  3379 23A1 8D 0C 2D			sta SETPLAYER.P+1
  3380 23A4 20 23 14			jsr SETPLAYER
  3381
  3382 				; optimize OK (levels.inc), line = 132
  3383
  3384 23A7 A9 01			lda #$01
  3385 23A9 8D 13 2D			sta SETPLAYER.ISALIVE
  3386 23AC A9 5D			lda #$5D
  3387 23AE 8D 12 2D			sta SETPLAYER.COLOUR
  3388 23B1 A9 51			lda #$51
  3389 23B3 8D 11 2D			sta SETPLAYER.HEAD
  3390 23B6 A9 02			lda #$02
  3391 23B8 8D 10 2D			sta SETPLAYER.BRAIN
  3392 23BB A9 08			lda #$08
  3393 23BD 8D 0F 2D			sta SETPLAYER.DIR
  3394 23C0 A9 0C			lda #$0C
  3395 23C2 8D 0E 2D			sta SETPLAYER.Y
  3396 23C5 A9 16			lda #$16
  3397 23C7 8D 0D 2D			sta SETPLAYER.X
  3398 23CA AD B3 2C			lda PLAYER2
  3399 23CD 8D 0B 2D			sta SETPLAYER.P
  3400 23D0 AD B4 2C			lda PLAYER2+1
  3401 23D3 8D 0C 2D			sta SETPLAYER.P+1
  3402 23D6 20 23 14			jsr SETPLAYER
  3403
  3404 				; optimize OK (levels.inc), line = 133
  3405
  3406 23D9 A9 01			lda #$01
  3407 23DB 8D 13 2D			sta SETPLAYER.ISALIVE
  3408 23DE A9 71			lda #$71
  3409 23E0 8D 12 2D			sta SETPLAYER.COLOUR
  3410 23E3 A9 51			lda #$51
  3411 23E5 8D 11 2D			sta SETPLAYER.HEAD
  3412 23E8 A9 02			lda #$02
  3413 23EA 8D 10 2D			sta SETPLAYER.BRAIN
  3414 23ED 8D 0F 2D			sta SETPLAYER.DIR
  3415 23F0 A9 06			lda #$06
  3416 23F2 8D 0E 2D			sta SETPLAYER.Y
  3417 23F5 8D 0D 2D			sta SETPLAYER.X
  3418 23F8 AD B5 2C			lda PLAYER3
  3419 23FB 8D 0B 2D			sta SETPLAYER.P
  3420 23FE AD B6 2C			lda PLAYER3+1
  3421 2401 8D 0C 2D			sta SETPLAYER.P+1
  3422 2404 20 23 14			jsr SETPLAYER
  3423
  3424 				; optimize OK (levels.inc), line = 134
  3425
  3426 2407 A9 01			lda #$01
  3427 2409 8D 13 2D			sta SETPLAYER.ISALIVE
  3428 240C A9 55			lda #$55
  3429 240E 8D 12 2D			sta SETPLAYER.COLOUR
  3430 2411 A9 51			lda #$51
  3431 2413 8D 11 2D			sta SETPLAYER.HEAD
  3432 2416 A9 03			lda #$03
  3433 2418 8D 10 2D			sta SETPLAYER.BRAIN
  3434 241B A9 08			lda #$08
  3435 241D 8D 0F 2D			sta SETPLAYER.DIR
  3436 2420 A9 12			lda #$12
  3437 2422 8D 0E 2D			sta SETPLAYER.Y
  3438 2425 A9 24			lda #$24
  3439 2427 8D 0D 2D			sta SETPLAYER.X
  3440 242A AD B7 2C			lda PLAYER4
  3441 242D 8D 0B 2D			sta SETPLAYER.P
  3442 2430 AD B8 2C			lda PLAYER4+1
  3443 2433 8D 0C 2D			sta SETPLAYER.P+1
  3444 2436 20 23 14			jsr SETPLAYER
  3445
  3446 				; optimize FAIL (1, levels.inc), line = 136
  3447
  3448 2439 E8				inx
  3449 243A A9 00 95 18			mva #$00 :STACKORIGIN,x
  3450 243E 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3451 2440 A9 06			lda #$06
  3452 2442 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3453 2445 A9 0A			lda #$0A
  3454 2447 8D 07 2D			sta CALCOBSTACLEADDR.X
  3455 244A 20 F3 12			jsr CALCOBSTACLEADDR
  3456 244D B4 17			ldy :STACKORIGIN-1,x
  3457 244F B5 18			lda :STACKORIGIN,x
  3458 2451 99 EE 2C			sta adr.OBSTACLES,y
  3459 2454 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3460 2456 99 EF 2C			sta adr.OBSTACLES+1,y
  3461 2459 CA				dex
  3462
  3463 				; optimize FAIL (1, levels.inc), line = 137
  3464
  3465 245A A9 02 95 18			mva #$02 :STACKORIGIN,x
  3466 245E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3467 2462 A9 06			lda #$06
  3468 2464 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3469 2467 A9 1E			lda #$1E
  3470 2469 8D 07 2D			sta CALCOBSTACLEADDR.X
  3471 246C 20 F3 12			jsr CALCOBSTACLEADDR
  3472 246F B4 17			ldy :STACKORIGIN-1,x
  3473 2471 B5 18			lda :STACKORIGIN,x
  3474 2473 99 EE 2C			sta adr.OBSTACLES,y
  3475 2476 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3476 2478 99 EF 2C			sta adr.OBSTACLES+1,y
  3477 247B CA				dex
  3478
  3479 				; optimize FAIL (1, levels.inc), line = 138
  3480
  3481 247C A9 04 95 18			mva #$04 :STACKORIGIN,x
  3482 2480 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3483 2484 A9 12			lda #$12
  3484 2486 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3485 2489 A9 0A			lda #$0A
  3486 248B 8D 07 2D			sta CALCOBSTACLEADDR.X
  3487 248E 20 F3 12			jsr CALCOBSTACLEADDR
  3488 2491 B4 17			ldy :STACKORIGIN-1,x
  3489 2493 B5 18			lda :STACKORIGIN,x
  3490 2495 99 EE 2C			sta adr.OBSTACLES,y
  3491 2498 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3492 249A 99 EF 2C			sta adr.OBSTACLES+1,y
  3493 249D CA				dex
  3494
  3495 				; optimize FAIL (1, levels.inc), line = 139
  3496
  3497 249E A9 06 95 18			mva #$06 :STACKORIGIN,x
  3498 24A2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3499 24A6 A9 12			lda #$12
  3500 24A8 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3501 24AB A9 1E			lda #$1E
  3502 24AD 8D 07 2D			sta CALCOBSTACLEADDR.X
  3503 24B0 20 F3 12			jsr CALCOBSTACLEADDR
  3504 24B3 B4 17			ldy :STACKORIGIN-1,x
  3505 24B5 B5 18			lda :STACKORIGIN,x
  3506 24B7 99 EE 2C			sta adr.OBSTACLES,y
  3507 24BA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3508 24BC 99 EF 2C			sta adr.OBSTACLES+1,y
  3509 24BF CA				dex
  3510
  3511 				; optimize FAIL (1, levels.inc), line = 140
  3512
  3513 24C0 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3514 24C4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3515 24C8 A9 0C			lda #$0C
  3516 24CA 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3517 24CD A9 01			lda #$01
  3518 24CF 8D 07 2D			sta CALCOBSTACLEADDR.X
  3519 24D2 20 F3 12			jsr CALCOBSTACLEADDR
  3520 24D5 B4 17			ldy :STACKORIGIN-1,x
  3521 24D7 B5 18			lda :STACKORIGIN,x
  3522 24D9 99 EE 2C			sta adr.OBSTACLES,y
  3523 24DC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3524 24DE 99 EF 2C			sta adr.OBSTACLES+1,y
  3525 24E1 CA				dex
  3526
  3527 				; optimize FAIL (1, levels.inc), line = 141
  3528
  3529 24E2 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3530 24E6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3531 24EA A9 02			lda #$02
  3532 24EC 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3533 24EF A9 14			lda #$14
  3534 24F1 8D 07 2D			sta CALCOBSTACLEADDR.X
  3535 24F4 20 F3 12			jsr CALCOBSTACLEADDR
  3536 24F7 B4 17			ldy :STACKORIGIN-1,x
  3537 24F9 B5 18			lda :STACKORIGIN,x
  3538 24FB 99 EE 2C			sta adr.OBSTACLES,y
  3539 24FE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3540 2500 99 EF 2C			sta adr.OBSTACLES+1,y
  3541 2503 CA				dex
  3542
  3543 				; optimize FAIL (1, levels.inc), line = 142
  3544
  3545 2504 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3546 2508 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3547 250C A9 16			lda #$16
  3548 250E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3549 2511 A9 14			lda #$14
  3550 2513 8D 07 2D			sta CALCOBSTACLEADDR.X
  3551 2516 20 F3 12			jsr CALCOBSTACLEADDR
  3552 2519 B4 17			ldy :STACKORIGIN-1,x
  3553 251B B5 18			lda :STACKORIGIN,x
  3554 251D 99 EE 2C			sta adr.OBSTACLES,y
  3555 2520 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3556 2522 99 EF 2C			sta adr.OBSTACLES+1,y
  3557 2525 CA				dex
  3558
  3559 				; optimize FAIL (1, levels.inc), line = 143
  3560
  3561 2526 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3562 252A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3563 252E A9 0C			lda #$0C
  3564 2530 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3565 2533 A9 14			lda #$14
  3566 2535 8D 07 2D			sta CALCOBSTACLEADDR.X
  3567 2538 20 F3 12			jsr CALCOBSTACLEADDR
  3568 253B B4 17			ldy :STACKORIGIN-1,x
  3569 253D B5 18			lda :STACKORIGIN,x
  3570 253F 99 EE 2C			sta adr.OBSTACLES,y
  3571 2542 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3572 2544 99 EF 2C			sta adr.OBSTACLES+1,y
  3573 2547 CA				dex
  3574 2548 CA				dex
  3575
  3576 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 145
  3577
  3578 2549 20 16 13			jsr SAVEOBSTACLES
  3579 254C			@exit
  3580 					.ifdef @new
  3581 					lda <@VarData
  3582 					sta :ztmp
  3583 					lda >@VarData
  3584 					ldy #@VarDataSize-1
  3585 					jmp @FreeMem
  3586 					els
  3587 254C 60				rts						; ret
  3588 					eif
  3589 				.endl
  3590
  3591 254D			.local	SETLEVEL07					; PROCEDURE
  3592
  3593 				; optimize OK (levels.inc), line = 152
  3594
  3595 254D A9 01			lda #$01
  3596 254F 8D 13 2D			sta SETPLAYER.ISALIVE
  3597 2552 A9 62			lda #$62
  3598 2554 8D 12 2D			sta SETPLAYER.COLOUR
  3599 2557 A9 51			lda #$51
  3600 2559 8D 11 2D			sta SETPLAYER.HEAD
  3601 255C A9 00			lda #$00
  3602 255E 8D 10 2D			sta SETPLAYER.BRAIN
  3603 2561 A9 04			lda #$04
  3604 2563 8D 0F 2D			sta SETPLAYER.DIR
  3605 2566 A9 0C			lda #$0C
  3606 2568 8D 0E 2D			sta SETPLAYER.Y
  3607 256B A9 12			lda #$12
  3608 256D 8D 0D 2D			sta SETPLAYER.X
  3609 2570 AD B1 2C			lda PLAYER1
  3610 2573 8D 0B 2D			sta SETPLAYER.P
  3611 2576 AD B2 2C			lda PLAYER1+1
  3612 2579 8D 0C 2D			sta SETPLAYER.P+1
  3613 257C 20 23 14			jsr SETPLAYER
  3614
  3615 				; optimize OK (levels.inc), line = 153
  3616
  3617 257F A9 01			lda #$01
  3618 2581 8D 13 2D			sta SETPLAYER.ISALIVE
  3619 2584 A9 5D			lda #$5D
  3620 2586 8D 12 2D			sta SETPLAYER.COLOUR
  3621 2589 A9 51			lda #$51
  3622 258B 8D 11 2D			sta SETPLAYER.HEAD
  3623 258E A9 03			lda #$03
  3624 2590 8D 10 2D			sta SETPLAYER.BRAIN
  3625 2593 A9 08			lda #$08
  3626 2595 8D 0F 2D			sta SETPLAYER.DIR
  3627 2598 A9 17			lda #$17
  3628 259A 8D 0E 2D			sta SETPLAYER.Y
  3629 259D A9 01			lda #$01
  3630 259F 8D 0D 2D			sta SETPLAYER.X
  3631 25A2 AD B3 2C			lda PLAYER2
  3632 25A5 8D 0B 2D			sta SETPLAYER.P
  3633 25A8 AD B4 2C			lda PLAYER2+1
  3634 25AB 8D 0C 2D			sta SETPLAYER.P+1
  3635 25AE 20 23 14			jsr SETPLAYER
  3636
  3637 				; optimize OK (levels.inc), line = 154
  3638
  3639 25B1 A9 01			lda #$01
  3640 25B3 8D 13 2D			sta SETPLAYER.ISALIVE
  3641 25B6 A9 71			lda #$71
  3642 25B8 8D 12 2D			sta SETPLAYER.COLOUR
  3643 25BB A9 51			lda #$51
  3644 25BD 8D 11 2D			sta SETPLAYER.HEAD
  3645 25C0 A9 03			lda #$03
  3646 25C2 8D 10 2D			sta SETPLAYER.BRAIN
  3647 25C5 A9 02			lda #$02
  3648 25C7 8D 0F 2D			sta SETPLAYER.DIR
  3649 25CA A9 04			lda #$04
  3650 25CC 8D 0E 2D			sta SETPLAYER.Y
  3651 25CF A9 1E			lda #$1E
  3652 25D1 8D 0D 2D			sta SETPLAYER.X
  3653 25D4 AD B5 2C			lda PLAYER3
  3654 25D7 8D 0B 2D			sta SETPLAYER.P
  3655 25DA AD B6 2C			lda PLAYER3+1
  3656 25DD 8D 0C 2D			sta SETPLAYER.P+1
  3657 25E0 20 23 14			jsr SETPLAYER
  3658
  3659 				; optimize OK (levels.inc), line = 155
  3660
  3661 25E3 A9 01			lda #$01
  3662 25E5 8D 13 2D			sta SETPLAYER.ISALIVE
  3663 25E8 A9 55			lda #$55
  3664 25EA 8D 12 2D			sta SETPLAYER.COLOUR
  3665 25ED A9 51			lda #$51
  3666 25EF 8D 11 2D			sta SETPLAYER.HEAD
  3667 25F2 A9 02			lda #$02
  3668 25F4 8D 10 2D			sta SETPLAYER.BRAIN
  3669 25F7 A9 01			lda #$01
  3670 25F9 8D 0F 2D			sta SETPLAYER.DIR
  3671 25FC A9 15			lda #$15
  3672 25FE 8D 0E 2D			sta SETPLAYER.Y
  3673 2601 A9 24			lda #$24
  3674 2603 8D 0D 2D			sta SETPLAYER.X
  3675 2606 AD B7 2C			lda PLAYER4
  3676 2609 8D 0B 2D			sta SETPLAYER.P
  3677 260C AD B8 2C			lda PLAYER4+1
  3678 260F 8D 0C 2D			sta SETPLAYER.P+1
  3679 2612 20 23 14			jsr SETPLAYER
  3680
  3681 				; optimize FAIL (1, levels.inc), line = 157
  3682
  3683 2615 E8				inx
  3684 2616 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3685 261A 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3686 261C A9 06			lda #$06
  3687 261E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3688 2621 A9 0A			lda #$0A
  3689 2623 8D 07 2D			sta CALCOBSTACLEADDR.X
  3690 2626 20 F3 12			jsr CALCOBSTACLEADDR
  3691 2629 B4 17			ldy :STACKORIGIN-1,x
  3692 262B B5 18			lda :STACKORIGIN,x
  3693 262D 99 EE 2C			sta adr.OBSTACLES,y
  3694 2630 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3695 2632 99 EF 2C			sta adr.OBSTACLES+1,y
  3696 2635 CA				dex
  3697
  3698 				; optimize FAIL (1, levels.inc), line = 158
  3699
  3700 2636 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3701 263A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3702 263E A9 06			lda #$06
  3703 2640 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3704 2643 A9 1E			lda #$1E
  3705 2645 8D 07 2D			sta CALCOBSTACLEADDR.X
  3706 2648 20 F3 12			jsr CALCOBSTACLEADDR
  3707 264B B4 17			ldy :STACKORIGIN-1,x
  3708 264D B5 18			lda :STACKORIGIN,x
  3709 264F 99 EE 2C			sta adr.OBSTACLES,y
  3710 2652 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3711 2654 99 EF 2C			sta adr.OBSTACLES+1,y
  3712 2657 CA				dex
  3713
  3714 				; optimize FAIL (1, levels.inc), line = 159
  3715
  3716 2658 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3717 265C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3718 2660 A9 12			lda #$12
  3719 2662 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3720 2665 A9 0A			lda #$0A
  3721 2667 8D 07 2D			sta CALCOBSTACLEADDR.X
  3722 266A 20 F3 12			jsr CALCOBSTACLEADDR
  3723 266D B4 17			ldy :STACKORIGIN-1,x
  3724 266F B5 18			lda :STACKORIGIN,x
  3725 2671 99 EE 2C			sta adr.OBSTACLES,y
  3726 2674 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3727 2676 99 EF 2C			sta adr.OBSTACLES+1,y
  3728 2679 CA				dex
  3729
  3730 				; optimize FAIL (1, levels.inc), line = 160
  3731
  3732 267A A9 06 95 18			mva #$06 :STACKORIGIN,x
  3733 267E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3734 2682 A9 12			lda #$12
  3735 2684 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3736 2687 A9 1E			lda #$1E
  3737 2689 8D 07 2D			sta CALCOBSTACLEADDR.X
  3738 268C 20 F3 12			jsr CALCOBSTACLEADDR
  3739 268F B4 17			ldy :STACKORIGIN-1,x
  3740 2691 B5 18			lda :STACKORIGIN,x
  3741 2693 99 EE 2C			sta adr.OBSTACLES,y
  3742 2696 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3743 2698 99 EF 2C			sta adr.OBSTACLES+1,y
  3744 269B CA				dex
  3745
  3746 				; optimize FAIL (1, levels.inc), line = 161
  3747
  3748 269C A9 08 95 18			mva #$08 :STACKORIGIN,x
  3749 26A0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3750 26A4 A9 0C			lda #$0C
  3751 26A6 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3752 26A9 A9 01			lda #$01
  3753 26AB 8D 07 2D			sta CALCOBSTACLEADDR.X
  3754 26AE 20 F3 12			jsr CALCOBSTACLEADDR
  3755 26B1 B4 17			ldy :STACKORIGIN-1,x
  3756 26B3 B5 18			lda :STACKORIGIN,x
  3757 26B5 99 EE 2C			sta adr.OBSTACLES,y
  3758 26B8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3759 26BA 99 EF 2C			sta adr.OBSTACLES+1,y
  3760 26BD CA				dex
  3761
  3762 				; optimize FAIL (1, levels.inc), line = 162
  3763
  3764 26BE A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3765 26C2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3766 26C6 A9 02			lda #$02
  3767 26C8 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3768 26CB A9 14			lda #$14
  3769 26CD 8D 07 2D			sta CALCOBSTACLEADDR.X
  3770 26D0 20 F3 12			jsr CALCOBSTACLEADDR
  3771 26D3 B4 17			ldy :STACKORIGIN-1,x
  3772 26D5 B5 18			lda :STACKORIGIN,x
  3773 26D7 99 EE 2C			sta adr.OBSTACLES,y
  3774 26DA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3775 26DC 99 EF 2C			sta adr.OBSTACLES+1,y
  3776 26DF CA				dex
  3777
  3778 				; optimize FAIL (1, levels.inc), line = 163
  3779
  3780 26E0 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3781 26E4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3782 26E8 A9 16			lda #$16
  3783 26EA 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3784 26ED A9 14			lda #$14
  3785 26EF 8D 07 2D			sta CALCOBSTACLEADDR.X
  3786 26F2 20 F3 12			jsr CALCOBSTACLEADDR
  3787 26F5 B4 17			ldy :STACKORIGIN-1,x
  3788 26F7 B5 18			lda :STACKORIGIN,x
  3789 26F9 99 EE 2C			sta adr.OBSTACLES,y
  3790 26FC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3791 26FE 99 EF 2C			sta adr.OBSTACLES+1,y
  3792 2701 CA				dex
  3793
  3794 				; optimize FAIL (1, levels.inc), line = 164
  3795
  3796 2702 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3797 2706 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3798 270A A9 0C			lda #$0C
  3799 270C 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3800 270F A9 14			lda #$14
  3801 2711 8D 07 2D			sta CALCOBSTACLEADDR.X
  3802 2714 20 F3 12			jsr CALCOBSTACLEADDR
  3803 2717 B4 17			ldy :STACKORIGIN-1,x
  3804 2719 B5 18			lda :STACKORIGIN,x
  3805 271B 99 EE 2C			sta adr.OBSTACLES,y
  3806 271E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3807 2720 99 EF 2C			sta adr.OBSTACLES+1,y
  3808 2723 CA				dex
  3809 2724 CA				dex
  3810
  3811 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 166
  3812
  3813 2725 20 16 13			jsr SAVEOBSTACLES
  3814 2728			@exit
  3815 					.ifdef @new
  3816 					lda <@VarData
  3817 					sta :ztmp
  3818 					lda >@VarData
  3819 					ldy #@VarDataSize-1
  3820 					jmp @FreeMem
  3821 					els
  3822 2728 60				rts						; ret
  3823 					eif
  3824 				.endl
  3825
  3826 2729			.local	SETLEVEL08					; PROCEDURE
  3827
  3828 				; optimize OK (levels.inc), line = 173
  3829
  3830 2729 A9 01			lda #$01
  3831 272B 8D 13 2D			sta SETPLAYER.ISALIVE
  3832 272E A9 62			lda #$62
  3833 2730 8D 12 2D			sta SETPLAYER.COLOUR
  3834 2733 A9 51			lda #$51
  3835 2735 8D 11 2D			sta SETPLAYER.HEAD
  3836 2738 A9 00			lda #$00
  3837 273A 8D 10 2D			sta SETPLAYER.BRAIN
  3838 273D A9 08			lda #$08
  3839 273F 8D 0F 2D			sta SETPLAYER.DIR
  3840 2742 A9 17			lda #$17
  3841 2744 8D 0E 2D			sta SETPLAYER.Y
  3842 2747 A9 01			lda #$01
  3843 2749 8D 0D 2D			sta SETPLAYER.X
  3844 274C AD B1 2C			lda PLAYER1
  3845 274F 8D 0B 2D			sta SETPLAYER.P
  3846 2752 AD B2 2C			lda PLAYER1+1
  3847 2755 8D 0C 2D			sta SETPLAYER.P+1
  3848 2758 20 23 14			jsr SETPLAYER
  3849
  3850 				; optimize OK (levels.inc), line = 174
  3851
  3852 275B A9 01			lda #$01
  3853 275D 8D 13 2D			sta SETPLAYER.ISALIVE
  3854 2760 A9 5D			lda #$5D
  3855 2762 8D 12 2D			sta SETPLAYER.COLOUR
  3856 2765 A9 51			lda #$51
  3857 2767 8D 11 2D			sta SETPLAYER.HEAD
  3858 276A A9 03			lda #$03
  3859 276C 8D 10 2D			sta SETPLAYER.BRAIN
  3860 276F A9 04			lda #$04
  3861 2771 8D 0F 2D			sta SETPLAYER.DIR
  3862 2774 A9 17			lda #$17
  3863 2776 8D 0E 2D			sta SETPLAYER.Y
  3864 2779 A9 26			lda #$26
  3865 277B 8D 0D 2D			sta SETPLAYER.X
  3866 277E AD B3 2C			lda PLAYER2
  3867 2781 8D 0B 2D			sta SETPLAYER.P
  3868 2784 AD B4 2C			lda PLAYER2+1
  3869 2787 8D 0C 2D			sta SETPLAYER.P+1
  3870 278A 20 23 14			jsr SETPLAYER
  3871
  3872 				; optimize OK (levels.inc), line = 175
  3873
  3874 278D A9 01			lda #$01
  3875 278F 8D 13 2D			sta SETPLAYER.ISALIVE
  3876 2792 A9 71			lda #$71
  3877 2794 8D 12 2D			sta SETPLAYER.COLOUR
  3878 2797 A9 51			lda #$51
  3879 2799 8D 11 2D			sta SETPLAYER.HEAD
  3880 279C A9 02			lda #$02
  3881 279E 8D 10 2D			sta SETPLAYER.BRAIN
  3882 27A1 8D 0F 2D			sta SETPLAYER.DIR
  3883 27A4 A9 01			lda #$01
  3884 27A6 8D 0E 2D			sta SETPLAYER.Y
  3885 27A9 A9 0A			lda #$0A
  3886 27AB 8D 0D 2D			sta SETPLAYER.X
  3887 27AE AD B5 2C			lda PLAYER3
  3888 27B1 8D 0B 2D			sta SETPLAYER.P
  3889 27B4 AD B6 2C			lda PLAYER3+1
  3890 27B7 8D 0C 2D			sta SETPLAYER.P+1
  3891 27BA 20 23 14			jsr SETPLAYER
  3892
  3893 				; optimize OK (levels.inc), line = 176
  3894
  3895 27BD A9 01			lda #$01
  3896 27BF 8D 13 2D			sta SETPLAYER.ISALIVE
  3897 27C2 A9 55			lda #$55
  3898 27C4 8D 12 2D			sta SETPLAYER.COLOUR
  3899 27C7 A9 51			lda #$51
  3900 27C9 8D 11 2D			sta SETPLAYER.HEAD
  3901 27CC A9 04			lda #$04
  3902 27CE 8D 10 2D			sta SETPLAYER.BRAIN
  3903 27D1 8D 0F 2D			sta SETPLAYER.DIR
  3904 27D4 A9 01			lda #$01
  3905 27D6 8D 0E 2D			sta SETPLAYER.Y
  3906 27D9 A9 26			lda #$26
  3907 27DB 8D 0D 2D			sta SETPLAYER.X
  3908 27DE AD B7 2C			lda PLAYER4
  3909 27E1 8D 0B 2D			sta SETPLAYER.P
  3910 27E4 AD B8 2C			lda PLAYER4+1
  3911 27E7 8D 0C 2D			sta SETPLAYER.P+1
  3912 27EA 20 23 14			jsr SETPLAYER
  3913
  3914 				; optimize FAIL (1, levels.inc), line = 178
  3915
  3916 27ED E8				inx
  3917 27EE A9 00 95 18			mva #$00 :STACKORIGIN,x
  3918 27F2 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3919 27F4 A9 06			lda #$06
  3920 27F6 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3921 27F9 A9 0A			lda #$0A
  3922 27FB 8D 07 2D			sta CALCOBSTACLEADDR.X
  3923 27FE 20 F3 12			jsr CALCOBSTACLEADDR
  3924 2801 B4 17			ldy :STACKORIGIN-1,x
  3925 2803 B5 18			lda :STACKORIGIN,x
  3926 2805 99 EE 2C			sta adr.OBSTACLES,y
  3927 2808 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3928 280A 99 EF 2C			sta adr.OBSTACLES+1,y
  3929 280D CA				dex
  3930
  3931 				; optimize FAIL (1, levels.inc), line = 179
  3932
  3933 280E A9 02 95 18			mva #$02 :STACKORIGIN,x
  3934 2812 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3935 2816 A9 06			lda #$06
  3936 2818 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3937 281B A9 1E			lda #$1E
  3938 281D 8D 07 2D			sta CALCOBSTACLEADDR.X
  3939 2820 20 F3 12			jsr CALCOBSTACLEADDR
  3940 2823 B4 17			ldy :STACKORIGIN-1,x
  3941 2825 B5 18			lda :STACKORIGIN,x
  3942 2827 99 EE 2C			sta adr.OBSTACLES,y
  3943 282A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3944 282C 99 EF 2C			sta adr.OBSTACLES+1,y
  3945 282F CA				dex
  3946
  3947 				; optimize FAIL (1, levels.inc), line = 180
  3948
  3949 2830 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3950 2834 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3951 2838 A9 12			lda #$12
  3952 283A 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3953 283D A9 0A			lda #$0A
  3954 283F 8D 07 2D			sta CALCOBSTACLEADDR.X
  3955 2842 20 F3 12			jsr CALCOBSTACLEADDR
  3956 2845 B4 17			ldy :STACKORIGIN-1,x
  3957 2847 B5 18			lda :STACKORIGIN,x
  3958 2849 99 EE 2C			sta adr.OBSTACLES,y
  3959 284C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3960 284E 99 EF 2C			sta adr.OBSTACLES+1,y
  3961 2851 CA				dex
  3962
  3963 				; optimize FAIL (1, levels.inc), line = 181
  3964
  3965 2852 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3966 2856 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3967 285A A9 12			lda #$12
  3968 285C 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3969 285F A9 1E			lda #$1E
  3970 2861 8D 07 2D			sta CALCOBSTACLEADDR.X
  3971 2864 20 F3 12			jsr CALCOBSTACLEADDR
  3972 2867 B4 17			ldy :STACKORIGIN-1,x
  3973 2869 B5 18			lda :STACKORIGIN,x
  3974 286B 99 EE 2C			sta adr.OBSTACLES,y
  3975 286E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3976 2870 99 EF 2C			sta adr.OBSTACLES+1,y
  3977 2873 CA				dex
  3978
  3979 				; optimize FAIL (1, levels.inc), line = 182
  3980
  3981 2874 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3982 2878 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3983 287C A9 0C			lda #$0C
  3984 287E 8D 08 2D			sta CALCOBSTACLEADDR.Y
  3985 2881 A9 01			lda #$01
  3986 2883 8D 07 2D			sta CALCOBSTACLEADDR.X
  3987 2886 20 F3 12			jsr CALCOBSTACLEADDR
  3988 2889 B4 17			ldy :STACKORIGIN-1,x
  3989 288B B5 18			lda :STACKORIGIN,x
  3990 288D 99 EE 2C			sta adr.OBSTACLES,y
  3991 2890 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3992 2892 99 EF 2C			sta adr.OBSTACLES+1,y
  3993 2895 CA				dex
  3994
  3995 				; optimize FAIL (1, levels.inc), line = 183
  3996
  3997 2896 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3998 289A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3999 289E A9 02			lda #$02
  4000 28A0 8D 08 2D			sta CALCOBSTACLEADDR.Y
  4001 28A3 A9 14			lda #$14
  4002 28A5 8D 07 2D			sta CALCOBSTACLEADDR.X
  4003 28A8 20 F3 12			jsr CALCOBSTACLEADDR
  4004 28AB B4 17			ldy :STACKORIGIN-1,x
  4005 28AD B5 18			lda :STACKORIGIN,x
  4006 28AF 99 EE 2C			sta adr.OBSTACLES,y
  4007 28B2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4008 28B4 99 EF 2C			sta adr.OBSTACLES+1,y
  4009 28B7 CA				dex
  4010
  4011 				; optimize FAIL (1, levels.inc), line = 184
  4012
  4013 28B8 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  4014 28BC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4015 28C0 A9 16			lda #$16
  4016 28C2 8D 08 2D			sta CALCOBSTACLEADDR.Y
  4017 28C5 A9 14			lda #$14
  4018 28C7 8D 07 2D			sta CALCOBSTACLEADDR.X
  4019 28CA 20 F3 12			jsr CALCOBSTACLEADDR
  4020 28CD B4 17			ldy :STACKORIGIN-1,x
  4021 28CF B5 18			lda :STACKORIGIN,x
  4022 28D1 99 EE 2C			sta adr.OBSTACLES,y
  4023 28D4 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4024 28D6 99 EF 2C			sta adr.OBSTACLES+1,y
  4025 28D9 CA				dex
  4026
  4027 				; optimize FAIL (1, levels.inc), line = 185
  4028
  4029 28DA A9 0E 95 18			mva #$0E :STACKORIGIN,x
  4030 28DE A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4031 28E2 A9 0C			lda #$0C
  4032 28E4 8D 08 2D			sta CALCOBSTACLEADDR.Y
  4033 28E7 A9 14			lda #$14
  4034 28E9 8D 07 2D			sta CALCOBSTACLEADDR.X
  4035 28EC 20 F3 12			jsr CALCOBSTACLEADDR
  4036 28EF B4 17			ldy :STACKORIGIN-1,x
  4037 28F1 B5 18			lda :STACKORIGIN,x
  4038 28F3 99 EE 2C			sta adr.OBSTACLES,y
  4039 28F6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4040 28F8 99 EF 2C			sta adr.OBSTACLES+1,y
  4041 28FB CA				dex
  4042 28FC CA				dex
  4043
  4044 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 187
  4045
  4046 28FD 20 16 13			jsr SAVEOBSTACLES
  4047 2900			@exit
  4048 					.ifdef @new
  4049 					lda <@VarData
  4050 					sta :ztmp
  4051 					lda >@VarData
  4052 					ldy #@VarDataSize-1
  4053 					jmp @FreeMem
  4054 					els
  4055 2900 60				rts						; ret
  4056 					eif
  4057 				.endl
  4058
  4059 2901			.local	HUMAN						; PROCEDURE
  4060
  4061 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 15
  4062
  4063 2901 20 11 14			jsr CHECKJOYSTATUS
  4064 2904 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4065 290E A0 04			ldy #PLY.DIR-DATAORIGIN
  4066 2910 B1 12			lda (:bp2),y
  4067 2912 85 5B			sta NEWDIR
  4068
  4069 				; optimize OK (main.pas), line = 16
  4070
  4071 2914 A5 63			lda JOYSTATUS
  4072 2916 8D 1B 2D			sta @CASETMP_0006
  4073 2919 C9 01			cmp #$01
  4074 291B D0 19			jne l_0D62
  4075 291D			@
  4076
  4077 				; optimize OK (main.pas), line = 17
  4078
  4079 291D AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4080 2927 A0 04			ldy #PLY.DIR-DATAORIGIN
  4081 2929 B1 12			lda (:bp2),y
  4082 292B C9 02			cmp #$02
  4083 292D F0 04			jeq l_0D74
  4084 292F A9 01			lda #$01
  4085 2931 85 5B			sta NEWDIR
  4086 2933			l_0D74
  4087
  4088 2933 4C 8A 29			jmp a_0006
  4089 2936			l_0D62
  4090 2936 C9 02			cmp #$02
  4091 2938 D0 19			jne l_0D84
  4092 293A			@
  4093
  4094 				; optimize OK (main.pas), line = 18
  4095
  4096 293A AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4097 2944 A0 04			ldy #PLY.DIR-DATAORIGIN
  4098 2946 B1 12			lda (:bp2),y
  4099 2948 C9 01			cmp #$01
  4100 294A F0 04			jeq l_0D96
  4101 294C A9 02			lda #$02
  4102 294E 85 5B			sta NEWDIR
  4103 2950			l_0D96
  4104
  4105 2950 4C 8A 29			jmp a_0006
  4106 2953			l_0D84
  4107 2953 C9 04			cmp #$04
  4108 2955 D0 19			jne l_0DA6
  4109 2957			@
  4110
  4111 				; optimize OK (main.pas), line = 19
  4112
  4113 2957 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4114 2961 A0 04			ldy #PLY.DIR-DATAORIGIN
  4115 2963 B1 12			lda (:bp2),y
  4116 2965 C9 08			cmp #$08
  4117 2967 F0 04			jeq l_0DB8
  4118 2969 A9 04			lda #$04
  4119 296B 85 5B			sta NEWDIR
  4120 296D			l_0DB8
  4121
  4122 296D 4C 8A 29			jmp a_0006
  4123 2970			l_0DA6
  4124 2970 C9 08			cmp #$08
  4125 2972 D0 16			jne l_0DC8
  4126 2974			@
  4127
  4128 				; optimize OK (main.pas), line = 20
  4129
  4130 2974 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4131 297E A0 04			ldy #PLY.DIR-DATAORIGIN
  4132 2980 B1 12			lda (:bp2),y
  4133 2982 C9 04			cmp #$04
  4134 2984 F0 04			jeq l_0DDA
  4135 2986 A9 08			lda #$08
  4136 2988 85 5B			sta NEWDIR
  4137 298A			l_0DDA
  4138
  4139 298A			l_0DC8
  4140 298A			a_0006
  4141
  4142 				; optimize OK (main.pas), line = 23
  4143
  4144 298A A5 5B			lda NEWDIR
  4145 298C 25 5C			and AVAILDIR
  4146 298E D0 18			jne l_0E01
  4147
  4148 				; optimize OK (main.pas), line = 24
  4149
  4150 2990 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4151 299A A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4152 299C A9 00			lda #$00
  4153 299E 91 12			sta (:bp2),y
  4154 29A0 A0 02			ldy #PLY.HEAD-DATAORIGIN
  4155 29A2 A9 2A			lda #$2A
  4156 29A4 91 12			sta (:bp2),y
  4157 29A6 C6 5A			dec ALIVE
  4158 29A8			l_0E01
  4159
  4160 				; ------------------------------------------------------------
  4161
  4162 = 2D1B			@CASETMP_0006	= DATAORIGIN+$005F
  4163
  4164 = 2D1B			@VarData	= @CASETMP_0006
  4165 = 0001			@VarDataSize	= 1
  4166
  4167 29A8			@exit
  4168 					.ifdef @new
  4169 					lda <@VarData
  4170 					sta :ztmp
  4171 					lda >@VarData
  4172 					ldy #@VarDataSize-1
  4173 					jmp @FreeMem
  4174 					els
  4175 29A8 60				rts						; ret
  4176 					eif
  4177 				.endl
  4178
  4179 29A9			.local	PLAYERMOVE					; PROCEDURE
  4180
  4181 				; optimize OK (main.pas), line = 32
  4182
  4183 29A9 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4184 29B3 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4185 29B5 B1 12			lda (:bp2),y
  4186 29B7 D0 03 4C FD 2A		jeq l_0E20
  4187
  4188 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 33
  4189
  4190 29BC 20 29 12			jsr CHECKAVAILDIR
  4191
  4192 				; optimize OK (main.pas), line = 35
  4193
  4194 29BF A5 5C			lda AVAILDIR
  4195 29C1 D0 35			jne l_0E34
  4196
  4197 				; optimize OK (main.pas), line = 36
  4198
  4199 29C3 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4200 29CD A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4201 29CF A9 00			lda #$00
  4202 29D1 91 12			sta (:bp2),y
  4203 29D3 C6 5A			dec ALIVE
  4204
  4205 				; optimize OK (main.pas), line = 37
  4206
  4207 29D5 A0 00			ldy #PLY.X-DATAORIGIN
  4208 29D7 B1 12			lda (:bp2),y
  4209 29D9 8D FE 2C			sta PUTCHAR_0072.X
  4210 29DC A0 01			ldy #PLY.Y-DATAORIGIN
  4211 29DE B1 12			lda (:bp2),y
  4212 29E0 8D FF 2C			sta PUTCHAR_0072.Y
  4213 29E3 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  4214 29E5 B1 12			lda (:bp2),y
  4215 29E7 18 69 80			add #$80
  4216 29EA 8D 01 2D			sta PUTCHAR_0072.C
  4217 29ED A9 57			lda #$57
  4218 29EF 8D 00 2D			sta PUTCHAR_0072.V
  4219 29F2 20 78 11			jsr PUTCHAR_0072
  4220 29F5 4C FD 2A			jmp l_0E55
  4221 29F8			l_0E34
  4222
  4223 				; optimize OK (main.pas), line = 40
  4224
  4225 29F8 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4226 2A02 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  4227 2A04 B1 12			lda (:bp2),y
  4228 2A06 8D 1C 2D			sta @CASETMP_0007
  4229 2A09 C9 00			cmp #$00
  4230 2A0B D0 06			jne l_0E60
  4231 2A0D			@
  4232
  4233 				; optimize FAIL ('HUMAN', main.pas), line = 41
  4234
  4235 2A0D 20 01 29			jsr HUMAN
  4236 2A10 4C 38 2A			jmp a_0007
  4237 2A13			l_0E60
  4238 2A13 C9 01			cmp #$01
  4239 2A15 D0 06			jne l_0E6A
  4240 2A17			@
  4241
  4242 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 42
  4243
  4244 2A17 20 07 15			jsr AISTRAIGHT
  4245 2A1A 4C 38 2A			jmp a_0007
  4246 2A1D			l_0E6A
  4247 2A1D C9 02			cmp #$02
  4248 2A1F D0 06			jne l_0E74
  4249 2A21			@
  4250
  4251 				; optimize FAIL ('AISAPPER', main.pas), line = 43
  4252
  4253 2A21 20 8C 15			jsr AISAPPER
  4254 2A24 4C 38 2A			jmp a_0007
  4255 2A27			l_0E74
  4256 2A27 C9 03			cmp #$03
  4257 2A29 D0 06			jne l_0E7E
  4258 2A2B			@
  4259
  4260 				; optimize FAIL ('AIBULLY', main.pas), line = 44
  4261
  4262 2A2B 20 E6 17			jsr AIBULLY
  4263 2A2E 4C 38 2A			jmp a_0007
  4264 2A31			l_0E7E
  4265 2A31 C9 04			cmp #$04
  4266 2A33 D0 03			jne l_0E88
  4267 2A35			@
  4268
  4269 				; optimize FAIL ('AIMIRROR', main.pas), line = 45
  4270
  4271 2A35 20 B4 18			jsr AIMIRROR
  4272 2A38			l_0E88
  4273 2A38			a_0007
  4274
  4275 				; optimize FAIL ('DRAWTAIL', main.pas), line = 48
  4276
  4277 2A38 20 5A 13			jsr DRAWTAIL
  4278 2A3B AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4279 2A45 A0 04			ldy #PLY.DIR-DATAORIGIN
  4280 2A47 A5 5B			lda NEWDIR
  4281 2A49 91 12			sta (:bp2),y
  4282
  4283 				; optimize OK (main.pas), line = 50
  4284
  4285 2A4B A5 5B			lda NEWDIR
  4286 2A4D 8D 1D 2D			sta @CASETMP_0008
  4287 2A50 C9 01			cmp #$01
  4288 2A52 D0 16			jne l_0EA4
  4289 2A54			@
  4290
  4291 				; optimize OK (main.pas), line = 51
  4292
  4293 2A54 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4294 2A5E A0 01			ldy #PLY.Y-DATAORIGIN
  4295 2A60 B1 12			lda (:bp2),y
  4296 2A62 38 E9 01			sub #$01
  4297 2A65 91 12			sta (:bp2),y
  4298
  4299 2A67 4C B5 2A			jmp a_0008
  4300 2A6A			l_0EA4
  4301 2A6A C9 02			cmp #$02
  4302 2A6C D0 16			jne l_0EAE
  4303 2A6E			@
  4304
  4305 				; optimize OK (main.pas), line = 52
  4306
  4307 2A6E AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4308 2A78 A0 01			ldy #PLY.Y-DATAORIGIN
  4309 2A7A B1 12			lda (:bp2),y
  4310 2A7C 18 69 01			add #$01
  4311 2A7F 91 12			sta (:bp2),y
  4312
  4313 2A81 4C B5 2A			jmp a_0008
  4314 2A84			l_0EAE
  4315 2A84 C9 04			cmp #$04
  4316 2A86 D0 16			jne l_0EB8
  4317 2A88			@
  4318
  4319 				; optimize OK (main.pas), line = 53
  4320
  4321 2A88 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4322 2A92 A0 00			ldy #PLY.X-DATAORIGIN
  4323 2A94 B1 12			lda (:bp2),y
  4324 2A96 38 E9 01			sub #$01
  4325 2A99 91 12			sta (:bp2),y
  4326
  4327 2A9B 4C B5 2A			jmp a_0008
  4328 2A9E			l_0EB8
  4329 2A9E C9 08			cmp #$08
  4330 2AA0 D0 13			jne l_0EC2
  4331 2AA2			@
  4332
  4333 				; optimize OK (main.pas), line = 54
  4334
  4335 2AA2 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4336 2AAC A0 00			ldy #PLY.X-DATAORIGIN
  4337 2AAE B1 12			lda (:bp2),y
  4338 2AB0 18 69 01			add #$01
  4339 2AB3 91 12			sta (:bp2),y
  4340
  4341 2AB5			l_0EC2
  4342 2AB5			a_0008
  4343
  4344 				; optimize OK (main.pas), line = 57
  4345
  4346 2AB5 AC AD 2C 84 12 AC + 	mwy PLY :bp2
  4347 2ABF A0 00			ldy #PLY.X-DATAORIGIN
  4348 2AC1 B1 12			lda (:bp2),y
  4349 2AC3 8D FE 2C			sta PUTCHAR_0072.X
  4350 2AC6 A0 01			ldy #PLY.Y-DATAORIGIN
  4351 2AC8 B1 12			lda (:bp2),y
  4352 2ACA 8D FF 2C			sta PUTCHAR_0072.Y
  4353 2ACD A0 02			ldy #PLY.HEAD-DATAORIGIN
  4354 2ACF B1 12			lda (:bp2),y
  4355 2AD1 8D 00 2D			sta PUTCHAR_0072.V
  4356 2AD4 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  4357 2AD6 B1 12			lda (:bp2),y
  4358 2AD8 8D 01 2D			sta PUTCHAR_0072.C
  4359 2ADB 20 78 11			jsr PUTCHAR_0072
  4360
  4361 				; optimize OK (main.pas), line = 60
  4362
  4363 2ADE AD D5 2C			lda PLAYER1.ISALIVE
  4364 2AE1 D0 1A			jne l_0EE7
  4365 2AE3 AD D1 2C			lda PLAYER1.COLOUR
  4366 2AE6 8D 01 2D			sta PUTCHAR_0072.C
  4367 2AE9 A9 2A			lda #$2A
  4368 2AEB 8D 00 2D			sta PUTCHAR_0072.V
  4369 2AEE AD CF 2C			lda PLAYER1.Y
  4370 2AF1 8D FF 2C			sta PUTCHAR_0072.Y
  4371 2AF4 AD CE 2C			lda PLAYER1.X
  4372 2AF7 8D FE 2C			sta PUTCHAR_0072.X
  4373 2AFA 20 78 11			jsr PUTCHAR_0072
  4374 2AFD			l_0EE7
  4375 2AFD			l_0E55
  4376 2AFD			l_0E20
  4377
  4378 				; ------------------------------------------------------------
  4379
  4380 = 2D1C			@CASETMP_0007	= DATAORIGIN+$0060
  4381 = 2D1D			@CASETMP_0008	= DATAORIGIN+$0061
  4382
  4383 = 2D1C			@VarData	= @CASETMP_0007
  4384 = 0002			@VarDataSize	= 2
  4385
  4386 2AFD			@exit
  4387 					.ifdef @new
  4388 					lda <@VarData
  4389 					sta :ztmp
  4390 					lda >@VarData
  4391 					ldy #@VarDataSize-1
  4392 					jmp @FreeMem
  4393 					els
  4394 2AFD 60				rts						; ret
  4395 					eif
  4396 				.endl
  4397
  4398 2AFE			.local	STARTSCREEN					; PROCEDURE
  4399
  4400 				; optimize OK (main.pas), line = 71
  4401
  4402 2AFE AD D1 2C			lda PLAYER1.COLOUR
  4403 2B01 18 69 80			add #$80
  4404 2B04 8D 01 2D			sta PUTCHAR_0072.C
  4405 2B07 AD D0 2C			lda PLAYER1.HEAD
  4406 2B0A 8D 00 2D			sta PUTCHAR_0072.V
  4407 2B0D AD CF 2C			lda PLAYER1.Y
  4408 2B10 8D FF 2C			sta PUTCHAR_0072.Y
  4409 2B13 AD CE 2C			lda PLAYER1.X
  4410 2B16 8D FE 2C			sta PUTCHAR_0072.X
  4411 2B19 20 78 11			jsr PUTCHAR_0072
  4412
  4413 				; --- RepeatUntilProlog
  4414 2B1C			l_0F0D
  4415
  4416 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 72
  4417
  4418 2B1C 20 11 14			jsr CHECKJOYSTATUS
  4419 2B1F A5 63			lda JOYSTATUS
  4420 2B21 C9 40			cmp #$40
  4421 2B23 D0 F7			jne l_0F0D
  4422
  4423 				; optimize OK (main.pas), line = 73
  4424
  4425 2B25 AD D1 2C			lda PLAYER1.COLOUR
  4426 2B28 8D 01 2D			sta PUTCHAR_0072.C
  4427 2B2B AD D0 2C			lda PLAYER1.HEAD
  4428 2B2E 8D 00 2D			sta PUTCHAR_0072.V
  4429 2B31 AD CF 2C			lda PLAYER1.Y
  4430 2B34 8D FF 2C			sta PUTCHAR_0072.Y
  4431 2B37 AD CE 2C			lda PLAYER1.X
  4432 2B3A 8D FE 2C			sta PUTCHAR_0072.X
  4433 2B3D 20 78 11			jsr PUTCHAR_0072
  4434 2B40			@exit
  4435 					.ifdef @new
  4436 					lda <@VarData
  4437 					sta :ztmp
  4438 					lda >@VarData
  4439 					ldy #@VarDataSize-1
  4440 					jmp @FreeMem
  4441 					els
  4442 2B40 60				rts						; ret
  4443 					eif
  4444 				.endl
  4445
  4446 2B41			.local	MAINLOOP					; PROCEDURE
  4447
  4448 				; optimize OK (main.pas), line = 80
  4449
  4450 2B41 A9 FF			lda #$FF
  4451 2B43 85 5A			sta ALIVE
  4452
  4453 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 82
  4454
  4455 2B45 20 87 14			jsr INITPLAYFIELD
  4456
  4457 				; optimize OK (main.pas), line = 84
  4458
  4459 2B48 AD CC 2C			lda LEVEL
  4460 2B4B 8D 1E 2D			sta @CASETMP_0009
  4461 2B4E C9 00			cmp #$00
  4462 2B50 D0 06			jne l_0F3C
  4463 2B52			@
  4464
  4465 				; optimize FAIL ('SETLEVEL00', main.pas), line = 85
  4466
  4467 2B52 20 09 19			jsr SETLEVEL00
  4468 2B55 4C A5 2B			jmp a_0009
  4469 2B58			l_0F3C
  4470 2B58 C9 01			cmp #$01
  4471 2B5A D0 06			jne l_0F46
  4472 2B5C			@
  4473
  4474 				; optimize FAIL ('SETLEVEL01', main.pas), line = 86
  4475
  4476 2B5C 20 B7 1A			jsr SETLEVEL01
  4477 2B5F 4C A5 2B			jmp a_0009
  4478 2B62			l_0F46
  4479 2B62 C9 02			cmp #$02
  4480 2B64 D0 06			jne l_0F50
  4481 2B66			@
  4482
  4483 				; optimize FAIL ('SETLEVEL02', main.pas), line = 87
  4484
  4485 2B66 20 65 1C			jsr SETLEVEL02
  4486 2B69 4C A5 2B			jmp a_0009
  4487 2B6C			l_0F50
  4488 2B6C C9 03			cmp #$03
  4489 2B6E D0 06			jne l_0F5A
  4490 2B70			@
  4491
  4492 				; optimize FAIL ('SETLEVEL03', main.pas), line = 88
  4493
  4494 2B70 20 13 1E			jsr SETLEVEL03
  4495 2B73 4C A5 2B			jmp a_0009
  4496 2B76			l_0F5A
  4497 2B76 C9 04			cmp #$04
  4498 2B78 D0 06			jne l_0F64
  4499 2B7A			@
  4500
  4501 				; optimize FAIL ('SETLEVEL04', main.pas), line = 89
  4502
  4503 2B7A 20 D7 1F			jsr SETLEVEL04
  4504 2B7D 4C A5 2B			jmp a_0009
  4505 2B80			l_0F64
  4506 2B80 C9 05			cmp #$05
  4507 2B82 D0 06			jne l_0F6E
  4508 2B84			@
  4509
  4510 				; optimize FAIL ('SETLEVEL05', main.pas), line = 90
  4511
  4512 2B84 20 B3 21			jsr SETLEVEL05
  4513 2B87 4C A5 2B			jmp a_0009
  4514 2B8A			l_0F6E
  4515 2B8A C9 06			cmp #$06
  4516 2B8C D0 06			jne l_0F78
  4517 2B8E			@
  4518
  4519 				; optimize FAIL ('SETLEVEL06', main.pas), line = 91
  4520
  4521 2B8E 20 75 23			jsr SETLEVEL06
  4522 2B91 4C A5 2B			jmp a_0009
  4523 2B94			l_0F78
  4524 2B94 C9 07			cmp #$07
  4525 2B96 D0 06			jne l_0F82
  4526 2B98			@
  4527
  4528 				; optimize FAIL ('SETLEVEL07', main.pas), line = 92
  4529
  4530 2B98 20 4D 25			jsr SETLEVEL07
  4531 2B9B 4C A5 2B			jmp a_0009
  4532 2B9E			l_0F82
  4533 2B9E C9 08			cmp #$08
  4534 2BA0 D0 03			jne l_0F8C
  4535 2BA2			@
  4536
  4537 				; optimize FAIL ('SETLEVEL08', main.pas), line = 93
  4538
  4539 2BA2 20 29 27			jsr SETLEVEL08
  4540 2BA5			l_0F8C
  4541 2BA5			a_0009
  4542
  4543 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 96
  4544
  4545 2BA5 20 BE 12			jsr ANIMATEOBSTACLES
  4546 2BA8 20 C4 11			jsr SHOWSCORE
  4547 2BAB 20 FE 2A			jsr STARTSCREEN
  4548
  4549 				; --- RepeatUntilProlog
  4550 2BAE			l_0F9E
  4551
  4552 				; optimize FAIL ('SYSTEM.PAUSE_006B', main.pas), line = 99
  4553
  4554 2BAE 20 23 11			jsr SYSTEM.PAUSE_006B
  4555
  4556 				; optimize OK (main.pas), line = 100
  4557
  4558 2BB1 AD B1 2C			lda PLAYER1
  4559 2BB4 8D AD 2C			sta PLY
  4560 2BB7 AD B2 2C			lda PLAYER1+1
  4561 2BBA 8D AE 2C			sta PLY+1
  4562 2BBD 20 A9 29			jsr PLAYERMOVE
  4563
  4564 				; optimize OK (main.pas), line = 102
  4565
  4566 2BC0 A9 02			lda #$02
  4567 2BC2 8D C8 2C			sta SYSTEM.PAUSE_006C.N
  4568 2BC5 A9 00			lda #$00
  4569 2BC7 8D C9 2C			sta SYSTEM.PAUSE_006C.N+1
  4570 2BCA 20 2A 11			jsr SYSTEM.PAUSE_006C
  4571
  4572 				; optimize OK (main.pas), line = 103
  4573
  4574 2BCD AD B3 2C			lda PLAYER2
  4575 2BD0 8D AD 2C			sta PLY
  4576 2BD3 AD B4 2C			lda PLAYER2+1
  4577 2BD6 8D AE 2C			sta PLY+1
  4578 2BD9 20 A9 29			jsr PLAYERMOVE
  4579
  4580 				; optimize OK (main.pas), line = 104
  4581
  4582 2BDC AD B5 2C			lda PLAYER3
  4583 2BDF 8D AD 2C			sta PLY
  4584 2BE2 AD B6 2C			lda PLAYER3+1
  4585 2BE5 8D AE 2C			sta PLY+1
  4586 2BE8 20 A9 29			jsr PLAYERMOVE
  4587
  4588 				; optimize OK (main.pas), line = 105
  4589
  4590 2BEB AD B7 2C			lda PLAYER4
  4591 2BEE 8D AD 2C			sta PLY
  4592 2BF1 AD B8 2C			lda PLAYER4+1
  4593 2BF4 8D AE 2C			sta PLY+1
  4594 2BF7 20 A9 29			jsr PLAYERMOVE
  4595
  4596 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 106
  4597
  4598 2BFA 20 BE 12			jsr ANIMATEOBSTACLES
  4599
  4600 				; optimize OK (main.pas), line = 107
  4601
  4602 2BFD A5 5A			lda ALIVE
  4603 2BFF F0 04			jeq l_0F9Ex
  4604 2C01 C9 FF			cmp #$FF
  4605 2C03 D0 A9			jne l_0F9E
  4606 2C05			l_0F9Ex
  4607
  4608 				; optimize OK (main.pas), line = 109
  4609
  4610 2C05 AD D5 2C			lda PLAYER1.ISALIVE
  4611 2C08 F0 03			jeq l_0FDF
  4612 2C0A EE D4 2C			inc PLAYER1.SCORE
  4613 2C0D			l_0FDF
  4614
  4615 				; optimize OK (main.pas), line = 110
  4616
  4617 2C0D AD DD 2C			lda PLAYER2.ISALIVE
  4618 2C10 F0 03			jeq l_0FF2
  4619 2C12 EE DC 2C			inc PLAYER2.SCORE
  4620 2C15			l_0FF2
  4621
  4622 				; optimize OK (main.pas), line = 111
  4623
  4624 2C15 AD E5 2C			lda PLAYER3.ISALIVE
  4625 2C18 F0 03			jeq l_1005
  4626 2C1A EE E4 2C			inc PLAYER3.SCORE
  4627 2C1D			l_1005
  4628
  4629 				; optimize OK (main.pas), line = 112
  4630
  4631 2C1D AD ED 2C			lda PLAYER4.ISALIVE
  4632 2C20 F0 03			jeq l_1018
  4633 2C22 EE EC 2C			inc PLAYER4.SCORE
  4634 2C25			l_1018
  4635
  4636 				; optimize OK (main.pas), line = 114
  4637
  4638 2C25 A9 64			lda #$64
  4639 2C27 8D C8 2C			sta SYSTEM.PAUSE_006C.N
  4640 2C2A A9 00			lda #$00
  4641 2C2C 8D C9 2C			sta SYSTEM.PAUSE_006C.N+1
  4642 2C2F 20 2A 11			jsr SYSTEM.PAUSE_006C
  4643
  4644 				; ------------------------------------------------------------
  4645
  4646 = 2D1E			@CASETMP_0009	= DATAORIGIN+$0062
  4647
  4648 = 2D1E			@VarData	= @CASETMP_0009
  4649 = 0001			@VarDataSize	= 1
  4650
  4651 2C32			@exit
  4652 					.ifdef @new
  4653 					lda <@VarData
  4654 					sta :ztmp
  4655 					lda >@VarData
  4656 					ldy #@VarDataSize-1
  4657 					jmp @FreeMem
  4658 					els
  4659 2C32 60				rts						; ret
  4660 					eif
  4661 				.endl
  4662 2C33			l_0007
  4663
  4664 				; --- RepeatUntilProlog
  4665 2C33			l_1023
  4666
  4667 				; optimize OK (main.pas), line = 121
  4668
  4669 2C33 A9 30			lda #$30
  4670 2C35 8D D4 2C			sta PLAYER1.SCORE
  4671 2C38 8D DC 2C			sta PLAYER2.SCORE
  4672
  4673 				; optimize OK (main.pas), line = 122
  4674
  4675 2C3B 8D E4 2C			sta PLAYER3.SCORE
  4676 2C3E 8D EC 2C			sta PLAYER4.SCORE
  4677
  4678 				; optimize OK (main.pas), line = 123
  4679
  4680 2C41 A9 01			lda #$01
  4681 2C43 8D CC 2C			sta LEVEL
  4682
  4683 				; optimize OK (main.pas), line = 125
  4684
  4685 2C46 A9 00			lda #$00
  4686 2C48 8D CD 2C			sta GAMEOVER
  4687
  4688 				; --- RepeatUntilProlog
  4689 2C4B			l_103C
  4690
  4691 				; optimize FAIL ('MAINLOOP', main.pas), line = 127
  4692
  4693 2C4B 20 41 2B			jsr MAINLOOP
  4694
  4695 				; optimize FAIL (0, main.pas), line = 128
  4696
  4697 2C4E EE CC 2C			inc LEVEL
  4698 2C51 AD CC 2C			lda LEVEL
  4699 2C54 C9 08			cmp #$08
  4700 2C56 D0 05			jne l_1053
  4701 2C58 A9 05			lda #$05
  4702 2C5A 8D CC 2C			sta LEVEL
  4703 2C5D			l_1053
  4704
  4705 				; optimize OK (main.pas), line = 129
  4706
  4707 2C5D AD D4 2C			lda PLAYER1.SCORE
  4708 2C60 C9 39			cmp #$39
  4709 2C62 D0 05			jne l_106C
  4710 2C64 A9 01			lda #$01
  4711 2C66 8D CD 2C			sta GAMEOVER
  4712 2C69			l_106C
  4713
  4714 				; optimize OK (main.pas), line = 130
  4715
  4716 2C69 AD DC 2C			lda PLAYER2.SCORE
  4717 2C6C C9 39			cmp #$39
  4718 2C6E D0 05			jne l_1085
  4719 2C70 A9 01			lda #$01
  4720 2C72 8D CD 2C			sta GAMEOVER
  4721 2C75			l_1085
  4722
  4723 				; optimize OK (main.pas), line = 131
  4724
  4725 2C75 AD E4 2C			lda PLAYER3.SCORE
  4726 2C78 C9 39			cmp #$39
  4727 2C7A D0 05			jne l_109E
  4728 2C7C A9 01			lda #$01
  4729 2C7E 8D CD 2C			sta GAMEOVER
  4730 2C81			l_109E
  4731
  4732 				; optimize OK (main.pas), line = 132
  4733
  4734 2C81 AD EC 2C			lda PLAYER4.SCORE
  4735 2C84 C9 39			cmp #$39
  4736 2C86 D0 05			jne l_10B7
  4737 2C88 A9 01			lda #$01
  4738 2C8A 8D CD 2C			sta GAMEOVER
  4739 2C8D			l_10B7
  4740
  4741 				; optimize OK (main.pas), line = 133
  4742
  4743 2C8D AD CD 2C			lda GAMEOVER
  4744 2C90 F0 B9			jeq l_103C
  4745
  4746 				; optimize FAIL ('SHOWSCORE', main.pas), line = 135
  4747
  4748 2C92 20 C4 11			jsr SHOWSCORE
  4749
  4750 				; optimize OK (main.pas), line = 137
  4751
  4752 2C95 A9 C8			lda #$C8
  4753 2C97 8D C8 2C			sta SYSTEM.PAUSE_006C.N
  4754 2C9A A9 00			lda #$00
  4755 2C9C 8D C9 2C			sta SYSTEM.PAUSE_006C.N+1
  4756 2C9F 20 2A 11			jsr SYSTEM.PAUSE_006C
  4757
  4758 				; optimize OK (main.pas), line = 138
  4759
  4760 2CA2 4C 33 2C			jmp l_1023
  4761
  4762 				; ------------------------------------------------------------
  4763
  4764 = 0800			ATTRIBUTE_ADDR	= $0800
  4765 = 0C00			SCREEN_ADDR	= $0C00
  4766 = 0009			VICTORIES	= $09
  4767 = 0005			LOOK_AHEAD	= $05
  4768 = 007E			TRASH	= $7E
  4769 = 0020			EMPTY	= $20
  4770 = 00A0			WALL	= $A0
  4771 = 0041			WALL_COLOUR	= $41
  4772 = 0030			ZERO	= $30
  4773 = 0056			OBSTACLE_1	= $56
  4774 = 005B			OBSTACLE_2	= $5B
  4775 = 0035			OBST_COLOUR	= $35
  4776 = 0051			PLY_HEAD	= $51
  4777 = 002A			PLY_CRASH	= $2A
  4778 = 0057			PLY_BUSTED	= $57
  4779 = 0042			PLY_TAIL_UD	= $42
  4780 = 0040			PLY_TAIL_LR	= $40
  4781 = 007D			PLY_TAIL_RD	= $7D
  4782 = 006E			PLY_TAIL_RU	= $6E
  4783 = 006D			PLY_TAIL_LD	= $6D
  4784 = 0070			PLY_TAIL_LU	= $70
  4785 = 0062			PLY1_COLOUR	= $62
  4786 = 005D			PLY2_COLOUR	= $5D
  4787 = 0071			PLY3_COLOUR	= $71
  4788 = 0055			PLY4_COLOUR	= $55
  4789 = 0000			PLY_CTRL	= $00
  4790 = 0001			AI_STRAIGHT	= $01
  4791 = 0002			AI_SAPPER	= $02
  4792 = 0003			AI_BULLY	= $03
  4793 = 0004			AI_MIRROR	= $04
  4794 = 0001			JOY_UP	= $01
  4795 = 0002			JOY_DOWN	= $02
  4796 = 0004			JOY_LEFT	= $04
  4797 = 0008			JOY_RIGHT	= $08
  4798 = 0040			JOY_FIRE	= $40
  4799 = 0002			JOY_SELECT_1	= $02
  4800 = 0004			JOY_SELECT_2	= $04
  4801 = 100E			adr.MUL40	= CODEORIGIN+$0000
  4802 2CA5			.var MUL40	= adr.MUL40 .word
  4803 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  4804 2CA5			.var DIRECTION	= adr.DIRECTION .word
  4805 = FD30			KEYSCAN	= $FD30
  4806 = FF08			JOY	= $FF08
  4807 = FF15			BACKGROUND	= $FF15
  4808 = FF19			BOREDER	= $FF19
  4809 = 0058			T0B	= $58
  4810 = 0059			I0B	= $59
  4811 = 005A			ALIVE	= $5A
  4812 = 005B			NEWDIR	= $5B
  4813 = 005C			AVAILDIR	= $5C
  4814 = 005D			T0W	= $5D
  4815 = 005F			adr.PLY	= $5F
  4816 2CA5			.var PLY	= adr.PLY .word
  4817 = 2CBC			PLY.X	= DATAORIGIN+$0000
  4818 = 2CBD			PLY.Y	= DATAORIGIN+$0001
  4819 = 2CBE			PLY.HEAD	= DATAORIGIN+$0002
  4820 = 2CBF			PLY.COLOUR	= DATAORIGIN+$0003
  4821 = 2CC0			PLY.DIR	= DATAORIGIN+$0004
  4822 = 2CC1			PLY.BRAIN	= DATAORIGIN+$0005
  4823 = 2CC2			PLY.SCORE	= DATAORIGIN+$0006
  4824 = 2CC3			PLY.ISALIVE	= DATAORIGIN+$0007
  4825 = 0061			adr.TMPPLY	= $61
  4826 2CA5			.var TMPPLY	= adr.TMPPLY .word
  4827 = 2CBC			TMPPLY.X	= DATAORIGIN+$0000
  4828 = 2CBD			TMPPLY.Y	= DATAORIGIN+$0001
  4829 = 2CBE			TMPPLY.HEAD	= DATAORIGIN+$0002
  4830 = 2CBF			TMPPLY.COLOUR	= DATAORIGIN+$0003
  4831 = 2CC0			TMPPLY.DIR	= DATAORIGIN+$0004
  4832 = 2CC1			TMPPLY.BRAIN	= DATAORIGIN+$0005
  4833 = 2CC2			TMPPLY.SCORE	= DATAORIGIN+$0006
  4834 = 2CC3			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  4835 = 0063			JOYSTATUS	= $63
  4836 = 2CCC			LEVEL	= DATAORIGIN+$0010
  4837 = 2CCD			GAMEOVER	= DATAORIGIN+$0011
  4838 = 2CCE			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  4839 2CA5			.var PLAYER1	= adr.PLAYER1 .word
  4840 = 2CCE			PLAYER1.X	= DATAORIGIN+$0012
  4841 = 2CCF			PLAYER1.Y	= DATAORIGIN+$0013
  4842 = 2CD0			PLAYER1.HEAD	= DATAORIGIN+$0014
  4843 = 2CD1			PLAYER1.COLOUR	= DATAORIGIN+$0015
  4844 = 2CD2			PLAYER1.DIR	= DATAORIGIN+$0016
  4845 = 2CD3			PLAYER1.BRAIN	= DATAORIGIN+$0017
  4846 = 2CD4			PLAYER1.SCORE	= DATAORIGIN+$0018
  4847 = 2CD5			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  4848 = 2CD6			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  4849 2CA5			.var PLAYER2	= adr.PLAYER2 .word
  4850 = 2CD6			PLAYER2.X	= DATAORIGIN+$001A
  4851 = 2CD7			PLAYER2.Y	= DATAORIGIN+$001B
  4852 = 2CD8			PLAYER2.HEAD	= DATAORIGIN+$001C
  4853 = 2CD9			PLAYER2.COLOUR	= DATAORIGIN+$001D
  4854 = 2CDA			PLAYER2.DIR	= DATAORIGIN+$001E
  4855 = 2CDB			PLAYER2.BRAIN	= DATAORIGIN+$001F
  4856 = 2CDC			PLAYER2.SCORE	= DATAORIGIN+$0020
  4857 = 2CDD			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  4858 = 2CDE			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  4859 2CA5			.var PLAYER3	= adr.PLAYER3 .word
  4860 = 2CDE			PLAYER3.X	= DATAORIGIN+$0022
  4861 = 2CDF			PLAYER3.Y	= DATAORIGIN+$0023
  4862 = 2CE0			PLAYER3.HEAD	= DATAORIGIN+$0024
  4863 = 2CE1			PLAYER3.COLOUR	= DATAORIGIN+$0025
  4864 = 2CE2			PLAYER3.DIR	= DATAORIGIN+$0026
  4865 = 2CE3			PLAYER3.BRAIN	= DATAORIGIN+$0027
  4866 = 2CE4			PLAYER3.SCORE	= DATAORIGIN+$0028
  4867 = 2CE5			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  4868 = 2CE6			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  4869 2CA5			.var PLAYER4	= adr.PLAYER4 .word
  4870 = 2CE6			PLAYER4.X	= DATAORIGIN+$002A
  4871 = 2CE7			PLAYER4.Y	= DATAORIGIN+$002B
  4872 = 2CE8			PLAYER4.HEAD	= DATAORIGIN+$002C
  4873 = 2CE9			PLAYER4.COLOUR	= DATAORIGIN+$002D
  4874 = 2CEA			PLAYER4.DIR	= DATAORIGIN+$002E
  4875 = 2CEB			PLAYER4.BRAIN	= DATAORIGIN+$002F
  4876 = 2CEC			PLAYER4.SCORE	= DATAORIGIN+$0030
  4877 = 2CED			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  4878 = 2CEE			adr.OBSTACLES	= [DATAORIGIN+$0032] .array [8] .word
  4879 2CA5			.var OBSTACLES	= adr.OBSTACLES .word
  4880 2CA5			@exit
  4881
  4882 2CA5 A2 00		@halt	ldx #$00
  4883 2CA7 9A				txs
  4884
  4885 2CA8 60				rts
  4886
  4887 				; ------------------------------------------------------------
  4888
  4889 				; ------------------------------------------------------------
  4890
  4891 2CA9			.local	@DEFINES
  4892 2CA9			C4P
  4893 				.endl
  4894
  4895 2CA9			.local	@RESOURCE
  4896 				.endl
  4897
  4898 = 2CA9 0E 10		MUL40
  4898 = 2CAB 40 10		DIRECTION
  4898 = 2CAD 5F 00		PLY
  4898 = 2CAF 61 00		TMPPLY
  4898 = 2CB1 CE 2C		PLAYER1
  4898 = 2CB3 D6 2C		PLAYER2
  4898 = 2CB5 DE 2C		PLAYER3
  4898 = 2CB7 E6 2C		PLAYER4
  4898 = 2CB9 EE 2C		OBSTACLES
  4898 				.endl							; MAIN
  4899
  4900 				; ------------------------------------------------------------
  4901 				; ------------------------------------------------------------
  4902
  4903 				.macro	UNITINITIALIZATION
  4904 				
  4905 					.ifdef MAIN.SYSTEM.@UnitInit
  4906 					jsr MAIN.SYSTEM.@UnitInit
  4907 					eif
  4908 				.endm
  4909
  4910 				; ------------------------------------------------------------
  4911
  4912 					ift .SIZEOF(MAIN.SYSTEM) > 0
  4913 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  4913 				SYSTEM: $10D5..$1177
  4914 					eif
  4915
  4916 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  4916 				CODE: $100E..$2CA8
  4917
  4918 				; ------------------------------------------------------------
  4919
  4920 2CBB				.align $04
  4921
  4922 2CBC			DATAORIGIN
  4923 2CBC 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  4924
  4925 = 0006			VARINITSIZE	= *-DATAORIGIN
  4926 = 0063			VARDATASIZE	= 99
  4927
  4928 = 2D1F			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  4929
  4930 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  4930 				DATA: $2CBC..$2D1F
  4931
  4932 				; ------------------------------------------------------------
  4933
  4934 				.macro	STATICDATA
  4935 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  4936 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  4937 				.by  $C0 $03 $01 $02 $04 $08
  4938 				.endm
  4939
  4940 					end
