mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E FD 24			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0056			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 251A			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 AA			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 70 24 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 70 85 02 A9 25 + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 8C 24			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 1F 25		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 1F 25 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 251F			RESULT	= DATAORIGIN+$000B
   182
   183 = 251F			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD 20 25		loop  lda n
   307 1126 0D 21 25		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD 20 25 D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 2520			N	= DATAORIGIN+$000C
   321
   322 = 2520			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D 22 25			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD 22 25		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C 23 25		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD 23 25 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 2522			RANGE	= DATAORIGIN+$000E
   383 = 2523			RESULT	= DATAORIGIN+$000F
   384
   385 = 2522			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 2514			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 2516			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 2518			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 2519			FILEMODE	= DATAORIGIN+$0005
   450 = 251A			GRAPHMODE	= DATAORIGIN+$0006
   451 = 251B			IORESULT	= DATAORIGIN+$0007
   452 = 251C			EOLN	= DATAORIGIN+$0008
   453 = 251D			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD 57 25			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D 56 25			add X
   466 117D 85 5D			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5E			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5D			ldy T0W
   475 118A AD 59 25			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5E			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD 58 25			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 2556			X	= DATAORIGIN+$0042
   486 = 2557			Y	= DATAORIGIN+$0043
   487 = 2558			V	= DATAORIGIN+$0044
   488 = 2559			C	= DATAORIGIN+$0045
   489
   490 = 2556			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 29 25			lda PLAYER1.COLOUR
   510 119F 8D 59 25			sta PUTCHAR.C
   511 11A2 AD 2C 25			lda PLAYER1.SCORE
   512 11A5 8D 58 25			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D 57 25			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D 56 25			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD 31 25			lda PLAYER2.COLOUR
   522 11B8 8D 59 25			sta PUTCHAR.C
   523 11BB AD 34 25			lda PLAYER2.SCORE
   524 11BE 8D 58 25			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D 57 25			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D 56 25			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD 39 25			lda PLAYER3.COLOUR
   534 11D1 8D 59 25			sta PUTCHAR.C
   535 11D4 AD 3C 25			lda PLAYER3.SCORE
   536 11D7 8D 58 25			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D 57 25			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D 56 25			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD 41 25			lda PLAYER4.COLOUR
   546 11EA 8D 59 25			sta PUTCHAR.C
   547 11ED AD 44 25			lda PLAYER4.SCORE
   548 11F0 8D 58 25			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D 57 25			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D 56 25			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5C			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AC 04 25 84 12 AC + 	mwy PLY :bp2
   576 120F A0 01			ldy #PLY.Y-DATAORIGIN
   577 1211 B1 12			lda (:bp2),y
   578 1213 0A				asl @
   579 1214 A8				tay
   580 1215 A9 00			lda #$00
   581 1217 18 79 0E 10			add adr.MUL40,y
   582 121B 85 21			sta :STACKORIGIN+9
   583 121D A9 0C			lda #$0C
   584 121F 79 0F 10			adc adr.MUL40+1,y
   585 1222 85 31			sta :STACKORIGIN+STACKWIDTH+9
   586 1224 A0 00			ldy #PLY.X-DATAORIGIN
   587 1226 A5 21			lda :STACKORIGIN+9
   588 1228 18 71 12			add (:bp2),y
   589 122B 85 5D			sta T0W
   590 122D A5 31			lda :STACKORIGIN+STACKWIDTH+9
   591 122F 69 00			adc #$00
   592 1231 85 5E			sta T0W+1
   593
   594 				; optimize OK (tools.inc), line = 26
   595
   596 1233 A5 5D			lda T0W
   597 1235 38 E9 28			sub #$28
   598 1238 85 21			sta :STACKORIGIN+9
   599 123A A5 5E			lda T0W+1
   600 123C E9 00			sbc #$00
   601 123E 85 11			sta :bp+1
   602 1240 A4 21			ldy :STACKORIGIN+9
   603 1242 B1 10			lda (:bp),y
   604 1244 C9 20			cmp #$20
   605 1246 D0 06			jne l_00EE
   606 1248 A5 5C			lda AVAILDIR
   607 124A 09 01			ora #$01
   608 124C 85 5C			sta AVAILDIR
   609 124E			l_00EE
   610
   611 				; optimize OK (tools.inc), line = 27
   612
   613 124E A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   614 1256 A0 28			ldy #$28
   615 1258 B1 12			lda (:bp2),y
   616 125A C9 20			cmp #$20
   617 125C D0 06			jne l_0111
   618 125E A5 5C			lda AVAILDIR
   619 1260 09 02			ora #$02
   620 1262 85 5C			sta AVAILDIR
   621 1264			l_0111
   622
   623 				; optimize OK (tools.inc), line = 28
   624
   625 1264 A5 5D			lda T0W
   626 1266 38 E9 01			sub #$01
   627 1269 85 21			sta :STACKORIGIN+9
   628 126B A5 5E			lda T0W+1
   629 126D E9 00			sbc #$00
   630 126F 85 11			sta :bp+1
   631 1271 A4 21			ldy :STACKORIGIN+9
   632 1273 B1 10			lda (:bp),y
   633 1275 C9 20			cmp #$20
   634 1277 D0 06			jne l_0134
   635 1279 A5 5C			lda AVAILDIR
   636 127B 09 04			ora #$04
   637 127D 85 5C			sta AVAILDIR
   638 127F			l_0134
   639
   640 				; optimize OK (tools.inc), line = 29
   641
   642 127F A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   643 1287 A0 01			ldy #$01
   644 1289 B1 12			lda (:bp2),y
   645 128B C9 20			cmp #$20
   646 128D D0 06			jne l_0157
   647 128F A5 5C			lda AVAILDIR
   648 1291 09 08			ora #$08
   649 1293 85 5C			sta AVAILDIR
   650 1295			l_0157
   651 1295			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 1295 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 1296			.local	ANIMATEOBSTACLES				; PROCEDURE
   664
   665 				; optimize FAIL (0, tools.inc), line = 38
   666
   667 1296 EE 5A 25			inc COUNTER
   668
   669 				; optimize OK (tools.inc), line = 39
   670
   671 1299 AD 5A 25			lda COUNTER
   672 129C 29 01			and #$01
   673 129E F0 08			jeq l_0182
   674 12A0 A9 56			lda #$56
   675 12A2 8D 5B 25			sta OBST
   676 12A5 4C AD 12			jmp l_0190
   677 12A8			l_0182
   678 12A8 A9 5B			lda #$5B
   679 12AA 8D 5B 25			sta OBST
   680 12AD			l_0190
   681
   682 				; optimize OK (tools.inc), line = 40
   683
   684 12AD A9 07			lda #$07
   685 12AF 85 59			sta I0B
   686
   687 12B1			l_019D
   688 				; --- ForToDoCondition
   689 12B1 A5 59			lda I0B
   690 12B3 0A				asl @
   691 12B4 A8				tay
   692 12B5 B9 46 25			lda adr.OBSTACLES,y
   693 12B8 85 21			sta :STACKORIGIN+9
   694 12BA B9 47 25			lda adr.OBSTACLES+1,y
   695 12BD 85 11			sta :bp+1
   696 12BF A4 21			ldy :STACKORIGIN+9
   697 12C1 AD 5B 25			lda OBST
   698 12C4 91 10			sta (:bp),y
   699 12C6 C6 59			dec I0B
   700 12C8 10 E7			jpl l_019D
   701 12CA			l_01AB
   702
   703 				; ------------------------------------------------------------
   704
   705 = 255A			COUNTER	= DATAORIGIN+$0046
   706 = 255B			OBST	= DATAORIGIN+$0047
   707 = 0000			@FORTMP_019A	= $00
   708
   709 = 255A			@VarData	= COUNTER
   710 = 0002			@VarDataSize	= 2
   711
   712 12CA			@exit
   713 					.ifdef @new
   714 					lda <@VarData
   715 					sta :ztmp
   716 					lda >@VarData
   717 					ldy #@VarDataSize-1
   718 					jmp @FreeMem
   719 					els
   720 12CA 60				rts						; ret
   721 					eif
   722 				.endl
   723
   724 12CB			.local	SAVEOBSTACLES					; PROCEDURE
   725
   726 				; optimize OK (tools.inc), line = 47
   727
   728 12CB A9 07			lda #$07
   729 12CD 85 59			sta I0B
   730
   731 12CF			l_01C6
   732 				; --- ForToDoCondition
   733
   734 				; optimize OK (tools.inc), line = 48
   735
   736 12CF A5 59			lda I0B
   737 12D1 0A				asl @
   738 12D2 A8				tay
   739 12D3 B9 47 25			lda adr.OBSTACLES+1,y
   740 12D6 C9 00			cmp #$00
   741 12D8 D0 05			bne @+
   742 12DA B9 46 25			lda adr.OBSTACLES,y
   743 12DD C9 7E			cmp #$7E
   744 12DF			@
   745 12DF F0 29			jeq l_01E8
   746
   747 				; optimize OK (tools.inc), line = 49
   748
   749 12E1 B9 46 25			lda adr.OBSTACLES,y
   750 12E4 85 21			sta :STACKORIGIN+9
   751 12E6 B9 47 25			lda adr.OBSTACLES+1,y
   752 12E9 85 11			sta :bp+1
   753 12EB A4 21			ldy :STACKORIGIN+9
   754 12ED A9 56			lda #$56
   755 12EF 91 10			sta (:bp),y
   756
   757 				; optimize OK (tools.inc), line = 50
   758
   759 12F1 A5 59			lda I0B
   760 12F3 0A				asl @
   761 12F4 A8				tay
   762 12F5 B9 46 25			lda adr.OBSTACLES,y
   763 12F8 38 E9 00			sub #$00
   764 12FB 85 21			sta :STACKORIGIN+9
   765 12FD B9 47 25			lda adr.OBSTACLES+1,y
   766 1300 E9 04			sbc #$04
   767 1302 85 11			sta :bp+1
   768 1304 A4 21			ldy :STACKORIGIN+9
   769 1306 A9 35			lda #$35
   770 1308 91 10			sta (:bp),y
   771 130A			l_01E8
   772
   773 				; --- ForToDoEpilog
   774 130A C6 59			dec I0B
   775 130C 10 C1			jpl l_01C6
   776 130E			l_01D4
   777
   778 				; ------------------------------------------------------------
   779
   780 = 0000			@FORTMP_01C3	= $00
   781 130E			@exit
   782 					.ifdef @new
   783 					lda <@VarData
   784 					sta :ztmp
   785 					lda >@VarData
   786 					ldy #@VarDataSize-1
   787 					jmp @FreeMem
   788 					els
   789 130E 60				rts						; ret
   790 					eif
   791 				.endl
   792
   793 130F			.local	DRAWTAIL					; PROCEDURE
   794
   795 				; optimize OK (tools.inc), line = 59
   796
   797 130F AC 04 25 84 12 AC + 	mwy PLY :bp2
   798 1319 A0 04			ldy #PLY.DIR-DATAORIGIN
   799 131B B1 12			lda (:bp2),y
   800 131D C5 5B			cmp NEWDIR
   801 131F D0 14			jne l_021A
   802
   803 				; optimize OK (tools.inc), line = 60
   804
   805 1321 A5 5B			lda NEWDIR
   806 1323 29 0C			and #$0C
   807 1325 F0 07			jeq l_0231
   808 1327 A9 40			lda #$40
   809 1329 85 58			sta T0B
   810 132B 4C 32 13			jmp l_023F
   811 132E			l_0231
   812 132E A9 42			lda #$42
   813 1330 85 58			sta T0B
   814 1332			l_023F
   815 1332 4C A5 13			jmp l_024C
   816 1335			l_021A
   817
   818 				; optimize OK (tools.inc), line = 62
   819
   820 1335 AC 04 25 84 12 AC + 	mwy PLY :bp2
   821 133F A0 04			ldy #PLY.DIR-DATAORIGIN
   822 1341 B1 12			lda (:bp2),y
   823 1343 29 0A			and #$0A
   824 1345 F0 0A			jeq l_0272
   825 1347 A5 5B			lda NEWDIR
   826 1349 29 05			and #$05
   827 134B F0 04			jeq l_0272
   828 134D A9 7D			lda #$7D
   829 134F 85 58			sta T0B
   830 1351			l_0272
   831
   832 				; optimize OK (tools.inc), line = 63
   833
   834 1351 AC 04 25 84 12 AC + 	mwy PLY :bp2
   835 135B A0 04			ldy #PLY.DIR-DATAORIGIN
   836 135D B1 12			lda (:bp2),y
   837 135F 29 09			and #$09
   838 1361 F0 0A			jeq l_029F
   839 1363 A5 5B			lda NEWDIR
   840 1365 29 06			and #$06
   841 1367 F0 04			jeq l_029F
   842 1369 A9 6E			lda #$6E
   843 136B 85 58			sta T0B
   844 136D			l_029F
   845
   846 				; optimize OK (tools.inc), line = 64
   847
   848 136D AC 04 25 84 12 AC + 	mwy PLY :bp2
   849 1377 A0 04			ldy #PLY.DIR-DATAORIGIN
   850 1379 B1 12			lda (:bp2),y
   851 137B 29 06			and #$06
   852 137D F0 0A			jeq l_02CC
   853 137F A5 5B			lda NEWDIR
   854 1381 29 09			and #$09
   855 1383 F0 04			jeq l_02CC
   856 1385 A9 6D			lda #$6D
   857 1387 85 58			sta T0B
   858 1389			l_02CC
   859
   860 				; optimize OK (tools.inc), line = 65
   861
   862 1389 AC 04 25 84 12 AC + 	mwy PLY :bp2
   863 1393 A0 04			ldy #PLY.DIR-DATAORIGIN
   864 1395 B1 12			lda (:bp2),y
   865 1397 29 05			and #$05
   866 1399 F0 0A			jeq l_02F9
   867 139B A5 5B			lda NEWDIR
   868 139D 29 0A			and #$0A
   869 139F F0 04			jeq l_02F9
   870 13A1 A9 70			lda #$70
   871 13A3 85 58			sta T0B
   872 13A5			l_02F9
   873 13A5			l_024C
   874
   875 				; optimize OK (tools.inc), line = 67
   876
   877 13A5 AC 04 25 84 12 AC + 	mwy PLY :bp2
   878 13AF A0 00			ldy #PLY.X-DATAORIGIN
   879 13B1 B1 12			lda (:bp2),y
   880 13B3 8D 56 25			sta PUTCHAR.X
   881 13B6 A0 01			ldy #PLY.Y-DATAORIGIN
   882 13B8 B1 12			lda (:bp2),y
   883 13BA 8D 57 25			sta PUTCHAR.Y
   884 13BD A0 03			ldy #PLY.COLOUR-DATAORIGIN
   885 13BF B1 12			lda (:bp2),y
   886 13C1 8D 59 25			sta PUTCHAR.C
   887 13C4 A5 58			lda T0B
   888 13C6 8D 58 25			sta PUTCHAR.V
   889 13C9 20 71 11			jsr PUTCHAR
   890 13CC			@exit
   891 					.ifdef @new
   892 					lda <@VarData
   893 					sta :ztmp
   894 					lda >@VarData
   895 					ldy #@VarDataSize-1
   896 					jmp @FreeMem
   897 					els
   898 13CC 60				rts						; ret
   899 					eif
   900 				.endl
   901
   902 13CD			.local	INITPLAYERS					; PROCEDURE
   903
   904 				; optimize OK (init.inc), line = 5
   905
   906 13CD AD 5C 25			lda P
   907 13D0 8D 04 25			sta PLY
   908 13D3 85 12			sta :bp2
   909 13D5 AD 5D 25			lda P+1
   910 13D8 8D 05 25			sta PLY+1
   911 13DB 85 13			sta :bp2+1
   912 				; optimize OK (init.inc), line = 6
   913 13DD A0 05			ldy #PLY.BRAIN-DATAORIGIN
   914 13DF AD 61 25			lda BRAIN
   915 13E2 91 12			sta (:bp2),y
   916 13E4 A0 00			ldy #PLY.X-DATAORIGIN
   917 13E6 AD 5E 25			lda X
   918 13E9 91 12			sta (:bp2),y
   919 13EB A0 01			ldy #PLY.Y-DATAORIGIN
   920 13ED AD 5F 25			lda Y
   921 13F0 91 12			sta (:bp2),y
   922 13F2 A0 04			ldy #PLY.DIR-DATAORIGIN
   923 13F4 AD 60 25			lda DIR
   924 13F7 91 12			sta (:bp2),y
   925
   926 				; optimize OK (init.inc), line = 7
   927
   928 13F9 A0 02			ldy #PLY.HEAD-DATAORIGIN
   929 13FB AD 62 25			lda HEAD
   930 13FE 91 12			sta (:bp2),y
   931 1400 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   932 1402 AD 63 25			lda COLOUR
   933 1405 91 12			sta (:bp2),y
   934 1407 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
   935 1409 AD 64 25			lda ISALIVE
   936 140C 91 12			sta (:bp2),y
   937
   938 				; optimize OK (init.inc), line = 8
   939
   940 140E AD 64 25			lda ISALIVE
   941 1411 F0 1D			jeq l_034C
   942
   943 				; optimize FAIL (0, init.inc), line = 9
   944
   945 1413 E6 5A			inc ALIVE
   946 1415 AD 63 25			lda COLOUR
   947 1418 8D 59 25			sta PUTCHAR.C
   948 141B AD 62 25			lda HEAD
   949 141E 8D 58 25			sta PUTCHAR.V
   950 1421 AD 5F 25			lda Y
   951 1424 8D 57 25			sta PUTCHAR.Y
   952 1427 AD 5E 25			lda X
   953 142A 8D 56 25			sta PUTCHAR.X
   954 142D 20 71 11			jsr PUTCHAR
   955 1430			l_034C
   956
   957 				; ------------------------------------------------------------
   958
   959 = 255C			P	= DATAORIGIN+$0048
   960 = 255E			X	= DATAORIGIN+$004A
   961 = 255F			Y	= DATAORIGIN+$004B
   962 = 2560			DIR	= DATAORIGIN+$004C
   963 = 2561			BRAIN	= DATAORIGIN+$004D
   964 = 2562			HEAD	= DATAORIGIN+$004E
   965 = 2563			COLOUR	= DATAORIGIN+$004F
   966 = 2564			ISALIVE	= DATAORIGIN+$0050
   967
   968 = 255C			@VarData	= P
   969 = 0009			@VarDataSize	= 9
   970
   971 1430			@exit
   972 					.ifdef @new
   973 					lda <@VarData
   974 					sta :ztmp
   975 					lda >@VarData
   976 					ldy #@VarDataSize-1
   977 					jmp @FreeMem
   978 					els
   979 1430 60				rts						; ret
   980 					eif
   981 				.endl
   982
   983 1431			.local	INITPLAYFIELD					; PROCEDURE
   984
   985 				; optimize OK (init.inc), line = 17
   986
   987 1431 A9 1F			lda #$1F
   988 1433 8D 15 FF			sta BACKGROUND
   989 1436 A9 00			lda #$00
   990 1438 8D 19 FF			sta BOREDER
   991
   992 				; optimize OK (init.inc), line = 18
   993
   994 143B A9 20			lda #$20
   995 143D 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   996 143F A9 C0			lda #$C0
   997 1441 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   998 1443 A9 03			lda #$03
   999 1445 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
  1000 1447 A9 00			lda #$00
  1001 1449 85 08			sta SYSTEM.FILLCHAR_0056.A
  1002 144B A9 0C			lda #$0C
  1003 144D 85 09			sta SYSTEM.FILLCHAR_0056.A+1
  1004 144F 20 1F 11			jsr SYSTEM.FILLCHAR_0056
  1005
  1006 				; optimize OK (init.inc), line = 20
  1007
  1008 1452 A9 27			lda #$27
  1009 1454 85 58			sta T0B
  1010
  1011 1456			l_0379
  1012 				; --- ForToDoCondition
  1013
  1014 				; optimize OK (init.inc), line = 21
  1015
  1016 1456 A4 58			ldy T0B
  1017 1458 A9 A0			lda #$A0
  1018 145A 99 00 0C			sta $0C00,y
  1019
  1020 				; optimize OK (init.inc), line = 22
  1021
  1022 145D 99 C0 0F			sta $0FC0,y
  1023
  1024 				; optimize OK (init.inc), line = 23
  1025
  1026 1460 A9 41			lda #$41
  1027 1462 99 00 08			sta $0800,y
  1028
  1029 				; optimize OK (init.inc), line = 24
  1030
  1031 1465 99 C0 0B			sta $0BC0,y
  1032
  1033 				; --- ForToDoEpilog
  1034 1468 C6 58			dec T0B
  1035 146A 10 EA			jpl l_0379
  1036 146C			l_0387
  1037
  1038 				; optimize OK (init.inc), line = 27
  1039
  1040 146C A9 18			lda #$18
  1041 146E 85 58			sta T0B
  1042
  1043 1470			l_03B9
  1044 				; --- ForToDoCondition
  1045 1470 A5 58			lda T0B
  1046 1472 C9 01			cmp #$01
  1047 1474 90 3A			jcc l_03C7
  1048
  1049 				; optimize OK (init.inc), line = 28
  1050
  1051 1476 0A				asl @
  1052 1477 A8				tay
  1053 1478 A9 FF			lda #$FF
  1054 147A 18 79 0E 10			add adr.MUL40,y
  1055 147E 85 12			sta :bp2
  1056 1480 A9 0B			lda #$0B
  1057 1482 79 0F 10			adc adr.MUL40+1,y
  1058 1485 85 13			sta :bp2+1
  1059 1487 A0 00			ldy #$00
  1060 1489 A9 A0			lda #$A0
  1061 148B 91 12			sta (:bp2),y
  1062 148D C8				iny
  1063 148E 91 12			sta (:bp2),y
  1064
  1065 				; optimize OK (init.inc), line = 29
  1066
  1067 1490 A5 58			lda T0B
  1068 1492 0A				asl @
  1069 1493 A8				tay
  1070 1494 A9 FF			lda #$FF
  1071 1496 18 79 0E 10			add adr.MUL40,y
  1072 149A 85 12			sta :bp2
  1073 149C A9 07			lda #$07
  1074 149E 79 0F 10			adc adr.MUL40+1,y
  1075 14A1 85 13			sta :bp2+1
  1076 14A3 A0 00			ldy #$00
  1077 14A5 A9 41			lda #$41
  1078 14A7 91 12			sta (:bp2),y
  1079 14A9 C8				iny
  1080 14AA 91 12			sta (:bp2),y
  1081
  1082 				; --- ForToDoEpilog
  1083 14AC C6 58			dec T0B
  1084 14AE 10 C0			jpl l_03B9
  1085 14B0			l_03C7
  1086
  1087 				; ------------------------------------------------------------
  1088
  1089 = 0000			@FORTMP_0376	= $00
  1090 = 0001			@FORTMP_03B6	= $01
  1091 14B0			@exit
  1092 					.ifdef @new
  1093 					lda <@VarData
  1094 					sta :ztmp
  1095 					lda >@VarData
  1096 					ldy #@VarDataSize-1
  1097 					jmp @FreeMem
  1098 					els
  1099 14B0 60				rts						; ret
  1100 					eif
  1101 				.endl
  1102
  1103 14B1			.local	AISTRAIGHT					; PROCEDURE
  1104
  1105 				; optimize OK (ai.inc), line = 5
  1106
  1107 14B1 AC 04 25 84 12 AC + 	mwy PLY :bp2
  1108 14BB A0 04			ldy #PLY.DIR-DATAORIGIN
  1109 14BD B1 12			lda (:bp2),y
  1110 14BF 25 5C			and AVAILDIR
  1111 14C1 F0 07			jeq l_03FE
  1112 14C3 B1 12			lda (:bp2),y
  1113 14C5 85 5B			sta NEWDIR
  1114 14C7 4C 35 15			jmp l_040E
  1115 14CA			l_03FE
  1116
  1117 				; optimize OK (ai.inc), line = 7
  1118
  1119 14CA A5 5C			lda AVAILDIR
  1120 14CC C9 03			cmp #$03
  1121 14CE D0 10			jne l_0420
  1122 14D0 A9 02			lda #$02
  1123 14D2 20 40 11			jsr SYSTEM.RANDOM_006C
  1124 14D5 B4 18			ldy :STACKORIGIN,x
  1125 14D7 B9 40 10			lda adr.DIRECTION,y
  1126 14DA 85 5B			sta NEWDIR
  1127 14DC CA				dex
  1128 14DD 4C F8 14			jmp l_0432
  1129 14E0			l_0420
  1130
  1131 				; optimize OK (ai.inc), line = 9
  1132
  1133 14E0 A5 5C			lda AVAILDIR
  1134 14E2 8D 65 25			sta @CASETMP_0003
  1135 14E5 C9 01			cmp #$01
  1136 14E7 D0 07			jne l_043D
  1137 14E9			@
  1138
  1139 				; optimize OK (ai.inc), line = 10
  1140
  1141 14E9 A9 01			lda #$01
  1142 14EB 85 5B			sta NEWDIR
  1143
  1144 14ED 4C F8 14			jmp a_0003
  1145 14F0			l_043D
  1146 14F0 C9 02			cmp #$02
  1147 14F2 D0 04			jne l_044A
  1148 14F4			@
  1149
  1150 				; optimize OK (ai.inc), line = 11
  1151
  1152 14F4 A9 02			lda #$02
  1153 14F6 85 5B			sta NEWDIR
  1154
  1155 14F8			l_044A
  1156 14F8			a_0003
  1157 14F8			l_0432
  1158
  1159 				; optimize OK (ai.inc), line = 14
  1160
  1161 14F8 A5 5C			lda AVAILDIR
  1162 14FA C9 0C			cmp #$0C
  1163 14FC D0 1F			jne l_0466
  1164 14FE A9 02			lda #$02
  1165 1500 20 40 11			jsr SYSTEM.RANDOM_006C
  1166 1503 E8				inx
  1167 1504 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1168 1508 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1169 150C 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1170 150E 20 44 10			jsr addAX_CX
  1171 1511 CA				dex
  1172 1512 B4 18			ldy :STACKORIGIN,x
  1173 1514 B9 40 10			lda adr.DIRECTION,y
  1174 1517 85 5B			sta NEWDIR
  1175 1519 CA				dex
  1176 151A 4C 35 15			jmp l_047C
  1177 151D			l_0466
  1178
  1179 				; optimize OK (ai.inc), line = 16
  1180
  1181 151D A5 5C			lda AVAILDIR
  1182 151F 8D 66 25			sta @CASETMP_0004
  1183 1522 C9 04			cmp #$04
  1184 1524 D0 07			jne l_0487
  1185 1526			@
  1186
  1187 				; optimize OK (ai.inc), line = 17
  1188
  1189 1526 A9 04			lda #$04
  1190 1528 85 5B			sta NEWDIR
  1191
  1192 152A 4C 35 15			jmp a_0004
  1193 152D			l_0487
  1194 152D C9 08			cmp #$08
  1195 152F D0 04			jne l_0494
  1196 1531			@
  1197
  1198 				; optimize OK (ai.inc), line = 18
  1199
  1200 1531 A9 08			lda #$08
  1201 1533 85 5B			sta NEWDIR
  1202
  1203 1535			l_0494
  1204 1535			a_0004
  1205 1535			l_047C
  1206 1535			l_040E
  1207
  1208 				; ------------------------------------------------------------
  1209
  1210 = 2565			@CASETMP_0003	= DATAORIGIN+$0051
  1211 = 2566			@CASETMP_0004	= DATAORIGIN+$0052
  1212
  1213 = 2565			@VarData	= @CASETMP_0003
  1214 = 0002			@VarDataSize	= 2
  1215
  1216 1535			@exit
  1217 					.ifdef @new
  1218 					lda <@VarData
  1219 					sta :ztmp
  1220 					lda >@VarData
  1221 					ldy #@VarDataSize-1
  1222 					jmp @FreeMem
  1223 					els
  1224 1535 60				rts						; ret
  1225 					eif
  1226 				.endl
  1227
  1228 1536			.local	AISAPPER					; PROCEDURE
  1229
  1230 				; optimize OK (ai.inc), line = 31
  1231
  1232 1536 A9 00			lda #$00
  1233 1538 8D 67 25			sta L
  1234 153B 8D 68 25			sta R
  1235 153E 8D 69 25			sta U
  1236 1541 8D 6A 25			sta D
  1237
  1238 				; optimize OK (ai.inc), line = 32
  1239
  1240 1544 AC 04 25 84 12 AC + 	mwy PLY :bp2
  1241 154E A0 01			ldy #PLY.Y-DATAORIGIN
  1242 1550 B1 12			lda (:bp2),y
  1243 1552 0A				asl @
  1244 1553 A8				tay
  1245 1554 A9 00			lda #$00
  1246 1556 18 79 0E 10			add adr.MUL40,y
  1247 155A 85 21			sta :STACKORIGIN+9
  1248 155C A9 0C			lda #$0C
  1249 155E 79 0F 10			adc adr.MUL40+1,y
  1250 1561 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1251 1563 A0 00			ldy #PLY.X-DATAORIGIN
  1252 1565 A5 21			lda :STACKORIGIN+9
  1253 1567 18 71 12			add (:bp2),y
  1254 156A 85 5D			sta T0W
  1255 156C A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1256 156E 69 00			adc #$00
  1257 1570 85 5E			sta T0W+1
  1258
  1259 				; optimize OK (ai.inc), line = 34
  1260
  1261 1572 A5 5C			lda AVAILDIR
  1262 1574 29 01			and #$01
  1263 1576 F0 73			jeq l_04DA
  1264
  1265 				; optimize OK (ai.inc), line = 35
  1266
  1267 1578 A9 05			lda #$05
  1268 157A 85 59			sta I0B
  1269
  1270 157C			l_04E4
  1271 				; --- ForToDoCondition
  1272 157C A5 59			lda I0B
  1273 157E C9 01			cmp #$01
  1274 1580 90 69			jcc l_04F2
  1275
  1276 				; optimize OK (ai.inc), line = 36
  1277
  1278 1582 0A				asl @
  1279 1583 A8				tay
  1280 1584 A5 5D			lda T0W
  1281 1586 38 F9 0E 10			sub adr.MUL40,y
  1282 158A 85 21			sta :STACKORIGIN+9
  1283 158C A5 5E			lda T0W+1
  1284 158E F9 0F 10			sbc adr.MUL40+1,y
  1285 1591 85 11			sta :bp+1
  1286 1593 A4 21			ldy :STACKORIGIN+9
  1287 1595 B1 10			lda (:bp),y
  1288 1597 C9 20			cmp #$20
  1289 1599 D0 03			jne l_050C
  1290 159B EE 69 25			inc U
  1291 159E			l_050C
  1292
  1293 				; optimize OK (ai.inc), line = 37
  1294
  1295 159E A5 59			lda I0B
  1296 15A0 0A				asl @
  1297 15A1 A8				tay
  1298 15A2 A5 5D			lda T0W
  1299 15A4 38 F9 0E 10			sub adr.MUL40,y
  1300 15A8 85 21			sta :STACKORIGIN+9
  1301 15AA A5 5E			lda T0W+1
  1302 15AC F9 0F 10			sbc adr.MUL40+1,y
  1303 15AF 85 11			sta :bp+1
  1304 15B1 A5 21			lda :STACKORIGIN+9
  1305 15B3 18 69 01			add #$01
  1306 15B6 A8				tay
  1307 15B7 90 02			scc
  1308 15B9 E6 11			inc :bp+1
  1309 15BB B1 10			lda (:bp),y
  1310 15BD C9 20			cmp #$20
  1311 15BF D0 03			jne l_0531
  1312 15C1 EE 69 25			inc U
  1313 15C4			l_0531
  1314
  1315 				; optimize OK (ai.inc), line = 38
  1316
  1317 15C4 A5 59			lda I0B
  1318 15C6 0A				asl @
  1319 15C7 A8				tay
  1320 15C8 A5 5D			lda T0W
  1321 15CA 38 F9 0E 10			sub adr.MUL40,y
  1322 15CE 85 21			sta :STACKORIGIN+9
  1323 15D0 A5 5E			lda T0W+1
  1324 15D2 F9 0F 10			sbc adr.MUL40+1,y
  1325 15D5 85 11			sta :bp+1
  1326 15D7 A4 21			ldy :STACKORIGIN+9
  1327 15D9 88				dey
  1328 15DA B0 02			scs
  1329 15DC C6 11			dec :bp+1
  1330 15DE B1 10			lda (:bp),y
  1331 15E0 C9 20			cmp #$20
  1332 15E2 D0 03			jne l_0556
  1333 15E4 EE 69 25			inc U
  1334 15E7			l_0556
  1335
  1336 				; --- ForToDoEpilog
  1337 15E7 C6 59			dec I0B
  1338 15E9 10 91			jpl l_04E4
  1339 15EB			l_04F2
  1340 15EB			l_04DA
  1341
  1342 				; optimize OK (ai.inc), line = 42
  1343
  1344 15EB A5 5C			lda AVAILDIR
  1345 15ED 29 02			and #$02
  1346 15EF F0 73			jeq l_057A
  1347
  1348 				; optimize OK (ai.inc), line = 43
  1349
  1350 15F1 A9 05			lda #$05
  1351 15F3 85 59			sta I0B
  1352
  1353 15F5			l_0584
  1354 				; --- ForToDoCondition
  1355 15F5 A5 59			lda I0B
  1356 15F7 C9 01			cmp #$01
  1357 15F9 90 69			jcc l_0592
  1358
  1359 				; optimize OK (ai.inc), line = 44
  1360
  1361 15FB 0A				asl @
  1362 15FC A8				tay
  1363 15FD A5 5D			lda T0W
  1364 15FF 18 79 0E 10			add adr.MUL40,y
  1365 1603 85 21			sta :STACKORIGIN+9
  1366 1605 A5 5E			lda T0W+1
  1367 1607 79 0F 10			adc adr.MUL40+1,y
  1368 160A 85 11			sta :bp+1
  1369 160C A4 21			ldy :STACKORIGIN+9
  1370 160E B1 10			lda (:bp),y
  1371 1610 C9 20			cmp #$20
  1372 1612 D0 03			jne l_05AC
  1373 1614 EE 6A 25			inc D
  1374 1617			l_05AC
  1375
  1376 				; optimize OK (ai.inc), line = 45
  1377
  1378 1617 A5 59			lda I0B
  1379 1619 0A				asl @
  1380 161A A8				tay
  1381 161B A5 5D			lda T0W
  1382 161D 18 79 0E 10			add adr.MUL40,y
  1383 1621 85 21			sta :STACKORIGIN+9
  1384 1623 A5 5E			lda T0W+1
  1385 1625 79 0F 10			adc adr.MUL40+1,y
  1386 1628 85 11			sta :bp+1
  1387 162A A5 21			lda :STACKORIGIN+9
  1388 162C 18 69 01			add #$01
  1389 162F A8				tay
  1390 1630 90 02			scc
  1391 1632 E6 11			inc :bp+1
  1392 1634 B1 10			lda (:bp),y
  1393 1636 C9 20			cmp #$20
  1394 1638 D0 03			jne l_05D1
  1395 163A EE 6A 25			inc D
  1396 163D			l_05D1
  1397
  1398 				; optimize OK (ai.inc), line = 46
  1399
  1400 163D A5 59			lda I0B
  1401 163F 0A				asl @
  1402 1640 A8				tay
  1403 1641 A5 5D			lda T0W
  1404 1643 18 79 0E 10			add adr.MUL40,y
  1405 1647 85 21			sta :STACKORIGIN+9
  1406 1649 A5 5E			lda T0W+1
  1407 164B 79 0F 10			adc adr.MUL40+1,y
  1408 164E 85 11			sta :bp+1
  1409 1650 A4 21			ldy :STACKORIGIN+9
  1410 1652 88				dey
  1411 1653 B0 02			scs
  1412 1655 C6 11			dec :bp+1
  1413 1657 B1 10			lda (:bp),y
  1414 1659 C9 20			cmp #$20
  1415 165B D0 03			jne l_05F6
  1416 165D EE 6A 25			inc D
  1417 1660			l_05F6
  1418
  1419 				; --- ForToDoEpilog
  1420 1660 C6 59			dec I0B
  1421 1662 10 91			jpl l_0584
  1422 1664			l_0592
  1423 1664			l_057A
  1424
  1425 				; optimize OK (ai.inc), line = 50
  1426
  1427 1664 A5 5C			lda AVAILDIR
  1428 1666 29 04			and #$04
  1429 1668 F0 5F			jeq l_061A
  1430
  1431 				; optimize OK (ai.inc), line = 51
  1432
  1433 166A A9 05			lda #$05
  1434 166C 85 59			sta I0B
  1435
  1436 166E			l_0624
  1437 				; --- ForToDoCondition
  1438 166E A5 59			lda I0B
  1439 1670 C9 01			cmp #$01
  1440 1672 90 55			jcc l_0632
  1441
  1442 				; optimize OK (ai.inc), line = 52
  1443
  1444 1674 A5 5D			lda T0W
  1445 1676 38 E5 59			sub I0B
  1446 1679 A8				tay
  1447 167A A5 5E			lda T0W+1
  1448 167C E9 00			sbc #$00
  1449 167E 85 11			sta :bp+1
  1450 1680 B1 10			lda (:bp),y
  1451 1682 C9 20			cmp #$20
  1452 1684 D0 03			jne l_064A
  1453 1686 EE 67 25			inc L
  1454 1689			l_064A
  1455
  1456 				; optimize OK (ai.inc), line = 53
  1457
  1458 1689 A5 5D			lda T0W
  1459 168B 38 E5 59			sub I0B
  1460 168E A8				tay
  1461 168F A5 5E			lda T0W+1
  1462 1691 E9 00			sbc #$00
  1463 1693 85 11			sta :bp+1
  1464 1695 98				tya
  1465 1696 18 69 28			add #$28
  1466 1699 A8				tay
  1467 169A 90 02			scc
  1468 169C E6 11			inc :bp+1
  1469 169E B1 10			lda (:bp),y
  1470 16A0 C9 20			cmp #$20
  1471 16A2 D0 03			jne l_066D
  1472 16A4 EE 67 25			inc L
  1473 16A7			l_066D
  1474
  1475 				; optimize OK (ai.inc), line = 54
  1476
  1477 16A7 A5 5D			lda T0W
  1478 16A9 38 E5 59			sub I0B
  1479 16AC A8				tay
  1480 16AD A5 5E			lda T0W+1
  1481 16AF E9 00			sbc #$00
  1482 16B1 85 11			sta :bp+1
  1483 16B3 98				tya
  1484 16B4 38 E9 28			sub #$28
  1485 16B7 A8				tay
  1486 16B8 B0 02			scs
  1487 16BA C6 11			dec :bp+1
  1488 16BC B1 10			lda (:bp),y
  1489 16BE C9 20			cmp #$20
  1490 16C0 D0 03			jne l_0690
  1491 16C2 EE 67 25			inc L
  1492 16C5			l_0690
  1493
  1494 				; --- ForToDoEpilog
  1495 16C5 C6 59			dec I0B
  1496 16C7 10 A5			jpl l_0624
  1497 16C9			l_0632
  1498 16C9			l_061A
  1499
  1500 				; optimize OK (ai.inc), line = 58
  1501
  1502 16C9 A5 5C			lda AVAILDIR
  1503 16CB 29 08			and #$08
  1504 16CD F0 5D			jeq l_06B4
  1505
  1506 				; optimize OK (ai.inc), line = 59
  1507
  1508 16CF A9 05			lda #$05
  1509 16D1 85 59			sta I0B
  1510
  1511 16D3			l_06BE
  1512 				; --- ForToDoCondition
  1513 16D3 A5 59			lda I0B
  1514 16D5 C9 01			cmp #$01
  1515 16D7 90 53			jcc l_06CC
  1516
  1517 				; optimize OK (ai.inc), line = 60
  1518
  1519 16D9 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1520 16E1 A4 59			ldy I0B
  1521 16E3 B1 12			lda (:bp2),y
  1522 16E5 C9 20			cmp #$20
  1523 16E7 D0 03			jne l_06E4
  1524 16E9 EE 68 25			inc R
  1525 16EC			l_06E4
  1526
  1527 				; optimize OK (ai.inc), line = 61
  1528
  1529 16EC A5 5D			lda T0W
  1530 16EE 18 65 59			add I0B
  1531 16F1 A8				tay
  1532 16F2 A5 5E			lda T0W+1
  1533 16F4 69 00			adc #$00
  1534 16F6 85 11			sta :bp+1
  1535 16F8 98				tya
  1536 16F9 18 69 28			add #$28
  1537 16FC A8				tay
  1538 16FD 90 02			scc
  1539 16FF E6 11			inc :bp+1
  1540 1701 B1 10			lda (:bp),y
  1541 1703 C9 20			cmp #$20
  1542 1705 D0 03			jne l_0707
  1543 1707 EE 68 25			inc R
  1544 170A			l_0707
  1545
  1546 				; optimize OK (ai.inc), line = 62
  1547
  1548 170A A5 5D			lda T0W
  1549 170C 18 65 59			add I0B
  1550 170F A8				tay
  1551 1710 A5 5E			lda T0W+1
  1552 1712 69 00			adc #$00
  1553 1714 85 11			sta :bp+1
  1554 1716 98				tya
  1555 1717 38 E9 28			sub #$28
  1556 171A A8				tay
  1557 171B B0 02			scs
  1558 171D C6 11			dec :bp+1
  1559 171F B1 10			lda (:bp),y
  1560 1721 C9 20			cmp #$20
  1561 1723 D0 03			jne l_072A
  1562 1725 EE 68 25			inc R
  1563 1728			l_072A
  1564
  1565 				; --- ForToDoEpilog
  1566 1728 C6 59			dec I0B
  1567 172A 10 A7			jpl l_06BE
  1568 172C			l_06CC
  1569 172C			l_06B4
  1570
  1571 				; optimize OK (ai.inc), line = 66
  1572
  1573 172C AD 6A 25			lda D
  1574 172F 85 58			sta T0B
  1575
  1576 				; optimize OK (ai.inc), line = 67
  1577
  1578 1731 CD 69 25			cmp U
  1579 1734 B0 05			jcs l_0752
  1580 1736 AD 69 25			lda U
  1581 1739 85 58			sta T0B
  1582 173B			l_0752
  1583
  1584 				; optimize OK (ai.inc), line = 68
  1585
  1586 173B A5 58			lda T0B
  1587 173D CD 67 25			cmp L
  1588 1740 B0 05			jcs l_076F
  1589 1742 AD 67 25			lda L
  1590 1745 85 58			sta T0B
  1591 1747			l_076F
  1592
  1593 				; optimize OK (ai.inc), line = 69
  1594
  1595 1747 A5 58			lda T0B
  1596 1749 CD 68 25			cmp R
  1597 174C B0 05			jcs l_078C
  1598 174E AD 68 25			lda R
  1599 1751 85 58			sta T0B
  1600 1753			l_078C
  1601
  1602 				; optimize OK (ai.inc), line = 71
  1603
  1604 1753 A5 58			lda T0B
  1605 1755 CD 6A 25			cmp D
  1606 1758 D0 04			jne l_07A9
  1607 175A A9 02			lda #$02
  1608 175C 85 58			sta T0B
  1609 175E			l_07A9
  1610
  1611 				; optimize OK (ai.inc), line = 72
  1612
  1613 175E A5 58			lda T0B
  1614 1760 CD 69 25			cmp U
  1615 1763 D0 04			jne l_07C4
  1616 1765 A9 01			lda #$01
  1617 1767 85 58			sta T0B
  1618 1769			l_07C4
  1619
  1620 				; optimize OK (ai.inc), line = 73
  1621
  1622 1769 A5 58			lda T0B
  1623 176B CD 67 25			cmp L
  1624 176E D0 04			jne l_07DF
  1625 1770 A9 04			lda #$04
  1626 1772 85 58			sta T0B
  1627 1774			l_07DF
  1628
  1629 				; optimize OK (ai.inc), line = 74
  1630
  1631 1774 A5 58			lda T0B
  1632 1776 CD 68 25			cmp R
  1633 1779 D0 04			jne l_07FA
  1634 177B A9 08			lda #$08
  1635 177D 85 58			sta T0B
  1636 177F			l_07FA
  1637
  1638 				; optimize OK (ai.inc), line = 76
  1639
  1640 177F A5 5C			lda AVAILDIR
  1641 1781 25 58			and T0B
  1642 1783 F0 07			jeq l_0819
  1643 1785 A5 58			lda T0B
  1644 1787 85 5B			sta NEWDIR
  1645 1789 4C 8F 17			jmp l_0829
  1646 178C			l_0819
  1647
  1648 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1649
  1650 178C 20 B1 14			jsr AISTRAIGHT
  1651 178F			l_0829
  1652
  1653 				; ------------------------------------------------------------
  1654
  1655 = 2567			L	= DATAORIGIN+$0053
  1656 = 2568			R	= DATAORIGIN+$0054
  1657 = 2569			U	= DATAORIGIN+$0055
  1658 = 256A			D	= DATAORIGIN+$0056
  1659 = 0001			@FORTMP_04E1	= $01
  1660 = 0001			@FORTMP_0581	= $01
  1661 = 0001			@FORTMP_0621	= $01
  1662 = 0001			@FORTMP_06BB	= $01
  1663
  1664 = 2567			@VarData	= L
  1665 = 0004			@VarDataSize	= 4
  1666
  1667 178F			@exit
  1668 					.ifdef @new
  1669 					lda <@VarData
  1670 					sta :ztmp
  1671 					lda >@VarData
  1672 					ldy #@VarDataSize-1
  1673 					jmp @FreeMem
  1674 					els
  1675 178F 60				rts						; ret
  1676 					eif
  1677 				.endl
  1678
  1679 1790			.local	AIBULLY						; PROCEDURE
  1680
  1681 				; optimize OK (ai.inc), line = 84
  1682
  1683 1790 AC 04 25 84 12 AC + 	mwy PLY :bp2
  1684 179A A0 04			ldy #PLY.DIR-DATAORIGIN
  1685 179C B1 12			lda (:bp2),y
  1686 179E 85 58			sta T0B
  1687
  1688 				; optimize OK (ai.inc), line = 86
  1689
  1690 17A0 AD 2D 25			lda PLAYER1.ISALIVE
  1691 17A3 0D 35 25			ora PLAYER2.ISALIVE
  1692 17A6 D0 03 4C 4D 18		jeq l_0846
  1693
  1694 				; optimize OK (ai.inc), line = 88
  1695
  1696 17AB AD 2D 25			lda PLAYER1.ISALIVE
  1697 17AE F0 0F			jeq l_0853
  1698 17B0 AD 08 25			lda PLAYER1
  1699 17B3 8D 06 25			sta TMPPLY
  1700 17B6 AD 09 25			lda PLAYER1+1
  1701 17B9 8D 07 25			sta TMPPLY+1
  1702 17BC 4C CB 17			jmp l_0862
  1703 17BF			l_0853
  1704 17BF AD 0A 25			lda PLAYER2
  1705 17C2 8D 06 25			sta TMPPLY
  1706 17C5 AD 0B 25			lda PLAYER2+1
  1707 17C8 8D 07 25			sta TMPPLY+1
  1708 17CB			l_0862
  1709
  1710 				; optimize OK (ai.inc), line = 90
  1711
  1712 17CB AC 04 25 84 12 AC + 	mwy PLY :bp2
  1713 17D5 A0 01			ldy #PLY.Y-DATAORIGIN
  1714 17D7 B1 12			lda (:bp2),y
  1715 17D9 85 21			sta :STACKORIGIN+9
  1716 17DB AC 06 25 84 12 AC + 	mwy TMPPLY :bp2
  1717 17E5 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1718 17E7 B1 12			lda (:bp2),y
  1719 17E9 C5 21			cmp :STACKORIGIN+9
  1720 17EB B0 07			jcs l_087B
  1721 17ED A9 01			lda #$01
  1722 17EF 85 58			sta T0B
  1723 17F1 4C F8 17			jmp l_0889
  1724 17F4			l_087B
  1725 17F4 A9 02			lda #$02
  1726 17F6 85 58			sta T0B
  1727 17F8			l_0889
  1728
  1729 				; optimize OK (ai.inc), line = 91
  1730
  1731 17F8 AC 04 25 84 12 AC + 	mwy PLY :bp2
  1732 1802 A0 01			ldy #PLY.Y-DATAORIGIN
  1733 1804 B1 12			lda (:bp2),y
  1734 1806 85 21			sta :STACKORIGIN+9
  1735 1808 AC 06 25 84 12 AC + 	mwy TMPPLY :bp2
  1736 1812 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1737 1814 B1 12			lda (:bp2),y
  1738 1816 C5 21			cmp :STACKORIGIN+9
  1739 1818 F0 06			jeq l_08B3x
  1740 181A A5 5C			lda AVAILDIR
  1741 181C 25 58			and T0B
  1742 181E D0 2D			jne l_08B3
  1743 1820			l_08B3x
  1744
  1745 				; optimize OK (ai.inc), line = 92
  1746
  1747 1820 AC 04 25 84 12 AC + 	mwy PLY :bp2
  1748 182A A0 00			ldy #PLY.X-DATAORIGIN
  1749 182C B1 12			lda (:bp2),y
  1750 182E 85 21			sta :STACKORIGIN+9
  1751 1830 AC 06 25 84 12 AC + 	mwy TMPPLY :bp2
  1752 183A A0 00			ldy #TMPPLY.X-DATAORIGIN
  1753 183C B1 12			lda (:bp2),y
  1754 183E C5 21			cmp :STACKORIGIN+9
  1755 1840 B0 07			jcs l_08C8
  1756 1842 A9 04			lda #$04
  1757 1844 85 58			sta T0B
  1758 1846 4C 4D 18			jmp l_08D6
  1759 1849			l_08C8
  1760 1849 A9 08			lda #$08
  1761 184B 85 58			sta T0B
  1762 184D			l_08D6
  1763 184D			l_08B3
  1764 184D			l_0846
  1765
  1766 				; optimize OK (ai.inc), line = 96
  1767
  1768 184D A5 5C			lda AVAILDIR
  1769 184F 25 58			and T0B
  1770 1851 F0 07			jeq l_08F6
  1771 1853 A5 58			lda T0B
  1772 1855 85 5B			sta NEWDIR
  1773 1857 4C 5D 18			jmp l_0906
  1774 185A			l_08F6
  1775
  1776 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  1777
  1778 185A 20 36 15			jsr AISAPPER
  1779 185D			l_0906
  1780 185D			@exit
  1781 					.ifdef @new
  1782 					lda <@VarData
  1783 					sta :ztmp
  1784 					lda >@VarData
  1785 					ldy #@VarDataSize-1
  1786 					jmp @FreeMem
  1787 					els
  1788 185D 60				rts						; ret
  1789 					eif
  1790 				.endl
  1791
  1792 185E			.local	AIMIRROR					; PROCEDURE
  1793
  1794 				; optimize OK (ai.inc), line = 105
  1795
  1796 185E AC 04 25 84 12 AC + 	mwy PLY :bp2
  1797 1868 A0 04			ldy #PLY.DIR-DATAORIGIN
  1798 186A B1 12			lda (:bp2),y
  1799 186C 85 58			sta T0B
  1800
  1801 				; optimize OK (ai.inc), line = 107
  1802
  1803 186E AD 2D 25			lda PLAYER1.ISALIVE
  1804 1871 F0 2F			jeq l_091D
  1805
  1806 				; optimize OK (ai.inc), line = 108
  1807
  1808 1873 AD 2A 25			lda PLAYER1.DIR
  1809 1876 8D 6B 25			sta @CASETMP_0005
  1810 1879 C9 01			cmp #$01
  1811 187B D0 07			jne l_0929
  1812 187D			@
  1813
  1814 				; optimize OK (ai.inc), line = 109
  1815
  1816 187D A9 02			lda #$02
  1817 187F 85 58			sta T0B
  1818
  1819 1881 4C A2 18			jmp a_0005
  1820 1884			l_0929
  1821 1884 C9 02			cmp #$02
  1822 1886 D0 07			jne l_0936
  1823 1888			@
  1824
  1825 				; optimize OK (ai.inc), line = 110
  1826
  1827 1888 A9 01			lda #$01
  1828 188A 85 58			sta T0B
  1829
  1830 188C 4C A2 18			jmp a_0005
  1831 188F			l_0936
  1832 188F C9 04			cmp #$04
  1833 1891 D0 07			jne l_0943
  1834 1893			@
  1835
  1836 				; optimize OK (ai.inc), line = 111
  1837
  1838 1893 A9 08			lda #$08
  1839 1895 85 58			sta T0B
  1840
  1841 1897 4C A2 18			jmp a_0005
  1842 189A			l_0943
  1843 189A C9 08			cmp #$08
  1844 189C D0 04			jne l_0950
  1845 189E			@
  1846
  1847 				; optimize OK (ai.inc), line = 112
  1848
  1849 189E A9 04			lda #$04
  1850 18A0 85 58			sta T0B
  1851
  1852 18A2			l_0950
  1853 18A2			a_0005
  1854 18A2			l_091D
  1855
  1856 				; optimize OK (ai.inc), line = 116
  1857
  1858 18A2 A5 5C			lda AVAILDIR
  1859 18A4 25 58			and T0B
  1860 18A6 F0 07			jeq l_0976
  1861 18A8 A5 58			lda T0B
  1862 18AA 85 5B			sta NEWDIR
  1863 18AC 4C B2 18			jmp l_0986
  1864 18AF			l_0976
  1865
  1866 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  1867
  1868 18AF 20 36 15			jsr AISAPPER
  1869 18B2			l_0986
  1870
  1871 				; ------------------------------------------------------------
  1872
  1873 = 256B			@CASETMP_0005	= DATAORIGIN+$0057
  1874
  1875 = 256B			@VarData	= @CASETMP_0005
  1876 = 0001			@VarDataSize	= 1
  1877
  1878 18B2			@exit
  1879 					.ifdef @new
  1880 					lda <@VarData
  1881 					sta :ztmp
  1882 					lda >@VarData
  1883 					ldy #@VarDataSize-1
  1884 					jmp @FreeMem
  1885 					els
  1886 18B2 60				rts						; ret
  1887 					eif
  1888 				.endl
  1889
  1890 18B3			.local	SETLEVEL01					; PROCEDURE
  1891
  1892 				; optimize OK (levels.inc), line = 13
  1893
  1894 18B3 A9 01			lda #$01
  1895 18B5 8D 64 25			sta INITPLAYERS.ISALIVE
  1896 18B8 A9 5F			lda #$5F
  1897 18BA 8D 63 25			sta INITPLAYERS.COLOUR
  1898 18BD A9 51			lda #$51
  1899 18BF 8D 62 25			sta INITPLAYERS.HEAD
  1900 18C2 A9 00			lda #$00
  1901 18C4 8D 61 25			sta INITPLAYERS.BRAIN
  1902 18C7 A9 08			lda #$08
  1903 18C9 8D 60 25			sta INITPLAYERS.DIR
  1904 18CC A9 0C			lda #$0C
  1905 18CE 8D 5F 25			sta INITPLAYERS.Y
  1906 18D1 A9 0A			lda #$0A
  1907 18D3 8D 5E 25			sta INITPLAYERS.X
  1908 18D6 AD 08 25			lda PLAYER1
  1909 18D9 8D 5C 25			sta INITPLAYERS.P
  1910 18DC AD 09 25			lda PLAYER1+1
  1911 18DF 8D 5D 25			sta INITPLAYERS.P+1
  1912 18E2 20 CD 13			jsr INITPLAYERS
  1913
  1914 				; optimize OK (levels.inc), line = 14
  1915
  1916 18E5 A9 01			lda #$01
  1917 18E7 8D 64 25			sta INITPLAYERS.ISALIVE
  1918 18EA A9 5D			lda #$5D
  1919 18EC 8D 63 25			sta INITPLAYERS.COLOUR
  1920 18EF A9 51			lda #$51
  1921 18F1 8D 62 25			sta INITPLAYERS.HEAD
  1922 18F4 A9 01			lda #$01
  1923 18F6 8D 61 25			sta INITPLAYERS.BRAIN
  1924 18F9 A9 04			lda #$04
  1925 18FB 8D 60 25			sta INITPLAYERS.DIR
  1926 18FE A9 0C			lda #$0C
  1927 1900 8D 5F 25			sta INITPLAYERS.Y
  1928 1903 A9 1E			lda #$1E
  1929 1905 8D 5E 25			sta INITPLAYERS.X
  1930 1908 AD 0A 25			lda PLAYER2
  1931 190B 8D 5C 25			sta INITPLAYERS.P
  1932 190E AD 0B 25			lda PLAYER2+1
  1933 1911 8D 5D 25			sta INITPLAYERS.P+1
  1934 1914 20 CD 13			jsr INITPLAYERS
  1935
  1936 				; optimize OK (levels.inc), line = 15
  1937
  1938 1917 A9 00			lda #$00
  1939 1919 8D 64 25			sta INITPLAYERS.ISALIVE
  1940 191C A9 71			lda #$71
  1941 191E 8D 63 25			sta INITPLAYERS.COLOUR
  1942 1921 A9 51			lda #$51
  1943 1923 8D 62 25			sta INITPLAYERS.HEAD
  1944 1926 A9 03			lda #$03
  1945 1928 8D 61 25			sta INITPLAYERS.BRAIN
  1946 192B A9 02			lda #$02
  1947 192D 8D 60 25			sta INITPLAYERS.DIR
  1948 1930 A9 04			lda #$04
  1949 1932 8D 5F 25			sta INITPLAYERS.Y
  1950 1935 A9 14			lda #$14
  1951 1937 8D 5E 25			sta INITPLAYERS.X
  1952 193A AD 0C 25			lda PLAYER3
  1953 193D 8D 5C 25			sta INITPLAYERS.P
  1954 1940 AD 0D 25			lda PLAYER3+1
  1955 1943 8D 5D 25			sta INITPLAYERS.P+1
  1956 1946 20 CD 13			jsr INITPLAYERS
  1957
  1958 				; optimize OK (levels.inc), line = 16
  1959
  1960 1949 A9 00			lda #$00
  1961 194B 8D 64 25			sta INITPLAYERS.ISALIVE
  1962 194E A9 55			lda #$55
  1963 1950 8D 63 25			sta INITPLAYERS.COLOUR
  1964 1953 A9 51			lda #$51
  1965 1955 8D 62 25			sta INITPLAYERS.HEAD
  1966 1958 A9 02			lda #$02
  1967 195A 8D 61 25			sta INITPLAYERS.BRAIN
  1968 195D A9 01			lda #$01
  1969 195F 8D 60 25			sta INITPLAYERS.DIR
  1970 1962 A9 12			lda #$12
  1971 1964 8D 5F 25			sta INITPLAYERS.Y
  1972 1967 A9 14			lda #$14
  1973 1969 8D 5E 25			sta INITPLAYERS.X
  1974 196C AD 0E 25			lda PLAYER4
  1975 196F 8D 5C 25			sta INITPLAYERS.P
  1976 1972 AD 0F 25			lda PLAYER4+1
  1977 1975 8D 5D 25			sta INITPLAYERS.P+1
  1978 1978 20 CD 13			jsr INITPLAYERS
  1979
  1980 				; optimize OK (levels.inc), line = 18
  1981
  1982 197B A9 FA			lda #$FA
  1983 197D 8D 46 25			sta adr.OBSTACLES+$00
  1984 1980 A9 0C			lda #$0C
  1985 1982 8D 47 25			sta adr.OBSTACLES+1+$00
  1986
  1987 				; optimize OK (levels.inc), line = 19
  1988
  1989 1985 A9 0E			lda #$0E
  1990 1987 8D 48 25			sta adr.OBSTACLES+$02
  1991 198A A9 0D			lda #$0D
  1992 198C 8D 49 25			sta adr.OBSTACLES+1+$02
  1993
  1994 				; optimize OK (levels.inc), line = 20
  1995
  1996 198F A9 DA			lda #$DA
  1997 1991 8D 4A 25			sta adr.OBSTACLES+$04
  1998 1994 A9 0E			lda #$0E
  1999 1996 8D 4B 25			sta adr.OBSTACLES+1+$04
  2000
  2001 				; optimize OK (levels.inc), line = 21
  2002
  2003 1999 A9 EE			lda #$EE
  2004 199B 8D 4C 25			sta adr.OBSTACLES+$06
  2005 199E A9 0E			lda #$0E
  2006 19A0 8D 4D 25			sta adr.OBSTACLES+1+$06
  2007
  2008 				; optimize OK (levels.inc), line = 22
  2009
  2010 19A3 A9 E1			lda #$E1
  2011 19A5 8D 4E 25			sta adr.OBSTACLES+$08
  2012 19A8 A9 0D			lda #$0D
  2013 19AA 8D 4F 25			sta adr.OBSTACLES+1+$08
  2014
  2015 				; optimize OK (levels.inc), line = 23
  2016
  2017 19AD A9 64			lda #$64
  2018 19AF 8D 50 25			sta adr.OBSTACLES+$0A
  2019 19B2 A9 0C			lda #$0C
  2020 19B4 8D 51 25			sta adr.OBSTACLES+1+$0A
  2021
  2022 				; optimize OK (levels.inc), line = 24
  2023
  2024 19B7 A9 84			lda #$84
  2025 19B9 8D 52 25			sta adr.OBSTACLES+$0C
  2026 19BC A9 0F			lda #$0F
  2027 19BE 8D 53 25			sta adr.OBSTACLES+1+$0C
  2028
  2029 				; optimize OK (levels.inc), line = 25
  2030
  2031 19C1 A9 7E			lda #$7E
  2032 19C3 8D 54 25			sta adr.OBSTACLES+$0E
  2033 19C6 A9 00			lda #$00
  2034 19C8 8D 55 25			sta adr.OBSTACLES+1+$0E
  2035
  2036 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 27
  2037
  2038 19CB 20 CB 12			jsr SAVEOBSTACLES
  2039 19CE			@exit
  2040 					.ifdef @new
  2041 					lda <@VarData
  2042 					sta :ztmp
  2043 					lda >@VarData
  2044 					ldy #@VarDataSize-1
  2045 					jmp @FreeMem
  2046 					els
  2047 19CE 60				rts						; ret
  2048 					eif
  2049 				.endl
  2050
  2051 19CF			.local	SETLEVEL02					; PROCEDURE
  2052
  2053 				; optimize OK (levels.inc), line = 34
  2054
  2055 19CF A9 01			lda #$01
  2056 19D1 8D 64 25			sta INITPLAYERS.ISALIVE
  2057 19D4 A9 5F			lda #$5F
  2058 19D6 8D 63 25			sta INITPLAYERS.COLOUR
  2059 19D9 A9 51			lda #$51
  2060 19DB 8D 62 25			sta INITPLAYERS.HEAD
  2061 19DE A9 00			lda #$00
  2062 19E0 8D 61 25			sta INITPLAYERS.BRAIN
  2063 19E3 A9 08			lda #$08
  2064 19E5 8D 60 25			sta INITPLAYERS.DIR
  2065 19E8 A9 0C			lda #$0C
  2066 19EA 8D 5F 25			sta INITPLAYERS.Y
  2067 19ED A9 0A			lda #$0A
  2068 19EF 8D 5E 25			sta INITPLAYERS.X
  2069 19F2 AD 08 25			lda PLAYER1
  2070 19F5 8D 5C 25			sta INITPLAYERS.P
  2071 19F8 AD 09 25			lda PLAYER1+1
  2072 19FB 8D 5D 25			sta INITPLAYERS.P+1
  2073 19FE 20 CD 13			jsr INITPLAYERS
  2074
  2075 				; optimize OK (levels.inc), line = 35
  2076
  2077 1A01 A9 01			lda #$01
  2078 1A03 8D 64 25			sta INITPLAYERS.ISALIVE
  2079 1A06 A9 5D			lda #$5D
  2080 1A08 8D 63 25			sta INITPLAYERS.COLOUR
  2081 1A0B A9 51			lda #$51
  2082 1A0D 8D 62 25			sta INITPLAYERS.HEAD
  2083 1A10 A9 03			lda #$03
  2084 1A12 8D 61 25			sta INITPLAYERS.BRAIN
  2085 1A15 A9 04			lda #$04
  2086 1A17 8D 60 25			sta INITPLAYERS.DIR
  2087 1A1A A9 0C			lda #$0C
  2088 1A1C 8D 5F 25			sta INITPLAYERS.Y
  2089 1A1F A9 1E			lda #$1E
  2090 1A21 8D 5E 25			sta INITPLAYERS.X
  2091 1A24 AD 0A 25			lda PLAYER2
  2092 1A27 8D 5C 25			sta INITPLAYERS.P
  2093 1A2A AD 0B 25			lda PLAYER2+1
  2094 1A2D 8D 5D 25			sta INITPLAYERS.P+1
  2095 1A30 20 CD 13			jsr INITPLAYERS
  2096
  2097 				; optimize OK (levels.inc), line = 36
  2098
  2099 1A33 A9 00			lda #$00
  2100 1A35 8D 64 25			sta INITPLAYERS.ISALIVE
  2101 1A38 A9 71			lda #$71
  2102 1A3A 8D 63 25			sta INITPLAYERS.COLOUR
  2103 1A3D A9 51			lda #$51
  2104 1A3F 8D 62 25			sta INITPLAYERS.HEAD
  2105 1A42 A9 03			lda #$03
  2106 1A44 8D 61 25			sta INITPLAYERS.BRAIN
  2107 1A47 A9 02			lda #$02
  2108 1A49 8D 60 25			sta INITPLAYERS.DIR
  2109 1A4C A9 04			lda #$04
  2110 1A4E 8D 5F 25			sta INITPLAYERS.Y
  2111 1A51 A9 14			lda #$14
  2112 1A53 8D 5E 25			sta INITPLAYERS.X
  2113 1A56 AD 0C 25			lda PLAYER3
  2114 1A59 8D 5C 25			sta INITPLAYERS.P
  2115 1A5C AD 0D 25			lda PLAYER3+1
  2116 1A5F 8D 5D 25			sta INITPLAYERS.P+1
  2117 1A62 20 CD 13			jsr INITPLAYERS
  2118
  2119 				; optimize OK (levels.inc), line = 37
  2120
  2121 1A65 A9 00			lda #$00
  2122 1A67 8D 64 25			sta INITPLAYERS.ISALIVE
  2123 1A6A A9 55			lda #$55
  2124 1A6C 8D 63 25			sta INITPLAYERS.COLOUR
  2125 1A6F A9 51			lda #$51
  2126 1A71 8D 62 25			sta INITPLAYERS.HEAD
  2127 1A74 A9 02			lda #$02
  2128 1A76 8D 61 25			sta INITPLAYERS.BRAIN
  2129 1A79 A9 01			lda #$01
  2130 1A7B 8D 60 25			sta INITPLAYERS.DIR
  2131 1A7E A9 12			lda #$12
  2132 1A80 8D 5F 25			sta INITPLAYERS.Y
  2133 1A83 A9 14			lda #$14
  2134 1A85 8D 5E 25			sta INITPLAYERS.X
  2135 1A88 AD 0E 25			lda PLAYER4
  2136 1A8B 8D 5C 25			sta INITPLAYERS.P
  2137 1A8E AD 0F 25			lda PLAYER4+1
  2138 1A91 8D 5D 25			sta INITPLAYERS.P+1
  2139 1A94 20 CD 13			jsr INITPLAYERS
  2140
  2141 				; optimize OK (levels.inc), line = 39
  2142
  2143 1A97 A9 FA			lda #$FA
  2144 1A99 8D 46 25			sta adr.OBSTACLES+$00
  2145 1A9C A9 0C			lda #$0C
  2146 1A9E 8D 47 25			sta adr.OBSTACLES+1+$00
  2147
  2148 				; optimize OK (levels.inc), line = 40
  2149
  2150 1AA1 A9 0E			lda #$0E
  2151 1AA3 8D 48 25			sta adr.OBSTACLES+$02
  2152 1AA6 A9 0D			lda #$0D
  2153 1AA8 8D 49 25			sta adr.OBSTACLES+1+$02
  2154
  2155 				; optimize OK (levels.inc), line = 41
  2156
  2157 1AAB A9 DA			lda #$DA
  2158 1AAD 8D 4A 25			sta adr.OBSTACLES+$04
  2159 1AB0 A9 0E			lda #$0E
  2160 1AB2 8D 4B 25			sta adr.OBSTACLES+1+$04
  2161
  2162 				; optimize OK (levels.inc), line = 42
  2163
  2164 1AB5 A9 EE			lda #$EE
  2165 1AB7 8D 4C 25			sta adr.OBSTACLES+$06
  2166 1ABA A9 0E			lda #$0E
  2167 1ABC 8D 4D 25			sta adr.OBSTACLES+1+$06
  2168
  2169 				; optimize OK (levels.inc), line = 43
  2170
  2171 1ABF A9 E1			lda #$E1
  2172 1AC1 8D 4E 25			sta adr.OBSTACLES+$08
  2173 1AC4 A9 0D			lda #$0D
  2174 1AC6 8D 4F 25			sta adr.OBSTACLES+1+$08
  2175
  2176 				; optimize OK (levels.inc), line = 44
  2177
  2178 1AC9 A9 64			lda #$64
  2179 1ACB 8D 50 25			sta adr.OBSTACLES+$0A
  2180 1ACE A9 0C			lda #$0C
  2181 1AD0 8D 51 25			sta adr.OBSTACLES+1+$0A
  2182
  2183 				; optimize OK (levels.inc), line = 45
  2184
  2185 1AD3 A9 84			lda #$84
  2186 1AD5 8D 52 25			sta adr.OBSTACLES+$0C
  2187 1AD8 A9 0F			lda #$0F
  2188 1ADA 8D 53 25			sta adr.OBSTACLES+1+$0C
  2189
  2190 				; optimize OK (levels.inc), line = 46
  2191
  2192 1ADD A9 7E			lda #$7E
  2193 1ADF 8D 54 25			sta adr.OBSTACLES+$0E
  2194 1AE2 A9 00			lda #$00
  2195 1AE4 8D 55 25			sta adr.OBSTACLES+1+$0E
  2196
  2197 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 48
  2198
  2199 1AE7 20 CB 12			jsr SAVEOBSTACLES
  2200 1AEA			@exit
  2201 					.ifdef @new
  2202 					lda <@VarData
  2203 					sta :ztmp
  2204 					lda >@VarData
  2205 					ldy #@VarDataSize-1
  2206 					jmp @FreeMem
  2207 					els
  2208 1AEA 60				rts						; ret
  2209 					eif
  2210 				.endl
  2211
  2212 1AEB			.local	SETLEVEL03					; PROCEDURE
  2213
  2214 				; optimize OK (levels.inc), line = 55
  2215
  2216 1AEB A9 01			lda #$01
  2217 1AED 8D 64 25			sta INITPLAYERS.ISALIVE
  2218 1AF0 A9 5F			lda #$5F
  2219 1AF2 8D 63 25			sta INITPLAYERS.COLOUR
  2220 1AF5 A9 51			lda #$51
  2221 1AF7 8D 62 25			sta INITPLAYERS.HEAD
  2222 1AFA A9 00			lda #$00
  2223 1AFC 8D 61 25			sta INITPLAYERS.BRAIN
  2224 1AFF A9 08			lda #$08
  2225 1B01 8D 60 25			sta INITPLAYERS.DIR
  2226 1B04 A9 0C			lda #$0C
  2227 1B06 8D 5F 25			sta INITPLAYERS.Y
  2228 1B09 A9 0A			lda #$0A
  2229 1B0B 8D 5E 25			sta INITPLAYERS.X
  2230 1B0E AD 08 25			lda PLAYER1
  2231 1B11 8D 5C 25			sta INITPLAYERS.P
  2232 1B14 AD 09 25			lda PLAYER1+1
  2233 1B17 8D 5D 25			sta INITPLAYERS.P+1
  2234 1B1A 20 CD 13			jsr INITPLAYERS
  2235
  2236 				; optimize OK (levels.inc), line = 56
  2237
  2238 1B1D A9 01			lda #$01
  2239 1B1F 8D 64 25			sta INITPLAYERS.ISALIVE
  2240 1B22 A9 5D			lda #$5D
  2241 1B24 8D 63 25			sta INITPLAYERS.COLOUR
  2242 1B27 A9 51			lda #$51
  2243 1B29 8D 62 25			sta INITPLAYERS.HEAD
  2244 1B2C A9 02			lda #$02
  2245 1B2E 8D 61 25			sta INITPLAYERS.BRAIN
  2246 1B31 A9 04			lda #$04
  2247 1B33 8D 60 25			sta INITPLAYERS.DIR
  2248 1B36 A9 0C			lda #$0C
  2249 1B38 8D 5F 25			sta INITPLAYERS.Y
  2250 1B3B A9 1E			lda #$1E
  2251 1B3D 8D 5E 25			sta INITPLAYERS.X
  2252 1B40 AD 0A 25			lda PLAYER2
  2253 1B43 8D 5C 25			sta INITPLAYERS.P
  2254 1B46 AD 0B 25			lda PLAYER2+1
  2255 1B49 8D 5D 25			sta INITPLAYERS.P+1
  2256 1B4C 20 CD 13			jsr INITPLAYERS
  2257
  2258 				; optimize OK (levels.inc), line = 57
  2259
  2260 1B4F A9 00			lda #$00
  2261 1B51 8D 64 25			sta INITPLAYERS.ISALIVE
  2262 1B54 A9 71			lda #$71
  2263 1B56 8D 63 25			sta INITPLAYERS.COLOUR
  2264 1B59 A9 51			lda #$51
  2265 1B5B 8D 62 25			sta INITPLAYERS.HEAD
  2266 1B5E A9 03			lda #$03
  2267 1B60 8D 61 25			sta INITPLAYERS.BRAIN
  2268 1B63 A9 02			lda #$02
  2269 1B65 8D 60 25			sta INITPLAYERS.DIR
  2270 1B68 A9 04			lda #$04
  2271 1B6A 8D 5F 25			sta INITPLAYERS.Y
  2272 1B6D A9 14			lda #$14
  2273 1B6F 8D 5E 25			sta INITPLAYERS.X
  2274 1B72 AD 0C 25			lda PLAYER3
  2275 1B75 8D 5C 25			sta INITPLAYERS.P
  2276 1B78 AD 0D 25			lda PLAYER3+1
  2277 1B7B 8D 5D 25			sta INITPLAYERS.P+1
  2278 1B7E 20 CD 13			jsr INITPLAYERS
  2279
  2280 				; optimize OK (levels.inc), line = 58
  2281
  2282 1B81 A9 00			lda #$00
  2283 1B83 8D 64 25			sta INITPLAYERS.ISALIVE
  2284 1B86 A9 55			lda #$55
  2285 1B88 8D 63 25			sta INITPLAYERS.COLOUR
  2286 1B8B A9 51			lda #$51
  2287 1B8D 8D 62 25			sta INITPLAYERS.HEAD
  2288 1B90 A9 03			lda #$03
  2289 1B92 8D 61 25			sta INITPLAYERS.BRAIN
  2290 1B95 A9 01			lda #$01
  2291 1B97 8D 60 25			sta INITPLAYERS.DIR
  2292 1B9A A9 12			lda #$12
  2293 1B9C 8D 5F 25			sta INITPLAYERS.Y
  2294 1B9F A9 14			lda #$14
  2295 1BA1 8D 5E 25			sta INITPLAYERS.X
  2296 1BA4 AD 0E 25			lda PLAYER4
  2297 1BA7 8D 5C 25			sta INITPLAYERS.P
  2298 1BAA AD 0F 25			lda PLAYER4+1
  2299 1BAD 8D 5D 25			sta INITPLAYERS.P+1
  2300 1BB0 20 CD 13			jsr INITPLAYERS
  2301
  2302 				; optimize OK (levels.inc), line = 60
  2303
  2304 1BB3 A9 FA			lda #$FA
  2305 1BB5 8D 46 25			sta adr.OBSTACLES+$00
  2306 1BB8 A9 0C			lda #$0C
  2307 1BBA 8D 47 25			sta adr.OBSTACLES+1+$00
  2308
  2309 				; optimize OK (levels.inc), line = 61
  2310
  2311 1BBD A9 0E			lda #$0E
  2312 1BBF 8D 48 25			sta adr.OBSTACLES+$02
  2313 1BC2 A9 0D			lda #$0D
  2314 1BC4 8D 49 25			sta adr.OBSTACLES+1+$02
  2315
  2316 				; optimize OK (levels.inc), line = 62
  2317
  2318 1BC7 A9 DA			lda #$DA
  2319 1BC9 8D 4A 25			sta adr.OBSTACLES+$04
  2320 1BCC A9 0E			lda #$0E
  2321 1BCE 8D 4B 25			sta adr.OBSTACLES+1+$04
  2322
  2323 				; optimize OK (levels.inc), line = 63
  2324
  2325 1BD1 A9 EE			lda #$EE
  2326 1BD3 8D 4C 25			sta adr.OBSTACLES+$06
  2327 1BD6 A9 0E			lda #$0E
  2328 1BD8 8D 4D 25			sta adr.OBSTACLES+1+$06
  2329
  2330 				; optimize OK (levels.inc), line = 64
  2331
  2332 1BDB A9 E1			lda #$E1
  2333 1BDD 8D 4E 25			sta adr.OBSTACLES+$08
  2334 1BE0 A9 0D			lda #$0D
  2335 1BE2 8D 4F 25			sta adr.OBSTACLES+1+$08
  2336
  2337 				; optimize OK (levels.inc), line = 65
  2338
  2339 1BE5 A9 64			lda #$64
  2340 1BE7 8D 50 25			sta adr.OBSTACLES+$0A
  2341 1BEA A9 0C			lda #$0C
  2342 1BEC 8D 51 25			sta adr.OBSTACLES+1+$0A
  2343
  2344 				; optimize OK (levels.inc), line = 66
  2345
  2346 1BEF A9 84			lda #$84
  2347 1BF1 8D 52 25			sta adr.OBSTACLES+$0C
  2348 1BF4 A9 0F			lda #$0F
  2349 1BF6 8D 53 25			sta adr.OBSTACLES+1+$0C
  2350
  2351 				; optimize OK (levels.inc), line = 67
  2352
  2353 1BF9 A9 7E			lda #$7E
  2354 1BFB 8D 54 25			sta adr.OBSTACLES+$0E
  2355 1BFE A9 00			lda #$00
  2356 1C00 8D 55 25			sta adr.OBSTACLES+1+$0E
  2357
  2358 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 69
  2359
  2360 1C03 20 CB 12			jsr SAVEOBSTACLES
  2361 1C06			@exit
  2362 					.ifdef @new
  2363 					lda <@VarData
  2364 					sta :ztmp
  2365 					lda >@VarData
  2366 					ldy #@VarDataSize-1
  2367 					jmp @FreeMem
  2368 					els
  2369 1C06 60				rts						; ret
  2370 					eif
  2371 				.endl
  2372
  2373 1C07			.local	SETLEVEL04					; PROCEDURE
  2374
  2375 				; optimize OK (levels.inc), line = 76
  2376
  2377 1C07 A9 01			lda #$01
  2378 1C09 8D 64 25			sta INITPLAYERS.ISALIVE
  2379 1C0C A9 5F			lda #$5F
  2380 1C0E 8D 63 25			sta INITPLAYERS.COLOUR
  2381 1C11 A9 51			lda #$51
  2382 1C13 8D 62 25			sta INITPLAYERS.HEAD
  2383 1C16 A9 00			lda #$00
  2384 1C18 8D 61 25			sta INITPLAYERS.BRAIN
  2385 1C1B A9 04			lda #$04
  2386 1C1D 8D 60 25			sta INITPLAYERS.DIR
  2387 1C20 A9 0C			lda #$0C
  2388 1C22 8D 5F 25			sta INITPLAYERS.Y
  2389 1C25 A9 12			lda #$12
  2390 1C27 8D 5E 25			sta INITPLAYERS.X
  2391 1C2A AD 08 25			lda PLAYER1
  2392 1C2D 8D 5C 25			sta INITPLAYERS.P
  2393 1C30 AD 09 25			lda PLAYER1+1
  2394 1C33 8D 5D 25			sta INITPLAYERS.P+1
  2395 1C36 20 CD 13			jsr INITPLAYERS
  2396
  2397 				; optimize OK (levels.inc), line = 77
  2398
  2399 1C39 A9 01			lda #$01
  2400 1C3B 8D 64 25			sta INITPLAYERS.ISALIVE
  2401 1C3E A9 5D			lda #$5D
  2402 1C40 8D 63 25			sta INITPLAYERS.COLOUR
  2403 1C43 A9 51			lda #$51
  2404 1C45 8D 62 25			sta INITPLAYERS.HEAD
  2405 1C48 A9 04			lda #$04
  2406 1C4A 8D 61 25			sta INITPLAYERS.BRAIN
  2407 1C4D A9 08			lda #$08
  2408 1C4F 8D 60 25			sta INITPLAYERS.DIR
  2409 1C52 A9 0C			lda #$0C
  2410 1C54 8D 5F 25			sta INITPLAYERS.Y
  2411 1C57 A9 16			lda #$16
  2412 1C59 8D 5E 25			sta INITPLAYERS.X
  2413 1C5C AD 0A 25			lda PLAYER2
  2414 1C5F 8D 5C 25			sta INITPLAYERS.P
  2415 1C62 AD 0B 25			lda PLAYER2+1
  2416 1C65 8D 5D 25			sta INITPLAYERS.P+1
  2417 1C68 20 CD 13			jsr INITPLAYERS
  2418
  2419 				; optimize OK (levels.inc), line = 78
  2420
  2421 1C6B A9 00			lda #$00
  2422 1C6D 8D 64 25			sta INITPLAYERS.ISALIVE
  2423 1C70 A9 71			lda #$71
  2424 1C72 8D 63 25			sta INITPLAYERS.COLOUR
  2425 1C75 A9 51			lda #$51
  2426 1C77 8D 62 25			sta INITPLAYERS.HEAD
  2427 1C7A A9 03			lda #$03
  2428 1C7C 8D 61 25			sta INITPLAYERS.BRAIN
  2429 1C7F A9 02			lda #$02
  2430 1C81 8D 60 25			sta INITPLAYERS.DIR
  2431 1C84 A9 04			lda #$04
  2432 1C86 8D 5F 25			sta INITPLAYERS.Y
  2433 1C89 A9 14			lda #$14
  2434 1C8B 8D 5E 25			sta INITPLAYERS.X
  2435 1C8E AD 0C 25			lda PLAYER3
  2436 1C91 8D 5C 25			sta INITPLAYERS.P
  2437 1C94 AD 0D 25			lda PLAYER3+1
  2438 1C97 8D 5D 25			sta INITPLAYERS.P+1
  2439 1C9A 20 CD 13			jsr INITPLAYERS
  2440
  2441 				; optimize OK (levels.inc), line = 79
  2442
  2443 1C9D A9 00			lda #$00
  2444 1C9F 8D 64 25			sta INITPLAYERS.ISALIVE
  2445 1CA2 A9 55			lda #$55
  2446 1CA4 8D 63 25			sta INITPLAYERS.COLOUR
  2447 1CA7 A9 51			lda #$51
  2448 1CA9 8D 62 25			sta INITPLAYERS.HEAD
  2449 1CAC A9 03			lda #$03
  2450 1CAE 8D 61 25			sta INITPLAYERS.BRAIN
  2451 1CB1 A9 01			lda #$01
  2452 1CB3 8D 60 25			sta INITPLAYERS.DIR
  2453 1CB6 A9 12			lda #$12
  2454 1CB8 8D 5F 25			sta INITPLAYERS.Y
  2455 1CBB A9 14			lda #$14
  2456 1CBD 8D 5E 25			sta INITPLAYERS.X
  2457 1CC0 AD 0E 25			lda PLAYER4
  2458 1CC3 8D 5C 25			sta INITPLAYERS.P
  2459 1CC6 AD 0F 25			lda PLAYER4+1
  2460 1CC9 8D 5D 25			sta INITPLAYERS.P+1
  2461 1CCC 20 CD 13			jsr INITPLAYERS
  2462
  2463 				; optimize OK (levels.inc), line = 81
  2464
  2465 1CCF A9 FA			lda #$FA
  2466 1CD1 8D 46 25			sta adr.OBSTACLES+$00
  2467 1CD4 A9 0C			lda #$0C
  2468 1CD6 8D 47 25			sta adr.OBSTACLES+1+$00
  2469
  2470 				; optimize OK (levels.inc), line = 82
  2471
  2472 1CD9 A9 0E			lda #$0E
  2473 1CDB 8D 48 25			sta adr.OBSTACLES+$02
  2474 1CDE A9 0D			lda #$0D
  2475 1CE0 8D 49 25			sta adr.OBSTACLES+1+$02
  2476
  2477 				; optimize OK (levels.inc), line = 83
  2478
  2479 1CE3 A9 DA			lda #$DA
  2480 1CE5 8D 4A 25			sta adr.OBSTACLES+$04
  2481 1CE8 A9 0E			lda #$0E
  2482 1CEA 8D 4B 25			sta adr.OBSTACLES+1+$04
  2483
  2484 				; optimize OK (levels.inc), line = 84
  2485
  2486 1CED A9 EE			lda #$EE
  2487 1CEF 8D 4C 25			sta adr.OBSTACLES+$06
  2488 1CF2 A9 0E			lda #$0E
  2489 1CF4 8D 4D 25			sta adr.OBSTACLES+1+$06
  2490
  2491 				; optimize OK (levels.inc), line = 85
  2492
  2493 1CF7 A9 E1			lda #$E1
  2494 1CF9 8D 4E 25			sta adr.OBSTACLES+$08
  2495 1CFC A9 0D			lda #$0D
  2496 1CFE 8D 4F 25			sta adr.OBSTACLES+1+$08
  2497
  2498 				; optimize OK (levels.inc), line = 86
  2499
  2500 1D01 A9 64			lda #$64
  2501 1D03 8D 50 25			sta adr.OBSTACLES+$0A
  2502 1D06 A9 0C			lda #$0C
  2503 1D08 8D 51 25			sta adr.OBSTACLES+1+$0A
  2504
  2505 				; optimize OK (levels.inc), line = 87
  2506
  2507 1D0B A9 84			lda #$84
  2508 1D0D 8D 52 25			sta adr.OBSTACLES+$0C
  2509 1D10 A9 0F			lda #$0F
  2510 1D12 8D 53 25			sta adr.OBSTACLES+1+$0C
  2511
  2512 				; optimize OK (levels.inc), line = 88
  2513
  2514 1D15 A9 F4			lda #$F4
  2515 1D17 8D 54 25			sta adr.OBSTACLES+$0E
  2516 1D1A A9 0D			lda #$0D
  2517 1D1C 8D 55 25			sta adr.OBSTACLES+1+$0E
  2518
  2519 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 90
  2520
  2521 1D1F 20 CB 12			jsr SAVEOBSTACLES
  2522 1D22			@exit
  2523 					.ifdef @new
  2524 					lda <@VarData
  2525 					sta :ztmp
  2526 					lda >@VarData
  2527 					ldy #@VarDataSize-1
  2528 					jmp @FreeMem
  2529 					els
  2530 1D22 60				rts						; ret
  2531 					eif
  2532 				.endl
  2533
  2534 1D23			.local	SETLEVEL05					; PROCEDURE
  2535
  2536 				; optimize OK (levels.inc), line = 97
  2537
  2538 1D23 A9 01			lda #$01
  2539 1D25 8D 64 25			sta INITPLAYERS.ISALIVE
  2540 1D28 A9 5F			lda #$5F
  2541 1D2A 8D 63 25			sta INITPLAYERS.COLOUR
  2542 1D2D A9 51			lda #$51
  2543 1D2F 8D 62 25			sta INITPLAYERS.HEAD
  2544 1D32 A9 00			lda #$00
  2545 1D34 8D 61 25			sta INITPLAYERS.BRAIN
  2546 1D37 A9 04			lda #$04
  2547 1D39 8D 60 25			sta INITPLAYERS.DIR
  2548 1D3C A9 0C			lda #$0C
  2549 1D3E 8D 5F 25			sta INITPLAYERS.Y
  2550 1D41 A9 12			lda #$12
  2551 1D43 8D 5E 25			sta INITPLAYERS.X
  2552 1D46 AD 08 25			lda PLAYER1
  2553 1D49 8D 5C 25			sta INITPLAYERS.P
  2554 1D4C AD 09 25			lda PLAYER1+1
  2555 1D4F 8D 5D 25			sta INITPLAYERS.P+1
  2556 1D52 20 CD 13			jsr INITPLAYERS
  2557
  2558 				; optimize OK (levels.inc), line = 98
  2559
  2560 1D55 A9 01			lda #$01
  2561 1D57 8D 64 25			sta INITPLAYERS.ISALIVE
  2562 1D5A A9 5D			lda #$5D
  2563 1D5C 8D 63 25			sta INITPLAYERS.COLOUR
  2564 1D5F A9 51			lda #$51
  2565 1D61 8D 62 25			sta INITPLAYERS.HEAD
  2566 1D64 A9 04			lda #$04
  2567 1D66 8D 61 25			sta INITPLAYERS.BRAIN
  2568 1D69 A9 08			lda #$08
  2569 1D6B 8D 60 25			sta INITPLAYERS.DIR
  2570 1D6E A9 0C			lda #$0C
  2571 1D70 8D 5F 25			sta INITPLAYERS.Y
  2572 1D73 A9 16			lda #$16
  2573 1D75 8D 5E 25			sta INITPLAYERS.X
  2574 1D78 AD 0A 25			lda PLAYER2
  2575 1D7B 8D 5C 25			sta INITPLAYERS.P
  2576 1D7E AD 0B 25			lda PLAYER2+1
  2577 1D81 8D 5D 25			sta INITPLAYERS.P+1
  2578 1D84 20 CD 13			jsr INITPLAYERS
  2579
  2580 				; optimize OK (levels.inc), line = 99
  2581
  2582 1D87 A9 01			lda #$01
  2583 1D89 8D 64 25			sta INITPLAYERS.ISALIVE
  2584 1D8C A9 71			lda #$71
  2585 1D8E 8D 63 25			sta INITPLAYERS.COLOUR
  2586 1D91 A9 51			lda #$51
  2587 1D93 8D 62 25			sta INITPLAYERS.HEAD
  2588 1D96 A9 03			lda #$03
  2589 1D98 8D 61 25			sta INITPLAYERS.BRAIN
  2590 1D9B A9 02			lda #$02
  2591 1D9D 8D 60 25			sta INITPLAYERS.DIR
  2592 1DA0 A9 04			lda #$04
  2593 1DA2 8D 5F 25			sta INITPLAYERS.Y
  2594 1DA5 A9 14			lda #$14
  2595 1DA7 8D 5E 25			sta INITPLAYERS.X
  2596 1DAA AD 0C 25			lda PLAYER3
  2597 1DAD 8D 5C 25			sta INITPLAYERS.P
  2598 1DB0 AD 0D 25			lda PLAYER3+1
  2599 1DB3 8D 5D 25			sta INITPLAYERS.P+1
  2600 1DB6 20 CD 13			jsr INITPLAYERS
  2601
  2602 				; optimize OK (levels.inc), line = 100
  2603
  2604 1DB9 A9 01			lda #$01
  2605 1DBB 8D 64 25			sta INITPLAYERS.ISALIVE
  2606 1DBE A9 55			lda #$55
  2607 1DC0 8D 63 25			sta INITPLAYERS.COLOUR
  2608 1DC3 A9 51			lda #$51
  2609 1DC5 8D 62 25			sta INITPLAYERS.HEAD
  2610 1DC8 A9 03			lda #$03
  2611 1DCA 8D 61 25			sta INITPLAYERS.BRAIN
  2612 1DCD A9 01			lda #$01
  2613 1DCF 8D 60 25			sta INITPLAYERS.DIR
  2614 1DD2 A9 12			lda #$12
  2615 1DD4 8D 5F 25			sta INITPLAYERS.Y
  2616 1DD7 A9 14			lda #$14
  2617 1DD9 8D 5E 25			sta INITPLAYERS.X
  2618 1DDC AD 0E 25			lda PLAYER4
  2619 1DDF 8D 5C 25			sta INITPLAYERS.P
  2620 1DE2 AD 0F 25			lda PLAYER4+1
  2621 1DE5 8D 5D 25			sta INITPLAYERS.P+1
  2622 1DE8 20 CD 13			jsr INITPLAYERS
  2623
  2624 				; optimize OK (levels.inc), line = 102
  2625
  2626 1DEB A9 FA			lda #$FA
  2627 1DED 8D 46 25			sta adr.OBSTACLES+$00
  2628 1DF0 A9 0C			lda #$0C
  2629 1DF2 8D 47 25			sta adr.OBSTACLES+1+$00
  2630
  2631 				; optimize OK (levels.inc), line = 103
  2632
  2633 1DF5 A9 0E			lda #$0E
  2634 1DF7 8D 48 25			sta adr.OBSTACLES+$02
  2635 1DFA A9 0D			lda #$0D
  2636 1DFC 8D 49 25			sta adr.OBSTACLES+1+$02
  2637
  2638 				; optimize OK (levels.inc), line = 104
  2639
  2640 1DFF A9 DA			lda #$DA
  2641 1E01 8D 4A 25			sta adr.OBSTACLES+$04
  2642 1E04 A9 0E			lda #$0E
  2643 1E06 8D 4B 25			sta adr.OBSTACLES+1+$04
  2644
  2645 				; optimize OK (levels.inc), line = 105
  2646
  2647 1E09 A9 EE			lda #$EE
  2648 1E0B 8D 4C 25			sta adr.OBSTACLES+$06
  2649 1E0E A9 0E			lda #$0E
  2650 1E10 8D 4D 25			sta adr.OBSTACLES+1+$06
  2651
  2652 				; optimize OK (levels.inc), line = 106
  2653
  2654 1E13 A9 E1			lda #$E1
  2655 1E15 8D 4E 25			sta adr.OBSTACLES+$08
  2656 1E18 A9 0D			lda #$0D
  2657 1E1A 8D 4F 25			sta adr.OBSTACLES+1+$08
  2658
  2659 				; optimize OK (levels.inc), line = 107
  2660
  2661 1E1D A9 64			lda #$64
  2662 1E1F 8D 50 25			sta adr.OBSTACLES+$0A
  2663 1E22 A9 0C			lda #$0C
  2664 1E24 8D 51 25			sta adr.OBSTACLES+1+$0A
  2665
  2666 				; optimize OK (levels.inc), line = 108
  2667
  2668 1E27 A9 84			lda #$84
  2669 1E29 8D 52 25			sta adr.OBSTACLES+$0C
  2670 1E2C A9 0F			lda #$0F
  2671 1E2E 8D 53 25			sta adr.OBSTACLES+1+$0C
  2672
  2673 				; optimize OK (levels.inc), line = 109
  2674
  2675 1E31 A9 F4			lda #$F4
  2676 1E33 8D 54 25			sta adr.OBSTACLES+$0E
  2677 1E36 A9 0D			lda #$0D
  2678 1E38 8D 55 25			sta adr.OBSTACLES+1+$0E
  2679
  2680 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 111
  2681
  2682 1E3B 20 CB 12			jsr SAVEOBSTACLES
  2683 1E3E			@exit
  2684 					.ifdef @new
  2685 					lda <@VarData
  2686 					sta :ztmp
  2687 					lda >@VarData
  2688 					ldy #@VarDataSize-1
  2689 					jmp @FreeMem
  2690 					els
  2691 1E3E 60				rts						; ret
  2692 					eif
  2693 				.endl
  2694
  2695 1E3F			.local	SETLEVEL06					; PROCEDURE
  2696
  2697 				; optimize OK (levels.inc), line = 118
  2698
  2699 1E3F A9 01			lda #$01
  2700 1E41 8D 64 25			sta INITPLAYERS.ISALIVE
  2701 1E44 A9 5F			lda #$5F
  2702 1E46 8D 63 25			sta INITPLAYERS.COLOUR
  2703 1E49 A9 51			lda #$51
  2704 1E4B 8D 62 25			sta INITPLAYERS.HEAD
  2705 1E4E A9 00			lda #$00
  2706 1E50 8D 61 25			sta INITPLAYERS.BRAIN
  2707 1E53 A9 08			lda #$08
  2708 1E55 8D 60 25			sta INITPLAYERS.DIR
  2709 1E58 A9 0C			lda #$0C
  2710 1E5A 8D 5F 25			sta INITPLAYERS.Y
  2711 1E5D A9 0A			lda #$0A
  2712 1E5F 8D 5E 25			sta INITPLAYERS.X
  2713 1E62 AD 08 25			lda PLAYER1
  2714 1E65 8D 5C 25			sta INITPLAYERS.P
  2715 1E68 AD 09 25			lda PLAYER1+1
  2716 1E6B 8D 5D 25			sta INITPLAYERS.P+1
  2717 1E6E 20 CD 13			jsr INITPLAYERS
  2718
  2719 				; optimize OK (levels.inc), line = 119
  2720
  2721 1E71 A9 01			lda #$01
  2722 1E73 8D 64 25			sta INITPLAYERS.ISALIVE
  2723 1E76 A9 5D			lda #$5D
  2724 1E78 8D 63 25			sta INITPLAYERS.COLOUR
  2725 1E7B A9 51			lda #$51
  2726 1E7D 8D 62 25			sta INITPLAYERS.HEAD
  2727 1E80 A9 04			lda #$04
  2728 1E82 8D 61 25			sta INITPLAYERS.BRAIN
  2729 1E85 8D 60 25			sta INITPLAYERS.DIR
  2730 1E88 A9 0C			lda #$0C
  2731 1E8A 8D 5F 25			sta INITPLAYERS.Y
  2732 1E8D A9 1E			lda #$1E
  2733 1E8F 8D 5E 25			sta INITPLAYERS.X
  2734 1E92 AD 0A 25			lda PLAYER2
  2735 1E95 8D 5C 25			sta INITPLAYERS.P
  2736 1E98 AD 0B 25			lda PLAYER2+1
  2737 1E9B 8D 5D 25			sta INITPLAYERS.P+1
  2738 1E9E 20 CD 13			jsr INITPLAYERS
  2739
  2740 				; optimize OK (levels.inc), line = 120
  2741
  2742 1EA1 A9 01			lda #$01
  2743 1EA3 8D 64 25			sta INITPLAYERS.ISALIVE
  2744 1EA6 A9 71			lda #$71
  2745 1EA8 8D 63 25			sta INITPLAYERS.COLOUR
  2746 1EAB A9 51			lda #$51
  2747 1EAD 8D 62 25			sta INITPLAYERS.HEAD
  2748 1EB0 A9 03			lda #$03
  2749 1EB2 8D 61 25			sta INITPLAYERS.BRAIN
  2750 1EB5 A9 02			lda #$02
  2751 1EB7 8D 60 25			sta INITPLAYERS.DIR
  2752 1EBA A9 04			lda #$04
  2753 1EBC 8D 5F 25			sta INITPLAYERS.Y
  2754 1EBF A9 14			lda #$14
  2755 1EC1 8D 5E 25			sta INITPLAYERS.X
  2756 1EC4 AD 0C 25			lda PLAYER3
  2757 1EC7 8D 5C 25			sta INITPLAYERS.P
  2758 1ECA AD 0D 25			lda PLAYER3+1
  2759 1ECD 8D 5D 25			sta INITPLAYERS.P+1
  2760 1ED0 20 CD 13			jsr INITPLAYERS
  2761
  2762 				; optimize OK (levels.inc), line = 121
  2763
  2764 1ED3 A9 01			lda #$01
  2765 1ED5 8D 64 25			sta INITPLAYERS.ISALIVE
  2766 1ED8 A9 55			lda #$55
  2767 1EDA 8D 63 25			sta INITPLAYERS.COLOUR
  2768 1EDD A9 51			lda #$51
  2769 1EDF 8D 62 25			sta INITPLAYERS.HEAD
  2770 1EE2 A9 02			lda #$02
  2771 1EE4 8D 61 25			sta INITPLAYERS.BRAIN
  2772 1EE7 A9 01			lda #$01
  2773 1EE9 8D 60 25			sta INITPLAYERS.DIR
  2774 1EEC A9 12			lda #$12
  2775 1EEE 8D 5F 25			sta INITPLAYERS.Y
  2776 1EF1 A9 14			lda #$14
  2777 1EF3 8D 5E 25			sta INITPLAYERS.X
  2778 1EF6 AD 0E 25			lda PLAYER4
  2779 1EF9 8D 5C 25			sta INITPLAYERS.P
  2780 1EFC AD 0F 25			lda PLAYER4+1
  2781 1EFF 8D 5D 25			sta INITPLAYERS.P+1
  2782 1F02 20 CD 13			jsr INITPLAYERS
  2783
  2784 				; optimize OK (levels.inc), line = 123
  2785
  2786 1F05 A9 FA			lda #$FA
  2787 1F07 8D 46 25			sta adr.OBSTACLES+$00
  2788 1F0A A9 0C			lda #$0C
  2789 1F0C 8D 47 25			sta adr.OBSTACLES+1+$00
  2790
  2791 				; optimize OK (levels.inc), line = 124
  2792
  2793 1F0F A9 0E			lda #$0E
  2794 1F11 8D 48 25			sta adr.OBSTACLES+$02
  2795 1F14 A9 0D			lda #$0D
  2796 1F16 8D 49 25			sta adr.OBSTACLES+1+$02
  2797
  2798 				; optimize OK (levels.inc), line = 125
  2799
  2800 1F19 A9 DA			lda #$DA
  2801 1F1B 8D 4A 25			sta adr.OBSTACLES+$04
  2802 1F1E A9 0E			lda #$0E
  2803 1F20 8D 4B 25			sta adr.OBSTACLES+1+$04
  2804
  2805 				; optimize OK (levels.inc), line = 126
  2806
  2807 1F23 A9 EE			lda #$EE
  2808 1F25 8D 4C 25			sta adr.OBSTACLES+$06
  2809 1F28 A9 0E			lda #$0E
  2810 1F2A 8D 4D 25			sta adr.OBSTACLES+1+$06
  2811
  2812 				; optimize OK (levels.inc), line = 127
  2813
  2814 1F2D A9 E1			lda #$E1
  2815 1F2F 8D 4E 25			sta adr.OBSTACLES+$08
  2816 1F32 A9 0D			lda #$0D
  2817 1F34 8D 4F 25			sta adr.OBSTACLES+1+$08
  2818
  2819 				; optimize OK (levels.inc), line = 128
  2820
  2821 1F37 A9 64			lda #$64
  2822 1F39 8D 50 25			sta adr.OBSTACLES+$0A
  2823 1F3C A9 0C			lda #$0C
  2824 1F3E 8D 51 25			sta adr.OBSTACLES+1+$0A
  2825
  2826 				; optimize OK (levels.inc), line = 129
  2827
  2828 1F41 A9 84			lda #$84
  2829 1F43 8D 52 25			sta adr.OBSTACLES+$0C
  2830 1F46 A9 0F			lda #$0F
  2831 1F48 8D 53 25			sta adr.OBSTACLES+1+$0C
  2832
  2833 				; optimize OK (levels.inc), line = 130
  2834
  2835 1F4B A9 7E			lda #$7E
  2836 1F4D 8D 54 25			sta adr.OBSTACLES+$0E
  2837 1F50 A9 00			lda #$00
  2838 1F52 8D 55 25			sta adr.OBSTACLES+1+$0E
  2839
  2840 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 132
  2841
  2842 1F55 20 CB 12			jsr SAVEOBSTACLES
  2843 1F58			@exit
  2844 					.ifdef @new
  2845 					lda <@VarData
  2846 					sta :ztmp
  2847 					lda >@VarData
  2848 					ldy #@VarDataSize-1
  2849 					jmp @FreeMem
  2850 					els
  2851 1F58 60				rts						; ret
  2852 					eif
  2853 				.endl
  2854
  2855 1F59			.local	SETLEVEL07					; PROCEDURE
  2856
  2857 				; optimize OK (levels.inc), line = 139
  2858
  2859 1F59 A9 01			lda #$01
  2860 1F5B 8D 64 25			sta INITPLAYERS.ISALIVE
  2861 1F5E A9 5F			lda #$5F
  2862 1F60 8D 63 25			sta INITPLAYERS.COLOUR
  2863 1F63 A9 51			lda #$51
  2864 1F65 8D 62 25			sta INITPLAYERS.HEAD
  2865 1F68 A9 00			lda #$00
  2866 1F6A 8D 61 25			sta INITPLAYERS.BRAIN
  2867 1F6D A9 04			lda #$04
  2868 1F6F 8D 60 25			sta INITPLAYERS.DIR
  2869 1F72 A9 0C			lda #$0C
  2870 1F74 8D 5F 25			sta INITPLAYERS.Y
  2871 1F77 A9 12			lda #$12
  2872 1F79 8D 5E 25			sta INITPLAYERS.X
  2873 1F7C AD 08 25			lda PLAYER1
  2874 1F7F 8D 5C 25			sta INITPLAYERS.P
  2875 1F82 AD 09 25			lda PLAYER1+1
  2876 1F85 8D 5D 25			sta INITPLAYERS.P+1
  2877 1F88 20 CD 13			jsr INITPLAYERS
  2878
  2879 				; optimize OK (levels.inc), line = 140
  2880
  2881 1F8B A9 01			lda #$01
  2882 1F8D 8D 64 25			sta INITPLAYERS.ISALIVE
  2883 1F90 A9 5D			lda #$5D
  2884 1F92 8D 63 25			sta INITPLAYERS.COLOUR
  2885 1F95 A9 51			lda #$51
  2886 1F97 8D 62 25			sta INITPLAYERS.HEAD
  2887 1F9A A9 04			lda #$04
  2888 1F9C 8D 61 25			sta INITPLAYERS.BRAIN
  2889 1F9F A9 08			lda #$08
  2890 1FA1 8D 60 25			sta INITPLAYERS.DIR
  2891 1FA4 A9 0C			lda #$0C
  2892 1FA6 8D 5F 25			sta INITPLAYERS.Y
  2893 1FA9 A9 16			lda #$16
  2894 1FAB 8D 5E 25			sta INITPLAYERS.X
  2895 1FAE AD 0A 25			lda PLAYER2
  2896 1FB1 8D 5C 25			sta INITPLAYERS.P
  2897 1FB4 AD 0B 25			lda PLAYER2+1
  2898 1FB7 8D 5D 25			sta INITPLAYERS.P+1
  2899 1FBA 20 CD 13			jsr INITPLAYERS
  2900
  2901 				; optimize OK (levels.inc), line = 141
  2902
  2903 1FBD A9 01			lda #$01
  2904 1FBF 8D 64 25			sta INITPLAYERS.ISALIVE
  2905 1FC2 A9 71			lda #$71
  2906 1FC4 8D 63 25			sta INITPLAYERS.COLOUR
  2907 1FC7 A9 51			lda #$51
  2908 1FC9 8D 62 25			sta INITPLAYERS.HEAD
  2909 1FCC A9 03			lda #$03
  2910 1FCE 8D 61 25			sta INITPLAYERS.BRAIN
  2911 1FD1 A9 02			lda #$02
  2912 1FD3 8D 60 25			sta INITPLAYERS.DIR
  2913 1FD6 A9 01			lda #$01
  2914 1FD8 8D 5F 25			sta INITPLAYERS.Y
  2915 1FDB 8D 5E 25			sta INITPLAYERS.X
  2916 1FDE AD 0C 25			lda PLAYER3
  2917 1FE1 8D 5C 25			sta INITPLAYERS.P
  2918 1FE4 AD 0D 25			lda PLAYER3+1
  2919 1FE7 8D 5D 25			sta INITPLAYERS.P+1
  2920 1FEA 20 CD 13			jsr INITPLAYERS
  2921
  2922 				; optimize OK (levels.inc), line = 142
  2923
  2924 1FED A9 01			lda #$01
  2925 1FEF 8D 64 25			sta INITPLAYERS.ISALIVE
  2926 1FF2 A9 55			lda #$55
  2927 1FF4 8D 63 25			sta INITPLAYERS.COLOUR
  2928 1FF7 A9 51			lda #$51
  2929 1FF9 8D 62 25			sta INITPLAYERS.HEAD
  2930 1FFC A9 02			lda #$02
  2931 1FFE 8D 61 25			sta INITPLAYERS.BRAIN
  2932 2001 8D 60 25			sta INITPLAYERS.DIR
  2933 2004 A9 0E			lda #$0E
  2934 2006 8D 5F 25			sta INITPLAYERS.Y
  2935 2009 A9 14			lda #$14
  2936 200B 8D 5E 25			sta INITPLAYERS.X
  2937 200E AD 0E 25			lda PLAYER4
  2938 2011 8D 5C 25			sta INITPLAYERS.P
  2939 2014 AD 0F 25			lda PLAYER4+1
  2940 2017 8D 5D 25			sta INITPLAYERS.P+1
  2941 201A 20 CD 13			jsr INITPLAYERS
  2942
  2943 				; optimize OK (levels.inc), line = 144
  2944
  2945 201D A9 FA			lda #$FA
  2946 201F 8D 46 25			sta adr.OBSTACLES+$00
  2947 2022 A9 0C			lda #$0C
  2948 2024 8D 47 25			sta adr.OBSTACLES+1+$00
  2949
  2950 				; optimize OK (levels.inc), line = 145
  2951
  2952 2027 A9 0E			lda #$0E
  2953 2029 8D 48 25			sta adr.OBSTACLES+$02
  2954 202C A9 0D			lda #$0D
  2955 202E 8D 49 25			sta adr.OBSTACLES+1+$02
  2956
  2957 				; optimize OK (levels.inc), line = 146
  2958
  2959 2031 A9 DA			lda #$DA
  2960 2033 8D 4A 25			sta adr.OBSTACLES+$04
  2961 2036 A9 0E			lda #$0E
  2962 2038 8D 4B 25			sta adr.OBSTACLES+1+$04
  2963
  2964 				; optimize OK (levels.inc), line = 147
  2965
  2966 203B A9 EE			lda #$EE
  2967 203D 8D 4C 25			sta adr.OBSTACLES+$06
  2968 2040 A9 0E			lda #$0E
  2969 2042 8D 4D 25			sta adr.OBSTACLES+1+$06
  2970
  2971 				; optimize OK (levels.inc), line = 148
  2972
  2973 2045 A9 E1			lda #$E1
  2974 2047 8D 4E 25			sta adr.OBSTACLES+$08
  2975 204A A9 0D			lda #$0D
  2976 204C 8D 4F 25			sta adr.OBSTACLES+1+$08
  2977
  2978 				; optimize OK (levels.inc), line = 149
  2979
  2980 204F A9 64			lda #$64
  2981 2051 8D 50 25			sta adr.OBSTACLES+$0A
  2982 2054 A9 0C			lda #$0C
  2983 2056 8D 51 25			sta adr.OBSTACLES+1+$0A
  2984
  2985 				; optimize OK (levels.inc), line = 150
  2986
  2987 2059 A9 84			lda #$84
  2988 205B 8D 52 25			sta adr.OBSTACLES+$0C
  2989 205E A9 0F			lda #$0F
  2990 2060 8D 53 25			sta adr.OBSTACLES+1+$0C
  2991
  2992 				; optimize OK (levels.inc), line = 151
  2993
  2994 2063 A9 F4			lda #$F4
  2995 2065 8D 54 25			sta adr.OBSTACLES+$0E
  2996 2068 A9 0D			lda #$0D
  2997 206A 8D 55 25			sta adr.OBSTACLES+1+$0E
  2998
  2999 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 153
  3000
  3001 206D 20 CB 12			jsr SAVEOBSTACLES
  3002 2070			@exit
  3003 					.ifdef @new
  3004 					lda <@VarData
  3005 					sta :ztmp
  3006 					lda >@VarData
  3007 					ldy #@VarDataSize-1
  3008 					jmp @FreeMem
  3009 					els
  3010 2070 60				rts						; ret
  3011 					eif
  3012 				.endl
  3013
  3014 2071			.local	SETLEVEL08					; PROCEDURE
  3015
  3016 				; optimize OK (levels.inc), line = 160
  3017
  3018 2071 A9 01			lda #$01
  3019 2073 8D 64 25			sta INITPLAYERS.ISALIVE
  3020 2076 A9 5F			lda #$5F
  3021 2078 8D 63 25			sta INITPLAYERS.COLOUR
  3022 207B A9 51			lda #$51
  3023 207D 8D 62 25			sta INITPLAYERS.HEAD
  3024 2080 A9 00			lda #$00
  3025 2082 8D 61 25			sta INITPLAYERS.BRAIN
  3026 2085 A9 08			lda #$08
  3027 2087 8D 60 25			sta INITPLAYERS.DIR
  3028 208A A9 17			lda #$17
  3029 208C 8D 5F 25			sta INITPLAYERS.Y
  3030 208F A9 01			lda #$01
  3031 2091 8D 5E 25			sta INITPLAYERS.X
  3032 2094 AD 08 25			lda PLAYER1
  3033 2097 8D 5C 25			sta INITPLAYERS.P
  3034 209A AD 09 25			lda PLAYER1+1
  3035 209D 8D 5D 25			sta INITPLAYERS.P+1
  3036 20A0 20 CD 13			jsr INITPLAYERS
  3037
  3038 				; optimize OK (levels.inc), line = 161
  3039
  3040 20A3 A9 01			lda #$01
  3041 20A5 8D 64 25			sta INITPLAYERS.ISALIVE
  3042 20A8 A9 5D			lda #$5D
  3043 20AA 8D 63 25			sta INITPLAYERS.COLOUR
  3044 20AD A9 51			lda #$51
  3045 20AF 8D 62 25			sta INITPLAYERS.HEAD
  3046 20B2 A9 03			lda #$03
  3047 20B4 8D 61 25			sta INITPLAYERS.BRAIN
  3048 20B7 A9 04			lda #$04
  3049 20B9 8D 60 25			sta INITPLAYERS.DIR
  3050 20BC A9 17			lda #$17
  3051 20BE 8D 5F 25			sta INITPLAYERS.Y
  3052 20C1 A9 26			lda #$26
  3053 20C3 8D 5E 25			sta INITPLAYERS.X
  3054 20C6 AD 0A 25			lda PLAYER2
  3055 20C9 8D 5C 25			sta INITPLAYERS.P
  3056 20CC AD 0B 25			lda PLAYER2+1
  3057 20CF 8D 5D 25			sta INITPLAYERS.P+1
  3058 20D2 20 CD 13			jsr INITPLAYERS
  3059
  3060 				; optimize OK (levels.inc), line = 162
  3061
  3062 20D5 A9 01			lda #$01
  3063 20D7 8D 64 25			sta INITPLAYERS.ISALIVE
  3064 20DA A9 71			lda #$71
  3065 20DC 8D 63 25			sta INITPLAYERS.COLOUR
  3066 20DF A9 51			lda #$51
  3067 20E1 8D 62 25			sta INITPLAYERS.HEAD
  3068 20E4 A9 02			lda #$02
  3069 20E6 8D 61 25			sta INITPLAYERS.BRAIN
  3070 20E9 8D 60 25			sta INITPLAYERS.DIR
  3071 20EC A9 01			lda #$01
  3072 20EE 8D 5F 25			sta INITPLAYERS.Y
  3073 20F1 A9 0A			lda #$0A
  3074 20F3 8D 5E 25			sta INITPLAYERS.X
  3075 20F6 AD 0C 25			lda PLAYER3
  3076 20F9 8D 5C 25			sta INITPLAYERS.P
  3077 20FC AD 0D 25			lda PLAYER3+1
  3078 20FF 8D 5D 25			sta INITPLAYERS.P+1
  3079 2102 20 CD 13			jsr INITPLAYERS
  3080
  3081 				; optimize OK (levels.inc), line = 163
  3082
  3083 2105 A9 01			lda #$01
  3084 2107 8D 64 25			sta INITPLAYERS.ISALIVE
  3085 210A A9 55			lda #$55
  3086 210C 8D 63 25			sta INITPLAYERS.COLOUR
  3087 210F A9 51			lda #$51
  3088 2111 8D 62 25			sta INITPLAYERS.HEAD
  3089 2114 A9 04			lda #$04
  3090 2116 8D 61 25			sta INITPLAYERS.BRAIN
  3091 2119 8D 60 25			sta INITPLAYERS.DIR
  3092 211C A9 01			lda #$01
  3093 211E 8D 5F 25			sta INITPLAYERS.Y
  3094 2121 A9 26			lda #$26
  3095 2123 8D 5E 25			sta INITPLAYERS.X
  3096 2126 AD 0E 25			lda PLAYER4
  3097 2129 8D 5C 25			sta INITPLAYERS.P
  3098 212C AD 0F 25			lda PLAYER4+1
  3099 212F 8D 5D 25			sta INITPLAYERS.P+1
  3100 2132 20 CD 13			jsr INITPLAYERS
  3101
  3102 				; optimize OK (levels.inc), line = 165
  3103
  3104 2135 A9 FA			lda #$FA
  3105 2137 8D 46 25			sta adr.OBSTACLES+$00
  3106 213A A9 0C			lda #$0C
  3107 213C 8D 47 25			sta adr.OBSTACLES+1+$00
  3108
  3109 				; optimize OK (levels.inc), line = 166
  3110
  3111 213F A9 0E			lda #$0E
  3112 2141 8D 48 25			sta adr.OBSTACLES+$02
  3113 2144 A9 0D			lda #$0D
  3114 2146 8D 49 25			sta adr.OBSTACLES+1+$02
  3115
  3116 				; optimize OK (levels.inc), line = 167
  3117
  3118 2149 A9 DA			lda #$DA
  3119 214B 8D 4A 25			sta adr.OBSTACLES+$04
  3120 214E A9 0E			lda #$0E
  3121 2150 8D 4B 25			sta adr.OBSTACLES+1+$04
  3122
  3123 				; optimize OK (levels.inc), line = 168
  3124
  3125 2153 A9 EE			lda #$EE
  3126 2155 8D 4C 25			sta adr.OBSTACLES+$06
  3127 2158 A9 0E			lda #$0E
  3128 215A 8D 4D 25			sta adr.OBSTACLES+1+$06
  3129
  3130 				; optimize OK (levels.inc), line = 169
  3131
  3132 215D A9 E1			lda #$E1
  3133 215F 8D 4E 25			sta adr.OBSTACLES+$08
  3134 2162 A9 0D			lda #$0D
  3135 2164 8D 4F 25			sta adr.OBSTACLES+1+$08
  3136
  3137 				; optimize OK (levels.inc), line = 170
  3138
  3139 2167 A9 64			lda #$64
  3140 2169 8D 50 25			sta adr.OBSTACLES+$0A
  3141 216C A9 0C			lda #$0C
  3142 216E 8D 51 25			sta adr.OBSTACLES+1+$0A
  3143
  3144 				; optimize OK (levels.inc), line = 171
  3145
  3146 2171 A9 84			lda #$84
  3147 2173 8D 52 25			sta adr.OBSTACLES+$0C
  3148 2176 A9 0F			lda #$0F
  3149 2178 8D 53 25			sta adr.OBSTACLES+1+$0C
  3150
  3151 				; optimize OK (levels.inc), line = 172
  3152
  3153 217B A9 F4			lda #$F4
  3154 217D 8D 54 25			sta adr.OBSTACLES+$0E
  3155 2180 A9 0D			lda #$0D
  3156 2182 8D 55 25			sta adr.OBSTACLES+1+$0E
  3157
  3158 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 174
  3159
  3160 2185 20 CB 12			jsr SAVEOBSTACLES
  3161 2188			@exit
  3162 					.ifdef @new
  3163 					lda <@VarData
  3164 					sta :ztmp
  3165 					lda >@VarData
  3166 					ldy #@VarDataSize-1
  3167 					jmp @FreeMem
  3168 					els
  3169 2188 60				rts						; ret
  3170 					eif
  3171 				.endl
  3172
  3173 2189			.local	HUMAN						; PROCEDURE
  3174
  3175 				; optimize OK (main.pas), line = 15
  3176
  3177 2189 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3178 2193 A0 04			ldy #PLY.DIR-DATAORIGIN
  3179 2195 B1 12			lda (:bp2),y
  3180 2197 85 5B			sta NEWDIR
  3181
  3182 				; optimize OK (main.pas), line = 16
  3183
  3184 2199 A9 02			lda #$02
  3185 219B 8D 08 FF			sta JOY
  3186 219E A9 FF			lda #$FF
  3187 21A0 8D 30 FD			sta KEYSCAN
  3188 21A3 AD 08 FF			lda JOY
  3189 21A6 49 FF			eor #$FF
  3190 21A8 85 58			sta T0B
  3191
  3192 				; optimize OK (main.pas), line = 18
  3193
  3194 21AA 8D 6C 25			sta @CASETMP_0006
  3195 21AD C9 01			cmp #$01
  3196 21AF D0 19			jne l_0C56
  3197 21B1			@
  3198
  3199 				; optimize OK (main.pas), line = 19
  3200
  3201 21B1 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3202 21BB A0 04			ldy #PLY.DIR-DATAORIGIN
  3203 21BD B1 12			lda (:bp2),y
  3204 21BF C9 02			cmp #$02
  3205 21C1 F0 04			jeq l_0C68
  3206 21C3 A9 01			lda #$01
  3207 21C5 85 5B			sta NEWDIR
  3208 21C7			l_0C68
  3209
  3210 21C7 4C 1E 22			jmp a_0006
  3211 21CA			l_0C56
  3212 21CA C9 02			cmp #$02
  3213 21CC D0 19			jne l_0C78
  3214 21CE			@
  3215
  3216 				; optimize OK (main.pas), line = 20
  3217
  3218 21CE AC 04 25 84 12 AC + 	mwy PLY :bp2
  3219 21D8 A0 04			ldy #PLY.DIR-DATAORIGIN
  3220 21DA B1 12			lda (:bp2),y
  3221 21DC C9 01			cmp #$01
  3222 21DE F0 04			jeq l_0C8A
  3223 21E0 A9 02			lda #$02
  3224 21E2 85 5B			sta NEWDIR
  3225 21E4			l_0C8A
  3226
  3227 21E4 4C 1E 22			jmp a_0006
  3228 21E7			l_0C78
  3229 21E7 C9 04			cmp #$04
  3230 21E9 D0 19			jne l_0C9A
  3231 21EB			@
  3232
  3233 				; optimize OK (main.pas), line = 21
  3234
  3235 21EB AC 04 25 84 12 AC + 	mwy PLY :bp2
  3236 21F5 A0 04			ldy #PLY.DIR-DATAORIGIN
  3237 21F7 B1 12			lda (:bp2),y
  3238 21F9 C9 08			cmp #$08
  3239 21FB F0 04			jeq l_0CAC
  3240 21FD A9 04			lda #$04
  3241 21FF 85 5B			sta NEWDIR
  3242 2201			l_0CAC
  3243
  3244 2201 4C 1E 22			jmp a_0006
  3245 2204			l_0C9A
  3246 2204 C9 08			cmp #$08
  3247 2206 D0 16			jne l_0CBC
  3248 2208			@
  3249
  3250 				; optimize OK (main.pas), line = 22
  3251
  3252 2208 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3253 2212 A0 04			ldy #PLY.DIR-DATAORIGIN
  3254 2214 B1 12			lda (:bp2),y
  3255 2216 C9 04			cmp #$04
  3256 2218 F0 04			jeq l_0CCE
  3257 221A A9 08			lda #$08
  3258 221C 85 5B			sta NEWDIR
  3259 221E			l_0CCE
  3260
  3261 221E			l_0CBC
  3262 221E			a_0006
  3263
  3264 				; optimize OK (main.pas), line = 25
  3265
  3266 221E A5 5B			lda NEWDIR
  3267 2220 25 5C			and AVAILDIR
  3268 2222 D0 18			jne l_0CF5
  3269
  3270 				; optimize OK (main.pas), line = 26
  3271
  3272 2224 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3273 222E A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3274 2230 A9 00			lda #$00
  3275 2232 91 12			sta (:bp2),y
  3276 2234 A0 02			ldy #PLY.HEAD-DATAORIGIN
  3277 2236 A9 2A			lda #$2A
  3278 2238 91 12			sta (:bp2),y
  3279 223A C6 5A			dec ALIVE
  3280 223C			l_0CF5
  3281
  3282 				; ------------------------------------------------------------
  3283
  3284 = 256C			@CASETMP_0006	= DATAORIGIN+$0058
  3285
  3286 = 256C			@VarData	= @CASETMP_0006
  3287 = 0001			@VarDataSize	= 1
  3288
  3289 223C			@exit
  3290 					.ifdef @new
  3291 					lda <@VarData
  3292 					sta :ztmp
  3293 					lda >@VarData
  3294 					ldy #@VarDataSize-1
  3295 					jmp @FreeMem
  3296 					els
  3297 223C 60				rts						; ret
  3298 					eif
  3299 				.endl
  3300
  3301 223D			.local	PLAYERMOVE					; PROCEDURE
  3302
  3303 				; optimize OK (main.pas), line = 34
  3304
  3305 223D AC 04 25 84 12 AC + 	mwy PLY :bp2
  3306 2247 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3307 2249 B1 12			lda (:bp2),y
  3308 224B D0 03 4C 91 23		jeq l_0D14
  3309
  3310 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 35
  3311
  3312 2250 20 01 12			jsr CHECKAVAILDIR
  3313
  3314 				; optimize OK (main.pas), line = 37
  3315
  3316 2253 A5 5C			lda AVAILDIR
  3317 2255 D0 35			jne l_0D28
  3318
  3319 				; optimize OK (main.pas), line = 38
  3320
  3321 2257 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3322 2261 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3323 2263 A9 00			lda #$00
  3324 2265 91 12			sta (:bp2),y
  3325 2267 C6 5A			dec ALIVE
  3326
  3327 				; optimize OK (main.pas), line = 39
  3328
  3329 2269 A0 00			ldy #PLY.X-DATAORIGIN
  3330 226B B1 12			lda (:bp2),y
  3331 226D 8D 56 25			sta PUTCHAR.X
  3332 2270 A0 01			ldy #PLY.Y-DATAORIGIN
  3333 2272 B1 12			lda (:bp2),y
  3334 2274 8D 57 25			sta PUTCHAR.Y
  3335 2277 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3336 2279 B1 12			lda (:bp2),y
  3337 227B 18 69 80			add #$80
  3338 227E 8D 59 25			sta PUTCHAR.C
  3339 2281 A9 57			lda #$57
  3340 2283 8D 58 25			sta PUTCHAR.V
  3341 2286 20 71 11			jsr PUTCHAR
  3342 2289 4C 91 23			jmp l_0D49
  3343 228C			l_0D28
  3344
  3345 				; optimize OK (main.pas), line = 42
  3346
  3347 228C AC 04 25 84 12 AC + 	mwy PLY :bp2
  3348 2296 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  3349 2298 B1 12			lda (:bp2),y
  3350 229A 8D 6D 25			sta @CASETMP_0007
  3351 229D C9 00			cmp #$00
  3352 229F D0 06			jne l_0D54
  3353 22A1			@
  3354
  3355 				; optimize FAIL ('HUMAN', main.pas), line = 43
  3356
  3357 22A1 20 89 21			jsr HUMAN
  3358 22A4 4C CC 22			jmp a_0007
  3359 22A7			l_0D54
  3360 22A7 C9 01			cmp #$01
  3361 22A9 D0 06			jne l_0D5E
  3362 22AB			@
  3363
  3364 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 44
  3365
  3366 22AB 20 B1 14			jsr AISTRAIGHT
  3367 22AE 4C CC 22			jmp a_0007
  3368 22B1			l_0D5E
  3369 22B1 C9 02			cmp #$02
  3370 22B3 D0 06			jne l_0D68
  3371 22B5			@
  3372
  3373 				; optimize FAIL ('AISAPPER', main.pas), line = 45
  3374
  3375 22B5 20 36 15			jsr AISAPPER
  3376 22B8 4C CC 22			jmp a_0007
  3377 22BB			l_0D68
  3378 22BB C9 03			cmp #$03
  3379 22BD D0 06			jne l_0D72
  3380 22BF			@
  3381
  3382 				; optimize FAIL ('AIBULLY', main.pas), line = 46
  3383
  3384 22BF 20 90 17			jsr AIBULLY
  3385 22C2 4C CC 22			jmp a_0007
  3386 22C5			l_0D72
  3387 22C5 C9 04			cmp #$04
  3388 22C7 D0 03			jne l_0D7C
  3389 22C9			@
  3390
  3391 				; optimize FAIL ('AIMIRROR', main.pas), line = 47
  3392
  3393 22C9 20 5E 18			jsr AIMIRROR
  3394 22CC			l_0D7C
  3395 22CC			a_0007
  3396
  3397 				; optimize FAIL ('DRAWTAIL', main.pas), line = 50
  3398
  3399 22CC 20 0F 13			jsr DRAWTAIL
  3400 22CF AC 04 25 84 12 AC + 	mwy PLY :bp2
  3401 22D9 A0 04			ldy #PLY.DIR-DATAORIGIN
  3402 22DB A5 5B			lda NEWDIR
  3403 22DD 91 12			sta (:bp2),y
  3404
  3405 				; optimize OK (main.pas), line = 52
  3406
  3407 22DF A5 5B			lda NEWDIR
  3408 22E1 8D 6E 25			sta @CASETMP_0008
  3409 22E4 C9 01			cmp #$01
  3410 22E6 D0 16			jne l_0D98
  3411 22E8			@
  3412
  3413 				; optimize OK (main.pas), line = 53
  3414
  3415 22E8 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3416 22F2 A0 01			ldy #PLY.Y-DATAORIGIN
  3417 22F4 B1 12			lda (:bp2),y
  3418 22F6 38 E9 01			sub #$01
  3419 22F9 91 12			sta (:bp2),y
  3420
  3421 22FB 4C 49 23			jmp a_0008
  3422 22FE			l_0D98
  3423 22FE C9 02			cmp #$02
  3424 2300 D0 16			jne l_0DA2
  3425 2302			@
  3426
  3427 				; optimize OK (main.pas), line = 54
  3428
  3429 2302 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3430 230C A0 01			ldy #PLY.Y-DATAORIGIN
  3431 230E B1 12			lda (:bp2),y
  3432 2310 18 69 01			add #$01
  3433 2313 91 12			sta (:bp2),y
  3434
  3435 2315 4C 49 23			jmp a_0008
  3436 2318			l_0DA2
  3437 2318 C9 04			cmp #$04
  3438 231A D0 16			jne l_0DAC
  3439 231C			@
  3440
  3441 				; optimize OK (main.pas), line = 55
  3442
  3443 231C AC 04 25 84 12 AC + 	mwy PLY :bp2
  3444 2326 A0 00			ldy #PLY.X-DATAORIGIN
  3445 2328 B1 12			lda (:bp2),y
  3446 232A 38 E9 01			sub #$01
  3447 232D 91 12			sta (:bp2),y
  3448
  3449 232F 4C 49 23			jmp a_0008
  3450 2332			l_0DAC
  3451 2332 C9 08			cmp #$08
  3452 2334 D0 13			jne l_0DB6
  3453 2336			@
  3454
  3455 				; optimize OK (main.pas), line = 56
  3456
  3457 2336 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3458 2340 A0 00			ldy #PLY.X-DATAORIGIN
  3459 2342 B1 12			lda (:bp2),y
  3460 2344 18 69 01			add #$01
  3461 2347 91 12			sta (:bp2),y
  3462
  3463 2349			l_0DB6
  3464 2349			a_0008
  3465
  3466 				; optimize OK (main.pas), line = 59
  3467
  3468 2349 AC 04 25 84 12 AC + 	mwy PLY :bp2
  3469 2353 A0 00			ldy #PLY.X-DATAORIGIN
  3470 2355 B1 12			lda (:bp2),y
  3471 2357 8D 56 25			sta PUTCHAR.X
  3472 235A A0 01			ldy #PLY.Y-DATAORIGIN
  3473 235C B1 12			lda (:bp2),y
  3474 235E 8D 57 25			sta PUTCHAR.Y
  3475 2361 A0 02			ldy #PLY.HEAD-DATAORIGIN
  3476 2363 B1 12			lda (:bp2),y
  3477 2365 8D 58 25			sta PUTCHAR.V
  3478 2368 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3479 236A B1 12			lda (:bp2),y
  3480 236C 8D 59 25			sta PUTCHAR.C
  3481 236F 20 71 11			jsr PUTCHAR
  3482
  3483 				; optimize OK (main.pas), line = 62
  3484
  3485 2372 AD 2D 25			lda PLAYER1.ISALIVE
  3486 2375 D0 1A			jne l_0DDB
  3487 2377 AD 29 25			lda PLAYER1.COLOUR
  3488 237A 8D 59 25			sta PUTCHAR.C
  3489 237D A9 2A			lda #$2A
  3490 237F 8D 58 25			sta PUTCHAR.V
  3491 2382 AD 27 25			lda PLAYER1.Y
  3492 2385 8D 57 25			sta PUTCHAR.Y
  3493 2388 AD 26 25			lda PLAYER1.X
  3494 238B 8D 56 25			sta PUTCHAR.X
  3495 238E 20 71 11			jsr PUTCHAR
  3496 2391			l_0DDB
  3497 2391			l_0D49
  3498 2391			l_0D14
  3499
  3500 				; ------------------------------------------------------------
  3501
  3502 = 256D			@CASETMP_0007	= DATAORIGIN+$0059
  3503 = 256E			@CASETMP_0008	= DATAORIGIN+$005A
  3504
  3505 = 256D			@VarData	= @CASETMP_0007
  3506 = 0002			@VarDataSize	= 2
  3507
  3508 2391			@exit
  3509 					.ifdef @new
  3510 					lda <@VarData
  3511 					sta :ztmp
  3512 					lda >@VarData
  3513 					ldy #@VarDataSize-1
  3514 					jmp @FreeMem
  3515 					els
  3516 2391 60				rts						; ret
  3517 					eif
  3518 				.endl
  3519
  3520 2392			.local	STARTSCREEN					; PROCEDURE
  3521
  3522 				; --- RepeatUntilProlog
  3523 2392			l_0DF0
  3524
  3525 				; optimize OK (main.pas), line = 74
  3526
  3527 2392 A9 02			lda #$02
  3528 2394 8D 08 FF			sta JOY
  3529 2397 A9 FF			lda #$FF
  3530 2399 8D 30 FD			sta KEYSCAN
  3531 239C AD 08 FF			lda JOY
  3532 239F 49 FF			eor #$FF
  3533 23A1 85 58			sta T0B
  3534
  3535 				; optimize OK (main.pas), line = 75
  3536
  3537 23A3 C9 40			cmp #$40
  3538 23A5 D0 EB			jne l_0DF0
  3539 23A7			@exit
  3540 					.ifdef @new
  3541 					lda <@VarData
  3542 					sta :ztmp
  3543 					lda >@VarData
  3544 					ldy #@VarDataSize-1
  3545 					jmp @FreeMem
  3546 					els
  3547 23A7 60				rts						; ret
  3548 					eif
  3549 				.endl
  3550
  3551 23A8			.local	MAINLOOP					; PROCEDURE
  3552
  3553 				; optimize OK (main.pas), line = 82
  3554
  3555 23A8 A9 FF			lda #$FF
  3556 23AA 85 5A			sta ALIVE
  3557
  3558 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 84
  3559
  3560 23AC 20 31 14			jsr INITPLAYFIELD
  3561
  3562 				; optimize OK (main.pas), line = 86
  3563
  3564 23AF A9 07			lda #$07
  3565 23B1 8D 6F 25			sta @CASETMP_0009
  3566 23B4 C9 00			cmp #$00
  3567 23B6 D0 06			jne l_0E21
  3568 23B8			@
  3569
  3570 				; optimize FAIL ('SETLEVEL01', main.pas), line = 87
  3571
  3572 23B8 20 B3 18			jsr SETLEVEL01
  3573 23BB 4C 01 24			jmp a_0009
  3574 23BE			l_0E21
  3575 23BE C9 01			cmp #$01
  3576 23C0 D0 06			jne l_0E2B
  3577 23C2			@
  3578
  3579 				; optimize FAIL ('SETLEVEL02', main.pas), line = 88
  3580
  3581 23C2 20 CF 19			jsr SETLEVEL02
  3582 23C5 4C 01 24			jmp a_0009
  3583 23C8			l_0E2B
  3584 23C8 C9 02			cmp #$02
  3585 23CA D0 06			jne l_0E35
  3586 23CC			@
  3587
  3588 				; optimize FAIL ('SETLEVEL03', main.pas), line = 89
  3589
  3590 23CC 20 EB 1A			jsr SETLEVEL03
  3591 23CF 4C 01 24			jmp a_0009
  3592 23D2			l_0E35
  3593 23D2 C9 03			cmp #$03
  3594 23D4 D0 06			jne l_0E3F
  3595 23D6			@
  3596
  3597 				; optimize FAIL ('SETLEVEL04', main.pas), line = 90
  3598
  3599 23D6 20 07 1C			jsr SETLEVEL04
  3600 23D9 4C 01 24			jmp a_0009
  3601 23DC			l_0E3F
  3602 23DC C9 04			cmp #$04
  3603 23DE D0 06			jne l_0E49
  3604 23E0			@
  3605
  3606 				; optimize FAIL ('SETLEVEL05', main.pas), line = 91
  3607
  3608 23E0 20 23 1D			jsr SETLEVEL05
  3609 23E3 4C 01 24			jmp a_0009
  3610 23E6			l_0E49
  3611 23E6 C9 05			cmp #$05
  3612 23E8 D0 06			jne l_0E53
  3613 23EA			@
  3614
  3615 				; optimize FAIL ('SETLEVEL06', main.pas), line = 92
  3616
  3617 23EA 20 3F 1E			jsr SETLEVEL06
  3618 23ED 4C 01 24			jmp a_0009
  3619 23F0			l_0E53
  3620 23F0 C9 06			cmp #$06
  3621 23F2 D0 06			jne l_0E5D
  3622 23F4			@
  3623
  3624 				; optimize FAIL ('SETLEVEL07', main.pas), line = 93
  3625
  3626 23F4 20 59 1F			jsr SETLEVEL07
  3627 23F7 4C 01 24			jmp a_0009
  3628 23FA			l_0E5D
  3629 23FA C9 07			cmp #$07
  3630 23FC D0 03			jne l_0E67
  3631 23FE			@
  3632
  3633 				; optimize FAIL ('SETLEVEL08', main.pas), line = 94
  3634
  3635 23FE 20 71 20			jsr SETLEVEL08
  3636 2401			l_0E67
  3637 2401			a_0009
  3638
  3639 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 97
  3640
  3641 2401 20 96 12			jsr ANIMATEOBSTACLES
  3642 2404 20 9C 11			jsr SHOWSCORE
  3643 2407 20 92 23			jsr STARTSCREEN
  3644
  3645 				; --- RepeatUntilProlog
  3646 240A			l_0E78
  3647
  3648 				; optimize OK (main.pas), line = 100
  3649
  3650 240A A9 03			lda #$03
  3651 240C 8D 20 25			sta SYSTEM.PAUSE_006B.N
  3652 240F A9 00			lda #$00
  3653 2411 8D 21 25			sta SYSTEM.PAUSE_006B.N+1
  3654 2414 20 23 11			jsr SYSTEM.PAUSE_006B
  3655
  3656 				; optimize OK (main.pas), line = 101
  3657
  3658 2417 AD 08 25			lda PLAYER1
  3659 241A 8D 04 25			sta PLY
  3660 241D AD 09 25			lda PLAYER1+1
  3661 2420 8D 05 25			sta PLY+1
  3662 2423 20 3D 22			jsr PLAYERMOVE
  3663
  3664 				; optimize OK (main.pas), line = 102
  3665
  3666 2426 AD 0A 25			lda PLAYER2
  3667 2429 8D 04 25			sta PLY
  3668 242C AD 0B 25			lda PLAYER2+1
  3669 242F 8D 05 25			sta PLY+1
  3670 2432 20 3D 22			jsr PLAYERMOVE
  3671
  3672 				; optimize OK (main.pas), line = 103
  3673
  3674 2435 AD 0C 25			lda PLAYER3
  3675 2438 8D 04 25			sta PLY
  3676 243B AD 0D 25			lda PLAYER3+1
  3677 243E 8D 05 25			sta PLY+1
  3678 2441 20 3D 22			jsr PLAYERMOVE
  3679
  3680 				; optimize OK (main.pas), line = 104
  3681
  3682 2444 AD 0E 25			lda PLAYER4
  3683 2447 8D 04 25			sta PLY
  3684 244A AD 0F 25			lda PLAYER4+1
  3685 244D 8D 05 25			sta PLY+1
  3686 2450 20 3D 22			jsr PLAYERMOVE
  3687
  3688 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 105
  3689
  3690 2453 20 96 12			jsr ANIMATEOBSTACLES
  3691
  3692 				; optimize OK (main.pas), line = 106
  3693
  3694 2456 A5 5A			lda ALIVE
  3695 2458 F0 04			jeq l_0E78x
  3696 245A C9 FF			cmp #$FF
  3697 245C D0 AC			jne l_0E78
  3698 245E			l_0E78x
  3699
  3700 				; optimize OK (main.pas), line = 108
  3701
  3702 245E AD 2D 25			lda PLAYER1.ISALIVE
  3703 2461 F0 03			jeq l_0EB8
  3704 2463 EE 2C 25			inc PLAYER1.SCORE
  3705 2466			l_0EB8
  3706
  3707 				; optimize OK (main.pas), line = 109
  3708
  3709 2466 AD 35 25			lda PLAYER2.ISALIVE
  3710 2469 F0 03			jeq l_0ECB
  3711 246B EE 34 25			inc PLAYER2.SCORE
  3712 246E			l_0ECB
  3713
  3714 				; optimize OK (main.pas), line = 110
  3715
  3716 246E AD 3D 25			lda PLAYER3.ISALIVE
  3717 2471 F0 03			jeq l_0EDE
  3718 2473 EE 3C 25			inc PLAYER3.SCORE
  3719 2476			l_0EDE
  3720
  3721 				; optimize OK (main.pas), line = 111
  3722
  3723 2476 AD 45 25			lda PLAYER4.ISALIVE
  3724 2479 F0 03			jeq l_0EF1
  3725 247B EE 44 25			inc PLAYER4.SCORE
  3726 247E			l_0EF1
  3727
  3728 				; optimize OK (main.pas), line = 113
  3729
  3730 247E A9 64			lda #$64
  3731 2480 8D 20 25			sta SYSTEM.PAUSE_006B.N
  3732 2483 A9 00			lda #$00
  3733 2485 8D 21 25			sta SYSTEM.PAUSE_006B.N+1
  3734 2488 20 23 11			jsr SYSTEM.PAUSE_006B
  3735
  3736 				; ------------------------------------------------------------
  3737
  3738 = 256F			@CASETMP_0009	= DATAORIGIN+$005B
  3739
  3740 = 256F			@VarData	= @CASETMP_0009
  3741 = 0001			@VarDataSize	= 1
  3742
  3743 248B			@exit
  3744 					.ifdef @new
  3745 					lda <@VarData
  3746 					sta :ztmp
  3747 					lda >@VarData
  3748 					ldy #@VarDataSize-1
  3749 					jmp @FreeMem
  3750 					els
  3751 248B 60				rts						; ret
  3752 					eif
  3753 				.endl
  3754 248C			l_0007
  3755
  3756 				; --- RepeatUntilProlog
  3757 248C			l_0EFC
  3758
  3759 				; optimize OK (main.pas), line = 120
  3760
  3761 248C A9 30			lda #$30
  3762 248E 8D 2C 25			sta PLAYER1.SCORE
  3763 2491 8D 34 25			sta PLAYER2.SCORE
  3764
  3765 				; optimize OK (main.pas), line = 121
  3766
  3767 2494 8D 3C 25			sta PLAYER3.SCORE
  3768 2497 8D 44 25			sta PLAYER4.SCORE
  3769
  3770 				; optimize OK (main.pas), line = 122
  3771
  3772 249A A9 00			lda #$00
  3773 249C 8D 24 25			sta LEVEL
  3774
  3775 				; optimize OK (main.pas), line = 124
  3776
  3777 249F 8D 25 25			sta GAMEOVER
  3778
  3779 				; --- RepeatUntilProlog
  3780 24A2			l_0F15
  3781
  3782 				; optimize FAIL ('MAINLOOP', main.pas), line = 126
  3783
  3784 24A2 20 A8 23			jsr MAINLOOP
  3785
  3786 				; optimize FAIL (0, main.pas), line = 127
  3787
  3788 24A5 EE 24 25			inc LEVEL
  3789 24A8 AD 24 25			lda LEVEL
  3790 24AB C9 08			cmp #$08
  3791 24AD D0 05			jne l_0F2C
  3792 24AF A9 04			lda #$04
  3793 24B1 8D 24 25			sta LEVEL
  3794 24B4			l_0F2C
  3795
  3796 				; optimize OK (main.pas), line = 128
  3797
  3798 24B4 AD 2C 25			lda PLAYER1.SCORE
  3799 24B7 C9 39			cmp #$39
  3800 24B9 D0 05			jne l_0F45
  3801 24BB A9 01			lda #$01
  3802 24BD 8D 25 25			sta GAMEOVER
  3803 24C0			l_0F45
  3804
  3805 				; optimize OK (main.pas), line = 129
  3806
  3807 24C0 AD 34 25			lda PLAYER2.SCORE
  3808 24C3 C9 39			cmp #$39
  3809 24C5 D0 05			jne l_0F5E
  3810 24C7 A9 01			lda #$01
  3811 24C9 8D 25 25			sta GAMEOVER
  3812 24CC			l_0F5E
  3813
  3814 				; optimize OK (main.pas), line = 130
  3815
  3816 24CC AD 3C 25			lda PLAYER3.SCORE
  3817 24CF C9 39			cmp #$39
  3818 24D1 D0 05			jne l_0F77
  3819 24D3 A9 01			lda #$01
  3820 24D5 8D 25 25			sta GAMEOVER
  3821 24D8			l_0F77
  3822
  3823 				; optimize OK (main.pas), line = 131
  3824
  3825 24D8 AD 44 25			lda PLAYER4.SCORE
  3826 24DB C9 39			cmp #$39
  3827 24DD D0 05			jne l_0F90
  3828 24DF A9 01			lda #$01
  3829 24E1 8D 25 25			sta GAMEOVER
  3830 24E4			l_0F90
  3831
  3832 				; optimize OK (main.pas), line = 132
  3833
  3834 24E4 AD 25 25			lda GAMEOVER
  3835 24E7 F0 B9			jeq l_0F15
  3836
  3837 				; optimize FAIL ('SHOWSCORE', main.pas), line = 134
  3838
  3839 24E9 20 9C 11			jsr SHOWSCORE
  3840
  3841 				; optimize OK (main.pas), line = 136
  3842
  3843 24EC A9 C8			lda #$C8
  3844 24EE 8D 20 25			sta SYSTEM.PAUSE_006B.N
  3845 24F1 A9 00			lda #$00
  3846 24F3 8D 21 25			sta SYSTEM.PAUSE_006B.N+1
  3847 24F6 20 23 11			jsr SYSTEM.PAUSE_006B
  3848
  3849 				; optimize OK (main.pas), line = 137
  3850
  3851 24F9 4C 8C 24			jmp l_0EFC
  3852
  3853 				; ------------------------------------------------------------
  3854
  3855 = 0800			ATTRIBUTE_ADDR	= $0800
  3856 = 0C00			SCREEN_ADDR	= $0C00
  3857 = 0009			VICTORIES	= $09
  3858 = 0005			LOOK_AHEAD	= $05
  3859 = 007E			TRASH	= $7E
  3860 = 0020			EMPTY	= $20
  3861 = 00A0			WALL	= $A0
  3862 = 0041			WALL_COLOUR	= $41
  3863 = 0030			ZERO	= $30
  3864 = 0056			OBSTACLE_1	= $56
  3865 = 005B			OBSTACLE_2	= $5B
  3866 = 0035			OBST_COLOUR	= $35
  3867 = 0051			PLY_HEAD	= $51
  3868 = 002A			PLY_CRASH	= $2A
  3869 = 0057			PLY_BUSTED	= $57
  3870 = 0042			PLY_TAIL_UD	= $42
  3871 = 0040			PLY_TAIL_LR	= $40
  3872 = 007D			PLY_TAIL_RD	= $7D
  3873 = 006E			PLY_TAIL_RU	= $6E
  3874 = 006D			PLY_TAIL_LD	= $6D
  3875 = 0070			PLY_TAIL_LU	= $70
  3876 = 005F			PLY1_COLOUR	= $5F
  3877 = 005D			PLY2_COLOUR	= $5D
  3878 = 0071			PLY3_COLOUR	= $71
  3879 = 0055			PLY4_COLOUR	= $55
  3880 = 0000			PLY_CTRL	= $00
  3881 = 0001			AI_STRAIGHT	= $01
  3882 = 0002			AI_SAPPER	= $02
  3883 = 0003			AI_BULLY	= $03
  3884 = 0004			AI_MIRROR	= $04
  3885 = 0001			JOY_UP	= $01
  3886 = 0002			JOY_DOWN	= $02
  3887 = 0004			JOY_LEFT	= $04
  3888 = 0008			JOY_RIGHT	= $08
  3889 = 0040			JOY_FIRE	= $40
  3890 = 0002			JOY_SELECT_1	= $02
  3891 = 0004			JOY_SELECT_2	= $04
  3892 = 100E			adr.MUL40	= CODEORIGIN+$0000
  3893 24FC			.var MUL40	= adr.MUL40 .word
  3894 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  3895 24FC			.var DIRECTION	= adr.DIRECTION .word
  3896 = FD30			KEYSCAN	= $FD30
  3897 = FF08			JOY	= $FF08
  3898 = FF15			BACKGROUND	= $FF15
  3899 = FF19			BOREDER	= $FF19
  3900 = 0058			T0B	= $58
  3901 = 0059			I0B	= $59
  3902 = 005A			ALIVE	= $5A
  3903 = 005B			NEWDIR	= $5B
  3904 = 005C			AVAILDIR	= $5C
  3905 = 005D			T0W	= $5D
  3906 = 005F			adr.PLY	= $5F
  3907 24FC			.var PLY	= adr.PLY .word
  3908 = 2514			PLY.X	= DATAORIGIN+$0000
  3909 = 2515			PLY.Y	= DATAORIGIN+$0001
  3910 = 2516			PLY.HEAD	= DATAORIGIN+$0002
  3911 = 2517			PLY.COLOUR	= DATAORIGIN+$0003
  3912 = 2518			PLY.DIR	= DATAORIGIN+$0004
  3913 = 2519			PLY.BRAIN	= DATAORIGIN+$0005
  3914 = 251A			PLY.SCORE	= DATAORIGIN+$0006
  3915 = 251B			PLY.ISALIVE	= DATAORIGIN+$0007
  3916 = 0061			adr.TMPPLY	= $61
  3917 24FC			.var TMPPLY	= adr.TMPPLY .word
  3918 = 2514			TMPPLY.X	= DATAORIGIN+$0000
  3919 = 2515			TMPPLY.Y	= DATAORIGIN+$0001
  3920 = 2516			TMPPLY.HEAD	= DATAORIGIN+$0002
  3921 = 2517			TMPPLY.COLOUR	= DATAORIGIN+$0003
  3922 = 2518			TMPPLY.DIR	= DATAORIGIN+$0004
  3923 = 2519			TMPPLY.BRAIN	= DATAORIGIN+$0005
  3924 = 251A			TMPPLY.SCORE	= DATAORIGIN+$0006
  3925 = 251B			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  3926 = 2524			LEVEL	= DATAORIGIN+$0010
  3927 = 2525			GAMEOVER	= DATAORIGIN+$0011
  3928 = 2526			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  3929 24FC			.var PLAYER1	= adr.PLAYER1 .word
  3930 = 2526			PLAYER1.X	= DATAORIGIN+$0012
  3931 = 2527			PLAYER1.Y	= DATAORIGIN+$0013
  3932 = 2528			PLAYER1.HEAD	= DATAORIGIN+$0014
  3933 = 2529			PLAYER1.COLOUR	= DATAORIGIN+$0015
  3934 = 252A			PLAYER1.DIR	= DATAORIGIN+$0016
  3935 = 252B			PLAYER1.BRAIN	= DATAORIGIN+$0017
  3936 = 252C			PLAYER1.SCORE	= DATAORIGIN+$0018
  3937 = 252D			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  3938 = 252E			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  3939 24FC			.var PLAYER2	= adr.PLAYER2 .word
  3940 = 252E			PLAYER2.X	= DATAORIGIN+$001A
  3941 = 252F			PLAYER2.Y	= DATAORIGIN+$001B
  3942 = 2530			PLAYER2.HEAD	= DATAORIGIN+$001C
  3943 = 2531			PLAYER2.COLOUR	= DATAORIGIN+$001D
  3944 = 2532			PLAYER2.DIR	= DATAORIGIN+$001E
  3945 = 2533			PLAYER2.BRAIN	= DATAORIGIN+$001F
  3946 = 2534			PLAYER2.SCORE	= DATAORIGIN+$0020
  3947 = 2535			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  3948 = 2536			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  3949 24FC			.var PLAYER3	= adr.PLAYER3 .word
  3950 = 2536			PLAYER3.X	= DATAORIGIN+$0022
  3951 = 2537			PLAYER3.Y	= DATAORIGIN+$0023
  3952 = 2538			PLAYER3.HEAD	= DATAORIGIN+$0024
  3953 = 2539			PLAYER3.COLOUR	= DATAORIGIN+$0025
  3954 = 253A			PLAYER3.DIR	= DATAORIGIN+$0026
  3955 = 253B			PLAYER3.BRAIN	= DATAORIGIN+$0027
  3956 = 253C			PLAYER3.SCORE	= DATAORIGIN+$0028
  3957 = 253D			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  3958 = 253E			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  3959 24FC			.var PLAYER4	= adr.PLAYER4 .word
  3960 = 253E			PLAYER4.X	= DATAORIGIN+$002A
  3961 = 253F			PLAYER4.Y	= DATAORIGIN+$002B
  3962 = 2540			PLAYER4.HEAD	= DATAORIGIN+$002C
  3963 = 2541			PLAYER4.COLOUR	= DATAORIGIN+$002D
  3964 = 2542			PLAYER4.DIR	= DATAORIGIN+$002E
  3965 = 2543			PLAYER4.BRAIN	= DATAORIGIN+$002F
  3966 = 2544			PLAYER4.SCORE	= DATAORIGIN+$0030
  3967 = 2545			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  3968 = 2546			adr.OBSTACLES	= [DATAORIGIN+$0032] .array [8] .word
  3969 24FC			.var OBSTACLES	= adr.OBSTACLES .word
  3970 24FC			@exit
  3971
  3972 24FC A2 00		@halt	ldx #$00
  3973 24FE 9A				txs
  3974
  3975 24FF 60				rts
  3976
  3977 				; ------------------------------------------------------------
  3978
  3979 				; ------------------------------------------------------------
  3980
  3981 2500			.local	@DEFINES
  3982 2500			C4P
  3983 				.endl
  3984
  3985 2500			.local	@RESOURCE
  3986 				.endl
  3987
  3988 = 2500 0E 10		MUL40
  3988 = 2502 40 10		DIRECTION
  3988 = 2504 5F 00		PLY
  3988 = 2506 61 00		TMPPLY
  3988 = 2508 26 25		PLAYER1
  3988 = 250A 2E 25		PLAYER2
  3988 = 250C 36 25		PLAYER3
  3988 = 250E 3E 25		PLAYER4
  3988 = 2510 46 25		OBSTACLES
  3988 				.endl							; MAIN
  3989
  3990 				; ------------------------------------------------------------
  3991 				; ------------------------------------------------------------
  3992
  3993 				.macro	UNITINITIALIZATION
  3994 				
  3995 					.ifdef MAIN.SYSTEM.@UnitInit
  3996 					jsr MAIN.SYSTEM.@UnitInit
  3997 					eif
  3998 				.endm
  3999
  4000 				; ------------------------------------------------------------
  4001
  4002 					ift .SIZEOF(MAIN.SYSTEM) > 0
  4003 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  4003 				SYSTEM: $10D5..$1170
  4004 					eif
  4005
  4006 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  4006 				CODE: $100E..$24FF
  4007
  4008 				; ------------------------------------------------------------
  4009
  4010 2512				.align $04
  4011
  4012 2514			DATAORIGIN
  4013 2514 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  4014
  4015 = 0006			VARINITSIZE	= *-DATAORIGIN
  4016 = 005C			VARDATASIZE	= 92
  4017
  4018 = 2570			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  4019
  4020 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  4020 				DATA: $2514..$2570
  4021
  4022 				; ------------------------------------------------------------
  4023
  4024 				.macro	STATICDATA
  4025 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  4026 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  4027 				.by  $C0 $03 $01 $02 $04 $08
  4028 				.endm
  4029
  4030 					end
