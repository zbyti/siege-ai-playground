mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E 67 19			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0045			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 197E			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 BB			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D C3 18 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 C3 85 02 A9 19 + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 08 19			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 83 19		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 83 19 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 1983			RESULT	= DATAORIGIN+$000B
   182
   183 = 1983			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD 84 19		loop  lda n
   307 1126 0D 85 19		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD 84 19 D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 1984			N	= DATAORIGIN+$000C
   321
   322 = 1984			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D 86 19			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD 86 19		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C 87 19		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD 87 19 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 1986			RANGE	= DATAORIGIN+$000E
   383 = 1987			RESULT	= DATAORIGIN+$000F
   384
   385 = 1986			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 1978			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 197A			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 197C			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 197D			FILEMODE	= DATAORIGIN+$0005
   450 = 197E			GRAPHMODE	= DATAORIGIN+$0006
   451 = 197F			IORESULT	= DATAORIGIN+$0007
   452 = 1980			EOLN	= DATAORIGIN+$0008
   453 = 1981			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD AC 19			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D AB 19			add X
   466 117D 85 5B			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5C			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5B			ldy T0W
   475 118A AD AE 19			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5C			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD AD 19			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 19AB			X	= DATAORIGIN+$0033
   486 = 19AC			Y	= DATAORIGIN+$0034
   487 = 19AD			V	= DATAORIGIN+$0035
   488 = 19AE			C	= DATAORIGIN+$0036
   489
   490 = 19AB			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 8E 19			lda PLAYER1.COLOUR
   510 119F 8D AE 19			sta PUTCHAR.C
   511 11A2 AD 91 19			lda PLAYER1.SCORE
   512 11A5 8D AD 19			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D AC 19			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D AB 19			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD 96 19			lda PLAYER2.COLOUR
   522 11B8 8D AE 19			sta PUTCHAR.C
   523 11BB AD 99 19			lda PLAYER2.SCORE
   524 11BE 8D AD 19			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D AC 19			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D AB 19			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD 9E 19			lda PLAYER3.COLOUR
   534 11D1 8D AE 19			sta PUTCHAR.C
   535 11D4 AD A1 19			lda PLAYER3.SCORE
   536 11D7 8D AD 19			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D AC 19			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D AB 19			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD A6 19			lda PLAYER4.COLOUR
   546 11EA 8D AE 19			sta PUTCHAR.C
   547 11ED AD A9 19			lda PLAYER4.SCORE
   548 11F0 8D AD 19			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D AC 19			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D AB 19			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5A			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AD B0 19			lda Y
   576 1208 0A				asl @
   577 1209 A8				tay
   578 120A B9 0E 10			lda adr.MUL40,y
   579 120D 18 6D AF 19			add X
   580 1211 85 5B			sta T0W
   581 1213 B9 0F 10			lda adr.MUL40+1,y
   582 1216 69 0C			adc #$0C
   583 1218 85 5C			sta T0W+1
   584
   585 				; optimize OK (tools.inc), line = 26
   586
   587 121A A5 5B			lda T0W
   588 121C 38 E9 28			sub #$28
   589 121F 85 21			sta :STACKORIGIN+9
   590 1221 A5 5C			lda T0W+1
   591 1223 E9 00			sbc #$00
   592 1225 85 11			sta :bp+1
   593 1227 A4 21			ldy :STACKORIGIN+9
   594 1229 B1 10			lda (:bp),y
   595 122B C9 20			cmp #$20
   596 122D D0 06			jne l_00EE
   597 122F A5 5A			lda AVAILDIR
   598 1231 09 01			ora #$01
   599 1233 85 5A			sta AVAILDIR
   600 1235			l_00EE
   601
   602 				; optimize OK (tools.inc), line = 27
   603
   604 1235 A4 5B 84 12 A4 5C + 	mwy T0W :bp2
   605 123D A0 28			ldy #$28
   606 123F B1 12			lda (:bp2),y
   607 1241 C9 20			cmp #$20
   608 1243 D0 06			jne l_0111
   609 1245 A5 5A			lda AVAILDIR
   610 1247 09 02			ora #$02
   611 1249 85 5A			sta AVAILDIR
   612 124B			l_0111
   613
   614 				; optimize OK (tools.inc), line = 28
   615
   616 124B A5 5B			lda T0W
   617 124D 38 E9 01			sub #$01
   618 1250 85 21			sta :STACKORIGIN+9
   619 1252 A5 5C			lda T0W+1
   620 1254 E9 00			sbc #$00
   621 1256 85 11			sta :bp+1
   622 1258 A4 21			ldy :STACKORIGIN+9
   623 125A B1 10			lda (:bp),y
   624 125C C9 20			cmp #$20
   625 125E D0 06			jne l_0134
   626 1260 A5 5A			lda AVAILDIR
   627 1262 09 04			ora #$04
   628 1264 85 5A			sta AVAILDIR
   629 1266			l_0134
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 1266 A4 5B 84 12 A4 5C + 	mwy T0W :bp2
   634 126E A0 01			ldy #$01
   635 1270 B1 12			lda (:bp2),y
   636 1272 C9 20			cmp #$20
   637 1274 D0 06			jne l_0157
   638 1276 A5 5A			lda AVAILDIR
   639 1278 09 08			ora #$08
   640 127A 85 5A			sta AVAILDIR
   641 127C			l_0157
   642
   643 				; ------------------------------------------------------------
   644
   645 = 19AF			X	= DATAORIGIN+$0037
   646 = 19B0			Y	= DATAORIGIN+$0038
   647
   648 = 19AF			@VarData	= X
   649 = 0002			@VarDataSize	= 2
   650
   651 127C			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 127C 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 127D			.local	INITPLAYERS					; PROCEDURE
   664
   665 				; optimize OK (init.inc), line = 5
   666
   667 127D AD B1 19			lda P
   668 1280 8D 6E 19			sta PLY
   669 1283 85 12			sta :bp2
   670 1285 AD B2 19			lda P+1
   671 1288 8D 6F 19			sta PLY+1
   672 128B 85 13			sta :bp2+1
   673 				; optimize OK (init.inc), line = 6
   674 128D A0 05			ldy #PLY.BRAIN-DATAORIGIN
   675 128F AD B6 19			lda BRAIN
   676 1292 91 12			sta (:bp2),y
   677 1294 A0 00			ldy #PLY.X-DATAORIGIN
   678 1296 AD B3 19			lda X
   679 1299 91 12			sta (:bp2),y
   680 129B A0 01			ldy #PLY.Y-DATAORIGIN
   681 129D AD B4 19			lda Y
   682 12A0 91 12			sta (:bp2),y
   683 12A2 A0 04			ldy #PLY.DIR-DATAORIGIN
   684 12A4 AD B5 19			lda DIR
   685 12A7 91 12			sta (:bp2),y
   686
   687 				; optimize OK (init.inc), line = 7
   688
   689 12A9 A0 02			ldy #PLY.HEAD-DATAORIGIN
   690 12AB AD B7 19			lda HEAD
   691 12AE 91 12			sta (:bp2),y
   692 12B0 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   693 12B2 AD B8 19			lda COLOUR
   694 12B5 91 12			sta (:bp2),y
   695 12B7 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
   696 12B9 AD B9 19			lda ISDEAD
   697 12BC 91 12			sta (:bp2),y
   698
   699 				; ------------------------------------------------------------
   700
   701 = 19B1			P	= DATAORIGIN+$0039
   702 = 19B3			X	= DATAORIGIN+$003B
   703 = 19B4			Y	= DATAORIGIN+$003C
   704 = 19B5			DIR	= DATAORIGIN+$003D
   705 = 19B6			BRAIN	= DATAORIGIN+$003E
   706 = 19B7			HEAD	= DATAORIGIN+$003F
   707 = 19B8			COLOUR	= DATAORIGIN+$0040
   708 = 19B9			ISDEAD	= DATAORIGIN+$0041
   709
   710 = 19B1			@VarData	= P
   711 = 0009			@VarDataSize	= 9
   712
   713 12BE			@exit
   714 					.ifdef @new
   715 					lda <@VarData
   716 					sta :ztmp
   717 					lda >@VarData
   718 					ldy #@VarDataSize-1
   719 					jmp @FreeMem
   720 					els
   721 12BE 60				rts						; ret
   722 					eif
   723 				.endl
   724
   725 12BF			.local	INITPLAYFIELD					; PROCEDURE
   726
   727 				; optimize OK (init.inc), line = 14
   728
   729 12BF A9 00			lda #$00
   730 12C1 8D B9 19			sta INITPLAYERS.ISDEAD
   731 12C4 A9 5F			lda #$5F
   732 12C6 8D B8 19			sta INITPLAYERS.COLOUR
   733 12C9 A9 51			lda #$51
   734 12CB 8D B7 19			sta INITPLAYERS.HEAD
   735 12CE A9 00			lda #$00
   736 12D0 8D B6 19			sta INITPLAYERS.BRAIN
   737 12D3 A9 08			lda #$08
   738 12D5 8D B5 19			sta INITPLAYERS.DIR
   739 12D8 A9 0C			lda #$0C
   740 12DA 8D B4 19			sta INITPLAYERS.Y
   741 12DD A9 0A			lda #$0A
   742 12DF 8D B3 19			sta INITPLAYERS.X
   743 12E2 AD 70 19			lda PLAYER1
   744 12E5 8D B1 19			sta INITPLAYERS.P
   745 12E8 AD 71 19			lda PLAYER1+1
   746 12EB 8D B2 19			sta INITPLAYERS.P+1
   747 12EE 20 7D 12			jsr INITPLAYERS
   748
   749 				; optimize OK (init.inc), line = 15
   750
   751 12F1 A9 00			lda #$00
   752 12F3 8D B9 19			sta INITPLAYERS.ISDEAD
   753 12F6 A9 5D			lda #$5D
   754 12F8 8D B8 19			sta INITPLAYERS.COLOUR
   755 12FB A9 51			lda #$51
   756 12FD 8D B7 19			sta INITPLAYERS.HEAD
   757 1300 A9 04			lda #$04
   758 1302 8D B6 19			sta INITPLAYERS.BRAIN
   759 1305 8D B5 19			sta INITPLAYERS.DIR
   760 1308 A9 0C			lda #$0C
   761 130A 8D B4 19			sta INITPLAYERS.Y
   762 130D A9 1E			lda #$1E
   763 130F 8D B3 19			sta INITPLAYERS.X
   764 1312 AD 72 19			lda PLAYER2
   765 1315 8D B1 19			sta INITPLAYERS.P
   766 1318 AD 73 19			lda PLAYER2+1
   767 131B 8D B2 19			sta INITPLAYERS.P+1
   768 131E 20 7D 12			jsr INITPLAYERS
   769
   770 				; optimize OK (init.inc), line = 16
   771
   772 1321 A9 01			lda #$01
   773 1323 8D B9 19			sta INITPLAYERS.ISDEAD
   774 1326 A9 71			lda #$71
   775 1328 8D B8 19			sta INITPLAYERS.COLOUR
   776 132B A9 51			lda #$51
   777 132D 8D B7 19			sta INITPLAYERS.HEAD
   778 1330 A9 01			lda #$01
   779 1332 8D B6 19			sta INITPLAYERS.BRAIN
   780 1335 A9 02			lda #$02
   781 1337 8D B5 19			sta INITPLAYERS.DIR
   782 133A A9 06			lda #$06
   783 133C 8D B4 19			sta INITPLAYERS.Y
   784 133F A9 14			lda #$14
   785 1341 8D B3 19			sta INITPLAYERS.X
   786 1344 AD 74 19			lda PLAYER3
   787 1347 8D B1 19			sta INITPLAYERS.P
   788 134A AD 75 19			lda PLAYER3+1
   789 134D 8D B2 19			sta INITPLAYERS.P+1
   790 1350 20 7D 12			jsr INITPLAYERS
   791
   792 				; optimize OK (init.inc), line = 17
   793
   794 1353 A9 01			lda #$01
   795 1355 8D B9 19			sta INITPLAYERS.ISDEAD
   796 1358 A9 55			lda #$55
   797 135A 8D B8 19			sta INITPLAYERS.COLOUR
   798 135D A9 51			lda #$51
   799 135F 8D B7 19			sta INITPLAYERS.HEAD
   800 1362 A9 03			lda #$03
   801 1364 8D B6 19			sta INITPLAYERS.BRAIN
   802 1367 A9 01			lda #$01
   803 1369 8D B5 19			sta INITPLAYERS.DIR
   804 136C A9 12			lda #$12
   805 136E 8D B4 19			sta INITPLAYERS.Y
   806 1371 A9 14			lda #$14
   807 1373 8D B3 19			sta INITPLAYERS.X
   808 1376 AD 76 19			lda PLAYER4
   809 1379 8D B1 19			sta INITPLAYERS.P
   810 137C AD 77 19			lda PLAYER4+1
   811 137F 8D B2 19			sta INITPLAYERS.P+1
   812 1382 20 7D 12			jsr INITPLAYERS
   813
   814 				; optimize OK (init.inc), line = 19
   815
   816 1385 A9 1F			lda #$1F
   817 1387 8D 15 FF			sta BORDERCOLOR
   818 138A A9 00			lda #$00
   819 138C 8D 19 FF			sta BGCOLOR
   820
   821 				; optimize OK (init.inc), line = 20
   822
   823 138F A9 20			lda #$20
   824 1391 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   825 1393 A9 C0			lda #$C0
   826 1395 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   827 1397 A9 03			lda #$03
   828 1399 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
   829 139B A9 00			lda #$00
   830 139D 85 08			sta SYSTEM.FILLCHAR_0056.A
   831 139F A9 0C			lda #$0C
   832 13A1 85 09			sta SYSTEM.FILLCHAR_0056.A+1
   833 13A3 20 1F 11			jsr SYSTEM.FILLCHAR_0056
   834
   835 				; optimize OK (init.inc), line = 22
   836
   837 13A6 A9 27			lda #$27
   838 13A8 85 58			sta T0B
   839
   840 13AA			l_01D8
   841 				; --- ForToDoCondition
   842
   843 				; optimize OK (init.inc), line = 23
   844
   845 13AA A4 58			ldy T0B
   846 13AC A9 A0			lda #$A0
   847 13AE 99 00 0C			sta $0C00,y
   848
   849 				; optimize OK (init.inc), line = 24
   850
   851 13B1 99 C0 0F			sta $0FC0,y
   852
   853 				; optimize OK (init.inc), line = 25
   854
   855 13B4 A9 41			lda #$41
   856 13B6 99 00 08			sta $0800,y
   857
   858 				; optimize OK (init.inc), line = 26
   859
   860 13B9 99 C0 0B			sta $0BC0,y
   861
   862 				; --- ForToDoEpilog
   863 13BC C6 58			dec T0B
   864 13BE 10 EA			jpl l_01D8
   865 13C0			l_01E6
   866
   867 				; optimize OK (init.inc), line = 29
   868
   869 13C0 A9 18			lda #$18
   870 13C2 85 58			sta T0B
   871
   872 13C4			l_0218
   873 				; --- ForToDoCondition
   874 13C4 A5 58			lda T0B
   875 13C6 C9 01			cmp #$01
   876 13C8 90 3A			jcc l_0226
   877
   878 				; optimize OK (init.inc), line = 30
   879
   880 13CA 0A				asl @
   881 13CB A8				tay
   882 13CC A9 FF			lda #$FF
   883 13CE 18 79 0E 10			add adr.MUL40,y
   884 13D2 85 12			sta :bp2
   885 13D4 A9 0B			lda #$0B
   886 13D6 79 0F 10			adc adr.MUL40+1,y
   887 13D9 85 13			sta :bp2+1
   888 13DB A0 00			ldy #$00
   889 13DD A9 A0			lda #$A0
   890 13DF 91 12			sta (:bp2),y
   891 13E1 C8				iny
   892 13E2 91 12			sta (:bp2),y
   893
   894 				; optimize OK (init.inc), line = 31
   895
   896 13E4 A5 58			lda T0B
   897 13E6 0A				asl @
   898 13E7 A8				tay
   899 13E8 A9 FF			lda #$FF
   900 13EA 18 79 0E 10			add adr.MUL40,y
   901 13EE 85 12			sta :bp2
   902 13F0 A9 07			lda #$07
   903 13F2 79 0F 10			adc adr.MUL40+1,y
   904 13F5 85 13			sta :bp2+1
   905 13F7 A0 00			ldy #$00
   906 13F9 A9 41			lda #$41
   907 13FB 91 12			sta (:bp2),y
   908 13FD C8				iny
   909 13FE 91 12			sta (:bp2),y
   910
   911 				; --- ForToDoEpilog
   912 1400 C6 58			dec T0B
   913 1402 10 C0			jpl l_0218
   914 1404			l_0226
   915
   916 				; optimize OK (init.inc), line = 34
   917
   918 1404 AD 8E 19			lda PLAYER1.COLOUR
   919 1407 8D AE 19			sta PUTCHAR.C
   920 140A AD 8D 19			lda PLAYER1.HEAD
   921 140D 8D AD 19			sta PUTCHAR.V
   922 1410 AD 8C 19			lda PLAYER1.Y
   923 1413 8D AC 19			sta PUTCHAR.Y
   924 1416 AD 8B 19			lda PLAYER1.X
   925 1419 8D AB 19			sta PUTCHAR.X
   926 141C 20 71 11			jsr PUTCHAR
   927
   928 				; optimize OK (init.inc), line = 35
   929
   930 141F AD 96 19			lda PLAYER2.COLOUR
   931 1422 8D AE 19			sta PUTCHAR.C
   932 1425 AD 95 19			lda PLAYER2.HEAD
   933 1428 8D AD 19			sta PUTCHAR.V
   934 142B AD 94 19			lda PLAYER2.Y
   935 142E 8D AC 19			sta PUTCHAR.Y
   936 1431 AD 93 19			lda PLAYER2.X
   937 1434 8D AB 19			sta PUTCHAR.X
   938 1437 20 71 11			jsr PUTCHAR
   939
   940 				; optimize OK (init.inc), line = 36
   941
   942 143A AD 9E 19			lda PLAYER3.COLOUR
   943 143D 8D AE 19			sta PUTCHAR.C
   944 1440 AD 9D 19			lda PLAYER3.HEAD
   945 1443 8D AD 19			sta PUTCHAR.V
   946 1446 AD 9C 19			lda PLAYER3.Y
   947 1449 8D AC 19			sta PUTCHAR.Y
   948 144C AD 9B 19			lda PLAYER3.X
   949 144F 8D AB 19			sta PUTCHAR.X
   950 1452 20 71 11			jsr PUTCHAR
   951
   952 				; optimize OK (init.inc), line = 37
   953
   954 1455 AD A6 19			lda PLAYER4.COLOUR
   955 1458 8D AE 19			sta PUTCHAR.C
   956 145B AD A5 19			lda PLAYER4.HEAD
   957 145E 8D AD 19			sta PUTCHAR.V
   958 1461 AD A4 19			lda PLAYER4.Y
   959 1464 8D AC 19			sta PUTCHAR.Y
   960 1467 AD A3 19			lda PLAYER4.X
   961 146A 8D AB 19			sta PUTCHAR.X
   962 146D 20 71 11			jsr PUTCHAR
   963
   964 				; optimize FAIL ('SHOWSCORE', init.inc), line = 39
   965
   966 1470 20 9C 11			jsr SHOWSCORE
   967
   968 				; ------------------------------------------------------------
   969
   970 = 0000			@FORTMP_01D5	= $00
   971 = 0001			@FORTMP_0215	= $01
   972 1473			@exit
   973 					.ifdef @new
   974 					lda <@VarData
   975 					sta :ztmp
   976 					lda >@VarData
   977 					ldy #@VarDataSize-1
   978 					jmp @FreeMem
   979 					els
   980 1473 60				rts						; ret
   981 					eif
   982 				.endl
   983
   984 1474			.local	AISTRAIGHT					; PROCEDURE
   985
   986 				; optimize OK (ai.inc), line = 5
   987
   988 1474 AC 6E 19 84 12 AC + 	mwy PLY :bp2
   989 147E A0 04			ldy #PLY.DIR-DATAORIGIN
   990 1480 B1 12			lda (:bp2),y
   991 1482 25 5A			and AVAILDIR
   992 1484 F0 07			jeq l_0292
   993 1486 B1 12			lda (:bp2),y
   994 1488 85 59			sta NEWDIR
   995 148A 4C 04 15			jmp l_02A2
   996 148D			l_0292
   997
   998 				; optimize OK (ai.inc), line = 7
   999
  1000 148D A5 5A			lda AVAILDIR
  1001 148F C9 03			cmp #$03
  1002 1491 D0 16			jne l_02B4
  1003 1493 A9 00			lda #$00
  1004 1495 20 40 11			jsr SYSTEM.RANDOM_006C
  1005 1498 B5 18			lda :STACKORIGIN,x
  1006 149A 29 01			and #$01
  1007 149C 95 18			sta :STACKORIGIN,x
  1008 149E B4 18			ldy :STACKORIGIN,x
  1009 14A0 B9 40 10			lda adr.DIRECTION,y
  1010 14A3 85 59			sta NEWDIR
  1011 14A5 CA				dex
  1012 14A6 4C C1 14			jmp l_02CA
  1013 14A9			l_02B4
  1014
  1015 				; optimize OK (ai.inc), line = 9
  1016
  1017 14A9 A5 5A			lda AVAILDIR
  1018 14AB 8D BA 19			sta @CASETMP_0003
  1019 14AE C9 01			cmp #$01
  1020 14B0 D0 07			jne l_02D5
  1021 14B2			@
  1022
  1023 				; optimize OK (ai.inc), line = 10
  1024
  1025 14B2 A9 01			lda #$01
  1026 14B4 85 59			sta NEWDIR
  1027
  1028 14B6 4C C1 14			jmp a_0003
  1029 14B9			l_02D5
  1030 14B9 C9 02			cmp #$02
  1031 14BB D0 04			jne l_02E2
  1032 14BD			@
  1033
  1034 				; optimize OK (ai.inc), line = 11
  1035
  1036 14BD A9 02			lda #$02
  1037 14BF 85 59			sta NEWDIR
  1038
  1039 14C1			l_02E2
  1040 14C1			a_0003
  1041 14C1			l_02CA
  1042
  1043 				; optimize OK (ai.inc), line = 14
  1044
  1045 14C1 A5 5A			lda AVAILDIR
  1046 14C3 C9 0C			cmp #$0C
  1047 14C5 D0 25			jne l_02FE
  1048 14C7 A9 00			lda #$00
  1049 14C9 20 40 11			jsr SYSTEM.RANDOM_006C
  1050 14CC B5 18			lda :STACKORIGIN,x
  1051 14CE 29 01			and #$01
  1052 14D0 95 18			sta :STACKORIGIN,x
  1053 14D2 E8				inx
  1054 14D3 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1055 14D7 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1056 14DB 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1057 14DD 20 44 10			jsr addAX_CX
  1058 14E0 CA				dex
  1059 14E1 B4 18			ldy :STACKORIGIN,x
  1060 14E3 B9 40 10			lda adr.DIRECTION,y
  1061 14E6 85 59			sta NEWDIR
  1062 14E8 CA				dex
  1063 14E9 4C 04 15			jmp l_0318
  1064 14EC			l_02FE
  1065
  1066 				; optimize OK (ai.inc), line = 16
  1067
  1068 14EC A5 5A			lda AVAILDIR
  1069 14EE 8D BB 19			sta @CASETMP_0004
  1070 14F1 C9 04			cmp #$04
  1071 14F3 D0 07			jne l_0323
  1072 14F5			@
  1073
  1074 				; optimize OK (ai.inc), line = 17
  1075
  1076 14F5 A9 04			lda #$04
  1077 14F7 85 59			sta NEWDIR
  1078
  1079 14F9 4C 04 15			jmp a_0004
  1080 14FC			l_0323
  1081 14FC C9 08			cmp #$08
  1082 14FE D0 04			jne l_0330
  1083 1500			@
  1084
  1085 				; optimize OK (ai.inc), line = 18
  1086
  1087 1500 A9 08			lda #$08
  1088 1502 85 59			sta NEWDIR
  1089
  1090 1504			l_0330
  1091 1504			a_0004
  1092 1504			l_0318
  1093 1504			l_02A2
  1094
  1095 				; ------------------------------------------------------------
  1096
  1097 = 19BA			@CASETMP_0003	= DATAORIGIN+$0042
  1098 = 19BB			@CASETMP_0004	= DATAORIGIN+$0043
  1099
  1100 = 19BA			@VarData	= @CASETMP_0003
  1101 = 0002			@VarDataSize	= 2
  1102
  1103 1504			@exit
  1104 					.ifdef @new
  1105 					lda <@VarData
  1106 					sta :ztmp
  1107 					lda >@VarData
  1108 					ldy #@VarDataSize-1
  1109 					jmp @FreeMem
  1110 					els
  1111 1504 60				rts						; ret
  1112 					eif
  1113 				.endl
  1114
  1115 1505			.local	AIMIRROR					; PROCEDURE
  1116
  1117 				; optimize OK (ai.inc), line = 28
  1118
  1119 1505 AD 8F 19			lda PLAYER1.DIR
  1120 1508 8D BC 19			sta @CASETMP_0005
  1121 150B C9 01			cmp #$01
  1122 150D D0 07			jne l_0349
  1123 150F			@
  1124
  1125 				; optimize OK (ai.inc), line = 29
  1126
  1127 150F A9 02			lda #$02
  1128 1511 85 58			sta T0B
  1129
  1130 1513 4C 34 15			jmp a_0005
  1131 1516			l_0349
  1132 1516 C9 02			cmp #$02
  1133 1518 D0 07			jne l_0356
  1134 151A			@
  1135
  1136 				; optimize OK (ai.inc), line = 30
  1137
  1138 151A A9 01			lda #$01
  1139 151C 85 58			sta T0B
  1140
  1141 151E 4C 34 15			jmp a_0005
  1142 1521			l_0356
  1143 1521 C9 04			cmp #$04
  1144 1523 D0 07			jne l_0363
  1145 1525			@
  1146
  1147 				; optimize OK (ai.inc), line = 31
  1148
  1149 1525 A9 08			lda #$08
  1150 1527 85 58			sta T0B
  1151
  1152 1529 4C 34 15			jmp a_0005
  1153 152C			l_0363
  1154 152C C9 08			cmp #$08
  1155 152E D0 04			jne l_0370
  1156 1530			@
  1157
  1158 				; optimize OK (ai.inc), line = 32
  1159
  1160 1530 A9 04			lda #$04
  1161 1532 85 58			sta T0B
  1162
  1163 1534			l_0370
  1164 1534			a_0005
  1165
  1166 				; optimize OK (ai.inc), line = 35
  1167
  1168 1534 A5 5A			lda AVAILDIR
  1169 1536 25 58			and T0B
  1170 1538 F0 07			jeq l_0394
  1171 153A A5 58			lda T0B
  1172 153C 85 59			sta NEWDIR
  1173 153E 4C 44 15			jmp l_03A4
  1174 1541			l_0394
  1175
  1176 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 36
  1177
  1178 1541 20 74 14			jsr AISTRAIGHT
  1179 1544			l_03A4
  1180
  1181 				; ------------------------------------------------------------
  1182
  1183 = 19BC			@CASETMP_0005	= DATAORIGIN+$0044
  1184
  1185 = 19BC			@VarData	= @CASETMP_0005
  1186 = 0001			@VarDataSize	= 1
  1187
  1188 1544			@exit
  1189 					.ifdef @new
  1190 					lda <@VarData
  1191 					sta :ztmp
  1192 					lda >@VarData
  1193 					ldy #@VarDataSize-1
  1194 					jmp @FreeMem
  1195 					els
  1196 1544 60				rts						; ret
  1197 					eif
  1198 				.endl
  1199
  1200 1545			.local	AIRANDOM					; PROCEDURE
  1201
  1202 				; optimize OK (ai.inc), line = 43
  1203
  1204 1545 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1205 154F A0 04			ldy #PLY.DIR-DATAORIGIN
  1206 1551 B1 12			lda (:bp2),y
  1207 1553 85 58			sta T0B
  1208
  1209 				; optimize OK (ai.inc), line = 44
  1210
  1211 1555 A9 00			lda #$00
  1212 1557 20 40 11			jsr SYSTEM.RANDOM_006C
  1213 155A CA				dex
  1214 155B B5 19			lda :STACKORIGIN+1,x
  1215 155D 29 03			and #$03
  1216 155F D0 0D			jne l_03C4
  1217 1561			@
  1218 1561 A9 04			lda #$04
  1219 1563 20 40 11			jsr SYSTEM.RANDOM_006C
  1220 1566 B4 18			ldy :STACKORIGIN,x
  1221 1568 B9 40 10			lda adr.DIRECTION,y
  1222 156B 85 58			sta T0B
  1223 156D CA				dex
  1224 156E			l_03C4
  1225
  1226 				; optimize OK (ai.inc), line = 46
  1227
  1228 156E A5 5A			lda AVAILDIR
  1229 1570 25 58			and T0B
  1230 1572 F0 07			jeq l_03E7
  1231 1574 A5 58			lda T0B
  1232 1576 85 59			sta NEWDIR
  1233 1578 4C 7E 15			jmp l_03F7
  1234 157B			l_03E7
  1235
  1236 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 47
  1237
  1238 157B 20 74 14			jsr AISTRAIGHT
  1239 157E			l_03F7
  1240 157E			@exit
  1241 					.ifdef @new
  1242 					lda <@VarData
  1243 					sta :ztmp
  1244 					lda >@VarData
  1245 					ldy #@VarDataSize-1
  1246 					jmp @FreeMem
  1247 					els
  1248 157E 60				rts						; ret
  1249 					eif
  1250 				.endl
  1251
  1252 157F			.local	AIMAD						; PROCEDURE
  1253
  1254 				; optimize OK (ai.inc), line = 54
  1255
  1256 157F A9 03			lda #$03
  1257 1581 20 40 11			jsr SYSTEM.RANDOM_006C
  1258 1584 B5 18			lda :STACKORIGIN,x
  1259 1586 18 69 01			add #$01
  1260 1589 85 58			sta T0B
  1261 158B CA				dex
  1262
  1263 				; optimize OK (ai.inc), line = 55
  1264
  1265 158C A5 58			lda T0B
  1266 158E 8D BD 19			sta @CASETMP_0006
  1267 1591 C9 01			cmp #$01
  1268 1593 D0 06			jne l_0410
  1269 1595			@
  1270
  1271 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 56
  1272
  1273 1595 20 74 14			jsr AISTRAIGHT
  1274 1598 4C AC 15			jmp a_0006
  1275 159B			l_0410
  1276 159B C9 02			cmp #$02
  1277 159D D0 06			jne l_041A
  1278 159F			@
  1279
  1280 				; optimize FAIL ('AIMIRROR', ai.inc), line = 57
  1281
  1282 159F 20 05 15			jsr AIMIRROR
  1283 15A2 4C AC 15			jmp a_0006
  1284 15A5			l_041A
  1285 15A5 C9 03			cmp #$03
  1286 15A7 D0 03			jne l_0424
  1287 15A9			@
  1288
  1289 				; optimize FAIL ('AIRANDOM', ai.inc), line = 58
  1290
  1291 15A9 20 45 15			jsr AIRANDOM
  1292 15AC			l_0424
  1293 15AC			a_0006
  1294
  1295 				; ------------------------------------------------------------
  1296
  1297 = 19BD			@CASETMP_0006	= DATAORIGIN+$0045
  1298
  1299 = 19BD			@VarData	= @CASETMP_0006
  1300 = 0001			@VarDataSize	= 1
  1301
  1302 15AC			@exit
  1303 					.ifdef @new
  1304 					lda <@VarData
  1305 					sta :ztmp
  1306 					lda >@VarData
  1307 					ldy #@VarDataSize-1
  1308 					jmp @FreeMem
  1309 					els
  1310 15AC 60				rts						; ret
  1311 					eif
  1312 				.endl
  1313
  1314 15AD			.local	HUMAN						; PROCEDURE
  1315
  1316 				; optimize OK (main.pas), line = 14
  1317
  1318 15AD AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1319 15B7 A0 04			ldy #PLY.DIR-DATAORIGIN
  1320 15B9 B1 12			lda (:bp2),y
  1321 15BB 85 59			sta NEWDIR
  1322
  1323 				; optimize OK (main.pas), line = 15
  1324
  1325 15BD A9 02			lda #$02
  1326 15BF 8D 08 FF			sta JOY
  1327 15C2 A9 FF			lda #$FF
  1328 15C4 8D 30 FD			sta KEY_PIO
  1329 15C7 AD 08 FF			lda JOY
  1330 15CA 49 FF			eor #$FF
  1331 15CC 85 58			sta T0B
  1332
  1333 				; optimize OK (main.pas), line = 17
  1334
  1335 15CE 8D BE 19			sta @CASETMP_0007
  1336 15D1 C9 01			cmp #$01
  1337 15D3 D0 19			jne l_0453
  1338 15D5			@
  1339
  1340 				; optimize OK (main.pas), line = 18
  1341
  1342 15D5 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1343 15DF A0 04			ldy #PLY.DIR-DATAORIGIN
  1344 15E1 B1 12			lda (:bp2),y
  1345 15E3 C9 02			cmp #$02
  1346 15E5 F0 04			jeq l_0465
  1347 15E7 A9 01			lda #$01
  1348 15E9 85 59			sta NEWDIR
  1349 15EB			l_0465
  1350
  1351 15EB 4C 42 16			jmp a_0007
  1352 15EE			l_0453
  1353 15EE C9 02			cmp #$02
  1354 15F0 D0 19			jne l_0475
  1355 15F2			@
  1356
  1357 				; optimize OK (main.pas), line = 19
  1358
  1359 15F2 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1360 15FC A0 04			ldy #PLY.DIR-DATAORIGIN
  1361 15FE B1 12			lda (:bp2),y
  1362 1600 C9 01			cmp #$01
  1363 1602 F0 04			jeq l_0487
  1364 1604 A9 02			lda #$02
  1365 1606 85 59			sta NEWDIR
  1366 1608			l_0487
  1367
  1368 1608 4C 42 16			jmp a_0007
  1369 160B			l_0475
  1370 160B C9 04			cmp #$04
  1371 160D D0 19			jne l_0497
  1372 160F			@
  1373
  1374 				; optimize OK (main.pas), line = 20
  1375
  1376 160F AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1377 1619 A0 04			ldy #PLY.DIR-DATAORIGIN
  1378 161B B1 12			lda (:bp2),y
  1379 161D C9 08			cmp #$08
  1380 161F F0 04			jeq l_04A9
  1381 1621 A9 04			lda #$04
  1382 1623 85 59			sta NEWDIR
  1383 1625			l_04A9
  1384
  1385 1625 4C 42 16			jmp a_0007
  1386 1628			l_0497
  1387 1628 C9 08			cmp #$08
  1388 162A D0 16			jne l_04B9
  1389 162C			@
  1390
  1391 				; optimize OK (main.pas), line = 21
  1392
  1393 162C AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1394 1636 A0 04			ldy #PLY.DIR-DATAORIGIN
  1395 1638 B1 12			lda (:bp2),y
  1396 163A C9 04			cmp #$04
  1397 163C F0 04			jeq l_04CB
  1398 163E A9 08			lda #$08
  1399 1640 85 59			sta NEWDIR
  1400 1642			l_04CB
  1401
  1402 1642			l_04B9
  1403 1642			a_0007
  1404
  1405 				; optimize OK (main.pas), line = 24
  1406
  1407 1642 A5 59			lda NEWDIR
  1408 1644 25 5A			and AVAILDIR
  1409 1646 D0 19			jne l_04F2
  1410
  1411 				; optimize OK (main.pas), line = 25
  1412
  1413 1648 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1414 1652 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1415 1654 A9 01			lda #$01
  1416 1656 91 12			sta (:bp2),y
  1417 1658 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1418 165A A9 57			lda #$57
  1419 165C 91 12			sta (:bp2),y
  1420 165E CE 88 19			dec ALIVE
  1421 1661			l_04F2
  1422
  1423 				; ------------------------------------------------------------
  1424
  1425 = 19BE			@CASETMP_0007	= DATAORIGIN+$0046
  1426
  1427 = 19BE			@VarData	= @CASETMP_0007
  1428 = 0001			@VarDataSize	= 1
  1429
  1430 1661			@exit
  1431 					.ifdef @new
  1432 					lda <@VarData
  1433 					sta :ztmp
  1434 					lda >@VarData
  1435 					ldy #@VarDataSize-1
  1436 					jmp @FreeMem
  1437 					els
  1438 1661 60				rts						; ret
  1439 					eif
  1440 				.endl
  1441
  1442 1662			.local	PLAYERMOVE					; PROCEDURE
  1443
  1444 				; optimize OK (main.pas), line = 33
  1445
  1446 1662 AD BF 19			lda P
  1447 1665 8D 6E 19			sta PLY
  1448 1668 85 12			sta :bp2
  1449 166A AD C0 19			lda P+1
  1450 166D 8D 6F 19			sta PLY+1
  1451 1670 85 13			sta :bp2+1
  1452 				; optimize OK (main.pas), line = 35
  1453 1672 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1454 1674 B1 12			lda (:bp2),y
  1455 1676 F0 03 4C 66 18		jne l_0519
  1456
  1457 				; optimize OK (main.pas), line = 37
  1458
  1459 167B A0 00			ldy #PLY.X-DATAORIGIN
  1460 167D B1 12			lda (:bp2),y
  1461 167F 8D AF 19			sta CHECKAVAILDIR.X
  1462 1682 A0 01			ldy #PLY.Y-DATAORIGIN
  1463 1684 B1 12			lda (:bp2),y
  1464 1686 8D B0 19			sta CHECKAVAILDIR.Y
  1465 1689 20 01 12			jsr CHECKAVAILDIR
  1466
  1467 				; optimize OK (main.pas), line = 39
  1468
  1469 168C A5 5A			lda AVAILDIR
  1470 168E D0 36			jne l_0533
  1471
  1472 				; optimize OK (main.pas), line = 40
  1473
  1474 1690 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1475 169A A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1476 169C A9 01			lda #$01
  1477 169E 91 12			sta (:bp2),y
  1478 16A0 CE 88 19			dec ALIVE
  1479
  1480 				; optimize OK (main.pas), line = 41
  1481
  1482 16A3 A0 00			ldy #PLY.X-DATAORIGIN
  1483 16A5 B1 12			lda (:bp2),y
  1484 16A7 8D AB 19			sta PUTCHAR.X
  1485 16AA A0 01			ldy #PLY.Y-DATAORIGIN
  1486 16AC B1 12			lda (:bp2),y
  1487 16AE 8D AC 19			sta PUTCHAR.Y
  1488 16B1 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1489 16B3 B1 12			lda (:bp2),y
  1490 16B5 18 69 80			add #$80
  1491 16B8 8D AE 19			sta PUTCHAR.C
  1492 16BB A9 57			lda #$57
  1493 16BD 8D AD 19			sta PUTCHAR.V
  1494 16C0 20 71 11			jsr PUTCHAR
  1495 16C3 4C 66 18			jmp l_0554
  1496 16C6			l_0533
  1497
  1498 				; optimize OK (main.pas), line = 44
  1499
  1500 16C6 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1501 16D0 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1502 16D2 B1 12			lda (:bp2),y
  1503 16D4 8D C1 19			sta @CASETMP_0008
  1504 16D7 C9 00			cmp #$00
  1505 16D9 D0 06			jne l_055F
  1506 16DB			@
  1507
  1508 				; optimize FAIL ('HUMAN', main.pas), line = 45
  1509
  1510 16DB 20 AD 15			jsr HUMAN
  1511 16DE 4C 06 17			jmp a_0008
  1512 16E1			l_055F
  1513 16E1 C9 01			cmp #$01
  1514 16E3 D0 06			jne l_0569
  1515 16E5			@
  1516
  1517 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 46
  1518
  1519 16E5 20 74 14			jsr AISTRAIGHT
  1520 16E8 4C 06 17			jmp a_0008
  1521 16EB			l_0569
  1522 16EB C9 02			cmp #$02
  1523 16ED D0 06			jne l_0573
  1524 16EF			@
  1525
  1526 				; optimize FAIL ('AIMIRROR', main.pas), line = 47
  1527
  1528 16EF 20 05 15			jsr AIMIRROR
  1529 16F2 4C 06 17			jmp a_0008
  1530 16F5			l_0573
  1531 16F5 C9 03			cmp #$03
  1532 16F7 D0 06			jne l_057D
  1533 16F9			@
  1534
  1535 				; optimize FAIL ('AIRANDOM', main.pas), line = 48
  1536
  1537 16F9 20 45 15			jsr AIRANDOM
  1538 16FC 4C 06 17			jmp a_0008
  1539 16FF			l_057D
  1540 16FF C9 04			cmp #$04
  1541 1701 D0 03			jne l_0587
  1542 1703			@
  1543
  1544 				; optimize FAIL ('AIMAD', main.pas), line = 49
  1545
  1546 1703 20 7F 15			jsr AIMAD
  1547 1706			l_0587
  1548 1706			a_0008
  1549
  1550 				; optimize OK (main.pas), line = 52
  1551
  1552 1706 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1553 1710 A0 04			ldy #PLY.DIR-DATAORIGIN
  1554 1712 B1 12			lda (:bp2),y
  1555 1714 C5 59			cmp NEWDIR
  1556 1716 D0 14			jne l_05A5
  1557
  1558 				; optimize OK (main.pas), line = 53
  1559
  1560 1718 A5 59			lda NEWDIR
  1561 171A 29 0C			and #$0C
  1562 171C F0 07			jeq l_05BC
  1563 171E A9 40			lda #$40
  1564 1720 85 58			sta T0B
  1565 1722 4C 29 17			jmp l_05CA
  1566 1725			l_05BC
  1567 1725 A9 42			lda #$42
  1568 1727 85 58			sta T0B
  1569 1729			l_05CA
  1570 1729 4C 9C 17			jmp l_05D7
  1571 172C			l_05A5
  1572
  1573 				; optimize OK (main.pas), line = 55
  1574
  1575 172C AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1576 1736 A0 04			ldy #PLY.DIR-DATAORIGIN
  1577 1738 B1 12			lda (:bp2),y
  1578 173A 29 0A			and #$0A
  1579 173C F0 0A			jeq l_05FD
  1580 173E A5 59			lda NEWDIR
  1581 1740 29 05			and #$05
  1582 1742 F0 04			jeq l_05FD
  1583 1744 A9 7D			lda #$7D
  1584 1746 85 58			sta T0B
  1585 1748			l_05FD
  1586
  1587 				; optimize OK (main.pas), line = 56
  1588
  1589 1748 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1590 1752 A0 04			ldy #PLY.DIR-DATAORIGIN
  1591 1754 B1 12			lda (:bp2),y
  1592 1756 29 09			and #$09
  1593 1758 F0 0A			jeq l_062A
  1594 175A A5 59			lda NEWDIR
  1595 175C 29 06			and #$06
  1596 175E F0 04			jeq l_062A
  1597 1760 A9 6E			lda #$6E
  1598 1762 85 58			sta T0B
  1599 1764			l_062A
  1600
  1601 				; optimize OK (main.pas), line = 57
  1602
  1603 1764 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1604 176E A0 04			ldy #PLY.DIR-DATAORIGIN
  1605 1770 B1 12			lda (:bp2),y
  1606 1772 29 06			and #$06
  1607 1774 F0 0A			jeq l_0657
  1608 1776 A5 59			lda NEWDIR
  1609 1778 29 09			and #$09
  1610 177A F0 04			jeq l_0657
  1611 177C A9 6D			lda #$6D
  1612 177E 85 58			sta T0B
  1613 1780			l_0657
  1614
  1615 				; optimize OK (main.pas), line = 58
  1616
  1617 1780 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1618 178A A0 04			ldy #PLY.DIR-DATAORIGIN
  1619 178C B1 12			lda (:bp2),y
  1620 178E 29 05			and #$05
  1621 1790 F0 0A			jeq l_0684
  1622 1792 A5 59			lda NEWDIR
  1623 1794 29 0A			and #$0A
  1624 1796 F0 04			jeq l_0684
  1625 1798 A9 70			lda #$70
  1626 179A 85 58			sta T0B
  1627 179C			l_0684
  1628 179C			l_05D7
  1629
  1630 				; optimize OK (main.pas), line = 60
  1631
  1632 179C AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1633 17A6 A0 00			ldy #PLY.X-DATAORIGIN
  1634 17A8 B1 12			lda (:bp2),y
  1635 17AA 8D AB 19			sta PUTCHAR.X
  1636 17AD A0 01			ldy #PLY.Y-DATAORIGIN
  1637 17AF B1 12			lda (:bp2),y
  1638 17B1 8D AC 19			sta PUTCHAR.Y
  1639 17B4 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1640 17B6 B1 12			lda (:bp2),y
  1641 17B8 8D AE 19			sta PUTCHAR.C
  1642 17BB A5 58			lda T0B
  1643 17BD 8D AD 19			sta PUTCHAR.V
  1644 17C0 20 71 11			jsr PUTCHAR
  1645
  1646 				; optimize OK (main.pas), line = 62
  1647
  1648 17C3 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1649 17CD A0 04			ldy #PLY.DIR-DATAORIGIN
  1650 17CF A5 59			lda NEWDIR
  1651 17D1 91 12			sta (:bp2),y
  1652
  1653 				; optimize OK (main.pas), line = 64
  1654
  1655 17D3 A5 59			lda NEWDIR
  1656 17D5 8D C2 19			sta @CASETMP_0009
  1657 17D8 C9 01			cmp #$01
  1658 17DA D0 16			jne l_06A9
  1659 17DC			@
  1660
  1661 				; optimize OK (main.pas), line = 65
  1662
  1663 17DC AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1664 17E6 A0 01			ldy #PLY.Y-DATAORIGIN
  1665 17E8 B1 12			lda (:bp2),y
  1666 17EA 38 E9 01			sub #$01
  1667 17ED 91 12			sta (:bp2),y
  1668
  1669 17EF 4C 3D 18			jmp a_0009
  1670 17F2			l_06A9
  1671 17F2 C9 02			cmp #$02
  1672 17F4 D0 16			jne l_06B3
  1673 17F6			@
  1674
  1675 				; optimize OK (main.pas), line = 66
  1676
  1677 17F6 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1678 1800 A0 01			ldy #PLY.Y-DATAORIGIN
  1679 1802 B1 12			lda (:bp2),y
  1680 1804 18 69 01			add #$01
  1681 1807 91 12			sta (:bp2),y
  1682
  1683 1809 4C 3D 18			jmp a_0009
  1684 180C			l_06B3
  1685 180C C9 04			cmp #$04
  1686 180E D0 16			jne l_06BD
  1687 1810			@
  1688
  1689 				; optimize OK (main.pas), line = 67
  1690
  1691 1810 AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1692 181A A0 00			ldy #PLY.X-DATAORIGIN
  1693 181C B1 12			lda (:bp2),y
  1694 181E 38 E9 01			sub #$01
  1695 1821 91 12			sta (:bp2),y
  1696
  1697 1823 4C 3D 18			jmp a_0009
  1698 1826			l_06BD
  1699 1826 C9 08			cmp #$08
  1700 1828 D0 13			jne l_06C7
  1701 182A			@
  1702
  1703 				; optimize OK (main.pas), line = 68
  1704
  1705 182A AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1706 1834 A0 00			ldy #PLY.X-DATAORIGIN
  1707 1836 B1 12			lda (:bp2),y
  1708 1838 18 69 01			add #$01
  1709 183B 91 12			sta (:bp2),y
  1710
  1711 183D			l_06C7
  1712 183D			a_0009
  1713
  1714 				; optimize OK (main.pas), line = 71
  1715
  1716 183D AC 6E 19 84 12 AC + 	mwy PLY :bp2
  1717 1847 A0 00			ldy #PLY.X-DATAORIGIN
  1718 1849 B1 12			lda (:bp2),y
  1719 184B 8D AB 19			sta PUTCHAR.X
  1720 184E A0 01			ldy #PLY.Y-DATAORIGIN
  1721 1850 B1 12			lda (:bp2),y
  1722 1852 8D AC 19			sta PUTCHAR.Y
  1723 1855 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1724 1857 B1 12			lda (:bp2),y
  1725 1859 8D AD 19			sta PUTCHAR.V
  1726 185C A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1727 185E B1 12			lda (:bp2),y
  1728 1860 8D AE 19			sta PUTCHAR.C
  1729 1863 20 71 11			jsr PUTCHAR
  1730 1866			l_0554
  1731 1866			l_0519
  1732
  1733 				; ------------------------------------------------------------
  1734
  1735 = 19BF			P	= DATAORIGIN+$0047
  1736 = 19C1			@CASETMP_0008	= DATAORIGIN+$0049
  1737 = 19C2			@CASETMP_0009	= DATAORIGIN+$004A
  1738
  1739 = 19BF			@VarData	= P
  1740 = 0004			@VarDataSize	= 4
  1741
  1742 1866			@exit
  1743 					.ifdef @new
  1744 					lda <@VarData
  1745 					sta :ztmp
  1746 					lda >@VarData
  1747 					ldy #@VarDataSize-1
  1748 					jmp @FreeMem
  1749 					els
  1750 1866 60				rts						; ret
  1751 					eif
  1752 				.endl
  1753
  1754 1867			.local	STARTSCREEN					; PROCEDURE
  1755
  1756 				; --- RepeatUntilProlog
  1757 1867			l_06E4
  1758
  1759 				; optimize OK (main.pas), line = 83
  1760
  1761 1867 A9 02			lda #$02
  1762 1869 8D 08 FF			sta JOY
  1763 186C A9 FF			lda #$FF
  1764 186E 8D 30 FD			sta KEY_PIO
  1765 1871 AD 08 FF			lda JOY
  1766 1874 49 FF			eor #$FF
  1767 1876 85 58			sta T0B
  1768
  1769 				; optimize OK (main.pas), line = 84
  1770
  1771 1878 C9 40			cmp #$40
  1772 187A D0 EB			jne l_06E4
  1773 187C			@exit
  1774 					.ifdef @new
  1775 					lda <@VarData
  1776 					sta :ztmp
  1777 					lda >@VarData
  1778 					ldy #@VarDataSize-1
  1779 					jmp @FreeMem
  1780 					els
  1781 187C 60				rts						; ret
  1782 					eif
  1783 				.endl
  1784
  1785 187D			.local	MAINLOOP					; PROCEDURE
  1786
  1787 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 91
  1788
  1789 187D 20 BF 12			jsr INITPLAYFIELD
  1790
  1791 				; optimize FAIL ('STARTSCREEN', main.pas), line = 92
  1792
  1793 1880 20 67 18			jsr STARTSCREEN
  1794
  1795 				; optimize OK (main.pas), line = 94
  1796
  1797 1883 A9 01			lda #$01
  1798 1885 8D 88 19			sta ALIVE
  1799
  1800 				; --- RepeatUntilProlog
  1801 1888			l_070E
  1802
  1803 				; optimize OK (main.pas), line = 96
  1804
  1805 1888 A9 03			lda #$03
  1806 188A 8D 84 19			sta SYSTEM.PAUSE_006B.N
  1807 188D A9 00			lda #$00
  1808 188F 8D 85 19			sta SYSTEM.PAUSE_006B.N+1
  1809 1892 20 23 11			jsr SYSTEM.PAUSE_006B
  1810
  1811 				; optimize OK (main.pas), line = 97
  1812
  1813 1895 AD 70 19			lda PLAYER1
  1814 1898 8D BF 19			sta PLAYERMOVE.P
  1815 189B AD 71 19			lda PLAYER1+1
  1816 189E 8D C0 19			sta PLAYERMOVE.P+1
  1817 18A1 20 62 16			jsr PLAYERMOVE
  1818 18A4 AD 72 19			lda PLAYER2
  1819 18A7 8D BF 19			sta PLAYERMOVE.P
  1820 18AA AD 73 19			lda PLAYER2+1
  1821 18AD 8D C0 19			sta PLAYERMOVE.P+1
  1822 18B0 20 62 16			jsr PLAYERMOVE
  1823
  1824 				; optimize OK (main.pas), line = 98
  1825
  1826 18B3 AD 74 19			lda PLAYER3
  1827 18B6 8D BF 19			sta PLAYERMOVE.P
  1828 18B9 AD 75 19			lda PLAYER3+1
  1829 18BC 8D C0 19			sta PLAYERMOVE.P+1
  1830 18BF 20 62 16			jsr PLAYERMOVE
  1831 18C2 AD 76 19			lda PLAYER4
  1832 18C5 8D BF 19			sta PLAYERMOVE.P
  1833 18C8 AD 77 19			lda PLAYER4+1
  1834 18CB 8D C0 19			sta PLAYERMOVE.P+1
  1835 18CE 20 62 16			jsr PLAYERMOVE
  1836
  1837 				; optimize OK (main.pas), line = 99
  1838
  1839 18D1 AD 88 19			lda ALIVE
  1840 18D4 F0 04			jeq l_070Ex
  1841 18D6 C9 FF			cmp #$FF
  1842 18D8 D0 AE			jne l_070E
  1843 18DA			l_070Ex
  1844
  1845 				; optimize OK (main.pas), line = 101
  1846
  1847 18DA AD 92 19			lda PLAYER1.ISDEAD
  1848 18DD D0 03			jne l_0744
  1849 18DF EE 91 19			inc PLAYER1.SCORE
  1850 18E2			l_0744
  1851
  1852 				; optimize OK (main.pas), line = 102
  1853
  1854 18E2 AD 9A 19			lda PLAYER2.ISDEAD
  1855 18E5 D0 03			jne l_075A
  1856 18E7 EE 99 19			inc PLAYER2.SCORE
  1857 18EA			l_075A
  1858
  1859 				; optimize OK (main.pas), line = 103
  1860
  1861 18EA AD A2 19			lda PLAYER3.ISDEAD
  1862 18ED D0 03			jne l_0770
  1863 18EF EE A1 19			inc PLAYER3.SCORE
  1864 18F2			l_0770
  1865
  1866 				; optimize OK (main.pas), line = 104
  1867
  1868 18F2 AD AA 19			lda PLAYER4.ISDEAD
  1869 18F5 D0 03			jne l_0786
  1870 18F7 EE A9 19			inc PLAYER4.SCORE
  1871 18FA			l_0786
  1872
  1873 				; optimize OK (main.pas), line = 106
  1874
  1875 18FA A9 64			lda #$64
  1876 18FC 8D 84 19			sta SYSTEM.PAUSE_006B.N
  1877 18FF A9 00			lda #$00
  1878 1901 8D 85 19			sta SYSTEM.PAUSE_006B.N+1
  1879 1904 20 23 11			jsr SYSTEM.PAUSE_006B
  1880 1907			@exit
  1881 					.ifdef @new
  1882 					lda <@VarData
  1883 					sta :ztmp
  1884 					lda >@VarData
  1885 					ldy #@VarDataSize-1
  1886 					jmp @FreeMem
  1887 					els
  1888 1907 60				rts						; ret
  1889 					eif
  1890 				.endl
  1891 1908			l_0007
  1892
  1893 				; --- RepeatUntilProlog
  1894 1908			l_0791
  1895
  1896 				; optimize OK (main.pas), line = 113
  1897
  1898 1908 A9 30			lda #$30
  1899 190A 8D 91 19			sta PLAYER1.SCORE
  1900 190D 8D 99 19			sta PLAYER2.SCORE
  1901
  1902 				; optimize OK (main.pas), line = 114
  1903
  1904 1910 8D A1 19			sta PLAYER3.SCORE
  1905 1913 8D A9 19			sta PLAYER4.SCORE
  1906
  1907 				; optimize OK (main.pas), line = 116
  1908
  1909 1916 A9 00			lda #$00
  1910 1918 8D 8A 19			sta GAMEOVER
  1911
  1912 				; --- RepeatUntilProlog
  1913 191B			l_07A6
  1914
  1915 				; optimize FAIL ('MAINLOOP', main.pas), line = 118
  1916
  1917 191B 20 7D 18			jsr MAINLOOP
  1918
  1919 				; optimize OK (main.pas), line = 119
  1920
  1921 191E AD 91 19			lda PLAYER1.SCORE
  1922 1921 C9 39			cmp #$39
  1923 1923 D0 05			jne l_07B9
  1924 1925 A9 01			lda #$01
  1925 1927 8D 8A 19			sta GAMEOVER
  1926 192A			l_07B9
  1927
  1928 				; optimize OK (main.pas), line = 120
  1929
  1930 192A AD 99 19			lda PLAYER2.SCORE
  1931 192D C9 39			cmp #$39
  1932 192F D0 05			jne l_07D2
  1933 1931 A9 01			lda #$01
  1934 1933 8D 8A 19			sta GAMEOVER
  1935 1936			l_07D2
  1936
  1937 				; optimize OK (main.pas), line = 121
  1938
  1939 1936 AD A1 19			lda PLAYER3.SCORE
  1940 1939 C9 39			cmp #$39
  1941 193B D0 05			jne l_07EB
  1942 193D A9 01			lda #$01
  1943 193F 8D 8A 19			sta GAMEOVER
  1944 1942			l_07EB
  1945
  1946 				; optimize OK (main.pas), line = 122
  1947
  1948 1942 AD A9 19			lda PLAYER4.SCORE
  1949 1945 C9 39			cmp #$39
  1950 1947 D0 05			jne l_0804
  1951 1949 A9 01			lda #$01
  1952 194B 8D 8A 19			sta GAMEOVER
  1953 194E			l_0804
  1954
  1955 				; optimize OK (main.pas), line = 123
  1956
  1957 194E AD 8A 19			lda GAMEOVER
  1958 1951 F0 C8			jeq l_07A6
  1959
  1960 				; optimize FAIL ('SHOWSCORE', main.pas), line = 124
  1961
  1962 1953 20 9C 11			jsr SHOWSCORE
  1963
  1964 				; optimize OK (main.pas), line = 126
  1965
  1966 1956 A9 C8			lda #$C8
  1967 1958 8D 84 19			sta SYSTEM.PAUSE_006B.N
  1968 195B A9 00			lda #$00
  1969 195D 8D 85 19			sta SYSTEM.PAUSE_006B.N+1
  1970 1960 20 23 11			jsr SYSTEM.PAUSE_006B
  1971
  1972 				; optimize OK (main.pas), line = 127
  1973
  1974 1963 4C 08 19			jmp l_0791
  1975
  1976 				; ------------------------------------------------------------
  1977
  1978 = 0800			ATTRIBUTE_ADDR	= $0800
  1979 = 0C00			SCREEN_ADDR	= $0C00
  1980 = 0020			EMPTY	= $20
  1981 = 00A0			WALL	= $A0
  1982 = 0041			WALL_COLOUR	= $41
  1983 = 0030			ZERO	= $30
  1984 = 0051			PLY_HEAD	= $51
  1985 = 0057			PLY_CRASH	= $57
  1986 = 0042			PLY_TAIL_UD	= $42
  1987 = 0040			PLY_TAIL_LR	= $40
  1988 = 007D			PLY_TAIL_RD	= $7D
  1989 = 006E			PLY_TAIL_RU	= $6E
  1990 = 006D			PLY_TAIL_LD	= $6D
  1991 = 0070			PLY_TAIL_LU	= $70
  1992 = 005F			PLY1_COLOUR	= $5F
  1993 = 005D			PLY2_COLOUR	= $5D
  1994 = 0071			PLY3_COLOUR	= $71
  1995 = 0055			PLY4_COLOUR	= $55
  1996 = 0000			PLY_CTRL	= $00
  1997 = 0001			AI_STRAIGHT	= $01
  1998 = 0002			AI_MIRROR	= $02
  1999 = 0003			AI_RANDOM	= $03
  2000 = 0004			AI_MAD	= $04
  2001 = 0001			JOY_UP	= $01
  2002 = 0002			JOY_DOWN	= $02
  2003 = 0004			JOY_LEFT	= $04
  2004 = 0008			JOY_RIGHT	= $08
  2005 = 0040			JOY_FIRE	= $40
  2006 = 0002			JOY_SELECT_1	= $02
  2007 = 0004			JOY_SELECT_2	= $04
  2008 = 100E			adr.MUL40	= CODEORIGIN+$0000
  2009 1966			.var MUL40	= adr.MUL40 .word
  2010 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  2011 1966			.var DIRECTION	= adr.DIRECTION .word
  2012 = FD30			KEY_PIO	= $FD30
  2013 = FF08			JOY	= $FF08
  2014 = FF15			BORDERCOLOR	= $FF15
  2015 = FF19			BGCOLOR	= $FF19
  2016 = 0058			T0B	= $58
  2017 = 0059			NEWDIR	= $59
  2018 = 005A			AVAILDIR	= $5A
  2019 = 005B			T0W	= $5B
  2020 = 005D			adr.PLY	= $5D
  2021 1966			.var PLY	= adr.PLY .word
  2022 = 1978			PLY.X	= DATAORIGIN+$0000
  2023 = 1979			PLY.Y	= DATAORIGIN+$0001
  2024 = 197A			PLY.HEAD	= DATAORIGIN+$0002
  2025 = 197B			PLY.COLOUR	= DATAORIGIN+$0003
  2026 = 197C			PLY.DIR	= DATAORIGIN+$0004
  2027 = 197D			PLY.BRAIN	= DATAORIGIN+$0005
  2028 = 197E			PLY.SCORE	= DATAORIGIN+$0006
  2029 = 197F			PLY.ISDEAD	= DATAORIGIN+$0007
  2030 = 1988			ALIVE	= DATAORIGIN+$0010
  2031 = 1989			SPEED	= DATAORIGIN+$0011
  2032 = 198A			GAMEOVER	= DATAORIGIN+$0012
  2033 = 198B			adr.PLAYER1	= [DATAORIGIN+$0013] .array [6]
  2034 1966			.var PLAYER1	= adr.PLAYER1 .word
  2035 = 198B			PLAYER1.X	= DATAORIGIN+$0013
  2036 = 198C			PLAYER1.Y	= DATAORIGIN+$0014
  2037 = 198D			PLAYER1.HEAD	= DATAORIGIN+$0015
  2038 = 198E			PLAYER1.COLOUR	= DATAORIGIN+$0016
  2039 = 198F			PLAYER1.DIR	= DATAORIGIN+$0017
  2040 = 1990			PLAYER1.BRAIN	= DATAORIGIN+$0018
  2041 = 1991			PLAYER1.SCORE	= DATAORIGIN+$0019
  2042 = 1992			PLAYER1.ISDEAD	= DATAORIGIN+$001A
  2043 = 1993			adr.PLAYER2	= [DATAORIGIN+$001B] .array [6]
  2044 1966			.var PLAYER2	= adr.PLAYER2 .word
  2045 = 1993			PLAYER2.X	= DATAORIGIN+$001B
  2046 = 1994			PLAYER2.Y	= DATAORIGIN+$001C
  2047 = 1995			PLAYER2.HEAD	= DATAORIGIN+$001D
  2048 = 1996			PLAYER2.COLOUR	= DATAORIGIN+$001E
  2049 = 1997			PLAYER2.DIR	= DATAORIGIN+$001F
  2050 = 1998			PLAYER2.BRAIN	= DATAORIGIN+$0020
  2051 = 1999			PLAYER2.SCORE	= DATAORIGIN+$0021
  2052 = 199A			PLAYER2.ISDEAD	= DATAORIGIN+$0022
  2053 = 199B			adr.PLAYER3	= [DATAORIGIN+$0023] .array [6]
  2054 1966			.var PLAYER3	= adr.PLAYER3 .word
  2055 = 199B			PLAYER3.X	= DATAORIGIN+$0023
  2056 = 199C			PLAYER3.Y	= DATAORIGIN+$0024
  2057 = 199D			PLAYER3.HEAD	= DATAORIGIN+$0025
  2058 = 199E			PLAYER3.COLOUR	= DATAORIGIN+$0026
  2059 = 199F			PLAYER3.DIR	= DATAORIGIN+$0027
  2060 = 19A0			PLAYER3.BRAIN	= DATAORIGIN+$0028
  2061 = 19A1			PLAYER3.SCORE	= DATAORIGIN+$0029
  2062 = 19A2			PLAYER3.ISDEAD	= DATAORIGIN+$002A
  2063 = 19A3			adr.PLAYER4	= [DATAORIGIN+$002B] .array [6]
  2064 1966			.var PLAYER4	= adr.PLAYER4 .word
  2065 = 19A3			PLAYER4.X	= DATAORIGIN+$002B
  2066 = 19A4			PLAYER4.Y	= DATAORIGIN+$002C
  2067 = 19A5			PLAYER4.HEAD	= DATAORIGIN+$002D
  2068 = 19A6			PLAYER4.COLOUR	= DATAORIGIN+$002E
  2069 = 19A7			PLAYER4.DIR	= DATAORIGIN+$002F
  2070 = 19A8			PLAYER4.BRAIN	= DATAORIGIN+$0030
  2071 = 19A9			PLAYER4.SCORE	= DATAORIGIN+$0031
  2072 = 19AA			PLAYER4.ISDEAD	= DATAORIGIN+$0032
  2073 1966			@exit
  2074
  2075 1966 A2 00		@halt	ldx #$00
  2076 1968 9A				txs
  2077
  2078 1969 60				rts
  2079
  2080 				; ------------------------------------------------------------
  2081
  2082 				; ------------------------------------------------------------
  2083
  2084 196A			.local	@DEFINES
  2085 196A			C4P
  2086 				.endl
  2087
  2088 196A			.local	@RESOURCE
  2089 				.endl
  2090
  2091 = 196A 0E 10		MUL40
  2091 = 196C 40 10		DIRECTION
  2091 = 196E 5D 00		PLY
  2091 = 1970 8B 19		PLAYER1
  2091 = 1972 93 19		PLAYER2
  2091 = 1974 9B 19		PLAYER3
  2091 = 1976 A3 19		PLAYER4
  2091 				.endl							; MAIN
  2092
  2093 				; ------------------------------------------------------------
  2094 				; ------------------------------------------------------------
  2095
  2096 				.macro	UNITINITIALIZATION
  2097 				
  2098 					.ifdef MAIN.SYSTEM.@UnitInit
  2099 					jsr MAIN.SYSTEM.@UnitInit
  2100 					eif
  2101 				.endm
  2102
  2103 				; ------------------------------------------------------------
  2104
  2105 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2106 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2106 				SYSTEM: $10D5..$1170
  2107 					eif
  2108
  2109 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2109 				CODE: $100E..$1969
  2110
  2111 				; ------------------------------------------------------------
  2112
  2113 1978				.align $04
  2114
  2115 1978			DATAORIGIN
  2116 1978 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  2117
  2118 = 0006			VARINITSIZE	= *-DATAORIGIN
  2119 = 004B			VARDATASIZE	= 75
  2120
  2121 = 19C3			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2122
  2123 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2123 				DATA: $1978..$19C3
  2124
  2125 				; ------------------------------------------------------------
  2126
  2127 				.macro	STATICDATA
  2128 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  2129 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  2130 				.by  $C0 $03 $01 $02 $04 $08
  2131 				.endm
  2132
  2133 					end
