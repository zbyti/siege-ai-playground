mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E BE 1C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0045			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 1CDA			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 BB			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 1F 1C E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 1F 85 02 A9 1D + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 5F 1C			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D DF 1C		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD DF 1C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 1CDF			RESULT	= DATAORIGIN+$000B
   182
   183 = 1CDF			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD E0 1C		loop  lda n
   307 1126 0D E1 1C		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD E0 1C D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 1CE0			N	= DATAORIGIN+$000C
   321
   322 = 1CE0			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D E2 1C			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD E2 1C		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C E3 1C		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD E3 1C 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 1CE2			RANGE	= DATAORIGIN+$000E
   383 = 1CE3			RESULT	= DATAORIGIN+$000F
   384
   385 = 1CE2			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 1CD4			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 1CD6			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 1CD8			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 1CD9			FILEMODE	= DATAORIGIN+$0005
   450 = 1CDA			GRAPHMODE	= DATAORIGIN+$0006
   451 = 1CDB			IORESULT	= DATAORIGIN+$0007
   452 = 1CDC			EOLN	= DATAORIGIN+$0008
   453 = 1CDD			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD 06 1D			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D 05 1D			add X
   466 117D 85 5C			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5D			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5C			ldy T0W
   475 118A AD 08 1D			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5D			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD 07 1D			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 1D05			X	= DATAORIGIN+$0031
   486 = 1D06			Y	= DATAORIGIN+$0032
   487 = 1D07			V	= DATAORIGIN+$0033
   488 = 1D08			C	= DATAORIGIN+$0034
   489
   490 = 1D05			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD E8 1C			lda PLAYER1.COLOUR
   510 119F 8D 08 1D			sta PUTCHAR.C
   511 11A2 AD EB 1C			lda PLAYER1.SCORE
   512 11A5 8D 07 1D			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D 06 1D			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D 05 1D			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD F0 1C			lda PLAYER2.COLOUR
   522 11B8 8D 08 1D			sta PUTCHAR.C
   523 11BB AD F3 1C			lda PLAYER2.SCORE
   524 11BE 8D 07 1D			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D 06 1D			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D 05 1D			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD F8 1C			lda PLAYER3.COLOUR
   534 11D1 8D 08 1D			sta PUTCHAR.C
   535 11D4 AD FB 1C			lda PLAYER3.SCORE
   536 11D7 8D 07 1D			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D 06 1D			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D 05 1D			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD 00 1D			lda PLAYER4.COLOUR
   546 11EA 8D 08 1D			sta PUTCHAR.C
   547 11ED AD 03 1D			lda PLAYER4.SCORE
   548 11F0 8D 07 1D			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D 06 1D			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D 05 1D			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5B			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AC C5 1C 84 12 AC + 	mwy PLY :bp2
   576 120F A0 01			ldy #PLY.Y-DATAORIGIN
   577 1211 B1 12			lda (:bp2),y
   578 1213 0A				asl @
   579 1214 A8				tay
   580 1215 A9 00			lda #$00
   581 1217 18 79 0E 10			add adr.MUL40,y
   582 121B 85 21			sta :STACKORIGIN+9
   583 121D A9 0C			lda #$0C
   584 121F 79 0F 10			adc adr.MUL40+1,y
   585 1222 85 31			sta :STACKORIGIN+STACKWIDTH+9
   586 1224 A0 00			ldy #PLY.X-DATAORIGIN
   587 1226 A5 21			lda :STACKORIGIN+9
   588 1228 18 71 12			add (:bp2),y
   589 122B 85 5C			sta T0W
   590 122D A5 31			lda :STACKORIGIN+STACKWIDTH+9
   591 122F 69 00			adc #$00
   592 1231 85 5D			sta T0W+1
   593
   594 				; optimize OK (tools.inc), line = 26
   595
   596 1233 A5 5C			lda T0W
   597 1235 38 E9 28			sub #$28
   598 1238 85 21			sta :STACKORIGIN+9
   599 123A A5 5D			lda T0W+1
   600 123C E9 00			sbc #$00
   601 123E 85 11			sta :bp+1
   602 1240 A4 21			ldy :STACKORIGIN+9
   603 1242 B1 10			lda (:bp),y
   604 1244 C9 20			cmp #$20
   605 1246 D0 06			jne l_00EE
   606 1248 A5 5B			lda AVAILDIR
   607 124A 09 01			ora #$01
   608 124C 85 5B			sta AVAILDIR
   609 124E			l_00EE
   610
   611 				; optimize OK (tools.inc), line = 27
   612
   613 124E A4 5C 84 12 A4 5D + 	mwy T0W :bp2
   614 1256 A0 28			ldy #$28
   615 1258 B1 12			lda (:bp2),y
   616 125A C9 20			cmp #$20
   617 125C D0 06			jne l_0111
   618 125E A5 5B			lda AVAILDIR
   619 1260 09 02			ora #$02
   620 1262 85 5B			sta AVAILDIR
   621 1264			l_0111
   622
   623 				; optimize OK (tools.inc), line = 28
   624
   625 1264 A5 5C			lda T0W
   626 1266 38 E9 01			sub #$01
   627 1269 85 21			sta :STACKORIGIN+9
   628 126B A5 5D			lda T0W+1
   629 126D E9 00			sbc #$00
   630 126F 85 11			sta :bp+1
   631 1271 A4 21			ldy :STACKORIGIN+9
   632 1273 B1 10			lda (:bp),y
   633 1275 C9 20			cmp #$20
   634 1277 D0 06			jne l_0134
   635 1279 A5 5B			lda AVAILDIR
   636 127B 09 04			ora #$04
   637 127D 85 5B			sta AVAILDIR
   638 127F			l_0134
   639
   640 				; optimize OK (tools.inc), line = 29
   641
   642 127F A4 5C 84 12 A4 5D + 	mwy T0W :bp2
   643 1287 A0 01			ldy #$01
   644 1289 B1 12			lda (:bp2),y
   645 128B C9 20			cmp #$20
   646 128D D0 06			jne l_0157
   647 128F A5 5B			lda AVAILDIR
   648 1291 09 08			ora #$08
   649 1293 85 5B			sta AVAILDIR
   650 1295			l_0157
   651 1295			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 1295 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 1296			.local	ANIMATEOBSTACLES				; PROCEDURE
   664
   665 				; optimize FAIL (0, tools.inc), line = 38
   666
   667 1296 EE 09 1D			inc COUNTER
   668
   669 				; optimize OK (tools.inc), line = 39
   670
   671 1299 AD 09 1D			lda COUNTER
   672 129C 29 01			and #$01
   673 129E F0 08			jeq l_0182
   674 12A0 A9 56			lda #$56
   675 12A2 8D 0A 1D			sta OBST
   676 12A5 4C AD 12			jmp l_0190
   677 12A8			l_0182
   678 12A8 A9 5B			lda #$5B
   679 12AA 8D 0A 1D			sta OBST
   680 12AD			l_0190
   681
   682 				; optimize OK (tools.inc), line = 40
   683
   684 12AD AD 0A 1D			lda OBST
   685 12B0 8D FA 0C			sta $0CFA
   686
   687 				; optimize OK (tools.inc), line = 41
   688
   689 12B3 8D 0E 0D			sta $0D0E
   690
   691 				; optimize OK (tools.inc), line = 42
   692
   693 12B6 8D DA 0E			sta $0EDA
   694
   695 				; optimize OK (tools.inc), line = 43
   696
   697 12B9 8D EE 0E			sta $0EEE
   698
   699 				; optimize OK (tools.inc), line = 44
   700
   701 12BC 8D E1 0D			sta $0DE1
   702
   703 				; optimize OK (tools.inc), line = 46
   704
   705 12BF 8D 64 0C			sta $0C64
   706
   707 				; optimize OK (tools.inc), line = 47
   708
   709 12C2 8D 84 0F			sta $0F84
   710
   711 				; ------------------------------------------------------------
   712
   713 = 1D09			COUNTER	= DATAORIGIN+$0035
   714 = 1D0A			OBST	= DATAORIGIN+$0036
   715
   716 = 1D09			@VarData	= COUNTER
   717 = 0002			@VarDataSize	= 2
   718
   719 12C5			@exit
   720 					.ifdef @new
   721 					lda <@VarData
   722 					sta :ztmp
   723 					lda >@VarData
   724 					ldy #@VarDataSize-1
   725 					jmp @FreeMem
   726 					els
   727 12C5 60				rts						; ret
   728 					eif
   729 				.endl
   730
   731 12C6			.local	DRAWTAIL					; PROCEDURE
   732
   733 				; optimize OK (tools.inc), line = 54
   734
   735 12C6 AC C5 1C 84 12 AC + 	mwy PLY :bp2
   736 12D0 A0 04			ldy #PLY.DIR-DATAORIGIN
   737 12D2 B1 12			lda (:bp2),y
   738 12D4 C5 5A			cmp NEWDIR
   739 12D6 D0 14			jne l_01CF
   740
   741 				; optimize OK (tools.inc), line = 55
   742
   743 12D8 A5 5A			lda NEWDIR
   744 12DA 29 0C			and #$0C
   745 12DC F0 07			jeq l_01E6
   746 12DE A9 40			lda #$40
   747 12E0 85 58			sta T0B
   748 12E2 4C E9 12			jmp l_01F4
   749 12E5			l_01E6
   750 12E5 A9 42			lda #$42
   751 12E7 85 58			sta T0B
   752 12E9			l_01F4
   753 12E9 4C 5C 13			jmp l_0201
   754 12EC			l_01CF
   755
   756 				; optimize OK (tools.inc), line = 57
   757
   758 12EC AC C5 1C 84 12 AC + 	mwy PLY :bp2
   759 12F6 A0 04			ldy #PLY.DIR-DATAORIGIN
   760 12F8 B1 12			lda (:bp2),y
   761 12FA 29 0A			and #$0A
   762 12FC F0 0A			jeq l_0227
   763 12FE A5 5A			lda NEWDIR
   764 1300 29 05			and #$05
   765 1302 F0 04			jeq l_0227
   766 1304 A9 7D			lda #$7D
   767 1306 85 58			sta T0B
   768 1308			l_0227
   769
   770 				; optimize OK (tools.inc), line = 58
   771
   772 1308 AC C5 1C 84 12 AC + 	mwy PLY :bp2
   773 1312 A0 04			ldy #PLY.DIR-DATAORIGIN
   774 1314 B1 12			lda (:bp2),y
   775 1316 29 09			and #$09
   776 1318 F0 0A			jeq l_0254
   777 131A A5 5A			lda NEWDIR
   778 131C 29 06			and #$06
   779 131E F0 04			jeq l_0254
   780 1320 A9 6E			lda #$6E
   781 1322 85 58			sta T0B
   782 1324			l_0254
   783
   784 				; optimize OK (tools.inc), line = 59
   785
   786 1324 AC C5 1C 84 12 AC + 	mwy PLY :bp2
   787 132E A0 04			ldy #PLY.DIR-DATAORIGIN
   788 1330 B1 12			lda (:bp2),y
   789 1332 29 06			and #$06
   790 1334 F0 0A			jeq l_0281
   791 1336 A5 5A			lda NEWDIR
   792 1338 29 09			and #$09
   793 133A F0 04			jeq l_0281
   794 133C A9 6D			lda #$6D
   795 133E 85 58			sta T0B
   796 1340			l_0281
   797
   798 				; optimize OK (tools.inc), line = 60
   799
   800 1340 AC C5 1C 84 12 AC + 	mwy PLY :bp2
   801 134A A0 04			ldy #PLY.DIR-DATAORIGIN
   802 134C B1 12			lda (:bp2),y
   803 134E 29 05			and #$05
   804 1350 F0 0A			jeq l_02AE
   805 1352 A5 5A			lda NEWDIR
   806 1354 29 0A			and #$0A
   807 1356 F0 04			jeq l_02AE
   808 1358 A9 70			lda #$70
   809 135A 85 58			sta T0B
   810 135C			l_02AE
   811 135C			l_0201
   812
   813 				; optimize OK (tools.inc), line = 62
   814
   815 135C AC C5 1C 84 12 AC + 	mwy PLY :bp2
   816 1366 A0 00			ldy #PLY.X-DATAORIGIN
   817 1368 B1 12			lda (:bp2),y
   818 136A 8D 05 1D			sta PUTCHAR.X
   819 136D A0 01			ldy #PLY.Y-DATAORIGIN
   820 136F B1 12			lda (:bp2),y
   821 1371 8D 06 1D			sta PUTCHAR.Y
   822 1374 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   823 1376 B1 12			lda (:bp2),y
   824 1378 8D 08 1D			sta PUTCHAR.C
   825 137B A5 58			lda T0B
   826 137D 8D 07 1D			sta PUTCHAR.V
   827 1380 20 71 11			jsr PUTCHAR
   828 1383			@exit
   829 					.ifdef @new
   830 					lda <@VarData
   831 					sta :ztmp
   832 					lda >@VarData
   833 					ldy #@VarDataSize-1
   834 					jmp @FreeMem
   835 					els
   836 1383 60				rts						; ret
   837 					eif
   838 				.endl
   839
   840 1384			.local	INITPLAYERS					; PROCEDURE
   841
   842 				; optimize OK (init.inc), line = 5
   843
   844 1384 AD 0B 1D			lda P
   845 1387 8D C5 1C			sta PLY
   846 138A 85 12			sta :bp2
   847 138C AD 0C 1D			lda P+1
   848 138F 8D C6 1C			sta PLY+1
   849 1392 85 13			sta :bp2+1
   850 				; optimize OK (init.inc), line = 6
   851 1394 A0 05			ldy #PLY.BRAIN-DATAORIGIN
   852 1396 AD 10 1D			lda BRAIN
   853 1399 91 12			sta (:bp2),y
   854 139B A0 00			ldy #PLY.X-DATAORIGIN
   855 139D AD 0D 1D			lda X
   856 13A0 91 12			sta (:bp2),y
   857 13A2 A0 01			ldy #PLY.Y-DATAORIGIN
   858 13A4 AD 0E 1D			lda Y
   859 13A7 91 12			sta (:bp2),y
   860 13A9 A0 04			ldy #PLY.DIR-DATAORIGIN
   861 13AB AD 0F 1D			lda DIR
   862 13AE 91 12			sta (:bp2),y
   863
   864 				; optimize OK (init.inc), line = 7
   865
   866 13B0 A0 02			ldy #PLY.HEAD-DATAORIGIN
   867 13B2 AD 11 1D			lda HEAD
   868 13B5 91 12			sta (:bp2),y
   869 13B7 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   870 13B9 AD 12 1D			lda COLOUR
   871 13BC 91 12			sta (:bp2),y
   872 13BE A0 07			ldy #PLY.ISALIVE-DATAORIGIN
   873 13C0 AD 13 1D			lda ISALIVE
   874 13C3 91 12			sta (:bp2),y
   875
   876 				; optimize OK (init.inc), line = 8
   877
   878 13C5 AD 13 1D			lda ISALIVE
   879 13C8 F0 1D			jeq l_0301
   880
   881 				; optimize FAIL (0, init.inc), line = 9
   882
   883 13CA E6 59			inc ALIVE
   884 13CC AD 12 1D			lda COLOUR
   885 13CF 8D 08 1D			sta PUTCHAR.C
   886 13D2 AD 11 1D			lda HEAD
   887 13D5 8D 07 1D			sta PUTCHAR.V
   888 13D8 AD 0E 1D			lda Y
   889 13DB 8D 06 1D			sta PUTCHAR.Y
   890 13DE AD 0D 1D			lda X
   891 13E1 8D 05 1D			sta PUTCHAR.X
   892 13E4 20 71 11			jsr PUTCHAR
   893 13E7			l_0301
   894
   895 				; ------------------------------------------------------------
   896
   897 = 1D0B			P	= DATAORIGIN+$0037
   898 = 1D0D			X	= DATAORIGIN+$0039
   899 = 1D0E			Y	= DATAORIGIN+$003A
   900 = 1D0F			DIR	= DATAORIGIN+$003B
   901 = 1D10			BRAIN	= DATAORIGIN+$003C
   902 = 1D11			HEAD	= DATAORIGIN+$003D
   903 = 1D12			COLOUR	= DATAORIGIN+$003E
   904 = 1D13			ISALIVE	= DATAORIGIN+$003F
   905
   906 = 1D0B			@VarData	= P
   907 = 0009			@VarDataSize	= 9
   908
   909 13E7			@exit
   910 					.ifdef @new
   911 					lda <@VarData
   912 					sta :ztmp
   913 					lda >@VarData
   914 					ldy #@VarDataSize-1
   915 					jmp @FreeMem
   916 					els
   917 13E7 60				rts						; ret
   918 					eif
   919 				.endl
   920
   921 13E8			.local	INITPLAYFIELD					; PROCEDURE
   922
   923 				; optimize OK (init.inc), line = 17
   924
   925 13E8 A9 1F			lda #$1F
   926 13EA 8D 15 FF			sta BORDERCOLOR
   927 13ED A9 00			lda #$00
   928 13EF 8D 19 FF			sta BGCOLOR
   929
   930 				; optimize OK (init.inc), line = 18
   931
   932 13F2 A9 20			lda #$20
   933 13F4 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   934 13F6 A9 C0			lda #$C0
   935 13F8 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   936 13FA A9 03			lda #$03
   937 13FC 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
   938 13FE A9 00			lda #$00
   939 1400 85 08			sta SYSTEM.FILLCHAR_0056.A
   940 1402 A9 0C			lda #$0C
   941 1404 85 09			sta SYSTEM.FILLCHAR_0056.A+1
   942 1406 20 1F 11			jsr SYSTEM.FILLCHAR_0056
   943
   944 				; optimize OK (init.inc), line = 20
   945
   946 1409 A9 27			lda #$27
   947 140B 85 58			sta T0B
   948
   949 140D			l_032E
   950 				; --- ForToDoCondition
   951
   952 				; optimize OK (init.inc), line = 21
   953
   954 140D A4 58			ldy T0B
   955 140F A9 A0			lda #$A0
   956 1411 99 00 0C			sta $0C00,y
   957
   958 				; optimize OK (init.inc), line = 22
   959
   960 1414 99 C0 0F			sta $0FC0,y
   961
   962 				; optimize OK (init.inc), line = 23
   963
   964 1417 A9 41			lda #$41
   965 1419 99 00 08			sta $0800,y
   966
   967 				; optimize OK (init.inc), line = 24
   968
   969 141C 99 C0 0B			sta $0BC0,y
   970
   971 				; --- ForToDoEpilog
   972 141F C6 58			dec T0B
   973 1421 10 EA			jpl l_032E
   974 1423			l_033C
   975
   976 				; optimize OK (init.inc), line = 27
   977
   978 1423 A9 18			lda #$18
   979 1425 85 58			sta T0B
   980
   981 1427			l_036E
   982 				; --- ForToDoCondition
   983 1427 A5 58			lda T0B
   984 1429 C9 01			cmp #$01
   985 142B 90 3A			jcc l_037C
   986
   987 				; optimize OK (init.inc), line = 28
   988
   989 142D 0A				asl @
   990 142E A8				tay
   991 142F A9 FF			lda #$FF
   992 1431 18 79 0E 10			add adr.MUL40,y
   993 1435 85 12			sta :bp2
   994 1437 A9 0B			lda #$0B
   995 1439 79 0F 10			adc adr.MUL40+1,y
   996 143C 85 13			sta :bp2+1
   997 143E A0 00			ldy #$00
   998 1440 A9 A0			lda #$A0
   999 1442 91 12			sta (:bp2),y
  1000 1444 C8				iny
  1001 1445 91 12			sta (:bp2),y
  1002
  1003 				; optimize OK (init.inc), line = 29
  1004
  1005 1447 A5 58			lda T0B
  1006 1449 0A				asl @
  1007 144A A8				tay
  1008 144B A9 FF			lda #$FF
  1009 144D 18 79 0E 10			add adr.MUL40,y
  1010 1451 85 12			sta :bp2
  1011 1453 A9 07			lda #$07
  1012 1455 79 0F 10			adc adr.MUL40+1,y
  1013 1458 85 13			sta :bp2+1
  1014 145A A0 00			ldy #$00
  1015 145C A9 41			lda #$41
  1016 145E 91 12			sta (:bp2),y
  1017 1460 C8				iny
  1018 1461 91 12			sta (:bp2),y
  1019
  1020 				; --- ForToDoEpilog
  1021 1463 C6 58			dec T0B
  1022 1465 10 C0			jpl l_036E
  1023 1467			l_037C
  1024
  1025 				; optimize OK (init.inc), line = 37
  1026
  1027 1467 A9 01			lda #$01
  1028 1469 8D 13 1D			sta INITPLAYERS.ISALIVE
  1029 146C A9 5F			lda #$5F
  1030 146E 8D 12 1D			sta INITPLAYERS.COLOUR
  1031 1471 A9 51			lda #$51
  1032 1473 8D 11 1D			sta INITPLAYERS.HEAD
  1033 1476 A9 00			lda #$00
  1034 1478 8D 10 1D			sta INITPLAYERS.BRAIN
  1035 147B A9 08			lda #$08
  1036 147D 8D 0F 1D			sta INITPLAYERS.DIR
  1037 1480 A9 0C			lda #$0C
  1038 1482 8D 0E 1D			sta INITPLAYERS.Y
  1039 1485 A9 0A			lda #$0A
  1040 1487 8D 0D 1D			sta INITPLAYERS.X
  1041 148A AD C9 1C			lda PLAYER1
  1042 148D 8D 0B 1D			sta INITPLAYERS.P
  1043 1490 AD CA 1C			lda PLAYER1+1
  1044 1493 8D 0C 1D			sta INITPLAYERS.P+1
  1045 1496 20 84 13			jsr INITPLAYERS
  1046
  1047 				; optimize OK (init.inc), line = 38
  1048
  1049 1499 A9 01			lda #$01
  1050 149B 8D 13 1D			sta INITPLAYERS.ISALIVE
  1051 149E A9 5D			lda #$5D
  1052 14A0 8D 12 1D			sta INITPLAYERS.COLOUR
  1053 14A3 A9 51			lda #$51
  1054 14A5 8D 11 1D			sta INITPLAYERS.HEAD
  1055 14A8 A9 04			lda #$04
  1056 14AA 8D 10 1D			sta INITPLAYERS.BRAIN
  1057 14AD 8D 0F 1D			sta INITPLAYERS.DIR
  1058 14B0 A9 0C			lda #$0C
  1059 14B2 8D 0E 1D			sta INITPLAYERS.Y
  1060 14B5 A9 1E			lda #$1E
  1061 14B7 8D 0D 1D			sta INITPLAYERS.X
  1062 14BA AD CB 1C			lda PLAYER2
  1063 14BD 8D 0B 1D			sta INITPLAYERS.P
  1064 14C0 AD CC 1C			lda PLAYER2+1
  1065 14C3 8D 0C 1D			sta INITPLAYERS.P+1
  1066 14C6 20 84 13			jsr INITPLAYERS
  1067
  1068 				; optimize OK (init.inc), line = 39
  1069
  1070 14C9 A9 01			lda #$01
  1071 14CB 8D 13 1D			sta INITPLAYERS.ISALIVE
  1072 14CE A9 71			lda #$71
  1073 14D0 8D 12 1D			sta INITPLAYERS.COLOUR
  1074 14D3 A9 51			lda #$51
  1075 14D5 8D 11 1D			sta INITPLAYERS.HEAD
  1076 14D8 A9 02			lda #$02
  1077 14DA 8D 10 1D			sta INITPLAYERS.BRAIN
  1078 14DD 8D 0F 1D			sta INITPLAYERS.DIR
  1079 14E0 A9 06			lda #$06
  1080 14E2 8D 0E 1D			sta INITPLAYERS.Y
  1081 14E5 A9 14			lda #$14
  1082 14E7 8D 0D 1D			sta INITPLAYERS.X
  1083 14EA AD CD 1C			lda PLAYER3
  1084 14ED 8D 0B 1D			sta INITPLAYERS.P
  1085 14F0 AD CE 1C			lda PLAYER3+1
  1086 14F3 8D 0C 1D			sta INITPLAYERS.P+1
  1087 14F6 20 84 13			jsr INITPLAYERS
  1088
  1089 				; optimize OK (init.inc), line = 40
  1090
  1091 14F9 A9 01			lda #$01
  1092 14FB 8D 13 1D			sta INITPLAYERS.ISALIVE
  1093 14FE A9 55			lda #$55
  1094 1500 8D 12 1D			sta INITPLAYERS.COLOUR
  1095 1503 A9 51			lda #$51
  1096 1505 8D 11 1D			sta INITPLAYERS.HEAD
  1097 1508 A9 03			lda #$03
  1098 150A 8D 10 1D			sta INITPLAYERS.BRAIN
  1099 150D A9 01			lda #$01
  1100 150F 8D 0F 1D			sta INITPLAYERS.DIR
  1101 1512 A9 12			lda #$12
  1102 1514 8D 0E 1D			sta INITPLAYERS.Y
  1103 1517 A9 14			lda #$14
  1104 1519 8D 0D 1D			sta INITPLAYERS.X
  1105 151C AD CF 1C			lda PLAYER4
  1106 151F 8D 0B 1D			sta INITPLAYERS.P
  1107 1522 AD D0 1C			lda PLAYER4+1
  1108 1525 8D 0C 1D			sta INITPLAYERS.P+1
  1109 1528 20 84 13			jsr INITPLAYERS
  1110
  1111 				; optimize OK (init.inc), line = 42
  1112
  1113 152B A9 35			lda #$35
  1114 152D 8D 08 1D			sta PUTCHAR.C
  1115 1530 A9 56			lda #$56
  1116 1532 8D 07 1D			sta PUTCHAR.V
  1117 1535 A9 06			lda #$06
  1118 1537 8D 06 1D			sta PUTCHAR.Y
  1119 153A A9 0A			lda #$0A
  1120 153C 8D 05 1D			sta PUTCHAR.X
  1121 153F 20 71 11			jsr PUTCHAR
  1122
  1123 				; optimize OK (init.inc), line = 43
  1124
  1125 1542 A9 35			lda #$35
  1126 1544 8D 08 1D			sta PUTCHAR.C
  1127 1547 A9 56			lda #$56
  1128 1549 8D 07 1D			sta PUTCHAR.V
  1129 154C A9 06			lda #$06
  1130 154E 8D 06 1D			sta PUTCHAR.Y
  1131 1551 A9 1E			lda #$1E
  1132 1553 8D 05 1D			sta PUTCHAR.X
  1133 1556 20 71 11			jsr PUTCHAR
  1134
  1135 				; optimize OK (init.inc), line = 44
  1136
  1137 1559 A9 35			lda #$35
  1138 155B 8D 08 1D			sta PUTCHAR.C
  1139 155E A9 56			lda #$56
  1140 1560 8D 07 1D			sta PUTCHAR.V
  1141 1563 A9 12			lda #$12
  1142 1565 8D 06 1D			sta PUTCHAR.Y
  1143 1568 A9 0A			lda #$0A
  1144 156A 8D 05 1D			sta PUTCHAR.X
  1145 156D 20 71 11			jsr PUTCHAR
  1146
  1147 				; optimize OK (init.inc), line = 45
  1148
  1149 1570 A9 35			lda #$35
  1150 1572 8D 08 1D			sta PUTCHAR.C
  1151 1575 A9 56			lda #$56
  1152 1577 8D 07 1D			sta PUTCHAR.V
  1153 157A A9 12			lda #$12
  1154 157C 8D 06 1D			sta PUTCHAR.Y
  1155 157F A9 1E			lda #$1E
  1156 1581 8D 05 1D			sta PUTCHAR.X
  1157 1584 20 71 11			jsr PUTCHAR
  1158
  1159 				; optimize OK (init.inc), line = 46
  1160
  1161 1587 A9 35			lda #$35
  1162 1589 8D 08 1D			sta PUTCHAR.C
  1163 158C A9 56			lda #$56
  1164 158E 8D 07 1D			sta PUTCHAR.V
  1165 1591 A9 0C			lda #$0C
  1166 1593 8D 06 1D			sta PUTCHAR.Y
  1167 1596 A9 01			lda #$01
  1168 1598 8D 05 1D			sta PUTCHAR.X
  1169 159B 20 71 11			jsr PUTCHAR
  1170
  1171 				; optimize OK (init.inc), line = 48
  1172
  1173 159E A9 35			lda #$35
  1174 15A0 8D 08 1D			sta PUTCHAR.C
  1175 15A3 A9 56			lda #$56
  1176 15A5 8D 07 1D			sta PUTCHAR.V
  1177 15A8 A9 02			lda #$02
  1178 15AA 8D 06 1D			sta PUTCHAR.Y
  1179 15AD A9 14			lda #$14
  1180 15AF 8D 05 1D			sta PUTCHAR.X
  1181 15B2 20 71 11			jsr PUTCHAR
  1182
  1183 				; optimize OK (init.inc), line = 49
  1184
  1185 15B5 A9 35			lda #$35
  1186 15B7 8D 08 1D			sta PUTCHAR.C
  1187 15BA A9 56			lda #$56
  1188 15BC 8D 07 1D			sta PUTCHAR.V
  1189 15BF A9 16			lda #$16
  1190 15C1 8D 06 1D			sta PUTCHAR.Y
  1191 15C4 A9 14			lda #$14
  1192 15C6 8D 05 1D			sta PUTCHAR.X
  1193 15C9 20 71 11			jsr PUTCHAR
  1194
  1195 				; optimize FAIL ('SHOWSCORE', init.inc), line = 51
  1196
  1197 15CC 20 9C 11			jsr SHOWSCORE
  1198
  1199 				; ------------------------------------------------------------
  1200
  1201 = 0000			@FORTMP_032B	= $00
  1202 = 0001			@FORTMP_036B	= $01
  1203 15CF			@exit
  1204 					.ifdef @new
  1205 					lda <@VarData
  1206 					sta :ztmp
  1207 					lda >@VarData
  1208 					ldy #@VarDataSize-1
  1209 					jmp @FreeMem
  1210 					els
  1211 15CF 60				rts						; ret
  1212 					eif
  1213 				.endl
  1214
  1215 15D0			.local	AISTRAIGHT					; PROCEDURE
  1216
  1217 				; optimize OK (ai.inc), line = 5
  1218
  1219 15D0 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  1220 15DA A0 04			ldy #PLY.DIR-DATAORIGIN
  1221 15DC B1 12			lda (:bp2),y
  1222 15DE 25 5B			and AVAILDIR
  1223 15E0 F0 07			jeq l_03FF
  1224 15E2 B1 12			lda (:bp2),y
  1225 15E4 85 5A			sta NEWDIR
  1226 15E6 4C 54 16			jmp l_040F
  1227 15E9			l_03FF
  1228
  1229 				; optimize OK (ai.inc), line = 7
  1230
  1231 15E9 A5 5B			lda AVAILDIR
  1232 15EB C9 03			cmp #$03
  1233 15ED D0 10			jne l_0421
  1234 15EF A9 02			lda #$02
  1235 15F1 20 40 11			jsr SYSTEM.RANDOM_006C
  1236 15F4 B4 18			ldy :STACKORIGIN,x
  1237 15F6 B9 40 10			lda adr.DIRECTION,y
  1238 15F9 85 5A			sta NEWDIR
  1239 15FB CA				dex
  1240 15FC 4C 17 16			jmp l_0433
  1241 15FF			l_0421
  1242
  1243 				; optimize OK (ai.inc), line = 9
  1244
  1245 15FF A5 5B			lda AVAILDIR
  1246 1601 8D 14 1D			sta @CASETMP_0003
  1247 1604 C9 01			cmp #$01
  1248 1606 D0 07			jne l_043E
  1249 1608			@
  1250
  1251 				; optimize OK (ai.inc), line = 10
  1252
  1253 1608 A9 01			lda #$01
  1254 160A 85 5A			sta NEWDIR
  1255
  1256 160C 4C 17 16			jmp a_0003
  1257 160F			l_043E
  1258 160F C9 02			cmp #$02
  1259 1611 D0 04			jne l_044B
  1260 1613			@
  1261
  1262 				; optimize OK (ai.inc), line = 11
  1263
  1264 1613 A9 02			lda #$02
  1265 1615 85 5A			sta NEWDIR
  1266
  1267 1617			l_044B
  1268 1617			a_0003
  1269 1617			l_0433
  1270
  1271 				; optimize OK (ai.inc), line = 14
  1272
  1273 1617 A5 5B			lda AVAILDIR
  1274 1619 C9 0C			cmp #$0C
  1275 161B D0 1F			jne l_0467
  1276 161D A9 02			lda #$02
  1277 161F 20 40 11			jsr SYSTEM.RANDOM_006C
  1278 1622 E8				inx
  1279 1623 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1280 1627 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1281 162B 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1282 162D 20 44 10			jsr addAX_CX
  1283 1630 CA				dex
  1284 1631 B4 18			ldy :STACKORIGIN,x
  1285 1633 B9 40 10			lda adr.DIRECTION,y
  1286 1636 85 5A			sta NEWDIR
  1287 1638 CA				dex
  1288 1639 4C 54 16			jmp l_047D
  1289 163C			l_0467
  1290
  1291 				; optimize OK (ai.inc), line = 16
  1292
  1293 163C A5 5B			lda AVAILDIR
  1294 163E 8D 15 1D			sta @CASETMP_0004
  1295 1641 C9 04			cmp #$04
  1296 1643 D0 07			jne l_0488
  1297 1645			@
  1298
  1299 				; optimize OK (ai.inc), line = 17
  1300
  1301 1645 A9 04			lda #$04
  1302 1647 85 5A			sta NEWDIR
  1303
  1304 1649 4C 54 16			jmp a_0004
  1305 164C			l_0488
  1306 164C C9 08			cmp #$08
  1307 164E D0 04			jne l_0495
  1308 1650			@
  1309
  1310 				; optimize OK (ai.inc), line = 18
  1311
  1312 1650 A9 08			lda #$08
  1313 1652 85 5A			sta NEWDIR
  1314
  1315 1654			l_0495
  1316 1654			a_0004
  1317 1654			l_047D
  1318 1654			l_040F
  1319
  1320 				; ------------------------------------------------------------
  1321
  1322 = 1D14			@CASETMP_0003	= DATAORIGIN+$0040
  1323 = 1D15			@CASETMP_0004	= DATAORIGIN+$0041
  1324
  1325 = 1D14			@VarData	= @CASETMP_0003
  1326 = 0002			@VarDataSize	= 2
  1327
  1328 1654			@exit
  1329 					.ifdef @new
  1330 					lda <@VarData
  1331 					sta :ztmp
  1332 					lda >@VarData
  1333 					ldy #@VarDataSize-1
  1334 					jmp @FreeMem
  1335 					els
  1336 1654 60				rts						; ret
  1337 					eif
  1338 				.endl
  1339
  1340 1655			.local	AIBULLY						; PROCEDURE
  1341
  1342 				; optimize OK (ai.inc), line = 28
  1343
  1344 1655 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  1345 165F A0 04			ldy #PLY.DIR-DATAORIGIN
  1346 1661 B1 12			lda (:bp2),y
  1347 1663 85 58			sta T0B
  1348
  1349 				; optimize OK (ai.inc), line = 30
  1350
  1351 1665 AD EC 1C			lda PLAYER1.ISALIVE
  1352 1668 F0 0F			jeq l_04B5
  1353 166A AD C9 1C			lda PLAYER1
  1354 166D 8D C7 1C			sta TMPPLY
  1355 1670 AD CA 1C			lda PLAYER1+1
  1356 1673 8D C8 1C			sta TMPPLY+1
  1357 1676 4C 85 16			jmp l_04C4
  1358 1679			l_04B5
  1359 1679 AD CB 1C			lda PLAYER2
  1360 167C 8D C7 1C			sta TMPPLY
  1361 167F AD CC 1C			lda PLAYER2+1
  1362 1682 8D C8 1C			sta TMPPLY+1
  1363 1685			l_04C4
  1364
  1365 				; optimize OK (ai.inc), line = 32
  1366
  1367 1685 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  1368 168F A0 01			ldy #PLY.Y-DATAORIGIN
  1369 1691 B1 12			lda (:bp2),y
  1370 1693 85 21			sta :STACKORIGIN+9
  1371 1695 AC C7 1C 84 12 AC + 	mwy TMPPLY :bp2
  1372 169F A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1373 16A1 B1 12			lda (:bp2),y
  1374 16A3 C5 21			cmp :STACKORIGIN+9
  1375 16A5 B0 07			jcs l_04DD
  1376 16A7 A9 01			lda #$01
  1377 16A9 85 58			sta T0B
  1378 16AB 4C B2 16			jmp l_04EB
  1379 16AE			l_04DD
  1380 16AE A9 02			lda #$02
  1381 16B0 85 58			sta T0B
  1382 16B2			l_04EB
  1383
  1384 				; optimize OK (ai.inc), line = 33
  1385
  1386 16B2 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  1387 16BC A0 01			ldy #PLY.Y-DATAORIGIN
  1388 16BE B1 12			lda (:bp2),y
  1389 16C0 85 21			sta :STACKORIGIN+9
  1390 16C2 AC C7 1C 84 12 AC + 	mwy TMPPLY :bp2
  1391 16CC A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1392 16CE B1 12			lda (:bp2),y
  1393 16D0 C5 21			cmp :STACKORIGIN+9
  1394 16D2 F0 06			jeq l_0515x
  1395 16D4 A5 5B			lda AVAILDIR
  1396 16D6 25 58			and T0B
  1397 16D8 D0 2D			jne l_0515
  1398 16DA			l_0515x
  1399
  1400 				; optimize OK (ai.inc), line = 34
  1401
  1402 16DA AC C5 1C 84 12 AC + 	mwy PLY :bp2
  1403 16E4 A0 00			ldy #PLY.X-DATAORIGIN
  1404 16E6 B1 12			lda (:bp2),y
  1405 16E8 85 21			sta :STACKORIGIN+9
  1406 16EA AC C7 1C 84 12 AC + 	mwy TMPPLY :bp2
  1407 16F4 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1408 16F6 B1 12			lda (:bp2),y
  1409 16F8 C5 21			cmp :STACKORIGIN+9
  1410 16FA B0 07			jcs l_052A
  1411 16FC A9 04			lda #$04
  1412 16FE 85 58			sta T0B
  1413 1700 4C 07 17			jmp l_0538
  1414 1703			l_052A
  1415 1703 A9 08			lda #$08
  1416 1705 85 58			sta T0B
  1417 1707			l_0538
  1418 1707			l_0515
  1419
  1420 				; optimize OK (ai.inc), line = 36
  1421
  1422 1707 A5 5B			lda AVAILDIR
  1423 1709 25 58			and T0B
  1424 170B F0 07			jeq l_0556
  1425 170D A5 58			lda T0B
  1426 170F 85 5A			sta NEWDIR
  1427 1711 4C 17 17			jmp l_0566
  1428 1714			l_0556
  1429
  1430 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 37
  1431
  1432 1714 20 D0 15			jsr AISTRAIGHT
  1433 1717			l_0566
  1434 1717			@exit
  1435 					.ifdef @new
  1436 					lda <@VarData
  1437 					sta :ztmp
  1438 					lda >@VarData
  1439 					ldy #@VarDataSize-1
  1440 					jmp @FreeMem
  1441 					els
  1442 1717 60				rts						; ret
  1443 					eif
  1444 				.endl
  1445
  1446 1718			.local	AISAPER						; PROCEDURE
  1447
  1448 				; optimize OK (ai.inc), line = 47
  1449
  1450 1718 A9 00			lda #$00
  1451 171A 8D 17 1D			sta L
  1452 171D 8D 18 1D			sta R
  1453 1720 8D 19 1D			sta U
  1454 1723 8D 1A 1D			sta D
  1455
  1456 				; optimize OK (ai.inc), line = 48
  1457
  1458 1726 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  1459 1730 A0 01			ldy #PLY.Y-DATAORIGIN
  1460 1732 B1 12			lda (:bp2),y
  1461 1734 0A				asl @
  1462 1735 A8				tay
  1463 1736 A9 00			lda #$00
  1464 1738 18 79 0E 10			add adr.MUL40,y
  1465 173C 85 21			sta :STACKORIGIN+9
  1466 173E A9 0C			lda #$0C
  1467 1740 79 0F 10			adc adr.MUL40+1,y
  1468 1743 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1469 1745 A0 00			ldy #PLY.X-DATAORIGIN
  1470 1747 A5 21			lda :STACKORIGIN+9
  1471 1749 18 71 12			add (:bp2),y
  1472 174C 85 5C			sta T0W
  1473 174E A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1474 1750 69 00			adc #$00
  1475 1752 85 5D			sta T0W+1
  1476
  1477 				; optimize OK (ai.inc), line = 50
  1478
  1479 1754 A5 5B			lda AVAILDIR
  1480 1756 29 01			and #$01
  1481 1758 F0 78			jeq l_05A3
  1482
  1483 				; optimize OK (ai.inc), line = 51
  1484
  1485 175A A9 05			lda #$05
  1486 175C 8D 16 1D			sta I0B
  1487
  1488 175F			l_05AD
  1489 				; --- ForToDoCondition
  1490 175F AD 16 1D			lda I0B
  1491 1762 C9 01			cmp #$01
  1492 1764 90 6C			jcc l_05BB
  1493
  1494 				; optimize OK (ai.inc), line = 52
  1495
  1496 1766 0A				asl @
  1497 1767 A8				tay
  1498 1768 A5 5C			lda T0W
  1499 176A 38 F9 0E 10			sub adr.MUL40,y
  1500 176E 85 21			sta :STACKORIGIN+9
  1501 1770 A5 5D			lda T0W+1
  1502 1772 F9 0F 10			sbc adr.MUL40+1,y
  1503 1775 85 11			sta :bp+1
  1504 1777 A4 21			ldy :STACKORIGIN+9
  1505 1779 B1 10			lda (:bp),y
  1506 177B C9 20			cmp #$20
  1507 177D D0 03			jne l_05D5
  1508 177F EE 19 1D			inc U
  1509 1782			l_05D5
  1510
  1511 				; optimize OK (ai.inc), line = 53
  1512
  1513 1782 AD 16 1D			lda I0B
  1514 1785 0A				asl @
  1515 1786 A8				tay
  1516 1787 A5 5C			lda T0W
  1517 1789 38 F9 0E 10			sub adr.MUL40,y
  1518 178D 85 21			sta :STACKORIGIN+9
  1519 178F A5 5D			lda T0W+1
  1520 1791 F9 0F 10			sbc adr.MUL40+1,y
  1521 1794 85 11			sta :bp+1
  1522 1796 A5 21			lda :STACKORIGIN+9
  1523 1798 18 69 01			add #$01
  1524 179B A8				tay
  1525 179C 90 02			scc
  1526 179E E6 11			inc :bp+1
  1527 17A0 B1 10			lda (:bp),y
  1528 17A2 C9 20			cmp #$20
  1529 17A4 D0 03			jne l_05FA
  1530 17A6 EE 19 1D			inc U
  1531 17A9			l_05FA
  1532
  1533 				; optimize OK (ai.inc), line = 54
  1534
  1535 17A9 AD 16 1D			lda I0B
  1536 17AC 0A				asl @
  1537 17AD A8				tay
  1538 17AE A5 5C			lda T0W
  1539 17B0 38 F9 0E 10			sub adr.MUL40,y
  1540 17B4 85 21			sta :STACKORIGIN+9
  1541 17B6 A5 5D			lda T0W+1
  1542 17B8 F9 0F 10			sbc adr.MUL40+1,y
  1543 17BB 85 11			sta :bp+1
  1544 17BD A4 21			ldy :STACKORIGIN+9
  1545 17BF 88				dey
  1546 17C0 B0 02			scs
  1547 17C2 C6 11			dec :bp+1
  1548 17C4 B1 10			lda (:bp),y
  1549 17C6 C9 20			cmp #$20
  1550 17C8 D0 03			jne l_061F
  1551 17CA EE 19 1D			inc U
  1552 17CD			l_061F
  1553
  1554 				; --- ForToDoEpilog
  1555 17CD CE 16 1D			dec I0B
  1556 17D0 10 8D			jpl l_05AD
  1557 17D2			l_05BB
  1558 17D2			l_05A3
  1559
  1560 				; optimize OK (ai.inc), line = 58
  1561
  1562 17D2 A5 5B			lda AVAILDIR
  1563 17D4 29 02			and #$02
  1564 17D6 F0 78			jeq l_0643
  1565
  1566 				; optimize OK (ai.inc), line = 59
  1567
  1568 17D8 A9 05			lda #$05
  1569 17DA 8D 16 1D			sta I0B
  1570
  1571 17DD			l_064D
  1572 				; --- ForToDoCondition
  1573 17DD AD 16 1D			lda I0B
  1574 17E0 C9 01			cmp #$01
  1575 17E2 90 6C			jcc l_065B
  1576
  1577 				; optimize OK (ai.inc), line = 60
  1578
  1579 17E4 0A				asl @
  1580 17E5 A8				tay
  1581 17E6 A5 5C			lda T0W
  1582 17E8 18 79 0E 10			add adr.MUL40,y
  1583 17EC 85 21			sta :STACKORIGIN+9
  1584 17EE A5 5D			lda T0W+1
  1585 17F0 79 0F 10			adc adr.MUL40+1,y
  1586 17F3 85 11			sta :bp+1
  1587 17F5 A4 21			ldy :STACKORIGIN+9
  1588 17F7 B1 10			lda (:bp),y
  1589 17F9 C9 20			cmp #$20
  1590 17FB D0 03			jne l_0675
  1591 17FD EE 1A 1D			inc D
  1592 1800			l_0675
  1593
  1594 				; optimize OK (ai.inc), line = 61
  1595
  1596 1800 AD 16 1D			lda I0B
  1597 1803 0A				asl @
  1598 1804 A8				tay
  1599 1805 A5 5C			lda T0W
  1600 1807 18 79 0E 10			add adr.MUL40,y
  1601 180B 85 21			sta :STACKORIGIN+9
  1602 180D A5 5D			lda T0W+1
  1603 180F 79 0F 10			adc adr.MUL40+1,y
  1604 1812 85 11			sta :bp+1
  1605 1814 A5 21			lda :STACKORIGIN+9
  1606 1816 18 69 01			add #$01
  1607 1819 A8				tay
  1608 181A 90 02			scc
  1609 181C E6 11			inc :bp+1
  1610 181E B1 10			lda (:bp),y
  1611 1820 C9 20			cmp #$20
  1612 1822 D0 03			jne l_069A
  1613 1824 EE 1A 1D			inc D
  1614 1827			l_069A
  1615
  1616 				; optimize OK (ai.inc), line = 62
  1617
  1618 1827 AD 16 1D			lda I0B
  1619 182A 0A				asl @
  1620 182B A8				tay
  1621 182C A5 5C			lda T0W
  1622 182E 18 79 0E 10			add adr.MUL40,y
  1623 1832 85 21			sta :STACKORIGIN+9
  1624 1834 A5 5D			lda T0W+1
  1625 1836 79 0F 10			adc adr.MUL40+1,y
  1626 1839 85 11			sta :bp+1
  1627 183B A4 21			ldy :STACKORIGIN+9
  1628 183D 88				dey
  1629 183E B0 02			scs
  1630 1840 C6 11			dec :bp+1
  1631 1842 B1 10			lda (:bp),y
  1632 1844 C9 20			cmp #$20
  1633 1846 D0 03			jne l_06BF
  1634 1848 EE 1A 1D			inc D
  1635 184B			l_06BF
  1636
  1637 				; --- ForToDoEpilog
  1638 184B CE 16 1D			dec I0B
  1639 184E 10 8D			jpl l_064D
  1640 1850			l_065B
  1641 1850			l_0643
  1642
  1643 				; optimize OK (ai.inc), line = 66
  1644
  1645 1850 A5 5B			lda AVAILDIR
  1646 1852 29 04			and #$04
  1647 1854 F0 65			jeq l_06E3
  1648
  1649 				; optimize OK (ai.inc), line = 67
  1650
  1651 1856 A9 05			lda #$05
  1652 1858 8D 16 1D			sta I0B
  1653
  1654 185B			l_06ED
  1655 				; --- ForToDoCondition
  1656 185B AD 16 1D			lda I0B
  1657 185E C9 01			cmp #$01
  1658 1860 90 59			jcc l_06FB
  1659
  1660 				; optimize OK (ai.inc), line = 68
  1661
  1662 1862 A5 5C			lda T0W
  1663 1864 38 ED 16 1D			sub I0B
  1664 1868 A8				tay
  1665 1869 A5 5D			lda T0W+1
  1666 186B E9 00			sbc #$00
  1667 186D 85 11			sta :bp+1
  1668 186F B1 10			lda (:bp),y
  1669 1871 C9 20			cmp #$20
  1670 1873 D0 03			jne l_0713
  1671 1875 EE 17 1D			inc L
  1672 1878			l_0713
  1673
  1674 				; optimize OK (ai.inc), line = 69
  1675
  1676 1878 A5 5C			lda T0W
  1677 187A 38 ED 16 1D			sub I0B
  1678 187E A8				tay
  1679 187F A5 5D			lda T0W+1
  1680 1881 E9 00			sbc #$00
  1681 1883 85 11			sta :bp+1
  1682 1885 98				tya
  1683 1886 18 69 28			add #$28
  1684 1889 A8				tay
  1685 188A 90 02			scc
  1686 188C E6 11			inc :bp+1
  1687 188E B1 10			lda (:bp),y
  1688 1890 C9 20			cmp #$20
  1689 1892 D0 03			jne l_0736
  1690 1894 EE 17 1D			inc L
  1691 1897			l_0736
  1692
  1693 				; optimize OK (ai.inc), line = 70
  1694
  1695 1897 A5 5C			lda T0W
  1696 1899 38 ED 16 1D			sub I0B
  1697 189D A8				tay
  1698 189E A5 5D			lda T0W+1
  1699 18A0 E9 00			sbc #$00
  1700 18A2 85 11			sta :bp+1
  1701 18A4 98				tya
  1702 18A5 38 E9 28			sub #$28
  1703 18A8 A8				tay
  1704 18A9 B0 02			scs
  1705 18AB C6 11			dec :bp+1
  1706 18AD B1 10			lda (:bp),y
  1707 18AF C9 20			cmp #$20
  1708 18B1 D0 03			jne l_0759
  1709 18B3 EE 17 1D			inc L
  1710 18B6			l_0759
  1711
  1712 				; --- ForToDoEpilog
  1713 18B6 CE 16 1D			dec I0B
  1714 18B9 10 A0			jpl l_06ED
  1715 18BB			l_06FB
  1716 18BB			l_06E3
  1717
  1718 				; optimize OK (ai.inc), line = 74
  1719
  1720 18BB A5 5B			lda AVAILDIR
  1721 18BD 29 08			and #$08
  1722 18BF F0 63			jeq l_077D
  1723
  1724 				; optimize OK (ai.inc), line = 75
  1725
  1726 18C1 A9 05			lda #$05
  1727 18C3 8D 16 1D			sta I0B
  1728
  1729 18C6			l_0787
  1730 				; --- ForToDoCondition
  1731 18C6 AD 16 1D			lda I0B
  1732 18C9 C9 01			cmp #$01
  1733 18CB 90 57			jcc l_0795
  1734
  1735 				; optimize OK (ai.inc), line = 76
  1736
  1737 18CD A4 5C 84 12 A4 5D + 	mwy T0W :bp2
  1738 18D5 AC 16 1D			ldy I0B
  1739 18D8 B1 12			lda (:bp2),y
  1740 18DA C9 20			cmp #$20
  1741 18DC D0 03			jne l_07AD
  1742 18DE EE 18 1D			inc R
  1743 18E1			l_07AD
  1744
  1745 				; optimize OK (ai.inc), line = 77
  1746
  1747 18E1 A5 5C			lda T0W
  1748 18E3 18 6D 16 1D			add I0B
  1749 18E7 A8				tay
  1750 18E8 A5 5D			lda T0W+1
  1751 18EA 69 00			adc #$00
  1752 18EC 85 11			sta :bp+1
  1753 18EE 98				tya
  1754 18EF 18 69 28			add #$28
  1755 18F2 A8				tay
  1756 18F3 90 02			scc
  1757 18F5 E6 11			inc :bp+1
  1758 18F7 B1 10			lda (:bp),y
  1759 18F9 C9 20			cmp #$20
  1760 18FB D0 03			jne l_07D0
  1761 18FD EE 18 1D			inc R
  1762 1900			l_07D0
  1763
  1764 				; optimize OK (ai.inc), line = 78
  1765
  1766 1900 A5 5C			lda T0W
  1767 1902 18 6D 16 1D			add I0B
  1768 1906 A8				tay
  1769 1907 A5 5D			lda T0W+1
  1770 1909 69 00			adc #$00
  1771 190B 85 11			sta :bp+1
  1772 190D 98				tya
  1773 190E 38 E9 28			sub #$28
  1774 1911 A8				tay
  1775 1912 B0 02			scs
  1776 1914 C6 11			dec :bp+1
  1777 1916 B1 10			lda (:bp),y
  1778 1918 C9 20			cmp #$20
  1779 191A D0 03			jne l_07F3
  1780 191C EE 18 1D			inc R
  1781 191F			l_07F3
  1782
  1783 				; --- ForToDoEpilog
  1784 191F CE 16 1D			dec I0B
  1785 1922 10 A2			jpl l_0787
  1786 1924			l_0795
  1787 1924			l_077D
  1788
  1789 				; optimize OK (ai.inc), line = 82
  1790
  1791 1924 AD 1A 1D			lda D
  1792 1927 85 58			sta T0B
  1793
  1794 				; optimize OK (ai.inc), line = 83
  1795
  1796 1929 CD 19 1D			cmp U
  1797 192C B0 05			jcs l_081B
  1798 192E AD 19 1D			lda U
  1799 1931 85 58			sta T0B
  1800 1933			l_081B
  1801
  1802 				; optimize OK (ai.inc), line = 84
  1803
  1804 1933 A5 58			lda T0B
  1805 1935 CD 17 1D			cmp L
  1806 1938 B0 05			jcs l_0838
  1807 193A AD 17 1D			lda L
  1808 193D 85 58			sta T0B
  1809 193F			l_0838
  1810
  1811 				; optimize OK (ai.inc), line = 85
  1812
  1813 193F A5 58			lda T0B
  1814 1941 CD 18 1D			cmp R
  1815 1944 B0 05			jcs l_0855
  1816 1946 AD 18 1D			lda R
  1817 1949 85 58			sta T0B
  1818 194B			l_0855
  1819
  1820 				; optimize OK (ai.inc), line = 87
  1821
  1822 194B A5 58			lda T0B
  1823 194D CD 1A 1D			cmp D
  1824 1950 D0 04			jne l_0872
  1825 1952 A9 02			lda #$02
  1826 1954 85 58			sta T0B
  1827 1956			l_0872
  1828
  1829 				; optimize OK (ai.inc), line = 88
  1830
  1831 1956 A5 58			lda T0B
  1832 1958 CD 19 1D			cmp U
  1833 195B D0 04			jne l_088D
  1834 195D A9 01			lda #$01
  1835 195F 85 58			sta T0B
  1836 1961			l_088D
  1837
  1838 				; optimize OK (ai.inc), line = 89
  1839
  1840 1961 A5 58			lda T0B
  1841 1963 CD 17 1D			cmp L
  1842 1966 D0 04			jne l_08A8
  1843 1968 A9 04			lda #$04
  1844 196A 85 58			sta T0B
  1845 196C			l_08A8
  1846
  1847 				; optimize OK (ai.inc), line = 90
  1848
  1849 196C A5 58			lda T0B
  1850 196E CD 18 1D			cmp R
  1851 1971 D0 04			jne l_08C3
  1852 1973 A9 08			lda #$08
  1853 1975 85 58			sta T0B
  1854 1977			l_08C3
  1855
  1856 				; optimize OK (ai.inc), line = 92
  1857
  1858 1977 A5 5B			lda AVAILDIR
  1859 1979 25 58			and T0B
  1860 197B F0 07			jeq l_08E2
  1861 197D A5 58			lda T0B
  1862 197F 85 5A			sta NEWDIR
  1863 1981 4C 87 19			jmp l_08F2
  1864 1984			l_08E2
  1865
  1866 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 93
  1867
  1868 1984 20 D0 15			jsr AISTRAIGHT
  1869 1987			l_08F2
  1870
  1871 				; ------------------------------------------------------------
  1872
  1873 = 1D16			I0B	= DATAORIGIN+$0042
  1874 = 1D17			L	= DATAORIGIN+$0043
  1875 = 1D18			R	= DATAORIGIN+$0044
  1876 = 1D19			U	= DATAORIGIN+$0045
  1877 = 1D1A			D	= DATAORIGIN+$0046
  1878 = 0001			@FORTMP_05AA	= $01
  1879 = 0001			@FORTMP_064A	= $01
  1880 = 0001			@FORTMP_06EA	= $01
  1881 = 0001			@FORTMP_0784	= $01
  1882
  1883 = 1D16			@VarData	= I0B
  1884 = 0005			@VarDataSize	= 5
  1885
  1886 1987			@exit
  1887 					.ifdef @new
  1888 					lda <@VarData
  1889 					sta :ztmp
  1890 					lda >@VarData
  1891 					ldy #@VarDataSize-1
  1892 					jmp @FreeMem
  1893 					els
  1894 1987 60				rts						; ret
  1895 					eif
  1896 				.endl
  1897
  1898 1988			.local	AIMIRROR					; PROCEDURE
  1899
  1900 				; optimize OK (ai.inc), line = 100
  1901
  1902 1988 AD EC 1C			lda PLAYER1.ISALIVE
  1903 198B F0 42			jeq l_0903
  1904
  1905 				; optimize OK (ai.inc), line = 101
  1906
  1907 198D AD E9 1C			lda PLAYER1.DIR
  1908 1990 8D 1B 1D			sta @CASETMP_0005
  1909 1993 C9 01			cmp #$01
  1910 1995 D0 07			jne l_090F
  1911 1997			@
  1912
  1913 				; optimize OK (ai.inc), line = 102
  1914
  1915 1997 A9 02			lda #$02
  1916 1999 85 58			sta T0B
  1917
  1918 199B 4C BC 19			jmp a_0005
  1919 199E			l_090F
  1920 199E C9 02			cmp #$02
  1921 19A0 D0 07			jne l_091C
  1922 19A2			@
  1923
  1924 				; optimize OK (ai.inc), line = 103
  1925
  1926 19A2 A9 01			lda #$01
  1927 19A4 85 58			sta T0B
  1928
  1929 19A6 4C BC 19			jmp a_0005
  1930 19A9			l_091C
  1931 19A9 C9 04			cmp #$04
  1932 19AB D0 07			jne l_0929
  1933 19AD			@
  1934
  1935 				; optimize OK (ai.inc), line = 104
  1936
  1937 19AD A9 08			lda #$08
  1938 19AF 85 58			sta T0B
  1939
  1940 19B1 4C BC 19			jmp a_0005
  1941 19B4			l_0929
  1942 19B4 C9 08			cmp #$08
  1943 19B6 D0 04			jne l_0936
  1944 19B8			@
  1945
  1946 				; optimize OK (ai.inc), line = 105
  1947
  1948 19B8 A9 04			lda #$04
  1949 19BA 85 58			sta T0B
  1950
  1951 19BC			l_0936
  1952 19BC			a_0005
  1953
  1954 				; optimize OK (ai.inc), line = 108
  1955
  1956 19BC A5 5B			lda AVAILDIR
  1957 19BE 25 58			and T0B
  1958 19C0 F0 07			jeq l_095A
  1959 19C2 A5 58			lda T0B
  1960 19C4 85 5A			sta NEWDIR
  1961 19C6 4C CC 19			jmp l_096A
  1962 19C9			l_095A
  1963
  1964 				; optimize FAIL ('AISAPER', ai.inc), line = 109
  1965
  1966 19C9 20 18 17			jsr AISAPER
  1967 19CC			l_096A
  1968 19CC 4C D2 19			jmp l_0974
  1969 19CF			l_0903
  1970
  1971 				; optimize FAIL ('AISAPER', ai.inc), line = 110
  1972
  1973 19CF 20 18 17			jsr AISAPER
  1974 19D2			l_0974
  1975
  1976 				; ------------------------------------------------------------
  1977
  1978 = 1D1B			@CASETMP_0005	= DATAORIGIN+$0047
  1979
  1980 = 1D1B			@VarData	= @CASETMP_0005
  1981 = 0001			@VarDataSize	= 1
  1982
  1983 19D2			@exit
  1984 					.ifdef @new
  1985 					lda <@VarData
  1986 					sta :ztmp
  1987 					lda >@VarData
  1988 					ldy #@VarDataSize-1
  1989 					jmp @FreeMem
  1990 					els
  1991 19D2 60				rts						; ret
  1992 					eif
  1993 				.endl
  1994
  1995 19D3			.local	HUMAN						; PROCEDURE
  1996
  1997 				; optimize OK (main.pas), line = 14
  1998
  1999 19D3 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2000 19DD A0 04			ldy #PLY.DIR-DATAORIGIN
  2001 19DF B1 12			lda (:bp2),y
  2002 19E1 85 5A			sta NEWDIR
  2003
  2004 				; optimize OK (main.pas), line = 15
  2005
  2006 19E3 A9 02			lda #$02
  2007 19E5 8D 08 FF			sta JOY
  2008 19E8 A9 FF			lda #$FF
  2009 19EA 8D 30 FD			sta KEYSCAN
  2010 19ED AD 08 FF			lda JOY
  2011 19F0 49 FF			eor #$FF
  2012 19F2 85 58			sta T0B
  2013
  2014 				; optimize OK (main.pas), line = 17
  2015
  2016 19F4 8D 1C 1D			sta @CASETMP_0006
  2017 19F7 C9 01			cmp #$01
  2018 19F9 D0 19			jne l_099C
  2019 19FB			@
  2020
  2021 				; optimize OK (main.pas), line = 18
  2022
  2023 19FB AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2024 1A05 A0 04			ldy #PLY.DIR-DATAORIGIN
  2025 1A07 B1 12			lda (:bp2),y
  2026 1A09 C9 02			cmp #$02
  2027 1A0B F0 04			jeq l_09AE
  2028 1A0D A9 01			lda #$01
  2029 1A0F 85 5A			sta NEWDIR
  2030 1A11			l_09AE
  2031
  2032 1A11 4C 68 1A			jmp a_0006
  2033 1A14			l_099C
  2034 1A14 C9 02			cmp #$02
  2035 1A16 D0 19			jne l_09BE
  2036 1A18			@
  2037
  2038 				; optimize OK (main.pas), line = 19
  2039
  2040 1A18 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2041 1A22 A0 04			ldy #PLY.DIR-DATAORIGIN
  2042 1A24 B1 12			lda (:bp2),y
  2043 1A26 C9 01			cmp #$01
  2044 1A28 F0 04			jeq l_09D0
  2045 1A2A A9 02			lda #$02
  2046 1A2C 85 5A			sta NEWDIR
  2047 1A2E			l_09D0
  2048
  2049 1A2E 4C 68 1A			jmp a_0006
  2050 1A31			l_09BE
  2051 1A31 C9 04			cmp #$04
  2052 1A33 D0 19			jne l_09E0
  2053 1A35			@
  2054
  2055 				; optimize OK (main.pas), line = 20
  2056
  2057 1A35 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2058 1A3F A0 04			ldy #PLY.DIR-DATAORIGIN
  2059 1A41 B1 12			lda (:bp2),y
  2060 1A43 C9 08			cmp #$08
  2061 1A45 F0 04			jeq l_09F2
  2062 1A47 A9 04			lda #$04
  2063 1A49 85 5A			sta NEWDIR
  2064 1A4B			l_09F2
  2065
  2066 1A4B 4C 68 1A			jmp a_0006
  2067 1A4E			l_09E0
  2068 1A4E C9 08			cmp #$08
  2069 1A50 D0 16			jne l_0A02
  2070 1A52			@
  2071
  2072 				; optimize OK (main.pas), line = 21
  2073
  2074 1A52 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2075 1A5C A0 04			ldy #PLY.DIR-DATAORIGIN
  2076 1A5E B1 12			lda (:bp2),y
  2077 1A60 C9 04			cmp #$04
  2078 1A62 F0 04			jeq l_0A14
  2079 1A64 A9 08			lda #$08
  2080 1A66 85 5A			sta NEWDIR
  2081 1A68			l_0A14
  2082
  2083 1A68			l_0A02
  2084 1A68			a_0006
  2085
  2086 				; optimize OK (main.pas), line = 24
  2087
  2088 1A68 A5 5A			lda NEWDIR
  2089 1A6A 25 5B			and AVAILDIR
  2090 1A6C D0 18			jne l_0A3B
  2091
  2092 				; optimize OK (main.pas), line = 25
  2093
  2094 1A6E AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2095 1A78 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2096 1A7A A9 00			lda #$00
  2097 1A7C 91 12			sta (:bp2),y
  2098 1A7E A0 02			ldy #PLY.HEAD-DATAORIGIN
  2099 1A80 A9 2A			lda #$2A
  2100 1A82 91 12			sta (:bp2),y
  2101 1A84 C6 59			dec ALIVE
  2102 1A86			l_0A3B
  2103
  2104 				; ------------------------------------------------------------
  2105
  2106 = 1D1C			@CASETMP_0006	= DATAORIGIN+$0048
  2107
  2108 = 1D1C			@VarData	= @CASETMP_0006
  2109 = 0001			@VarDataSize	= 1
  2110
  2111 1A86			@exit
  2112 					.ifdef @new
  2113 					lda <@VarData
  2114 					sta :ztmp
  2115 					lda >@VarData
  2116 					ldy #@VarDataSize-1
  2117 					jmp @FreeMem
  2118 					els
  2119 1A86 60				rts						; ret
  2120 					eif
  2121 				.endl
  2122
  2123 1A87			.local	PLAYERMOVE					; PROCEDURE
  2124
  2125 				; optimize OK (main.pas), line = 33
  2126
  2127 1A87 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2128 1A91 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2129 1A93 B1 12			lda (:bp2),y
  2130 1A95 D0 03 4C BC 1B		jeq l_0A5A
  2131
  2132 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 34
  2133
  2134 1A9A 20 01 12			jsr CHECKAVAILDIR
  2135
  2136 				; optimize OK (main.pas), line = 36
  2137
  2138 1A9D A5 5B			lda AVAILDIR
  2139 1A9F D0 35			jne l_0A6E
  2140
  2141 				; optimize OK (main.pas), line = 37
  2142
  2143 1AA1 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2144 1AAB A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2145 1AAD A9 00			lda #$00
  2146 1AAF 91 12			sta (:bp2),y
  2147 1AB1 C6 59			dec ALIVE
  2148
  2149 				; optimize OK (main.pas), line = 38
  2150
  2151 1AB3 A0 00			ldy #PLY.X-DATAORIGIN
  2152 1AB5 B1 12			lda (:bp2),y
  2153 1AB7 8D 05 1D			sta PUTCHAR.X
  2154 1ABA A0 01			ldy #PLY.Y-DATAORIGIN
  2155 1ABC B1 12			lda (:bp2),y
  2156 1ABE 8D 06 1D			sta PUTCHAR.Y
  2157 1AC1 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  2158 1AC3 B1 12			lda (:bp2),y
  2159 1AC5 18 69 80			add #$80
  2160 1AC8 8D 08 1D			sta PUTCHAR.C
  2161 1ACB A9 57			lda #$57
  2162 1ACD 8D 07 1D			sta PUTCHAR.V
  2163 1AD0 20 71 11			jsr PUTCHAR
  2164 1AD3 4C BC 1B			jmp l_0A8F
  2165 1AD6			l_0A6E
  2166
  2167 				; optimize OK (main.pas), line = 41
  2168
  2169 1AD6 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2170 1AE0 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  2171 1AE2 B1 12			lda (:bp2),y
  2172 1AE4 8D 1D 1D			sta @CASETMP_0007
  2173 1AE7 C9 00			cmp #$00
  2174 1AE9 D0 06			jne l_0A9A
  2175 1AEB			@
  2176
  2177 				; optimize FAIL ('HUMAN', main.pas), line = 42
  2178
  2179 1AEB 20 D3 19			jsr HUMAN
  2180 1AEE 4C 16 1B			jmp a_0007
  2181 1AF1			l_0A9A
  2182 1AF1 C9 01			cmp #$01
  2183 1AF3 D0 06			jne l_0AA4
  2184 1AF5			@
  2185
  2186 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 43
  2187
  2188 1AF5 20 D0 15			jsr AISTRAIGHT
  2189 1AF8 4C 16 1B			jmp a_0007
  2190 1AFB			l_0AA4
  2191 1AFB C9 02			cmp #$02
  2192 1AFD D0 06			jne l_0AAE
  2193 1AFF			@
  2194
  2195 				; optimize FAIL ('AIBULLY', main.pas), line = 44
  2196
  2197 1AFF 20 55 16			jsr AIBULLY
  2198 1B02 4C 16 1B			jmp a_0007
  2199 1B05			l_0AAE
  2200 1B05 C9 03			cmp #$03
  2201 1B07 D0 06			jne l_0AB8
  2202 1B09			@
  2203
  2204 				; optimize FAIL ('AISAPER', main.pas), line = 45
  2205
  2206 1B09 20 18 17			jsr AISAPER
  2207 1B0C 4C 16 1B			jmp a_0007
  2208 1B0F			l_0AB8
  2209 1B0F C9 04			cmp #$04
  2210 1B11 D0 03			jne l_0AC2
  2211 1B13			@
  2212
  2213 				; optimize FAIL ('AIMIRROR', main.pas), line = 46
  2214
  2215 1B13 20 88 19			jsr AIMIRROR
  2216 1B16			l_0AC2
  2217 1B16			a_0007
  2218
  2219 				; optimize FAIL ('DRAWTAIL', main.pas), line = 49
  2220
  2221 1B16 20 C6 12			jsr DRAWTAIL
  2222 1B19 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2223 1B23 A0 04			ldy #PLY.DIR-DATAORIGIN
  2224 1B25 A5 5A			lda NEWDIR
  2225 1B27 91 12			sta (:bp2),y
  2226
  2227 				; optimize OK (main.pas), line = 51
  2228
  2229 1B29 A5 5A			lda NEWDIR
  2230 1B2B 8D 1E 1D			sta @CASETMP_0008
  2231 1B2E C9 01			cmp #$01
  2232 1B30 D0 16			jne l_0ADE
  2233 1B32			@
  2234
  2235 				; optimize OK (main.pas), line = 52
  2236
  2237 1B32 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2238 1B3C A0 01			ldy #PLY.Y-DATAORIGIN
  2239 1B3E B1 12			lda (:bp2),y
  2240 1B40 38 E9 01			sub #$01
  2241 1B43 91 12			sta (:bp2),y
  2242
  2243 1B45 4C 93 1B			jmp a_0008
  2244 1B48			l_0ADE
  2245 1B48 C9 02			cmp #$02
  2246 1B4A D0 16			jne l_0AE8
  2247 1B4C			@
  2248
  2249 				; optimize OK (main.pas), line = 53
  2250
  2251 1B4C AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2252 1B56 A0 01			ldy #PLY.Y-DATAORIGIN
  2253 1B58 B1 12			lda (:bp2),y
  2254 1B5A 18 69 01			add #$01
  2255 1B5D 91 12			sta (:bp2),y
  2256
  2257 1B5F 4C 93 1B			jmp a_0008
  2258 1B62			l_0AE8
  2259 1B62 C9 04			cmp #$04
  2260 1B64 D0 16			jne l_0AF2
  2261 1B66			@
  2262
  2263 				; optimize OK (main.pas), line = 54
  2264
  2265 1B66 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2266 1B70 A0 00			ldy #PLY.X-DATAORIGIN
  2267 1B72 B1 12			lda (:bp2),y
  2268 1B74 38 E9 01			sub #$01
  2269 1B77 91 12			sta (:bp2),y
  2270
  2271 1B79 4C 93 1B			jmp a_0008
  2272 1B7C			l_0AF2
  2273 1B7C C9 08			cmp #$08
  2274 1B7E D0 13			jne l_0AFC
  2275 1B80			@
  2276
  2277 				; optimize OK (main.pas), line = 55
  2278
  2279 1B80 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2280 1B8A A0 00			ldy #PLY.X-DATAORIGIN
  2281 1B8C B1 12			lda (:bp2),y
  2282 1B8E 18 69 01			add #$01
  2283 1B91 91 12			sta (:bp2),y
  2284
  2285 1B93			l_0AFC
  2286 1B93			a_0008
  2287
  2288 				; optimize OK (main.pas), line = 58
  2289
  2290 1B93 AC C5 1C 84 12 AC + 	mwy PLY :bp2
  2291 1B9D A0 00			ldy #PLY.X-DATAORIGIN
  2292 1B9F B1 12			lda (:bp2),y
  2293 1BA1 8D 05 1D			sta PUTCHAR.X
  2294 1BA4 A0 01			ldy #PLY.Y-DATAORIGIN
  2295 1BA6 B1 12			lda (:bp2),y
  2296 1BA8 8D 06 1D			sta PUTCHAR.Y
  2297 1BAB A0 02			ldy #PLY.HEAD-DATAORIGIN
  2298 1BAD B1 12			lda (:bp2),y
  2299 1BAF 8D 07 1D			sta PUTCHAR.V
  2300 1BB2 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  2301 1BB4 B1 12			lda (:bp2),y
  2302 1BB6 8D 08 1D			sta PUTCHAR.C
  2303 1BB9 20 71 11			jsr PUTCHAR
  2304 1BBC			l_0A8F
  2305 1BBC			l_0A5A
  2306
  2307 				; ------------------------------------------------------------
  2308
  2309 = 1D1D			@CASETMP_0007	= DATAORIGIN+$0049
  2310 = 1D1E			@CASETMP_0008	= DATAORIGIN+$004A
  2311
  2312 = 1D1D			@VarData	= @CASETMP_0007
  2313 = 0002			@VarDataSize	= 2
  2314
  2315 1BBC			@exit
  2316 					.ifdef @new
  2317 					lda <@VarData
  2318 					sta :ztmp
  2319 					lda >@VarData
  2320 					ldy #@VarDataSize-1
  2321 					jmp @FreeMem
  2322 					els
  2323 1BBC 60				rts						; ret
  2324 					eif
  2325 				.endl
  2326
  2327 1BBD			.local	STARTSCREEN					; PROCEDURE
  2328
  2329 				; --- RepeatUntilProlog
  2330 1BBD			l_0B19
  2331
  2332 				; optimize OK (main.pas), line = 70
  2333
  2334 1BBD A9 02			lda #$02
  2335 1BBF 8D 08 FF			sta JOY
  2336 1BC2 A9 FF			lda #$FF
  2337 1BC4 8D 30 FD			sta KEYSCAN
  2338 1BC7 AD 08 FF			lda JOY
  2339 1BCA 49 FF			eor #$FF
  2340 1BCC 85 58			sta T0B
  2341
  2342 				; optimize OK (main.pas), line = 71
  2343
  2344 1BCE C9 40			cmp #$40
  2345 1BD0 D0 EB			jne l_0B19
  2346 1BD2			@exit
  2347 					.ifdef @new
  2348 					lda <@VarData
  2349 					sta :ztmp
  2350 					lda >@VarData
  2351 					ldy #@VarDataSize-1
  2352 					jmp @FreeMem
  2353 					els
  2354 1BD2 60				rts						; ret
  2355 					eif
  2356 				.endl
  2357
  2358 1BD3			.local	MAINLOOP					; PROCEDURE
  2359
  2360 				; optimize OK (main.pas), line = 78
  2361
  2362 1BD3 A9 FF			lda #$FF
  2363 1BD5 85 59			sta ALIVE
  2364 1BD7 20 E8 13			jsr INITPLAYFIELD
  2365 1BDA 20 BD 1B			jsr STARTSCREEN
  2366
  2367 				; --- RepeatUntilProlog
  2368 1BDD			l_0B43
  2369
  2370 				; optimize OK (main.pas), line = 81
  2371
  2372 1BDD A9 03			lda #$03
  2373 1BDF 8D E0 1C			sta SYSTEM.PAUSE_006B.N
  2374 1BE2 A9 00			lda #$00
  2375 1BE4 8D E1 1C			sta SYSTEM.PAUSE_006B.N+1
  2376 1BE7 20 23 11			jsr SYSTEM.PAUSE_006B
  2377
  2378 				; optimize OK (main.pas), line = 82
  2379
  2380 1BEA AD C9 1C			lda PLAYER1
  2381 1BED 8D C5 1C			sta PLY
  2382 1BF0 AD CA 1C			lda PLAYER1+1
  2383 1BF3 8D C6 1C			sta PLY+1
  2384 1BF6 20 87 1A			jsr PLAYERMOVE
  2385
  2386 				; optimize OK (main.pas), line = 83
  2387
  2388 1BF9 AD CB 1C			lda PLAYER2
  2389 1BFC 8D C5 1C			sta PLY
  2390 1BFF AD CC 1C			lda PLAYER2+1
  2391 1C02 8D C6 1C			sta PLY+1
  2392 1C05 20 87 1A			jsr PLAYERMOVE
  2393
  2394 				; optimize OK (main.pas), line = 84
  2395
  2396 1C08 AD CD 1C			lda PLAYER3
  2397 1C0B 8D C5 1C			sta PLY
  2398 1C0E AD CE 1C			lda PLAYER3+1
  2399 1C11 8D C6 1C			sta PLY+1
  2400 1C14 20 87 1A			jsr PLAYERMOVE
  2401
  2402 				; optimize OK (main.pas), line = 85
  2403
  2404 1C17 AD CF 1C			lda PLAYER4
  2405 1C1A 8D C5 1C			sta PLY
  2406 1C1D AD D0 1C			lda PLAYER4+1
  2407 1C20 8D C6 1C			sta PLY+1
  2408 1C23 20 87 1A			jsr PLAYERMOVE
  2409
  2410 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 86
  2411
  2412 1C26 20 96 12			jsr ANIMATEOBSTACLES
  2413
  2414 				; optimize OK (main.pas), line = 87
  2415
  2416 1C29 A5 59			lda ALIVE
  2417 1C2B F0 04			jeq l_0B43x
  2418 1C2D C9 FF			cmp #$FF
  2419 1C2F D0 AC			jne l_0B43
  2420 1C31			l_0B43x
  2421
  2422 				; optimize OK (main.pas), line = 89
  2423
  2424 1C31 AD EC 1C			lda PLAYER1.ISALIVE
  2425 1C34 F0 03			jeq l_0B83
  2426 1C36 EE EB 1C			inc PLAYER1.SCORE
  2427 1C39			l_0B83
  2428
  2429 				; optimize OK (main.pas), line = 90
  2430
  2431 1C39 AD F4 1C			lda PLAYER2.ISALIVE
  2432 1C3C F0 03			jeq l_0B96
  2433 1C3E EE F3 1C			inc PLAYER2.SCORE
  2434 1C41			l_0B96
  2435
  2436 				; optimize OK (main.pas), line = 91
  2437
  2438 1C41 AD FC 1C			lda PLAYER3.ISALIVE
  2439 1C44 F0 03			jeq l_0BA9
  2440 1C46 EE FB 1C			inc PLAYER3.SCORE
  2441 1C49			l_0BA9
  2442
  2443 				; optimize OK (main.pas), line = 92
  2444
  2445 1C49 AD 04 1D			lda PLAYER4.ISALIVE
  2446 1C4C F0 03			jeq l_0BBC
  2447 1C4E EE 03 1D			inc PLAYER4.SCORE
  2448 1C51			l_0BBC
  2449
  2450 				; optimize OK (main.pas), line = 94
  2451
  2452 1C51 A9 64			lda #$64
  2453 1C53 8D E0 1C			sta SYSTEM.PAUSE_006B.N
  2454 1C56 A9 00			lda #$00
  2455 1C58 8D E1 1C			sta SYSTEM.PAUSE_006B.N+1
  2456 1C5B 20 23 11			jsr SYSTEM.PAUSE_006B
  2457 1C5E			@exit
  2458 					.ifdef @new
  2459 					lda <@VarData
  2460 					sta :ztmp
  2461 					lda >@VarData
  2462 					ldy #@VarDataSize-1
  2463 					jmp @FreeMem
  2464 					els
  2465 1C5E 60				rts						; ret
  2466 					eif
  2467 				.endl
  2468 1C5F			l_0007
  2469
  2470 				; --- RepeatUntilProlog
  2471 1C5F			l_0BC7
  2472
  2473 				; optimize OK (main.pas), line = 101
  2474
  2475 1C5F A9 30			lda #$30
  2476 1C61 8D EB 1C			sta PLAYER1.SCORE
  2477 1C64 8D F3 1C			sta PLAYER2.SCORE
  2478
  2479 				; optimize OK (main.pas), line = 102
  2480
  2481 1C67 8D FB 1C			sta PLAYER3.SCORE
  2482 1C6A 8D 03 1D			sta PLAYER4.SCORE
  2483
  2484 				; optimize OK (main.pas), line = 104
  2485
  2486 1C6D A9 00			lda #$00
  2487 1C6F 8D E4 1C			sta GAMEOVER
  2488
  2489 				; --- RepeatUntilProlog
  2490 1C72			l_0BDC
  2491
  2492 				; optimize FAIL ('MAINLOOP', main.pas), line = 106
  2493
  2494 1C72 20 D3 1B			jsr MAINLOOP
  2495
  2496 				; optimize OK (main.pas), line = 107
  2497
  2498 1C75 AD EB 1C			lda PLAYER1.SCORE
  2499 1C78 C9 39			cmp #$39
  2500 1C7A D0 05			jne l_0BEF
  2501 1C7C A9 01			lda #$01
  2502 1C7E 8D E4 1C			sta GAMEOVER
  2503 1C81			l_0BEF
  2504
  2505 				; optimize OK (main.pas), line = 108
  2506
  2507 1C81 AD F3 1C			lda PLAYER2.SCORE
  2508 1C84 C9 39			cmp #$39
  2509 1C86 D0 05			jne l_0C08
  2510 1C88 A9 01			lda #$01
  2511 1C8A 8D E4 1C			sta GAMEOVER
  2512 1C8D			l_0C08
  2513
  2514 				; optimize OK (main.pas), line = 109
  2515
  2516 1C8D AD FB 1C			lda PLAYER3.SCORE
  2517 1C90 C9 39			cmp #$39
  2518 1C92 D0 05			jne l_0C21
  2519 1C94 A9 01			lda #$01
  2520 1C96 8D E4 1C			sta GAMEOVER
  2521 1C99			l_0C21
  2522
  2523 				; optimize OK (main.pas), line = 110
  2524
  2525 1C99 AD 03 1D			lda PLAYER4.SCORE
  2526 1C9C C9 39			cmp #$39
  2527 1C9E D0 05			jne l_0C3A
  2528 1CA0 A9 01			lda #$01
  2529 1CA2 8D E4 1C			sta GAMEOVER
  2530 1CA5			l_0C3A
  2531
  2532 				; optimize OK (main.pas), line = 111
  2533
  2534 1CA5 AD E4 1C			lda GAMEOVER
  2535 1CA8 F0 C8			jeq l_0BDC
  2536
  2537 				; optimize FAIL ('SHOWSCORE', main.pas), line = 113
  2538
  2539 1CAA 20 9C 11			jsr SHOWSCORE
  2540
  2541 				; optimize OK (main.pas), line = 115
  2542
  2543 1CAD A9 C8			lda #$C8
  2544 1CAF 8D E0 1C			sta SYSTEM.PAUSE_006B.N
  2545 1CB2 A9 00			lda #$00
  2546 1CB4 8D E1 1C			sta SYSTEM.PAUSE_006B.N+1
  2547 1CB7 20 23 11			jsr SYSTEM.PAUSE_006B
  2548
  2549 				; optimize OK (main.pas), line = 116
  2550
  2551 1CBA 4C 5F 1C			jmp l_0BC7
  2552
  2553 				; ------------------------------------------------------------
  2554
  2555 = 0800			ATTRIBUTE_ADDR	= $0800
  2556 = 0C00			SCREEN_ADDR	= $0C00
  2557 = 0009			VICTORIES	= $09
  2558 = 0005			LOOK_AHEAD	= $05
  2559 = 0020			EMPTY	= $20
  2560 = 00A0			WALL	= $A0
  2561 = 0041			WALL_COLOUR	= $41
  2562 = 0030			ZERO	= $30
  2563 = 0056			OBSTACLE_1	= $56
  2564 = 005B			OBSTACLE_2	= $5B
  2565 = 0035			OBST_COLOUR	= $35
  2566 = 0051			PLY_HEAD	= $51
  2567 = 002A			PLY_CRASH	= $2A
  2568 = 0057			PLY_BUSTED	= $57
  2569 = 0042			PLY_TAIL_UD	= $42
  2570 = 0040			PLY_TAIL_LR	= $40
  2571 = 007D			PLY_TAIL_RD	= $7D
  2572 = 006E			PLY_TAIL_RU	= $6E
  2573 = 006D			PLY_TAIL_LD	= $6D
  2574 = 0070			PLY_TAIL_LU	= $70
  2575 = 005F			PLY1_COLOUR	= $5F
  2576 = 005D			PLY2_COLOUR	= $5D
  2577 = 0071			PLY3_COLOUR	= $71
  2578 = 0055			PLY4_COLOUR	= $55
  2579 = 0000			PLY_CTRL	= $00
  2580 = 0001			AI_STRAIGHT	= $01
  2581 = 0002			AI_BULLY	= $02
  2582 = 0003			AI_SAPER	= $03
  2583 = 0004			AI_MIRROR	= $04
  2584 = 0001			JOY_UP	= $01
  2585 = 0002			JOY_DOWN	= $02
  2586 = 0004			JOY_LEFT	= $04
  2587 = 0008			JOY_RIGHT	= $08
  2588 = 0040			JOY_FIRE	= $40
  2589 = 0002			JOY_SELECT_1	= $02
  2590 = 0004			JOY_SELECT_2	= $04
  2591 = 100E			adr.MUL40	= CODEORIGIN+$0000
  2592 1CBD			.var MUL40	= adr.MUL40 .word
  2593 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  2594 1CBD			.var DIRECTION	= adr.DIRECTION .word
  2595 = FD30			KEYSCAN	= $FD30
  2596 = FF08			JOY	= $FF08
  2597 = FF15			BORDERCOLOR	= $FF15
  2598 = FF19			BGCOLOR	= $FF19
  2599 = 0058			T0B	= $58
  2600 = 0059			ALIVE	= $59
  2601 = 005A			NEWDIR	= $5A
  2602 = 005B			AVAILDIR	= $5B
  2603 = 005C			T0W	= $5C
  2604 = 005E			adr.PLY	= $5E
  2605 1CBD			.var PLY	= adr.PLY .word
  2606 = 1CD4			PLY.X	= DATAORIGIN+$0000
  2607 = 1CD5			PLY.Y	= DATAORIGIN+$0001
  2608 = 1CD6			PLY.HEAD	= DATAORIGIN+$0002
  2609 = 1CD7			PLY.COLOUR	= DATAORIGIN+$0003
  2610 = 1CD8			PLY.DIR	= DATAORIGIN+$0004
  2611 = 1CD9			PLY.BRAIN	= DATAORIGIN+$0005
  2612 = 1CDA			PLY.SCORE	= DATAORIGIN+$0006
  2613 = 1CDB			PLY.ISALIVE	= DATAORIGIN+$0007
  2614 = 0060			adr.TMPPLY	= $60
  2615 1CBD			.var TMPPLY	= adr.TMPPLY .word
  2616 = 1CD4			TMPPLY.X	= DATAORIGIN+$0000
  2617 = 1CD5			TMPPLY.Y	= DATAORIGIN+$0001
  2618 = 1CD6			TMPPLY.HEAD	= DATAORIGIN+$0002
  2619 = 1CD7			TMPPLY.COLOUR	= DATAORIGIN+$0003
  2620 = 1CD8			TMPPLY.DIR	= DATAORIGIN+$0004
  2621 = 1CD9			TMPPLY.BRAIN	= DATAORIGIN+$0005
  2622 = 1CDA			TMPPLY.SCORE	= DATAORIGIN+$0006
  2623 = 1CDB			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  2624 = 1CE4			GAMEOVER	= DATAORIGIN+$0010
  2625 = 1CE5			adr.PLAYER1	= [DATAORIGIN+$0011] .array [6]
  2626 1CBD			.var PLAYER1	= adr.PLAYER1 .word
  2627 = 1CE5			PLAYER1.X	= DATAORIGIN+$0011
  2628 = 1CE6			PLAYER1.Y	= DATAORIGIN+$0012
  2629 = 1CE7			PLAYER1.HEAD	= DATAORIGIN+$0013
  2630 = 1CE8			PLAYER1.COLOUR	= DATAORIGIN+$0014
  2631 = 1CE9			PLAYER1.DIR	= DATAORIGIN+$0015
  2632 = 1CEA			PLAYER1.BRAIN	= DATAORIGIN+$0016
  2633 = 1CEB			PLAYER1.SCORE	= DATAORIGIN+$0017
  2634 = 1CEC			PLAYER1.ISALIVE	= DATAORIGIN+$0018
  2635 = 1CED			adr.PLAYER2	= [DATAORIGIN+$0019] .array [6]
  2636 1CBD			.var PLAYER2	= adr.PLAYER2 .word
  2637 = 1CED			PLAYER2.X	= DATAORIGIN+$0019
  2638 = 1CEE			PLAYER2.Y	= DATAORIGIN+$001A
  2639 = 1CEF			PLAYER2.HEAD	= DATAORIGIN+$001B
  2640 = 1CF0			PLAYER2.COLOUR	= DATAORIGIN+$001C
  2641 = 1CF1			PLAYER2.DIR	= DATAORIGIN+$001D
  2642 = 1CF2			PLAYER2.BRAIN	= DATAORIGIN+$001E
  2643 = 1CF3			PLAYER2.SCORE	= DATAORIGIN+$001F
  2644 = 1CF4			PLAYER2.ISALIVE	= DATAORIGIN+$0020
  2645 = 1CF5			adr.PLAYER3	= [DATAORIGIN+$0021] .array [6]
  2646 1CBD			.var PLAYER3	= adr.PLAYER3 .word
  2647 = 1CF5			PLAYER3.X	= DATAORIGIN+$0021
  2648 = 1CF6			PLAYER3.Y	= DATAORIGIN+$0022
  2649 = 1CF7			PLAYER3.HEAD	= DATAORIGIN+$0023
  2650 = 1CF8			PLAYER3.COLOUR	= DATAORIGIN+$0024
  2651 = 1CF9			PLAYER3.DIR	= DATAORIGIN+$0025
  2652 = 1CFA			PLAYER3.BRAIN	= DATAORIGIN+$0026
  2653 = 1CFB			PLAYER3.SCORE	= DATAORIGIN+$0027
  2654 = 1CFC			PLAYER3.ISALIVE	= DATAORIGIN+$0028
  2655 = 1CFD			adr.PLAYER4	= [DATAORIGIN+$0029] .array [6]
  2656 1CBD			.var PLAYER4	= adr.PLAYER4 .word
  2657 = 1CFD			PLAYER4.X	= DATAORIGIN+$0029
  2658 = 1CFE			PLAYER4.Y	= DATAORIGIN+$002A
  2659 = 1CFF			PLAYER4.HEAD	= DATAORIGIN+$002B
  2660 = 1D00			PLAYER4.COLOUR	= DATAORIGIN+$002C
  2661 = 1D01			PLAYER4.DIR	= DATAORIGIN+$002D
  2662 = 1D02			PLAYER4.BRAIN	= DATAORIGIN+$002E
  2663 = 1D03			PLAYER4.SCORE	= DATAORIGIN+$002F
  2664 = 1D04			PLAYER4.ISALIVE	= DATAORIGIN+$0030
  2665 1CBD			@exit
  2666
  2667 1CBD A2 00		@halt	ldx #$00
  2668 1CBF 9A				txs
  2669
  2670 1CC0 60				rts
  2671
  2672 				; ------------------------------------------------------------
  2673
  2674 				; ------------------------------------------------------------
  2675
  2676 1CC1			.local	@DEFINES
  2677 1CC1			C4P
  2678 				.endl
  2679
  2680 1CC1			.local	@RESOURCE
  2681 				.endl
  2682
  2683 = 1CC1 0E 10		MUL40
  2683 = 1CC3 40 10		DIRECTION
  2683 = 1CC5 5E 00		PLY
  2683 = 1CC7 60 00		TMPPLY
  2683 = 1CC9 E5 1C		PLAYER1
  2683 = 1CCB ED 1C		PLAYER2
  2683 = 1CCD F5 1C		PLAYER3
  2683 = 1CCF FD 1C		PLAYER4
  2683 				.endl							; MAIN
  2684
  2685 				; ------------------------------------------------------------
  2686 				; ------------------------------------------------------------
  2687
  2688 				.macro	UNITINITIALIZATION
  2689 				
  2690 					.ifdef MAIN.SYSTEM.@UnitInit
  2691 					jsr MAIN.SYSTEM.@UnitInit
  2692 					eif
  2693 				.endm
  2694
  2695 				; ------------------------------------------------------------
  2696
  2697 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2698 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2698 				SYSTEM: $10D5..$1170
  2699 					eif
  2700
  2701 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2701 				CODE: $100E..$1CC0
  2702
  2703 				; ------------------------------------------------------------
  2704
  2705 1CD1				.align $04
  2706
  2707 1CD4			DATAORIGIN
  2708 1CD4 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  2709
  2710 = 0006			VARINITSIZE	= *-DATAORIGIN
  2711 = 004B			VARDATASIZE	= 75
  2712
  2713 = 1D1F			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2714
  2715 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2715 				DATA: $1CD4..$1D1F
  2716
  2717 				; ------------------------------------------------------------
  2718
  2719 				.macro	STATICDATA
  2720 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  2721 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  2722 				.by  $C0 $03 $01 $02 $04 $08
  2723 				.endm
  2724
  2725 					end
