mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E BC 2C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 005D			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 2CDA			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 A3			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 37 2C E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 37 85 02 A9 2D + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 49 2C			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D DF 2C		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD DF 2C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 2CDF			RESULT	= DATAORIGIN+$000B
   182
   183 = 2CDF			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 034  ---------------------
   304
   305 1123 A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   306
   307 1129			@exit
   308 					.ifdef @new
   309 					lda <@VarData
   310 					sta :ztmp
   311 					lda >@VarData
   312 					ldy #@VarDataSize-1
   313 					jmp @FreeMem
   314 					els
   315 1129 60				rts						; ret
   316 					eif
   317 				.endl
   318
   319 112A			.local	PAUSE_006C					; PROCEDURE | ASSEMBLER | OVERLOAD
   320
   321 				; ---------------------  ASM Block 035  ---------------------
   322
   323
   324 112A AD E0 2C		loop  lda n
   325 112D 0D E1 2C		  ora n+1
   326 1130 F0 14		  beq stop
   327
   328 1132 A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   329
   330 1138 AD E0 2C D0 03 CE +   dew n
   331
   332 1143 4C 2A 11		  jmp loop
   333 1146			stop
   334
   335
   336 				; ------------------------------------------------------------
   337
   338 = 2CE0			N	= DATAORIGIN+$000C
   339
   340 = 2CE0			@VarData	= N
   341 = 0002			@VarDataSize	= 2
   342
   343 1146			@exit
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					els
   351 1146 60				rts						; ret
   352 					eif
   353 				.endl
   354
   355 1147			.local	RANDOM_006D					; FUNCTION | ASSEMBLER | OVERLOAD
   356 1147 8D E2 2C			sta RANGE
   357
   358 				; ---------------------  ASM Block 039  ---------------------
   359
   360
   361 114A AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   362 114D 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   363 1150 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   364 1153 6D 1E FF		  adc ted_hcount    //Horizontal counter
   365 1156 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   366 1159 4D 1E FF		  eor ted_hcount    //Horizontal counter
   367 115C A8			  tay
   368
   369 115D AD E2 2C		  lda range
   370 1160 F0 08		  beq stop
   371
   372 1162 85 0C		  sta ecx
   373 1164 84 04		  sty eax
   374
   375 1166 20 A3 10		  jsr imulCL
   376 1169 A8			  tay
   377
   378 116A 8C E3 2C		stop  sty Result
   379
   380 116D			@exit
   381
   382 				; ------------------------------------------------------------
   383
   384 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   385 				; as Pointer
   386
   387 116D E8				inx
   388 116E AD E3 2C 95 18		mva RESULT :STACKORIGIN,x
   389
   390 					.ifdef @new
   391 					lda <@VarData
   392 					sta :ztmp
   393 					lda >@VarData
   394 					ldy #@VarDataSize-1
   395 					jmp @FreeMem
   396 					eif
   397
   398 				; ------------------------------------------------------------
   399
   400 = 2CE2			RANGE	= DATAORIGIN+$000E
   401 = 2CE3			RESULT	= DATAORIGIN+$000F
   402
   403 = 2CE2			@VarData	= RANGE
   404 = 0002			@VarDataSize	= 2
   405
   406 1173 60				rts						; ret
   407 				.endl
   408
   409 				; ------------------------------------------------------------
   410
   411 = 0101			__PORTB_BANKS	= $0101
   412 = 0648			M_PI_2	= $0648
   413 = 0192			D_PI_2	= $0192
   414 = 0004			D_PI_180	= $04
   415 = 0000			MGTIA	= $00
   416 = 0080			MVBXE	= $80
   417 = 0000			VBXE_XDLADR	= $00
   418 = 0100			VBXE_BCBADR	= $0100
   419 = 1000			VBXE_MAPADR	= $1000
   420 = 5000			VBXE_OVRADR	= $5000
   421 = B000			VBXE_WINDOW	= $B000
   422 = 0000			IDLI	= $00
   423 = 0001			IVBL	= $01
   424 = 00FE			CH_DELCHR	= $FE
   425 = 009B			CH_ENTER	= $9B
   426 = 001B			CH_ESC	= $1B
   427 = 001C			CH_CURS_UP	= $1C
   428 = 001D			CH_CURS_DOWN	= $1D
   429 = 001E			CH_CURS_LEFT	= $1E
   430 = 001F			CH_CURS_RIGHT	= $1F
   431 = 007F			CH_TAB	= $7F
   432 = 009B			CH_EOL	= $9B
   433 = 007D			CH_CLR	= $7D
   434 = 00FD			CH_BELL	= $FD
   435 = 007E			CH_DEL	= $7E
   436 = 009C			CH_DELLINE	= $9C
   437 = 009D			CH_INSLINE	= $9D
   438 = 0000			COLOR_BLACK	= $00
   439 = 000E			COLOR_WHITE	= $0E
   440 = 0032			COLOR_RED	= $32
   441 = 0096			COLOR_CYAN	= $96
   442 = 0068			COLOR_VIOLET	= $68
   443 = 00C4			COLOR_GREEN	= $C4
   444 = 0074			COLOR_BLUE	= $74
   445 = 00EE			COLOR_YELLOW	= $EE
   446 = 0028			COLOR_ORANGE	= $28
   447 = 00E4			COLOR_BROWN	= $E4
   448 = 003C			COLOR_LIGHTRED	= $3C
   449 = 0004			COLOR_GRAY1	= $04
   450 = 0006			COLOR_GRAY2	= $06
   451 = 000A			COLOR_GRAY3	= $0A
   452 = 00CC			COLOR_LIGHTGREEN	= $CC
   453 = 007C			COLOR_LIGHTBLUE	= $7C
   454 = 0004			FMOPENREAD	= $04
   455 = 0008			FMOPENWRITE	= $08
   456 = 0009			FMOPENAPPEND	= $09
   457 = 000C			FMOPENREADWRITE	= $0C
   458 = 2CD4			SCREENWIDTH	= DATAORIGIN+$0000
   459 = 2CD6			SCREENHEIGHT	= DATAORIGIN+$0002
   460 = 2CD8			DATESEPARATOR	= DATAORIGIN+$0004
   461 = D014			TVSYSTEM	= $D014
   462 = D20A			RND	= $D20A
   463 = 02C0			adr.PALETTE	= $02C0
   464 1174			.var PALETTE	= adr.PALETTE .word
   465 = D012			adr.HPALETTE	= $D012
   466 1174			.var HPALETTE	= adr.HPALETTE .word
   467 = 2CD9			FILEMODE	= DATAORIGIN+$0005
   468 = 2CDA			GRAPHMODE	= DATAORIGIN+$0006
   469 = 2CDB			IORESULT	= DATAORIGIN+$0007
   470 = 2CDC			EOLN	= DATAORIGIN+$0008
   471 = 2CDD			RNDSEED	= DATAORIGIN+$0009
   472
   473 = 1174 C0 02		PALETTE
   473 = 1176 12 D0		HPALETTE
   473 				.endl							; UNIT SYSTEM
   474
   475 1178			.local	PUTCHAR_0072					; PROCEDURE | OVERLOAD
   476
   477 				; optimize OK (tools.inc), line = 5
   478
   479 1178 AD 17 2D			lda Y
   480 117B 0A				asl @
   481 117C A8				tay
   482 117D B9 0E 10			lda adr.MUL40,y
   483 1180 18 6D 16 2D			add X
   484 1184 85 5D			sta T0W
   485 1186 B9 0F 10			lda adr.MUL40+1,y
   486 1189 69 08			adc #$08
   487 118B 85 5E			sta T0W+1
   488
   489 				; optimize OK (tools.inc), line = 6
   490
   491 118D 85 11			sta :bp+1
   492 118F A4 5D			ldy T0W
   493 1191 AD 19 2D			lda C
   494 1194 91 10			sta (:bp),y
   495 1196 A5 5E			lda T0W+1
   496 1198 18 69 04			add #$04
   497 119B 85 11			sta :bp+1
   498 119D AD 18 2D			lda V
   499 11A0 91 10			sta (:bp),y
   500
   501 				; ------------------------------------------------------------
   502
   503 = 2D16			X	= DATAORIGIN+$0042
   504 = 2D17			Y	= DATAORIGIN+$0043
   505 = 2D18			V	= DATAORIGIN+$0044
   506 = 2D19			C	= DATAORIGIN+$0045
   507
   508 = 2D16			@VarData	= X
   509 = 0004			@VarDataSize	= 4
   510
   511 11A2			@exit
   512 					.ifdef @new
   513 					lda <@VarData
   514 					sta :ztmp
   515 					lda >@VarData
   516 					ldy #@VarDataSize-1
   517 					jmp @FreeMem
   518 					els
   519 11A2 60				rts						; ret
   520 					eif
   521 				.endl
   522
   523 11A3			.local	PUTCHAR_0098					; PROCEDURE | OVERLOAD
   524
   525 				; optimize OK (tools.inc), line = 11
   526
   527 11A3 AD 1B 2D			lda Y
   528 11A6 0A				asl @
   529 11A7 A8				tay
   530 11A8 B9 0E 10			lda adr.MUL40,y
   531 11AB 18 6D 1A 2D			add X
   532 11AF 85 5D			sta T0W
   533 11B1 B9 0F 10			lda adr.MUL40+1,y
   534 11B4 69 0C			adc #$0C
   535 11B6 85 5E			sta T0W+1
   536 11B8 A4 5E			ldy T0W+1
   537 11BA 84 11			sty :bp+1
   538 11BC A4 5D			ldy T0W
   539 11BE AD 1C 2D			lda V
   540 11C1 91 10			sta (:bp),y
   541
   542 				; ------------------------------------------------------------
   543
   544 = 2D1A			X	= DATAORIGIN+$0046
   545 = 2D1B			Y	= DATAORIGIN+$0047
   546 = 2D1C			V	= DATAORIGIN+$0048
   547
   548 = 2D1A			@VarData	= X
   549 = 0003			@VarDataSize	= 3
   550
   551 11C3			@exit
   552 					.ifdef @new
   553 					lda <@VarData
   554 					sta :ztmp
   555 					lda >@VarData
   556 					ldy #@VarDataSize-1
   557 					jmp @FreeMem
   558 					els
   559 11C3 60				rts						; ret
   560 					eif
   561 				.endl
   562
   563 11C4			.local	SHOWSCORE					; PROCEDURE
   564
   565 				; optimize OK (tools.inc), line = 18
   566
   567 11C4 AD E9 2C			lda PLAYER1.COLOUR
   568 11C7 8D 19 2D			sta PUTCHAR_0072.C
   569 11CA AD EC 2C			lda PLAYER1.SCORE
   570 11CD 8D 18 2D			sta PUTCHAR_0072.V
   571 11D0 A9 00			lda #$00
   572 11D2 8D 17 2D			sta PUTCHAR_0072.Y
   573 11D5 A9 1E			lda #$1E
   574 11D7 8D 16 2D			sta PUTCHAR_0072.X
   575 11DA 20 78 11			jsr PUTCHAR_0072
   576
   577 				; optimize OK (tools.inc), line = 19
   578
   579 11DD AD F1 2C			lda PLAYER2.COLOUR
   580 11E0 8D 19 2D			sta PUTCHAR_0072.C
   581 11E3 AD F4 2C			lda PLAYER2.SCORE
   582 11E6 8D 18 2D			sta PUTCHAR_0072.V
   583 11E9 A9 00			lda #$00
   584 11EB 8D 17 2D			sta PUTCHAR_0072.Y
   585 11EE A9 20			lda #$20
   586 11F0 8D 16 2D			sta PUTCHAR_0072.X
   587 11F3 20 78 11			jsr PUTCHAR_0072
   588
   589 				; optimize OK (tools.inc), line = 20
   590
   591 11F6 AD F9 2C			lda PLAYER3.COLOUR
   592 11F9 8D 19 2D			sta PUTCHAR_0072.C
   593 11FC AD FC 2C			lda PLAYER3.SCORE
   594 11FF 8D 18 2D			sta PUTCHAR_0072.V
   595 1202 A9 00			lda #$00
   596 1204 8D 17 2D			sta PUTCHAR_0072.Y
   597 1207 A9 22			lda #$22
   598 1209 8D 16 2D			sta PUTCHAR_0072.X
   599 120C 20 78 11			jsr PUTCHAR_0072
   600
   601 				; optimize OK (tools.inc), line = 21
   602
   603 120F AD 01 2D			lda PLAYER4.COLOUR
   604 1212 8D 19 2D			sta PUTCHAR_0072.C
   605 1215 AD 04 2D			lda PLAYER4.SCORE
   606 1218 8D 18 2D			sta PUTCHAR_0072.V
   607 121B A9 00			lda #$00
   608 121D 8D 17 2D			sta PUTCHAR_0072.Y
   609 1220 A9 24			lda #$24
   610 1222 8D 16 2D			sta PUTCHAR_0072.X
   611 1225 20 78 11			jsr PUTCHAR_0072
   612 1228			@exit
   613 					.ifdef @new
   614 					lda <@VarData
   615 					sta :ztmp
   616 					lda >@VarData
   617 					ldy #@VarDataSize-1
   618 					jmp @FreeMem
   619 					els
   620 1228 60				rts						; ret
   621 					eif
   622 				.endl
   623
   624 1229			.local	CHECKAVAILDIR					; PROCEDURE
   625
   626 				; optimize OK (tools.inc), line = 28
   627
   628 1229 A9 00			lda #$00
   629 122B 85 5C			sta AVAILDIR
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 122D AC C3 2C 84 12 AC + 	mwy PLY :bp2
   634 1237 A0 01			ldy #PLY.Y-DATAORIGIN
   635 1239 B1 12			lda (:bp2),y
   636 123B 0A				asl @
   637 123C A8				tay
   638 123D A9 00			lda #$00
   639 123F 18 79 0E 10			add adr.MUL40,y
   640 1243 85 21			sta :STACKORIGIN+9
   641 1245 A9 0C			lda #$0C
   642 1247 79 0F 10			adc adr.MUL40+1,y
   643 124A 85 31			sta :STACKORIGIN+STACKWIDTH+9
   644 124C A0 00			ldy #PLY.X-DATAORIGIN
   645 124E A5 21			lda :STACKORIGIN+9
   646 1250 18 71 12			add (:bp2),y
   647 1253 85 5D			sta T0W
   648 1255 A5 31			lda :STACKORIGIN+STACKWIDTH+9
   649 1257 69 00			adc #$00
   650 1259 85 5E			sta T0W+1
   651
   652 				; optimize OK (tools.inc), line = 31
   653
   654 125B A5 5D			lda T0W
   655 125D 38 E9 28			sub #$28
   656 1260 85 21			sta :STACKORIGIN+9
   657 1262 A5 5E			lda T0W+1
   658 1264 E9 00			sbc #$00
   659 1266 85 11			sta :bp+1
   660 1268 A4 21			ldy :STACKORIGIN+9
   661 126A B1 10			lda (:bp),y
   662 126C C9 20			cmp #$20
   663 126E D0 06			jne l_010B
   664 1270 A5 5C			lda AVAILDIR
   665 1272 09 01			ora #$01
   666 1274 85 5C			sta AVAILDIR
   667 1276			l_010B
   668
   669 				; optimize OK (tools.inc), line = 32
   670
   671 1276 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   672 127E A0 28			ldy #$28
   673 1280 B1 12			lda (:bp2),y
   674 1282 C9 20			cmp #$20
   675 1284 D0 06			jne l_012E
   676 1286 A5 5C			lda AVAILDIR
   677 1288 09 02			ora #$02
   678 128A 85 5C			sta AVAILDIR
   679 128C			l_012E
   680
   681 				; optimize OK (tools.inc), line = 33
   682
   683 128C A5 5D			lda T0W
   684 128E 38 E9 01			sub #$01
   685 1291 85 21			sta :STACKORIGIN+9
   686 1293 A5 5E			lda T0W+1
   687 1295 E9 00			sbc #$00
   688 1297 85 11			sta :bp+1
   689 1299 A4 21			ldy :STACKORIGIN+9
   690 129B B1 10			lda (:bp),y
   691 129D C9 20			cmp #$20
   692 129F D0 06			jne l_0151
   693 12A1 A5 5C			lda AVAILDIR
   694 12A3 09 04			ora #$04
   695 12A5 85 5C			sta AVAILDIR
   696 12A7			l_0151
   697
   698 				; optimize OK (tools.inc), line = 34
   699
   700 12A7 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   701 12AF A0 01			ldy #$01
   702 12B1 B1 12			lda (:bp2),y
   703 12B3 C9 20			cmp #$20
   704 12B5 D0 06			jne l_0174
   705 12B7 A5 5C			lda AVAILDIR
   706 12B9 09 08			ora #$08
   707 12BB 85 5C			sta AVAILDIR
   708 12BD			l_0174
   709 12BD			@exit
   710 					.ifdef @new
   711 					lda <@VarData
   712 					sta :ztmp
   713 					lda >@VarData
   714 					ldy #@VarDataSize-1
   715 					jmp @FreeMem
   716 					els
   717 12BD 60				rts						; ret
   718 					eif
   719 				.endl
   720
   721 12BE			.local	ANIMATEOBSTACLES				; PROCEDURE
   722
   723 				; optimize FAIL (0, tools.inc), line = 43
   724
   725 12BE EE 1D 2D			inc COUNTER
   726
   727 				; optimize OK (tools.inc), line = 44
   728
   729 12C1 AD 1D 2D			lda COUNTER
   730 12C4 29 01			and #$01
   731 12C6 F0 08			jeq l_019F
   732 12C8 A9 56			lda #$56
   733 12CA 8D 1E 2D			sta OBST
   734 12CD 4C D5 12			jmp l_01AD
   735 12D0			l_019F
   736 12D0 A9 5B			lda #$5B
   737 12D2 8D 1E 2D			sta OBST
   738 12D5			l_01AD
   739
   740 				; optimize OK (tools.inc), line = 45
   741
   742 12D5 A9 07			lda #$07
   743 12D7 85 59			sta I0B
   744
   745 12D9			l_01BA
   746 				; --- ForToDoCondition
   747 12D9 A5 59			lda I0B
   748 12DB 0A				asl @
   749 12DC A8				tay
   750 12DD B9 06 2D			lda adr.OBSTACLES,y
   751 12E0 85 21			sta :STACKORIGIN+9
   752 12E2 B9 07 2D			lda adr.OBSTACLES+1,y
   753 12E5 85 11			sta :bp+1
   754 12E7 A4 21			ldy :STACKORIGIN+9
   755 12E9 AD 1E 2D			lda OBST
   756 12EC 91 10			sta (:bp),y
   757 12EE C6 59			dec I0B
   758 12F0 10 E7			jpl l_01BA
   759 12F2			l_01C8
   760
   761 				; ------------------------------------------------------------
   762
   763 = 2D1D			COUNTER	= DATAORIGIN+$0049
   764 = 2D1E			OBST	= DATAORIGIN+$004A
   765 = 0000			@FORTMP_01B7	= $00
   766
   767 = 2D1D			@VarData	= COUNTER
   768 = 0002			@VarDataSize	= 2
   769
   770 12F2			@exit
   771 					.ifdef @new
   772 					lda <@VarData
   773 					sta :ztmp
   774 					lda >@VarData
   775 					ldy #@VarDataSize-1
   776 					jmp @FreeMem
   777 					els
   778 12F2 60				rts						; ret
   779 					eif
   780 				.endl
   781
   782 12F3			.local	CALCOBSTACLEADDR				; FUNCTION
   783
   784 				; optimize OK (tools.inc), line = 52
   785
   786 12F3 AD 20 2D			lda Y
   787 12F6 0A				asl @
   788 12F7 A8				tay
   789 12F8 AD 1F 2D			lda X
   790 12FB 18 79 0E 10			add adr.MUL40,y
   791 12FF 8D 21 2D			sta RESULT
   792 1302 A9 0C			lda #$0C
   793 1304 79 0F 10			adc adr.MUL40+1,y
   794 1307 8D 22 2D			sta RESULT+1
   795 130A			@exit
   796
   797 				; ------------------------------------------------------------
   798
   799 				; Push WORD / SMALLINT / SHORTREAL / POINTER
   800 				; as Pointer
   801
   802 130A E8				inx
   803 130B AD 21 2D 95 18		mva RESULT :STACKORIGIN,x
   804 1310 AD 22 2D 95 28		mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
   805
   806 					.ifdef @new
   807 					lda <@VarData
   808 					sta :ztmp
   809 					lda >@VarData
   810 					ldy #@VarDataSize-1
   811 					jmp @FreeMem
   812 					eif
   813
   814 				; ------------------------------------------------------------
   815
   816 = 2D1F			X	= DATAORIGIN+$004B
   817 = 2D20			Y	= DATAORIGIN+$004C
   818 = 2D21			RESULT	= DATAORIGIN+$004D
   819
   820 = 2D1F			@VarData	= X
   821 = 0004			@VarDataSize	= 4
   822
   823 1315 60				rts						; ret
   824 				.endl
   825
   826 1316			.local	SAVEOBSTACLES					; PROCEDURE
   827
   828 				; optimize OK (tools.inc), line = 59
   829
   830 1316 A9 07			lda #$07
   831 1318 85 59			sta I0B
   832
   833 131A			l_01FB
   834 				; --- ForToDoCondition
   835
   836 				; optimize OK (tools.inc), line = 60
   837
   838 131A A5 59			lda I0B
   839 131C 0A				asl @
   840 131D A8				tay
   841 131E B9 07 2D			lda adr.OBSTACLES+1,y
   842 1321 C9 00			cmp #$00
   843 1323 D0 05			bne @+
   844 1325 B9 06 2D			lda adr.OBSTACLES,y
   845 1328 C9 7E			cmp #$7E
   846 132A			@
   847 132A F0 29			jeq l_021D
   848
   849 				; optimize OK (tools.inc), line = 61
   850
   851 132C B9 06 2D			lda adr.OBSTACLES,y
   852 132F 85 21			sta :STACKORIGIN+9
   853 1331 B9 07 2D			lda adr.OBSTACLES+1,y
   854 1334 85 11			sta :bp+1
   855 1336 A4 21			ldy :STACKORIGIN+9
   856 1338 A9 56			lda #$56
   857 133A 91 10			sta (:bp),y
   858
   859 				; optimize OK (tools.inc), line = 62
   860
   861 133C A5 59			lda I0B
   862 133E 0A				asl @
   863 133F A8				tay
   864 1340 B9 06 2D			lda adr.OBSTACLES,y
   865 1343 38 E9 00			sub #$00
   866 1346 85 21			sta :STACKORIGIN+9
   867 1348 B9 07 2D			lda adr.OBSTACLES+1,y
   868 134B E9 04			sbc #$04
   869 134D 85 11			sta :bp+1
   870 134F A4 21			ldy :STACKORIGIN+9
   871 1351 A9 35			lda #$35
   872 1353 91 10			sta (:bp),y
   873 1355			l_021D
   874
   875 				; --- ForToDoEpilog
   876 1355 C6 59			dec I0B
   877 1357 10 C1			jpl l_01FB
   878 1359			l_0209
   879
   880 				; ------------------------------------------------------------
   881
   882 = 0000			@FORTMP_01F8	= $00
   883 1359			@exit
   884 					.ifdef @new
   885 					lda <@VarData
   886 					sta :ztmp
   887 					lda >@VarData
   888 					ldy #@VarDataSize-1
   889 					jmp @FreeMem
   890 					els
   891 1359 60				rts						; ret
   892 					eif
   893 				.endl
   894
   895 135A			.local	DRAWTAIL					; PROCEDURE
   896
   897 				; optimize OK (tools.inc), line = 71
   898
   899 135A AC C3 2C 84 12 AC + 	mwy PLY :bp2
   900 1364 A0 04			ldy #PLY.DIR-DATAORIGIN
   901 1366 B1 12			lda (:bp2),y
   902 1368 C5 5B			cmp NEWDIR
   903 136A D0 14			jne l_024F
   904
   905 				; optimize OK (tools.inc), line = 72
   906
   907 136C A5 5B			lda NEWDIR
   908 136E 29 0C			and #$0C
   909 1370 F0 07			jeq l_0266
   910 1372 A9 40			lda #$40
   911 1374 85 58			sta T0B
   912 1376 4C 7D 13			jmp l_0274
   913 1379			l_0266
   914 1379 A9 42			lda #$42
   915 137B 85 58			sta T0B
   916 137D			l_0274
   917 137D 4C F0 13			jmp l_0281
   918 1380			l_024F
   919
   920 				; optimize OK (tools.inc), line = 74
   921
   922 1380 AC C3 2C 84 12 AC + 	mwy PLY :bp2
   923 138A A0 04			ldy #PLY.DIR-DATAORIGIN
   924 138C B1 12			lda (:bp2),y
   925 138E 29 0A			and #$0A
   926 1390 F0 0A			jeq l_02A7
   927 1392 A5 5B			lda NEWDIR
   928 1394 29 05			and #$05
   929 1396 F0 04			jeq l_02A7
   930 1398 A9 7D			lda #$7D
   931 139A 85 58			sta T0B
   932 139C			l_02A7
   933
   934 				; optimize OK (tools.inc), line = 75
   935
   936 139C AC C3 2C 84 12 AC + 	mwy PLY :bp2
   937 13A6 A0 04			ldy #PLY.DIR-DATAORIGIN
   938 13A8 B1 12			lda (:bp2),y
   939 13AA 29 09			and #$09
   940 13AC F0 0A			jeq l_02D4
   941 13AE A5 5B			lda NEWDIR
   942 13B0 29 06			and #$06
   943 13B2 F0 04			jeq l_02D4
   944 13B4 A9 6E			lda #$6E
   945 13B6 85 58			sta T0B
   946 13B8			l_02D4
   947
   948 				; optimize OK (tools.inc), line = 76
   949
   950 13B8 AC C3 2C 84 12 AC + 	mwy PLY :bp2
   951 13C2 A0 04			ldy #PLY.DIR-DATAORIGIN
   952 13C4 B1 12			lda (:bp2),y
   953 13C6 29 06			and #$06
   954 13C8 F0 0A			jeq l_0301
   955 13CA A5 5B			lda NEWDIR
   956 13CC 29 09			and #$09
   957 13CE F0 04			jeq l_0301
   958 13D0 A9 6D			lda #$6D
   959 13D2 85 58			sta T0B
   960 13D4			l_0301
   961
   962 				; optimize OK (tools.inc), line = 77
   963
   964 13D4 AC C3 2C 84 12 AC + 	mwy PLY :bp2
   965 13DE A0 04			ldy #PLY.DIR-DATAORIGIN
   966 13E0 B1 12			lda (:bp2),y
   967 13E2 29 05			and #$05
   968 13E4 F0 0A			jeq l_032E
   969 13E6 A5 5B			lda NEWDIR
   970 13E8 29 0A			and #$0A
   971 13EA F0 04			jeq l_032E
   972 13EC A9 70			lda #$70
   973 13EE 85 58			sta T0B
   974 13F0			l_032E
   975 13F0			l_0281
   976
   977 				; optimize OK (tools.inc), line = 79
   978
   979 13F0 AC C3 2C 84 12 AC + 	mwy PLY :bp2
   980 13FA A0 00			ldy #PLY.X-DATAORIGIN
   981 13FC B1 12			lda (:bp2),y
   982 13FE 8D 1A 2D			sta PUTCHAR_0098.X
   983 1401 A0 01			ldy #PLY.Y-DATAORIGIN
   984 1403 B1 12			lda (:bp2),y
   985 1405 8D 1B 2D			sta PUTCHAR_0098.Y
   986 1408 A5 58			lda T0B
   987 140A 8D 1C 2D			sta PUTCHAR_0098.V
   988 140D 20 A3 11			jsr PUTCHAR_0098
   989 1410			@exit
   990 					.ifdef @new
   991 					lda <@VarData
   992 					sta :ztmp
   993 					lda >@VarData
   994 					ldy #@VarDataSize-1
   995 					jmp @FreeMem
   996 					els
   997 1410 60				rts						; ret
   998 					eif
   999 				.endl
  1000
  1001 1411			.local	CHECKJOYSTATUS					; PROCEDURE
  1002
  1003 				; optimize OK (tools.inc), line = 86
  1004
  1005 1411 A9 02			lda #$02
  1006 1413 8D 08 FF			sta JOY
  1007 1416 A9 FF			lda #$FF
  1008 1418 8D 30 FD			sta KEYSCAN
  1009
  1010 				; optimize OK (tools.inc), line = 87
  1011
  1012 141B AD 08 FF			lda JOY
  1013 141E 49 FF			eor #$FF
  1014 1420 85 63			sta JOYSTATUS
  1015 1422			@exit
  1016 					.ifdef @new
  1017 					lda <@VarData
  1018 					sta :ztmp
  1019 					lda >@VarData
  1020 					ldy #@VarDataSize-1
  1021 					jmp @FreeMem
  1022 					els
  1023 1422 60				rts						; ret
  1024 					eif
  1025 				.endl
  1026
  1027 1423			.local	SETPLAYER					; PROCEDURE
  1028
  1029 				; optimize OK (tools.inc), line = 94
  1030
  1031 1423 AD 23 2D			lda P
  1032 1426 8D C3 2C			sta PLY
  1033 1429 85 12			sta :bp2
  1034 142B AD 24 2D			lda P+1
  1035 142E 8D C4 2C			sta PLY+1
  1036 1431 85 13			sta :bp2+1
  1037 				; optimize OK (tools.inc), line = 95
  1038 1433 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1039 1435 AD 28 2D			lda BRAIN
  1040 1438 91 12			sta (:bp2),y
  1041 143A A0 00			ldy #PLY.X-DATAORIGIN
  1042 143C AD 25 2D			lda X
  1043 143F 91 12			sta (:bp2),y
  1044 1441 A0 01			ldy #PLY.Y-DATAORIGIN
  1045 1443 AD 26 2D			lda Y
  1046 1446 91 12			sta (:bp2),y
  1047 1448 A0 04			ldy #PLY.DIR-DATAORIGIN
  1048 144A AD 27 2D			lda DIR
  1049 144D 91 12			sta (:bp2),y
  1050
  1051 				; optimize OK (tools.inc), line = 96
  1052
  1053 144F A0 02			ldy #PLY.HEAD-DATAORIGIN
  1054 1451 AD 29 2D			lda HEAD
  1055 1454 91 12			sta (:bp2),y
  1056 1456 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1057 1458 AD 2A 2D			lda COLOUR
  1058 145B 91 12			sta (:bp2),y
  1059 145D A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1060 145F AD 2B 2D			lda ISALIVE
  1061 1462 91 12			sta (:bp2),y
  1062
  1063 				; optimize OK (tools.inc), line = 97
  1064
  1065 1464 AD 2B 2D			lda ISALIVE
  1066 1467 F0 1D			jeq l_0394
  1067
  1068 				; optimize FAIL (0, tools.inc), line = 98
  1069
  1070 1469 E6 5A			inc ALIVE
  1071 146B AD 2A 2D			lda COLOUR
  1072 146E 8D 19 2D			sta PUTCHAR_0072.C
  1073 1471 AD 29 2D			lda HEAD
  1074 1474 8D 18 2D			sta PUTCHAR_0072.V
  1075 1477 AD 26 2D			lda Y
  1076 147A 8D 17 2D			sta PUTCHAR_0072.Y
  1077 147D AD 25 2D			lda X
  1078 1480 8D 16 2D			sta PUTCHAR_0072.X
  1079 1483 20 78 11			jsr PUTCHAR_0072
  1080 1486			l_0394
  1081
  1082 				; ------------------------------------------------------------
  1083
  1084 = 2D23			P	= DATAORIGIN+$004F
  1085 = 2D25			X	= DATAORIGIN+$0051
  1086 = 2D26			Y	= DATAORIGIN+$0052
  1087 = 2D27			DIR	= DATAORIGIN+$0053
  1088 = 2D28			BRAIN	= DATAORIGIN+$0054
  1089 = 2D29			HEAD	= DATAORIGIN+$0055
  1090 = 2D2A			COLOUR	= DATAORIGIN+$0056
  1091 = 2D2B			ISALIVE	= DATAORIGIN+$0057
  1092
  1093 = 2D23			@VarData	= P
  1094 = 0009			@VarDataSize	= 9
  1095
  1096 1486			@exit
  1097 					.ifdef @new
  1098 					lda <@VarData
  1099 					sta :ztmp
  1100 					lda >@VarData
  1101 					ldy #@VarDataSize-1
  1102 					jmp @FreeMem
  1103 					els
  1104 1486 60				rts						; ret
  1105 					eif
  1106 				.endl
  1107
  1108 1487			.local	INITPLAYFIELD					; PROCEDURE
  1109
  1110 				; optimize OK (init.inc), line = 5
  1111
  1112 1487 A9 1F			lda #$1F
  1113 1489 8D 15 FF			sta BACKGROUND
  1114 148C A9 00			lda #$00
  1115 148E 8D 19 FF			sta BOREDER
  1116
  1117 				; optimize OK (init.inc), line = 6
  1118
  1119 1491 A9 20			lda #$20
  1120 1493 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
  1121 1495 A9 C0			lda #$C0
  1122 1497 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
  1123 1499 A9 03			lda #$03
  1124 149B 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
  1125 149D A9 00			lda #$00
  1126 149F 85 08			sta SYSTEM.FILLCHAR_0056.A
  1127 14A1 A9 0C			lda #$0C
  1128 14A3 85 09			sta SYSTEM.FILLCHAR_0056.A+1
  1129 14A5 20 1F 11			jsr SYSTEM.FILLCHAR_0056
  1130
  1131 				; optimize OK (init.inc), line = 8
  1132
  1133 14A8 A9 27			lda #$27
  1134 14AA 85 58			sta T0B
  1135
  1136 14AC			l_03C1
  1137 				; --- ForToDoCondition
  1138
  1139 				; optimize OK (init.inc), line = 9
  1140
  1141 14AC A4 58			ldy T0B
  1142 14AE A9 A0			lda #$A0
  1143 14B0 99 00 0C			sta $0C00,y
  1144
  1145 				; optimize OK (init.inc), line = 10
  1146
  1147 14B3 99 C0 0F			sta $0FC0,y
  1148
  1149 				; optimize OK (init.inc), line = 11
  1150
  1151 14B6 A9 41			lda #$41
  1152 14B8 99 00 08			sta $0800,y
  1153
  1154 				; optimize OK (init.inc), line = 12
  1155
  1156 14BB 99 C0 0B			sta $0BC0,y
  1157
  1158 				; --- ForToDoEpilog
  1159 14BE C6 58			dec T0B
  1160 14C0 10 EA			jpl l_03C1
  1161 14C2			l_03CF
  1162
  1163 				; optimize OK (init.inc), line = 15
  1164
  1165 14C2 A9 18			lda #$18
  1166 14C4 85 58			sta T0B
  1167
  1168 14C6			l_0401
  1169 				; --- ForToDoCondition
  1170 14C6 A5 58			lda T0B
  1171 14C8 C9 01			cmp #$01
  1172 14CA 90 3A			jcc l_040F
  1173
  1174 				; optimize OK (init.inc), line = 16
  1175
  1176 14CC 0A				asl @
  1177 14CD A8				tay
  1178 14CE A9 FF			lda #$FF
  1179 14D0 18 79 0E 10			add adr.MUL40,y
  1180 14D4 85 12			sta :bp2
  1181 14D6 A9 0B			lda #$0B
  1182 14D8 79 0F 10			adc adr.MUL40+1,y
  1183 14DB 85 13			sta :bp2+1
  1184 14DD A0 00			ldy #$00
  1185 14DF A9 A0			lda #$A0
  1186 14E1 91 12			sta (:bp2),y
  1187 14E3 C8				iny
  1188 14E4 91 12			sta (:bp2),y
  1189
  1190 				; optimize OK (init.inc), line = 17
  1191
  1192 14E6 A5 58			lda T0B
  1193 14E8 0A				asl @
  1194 14E9 A8				tay
  1195 14EA A9 FF			lda #$FF
  1196 14EC 18 79 0E 10			add adr.MUL40,y
  1197 14F0 85 12			sta :bp2
  1198 14F2 A9 07			lda #$07
  1199 14F4 79 0F 10			adc adr.MUL40+1,y
  1200 14F7 85 13			sta :bp2+1
  1201 14F9 A0 00			ldy #$00
  1202 14FB A9 41			lda #$41
  1203 14FD 91 12			sta (:bp2),y
  1204 14FF C8				iny
  1205 1500 91 12			sta (:bp2),y
  1206
  1207 				; --- ForToDoEpilog
  1208 1502 C6 58			dec T0B
  1209 1504 10 C0			jpl l_0401
  1210 1506			l_040F
  1211
  1212 				; optimize OK (init.inc), line = 20
  1213
  1214 1506 A9 07			lda #$07
  1215 1508 85 59			sta I0B
  1216
  1217 150A			l_0433
  1218 				; --- ForToDoCondition
  1219 150A A5 59			lda I0B
  1220 150C 0A				asl @
  1221 150D A8				tay
  1222 150E A9 7E			lda #$7E
  1223 1510 99 06 2D			sta adr.OBSTACLES,y
  1224 1513 A9 00			lda #$00
  1225 1515 99 07 2D			sta adr.OBSTACLES+1,y
  1226
  1227 				; --- ForToDoEpilog
  1228 1518 C6 59			dec I0B
  1229 151A 10 EE			jpl l_0433
  1230 151C			l_0441
  1231
  1232 				; ------------------------------------------------------------
  1233
  1234 = 0000			@FORTMP_03BE	= $00
  1235 = 0001			@FORTMP_03FE	= $01
  1236 = 0000			@FORTMP_0430	= $00
  1237 151C			@exit
  1238 					.ifdef @new
  1239 					lda <@VarData
  1240 					sta :ztmp
  1241 					lda >@VarData
  1242 					ldy #@VarDataSize-1
  1243 					jmp @FreeMem
  1244 					els
  1245 151C 60				rts						; ret
  1246 					eif
  1247 				.endl
  1248
  1249 151D			.local	AISTRAIGHT					; PROCEDURE
  1250
  1251 				; optimize OK (ai.inc), line = 5
  1252
  1253 151D AC C3 2C 84 12 AC + 	mwy PLY :bp2
  1254 1527 A0 04			ldy #PLY.DIR-DATAORIGIN
  1255 1529 B1 12			lda (:bp2),y
  1256 152B 25 5C			and AVAILDIR
  1257 152D F0 07			jeq l_0469
  1258 152F B1 12			lda (:bp2),y
  1259 1531 85 5B			sta NEWDIR
  1260 1533 4C A1 15			jmp l_0479
  1261 1536			l_0469
  1262
  1263 				; optimize OK (ai.inc), line = 7
  1264
  1265 1536 A5 5C			lda AVAILDIR
  1266 1538 C9 03			cmp #$03
  1267 153A D0 10			jne l_048B
  1268 153C A9 02			lda #$02
  1269 153E 20 47 11			jsr SYSTEM.RANDOM_006D
  1270 1541 B4 18			ldy :STACKORIGIN,x
  1271 1543 B9 40 10			lda adr.DIRECTION,y
  1272 1546 85 5B			sta NEWDIR
  1273 1548 CA				dex
  1274 1549 4C 64 15			jmp l_049D
  1275 154C			l_048B
  1276
  1277 				; optimize OK (ai.inc), line = 9
  1278
  1279 154C A5 5C			lda AVAILDIR
  1280 154E 8D 2C 2D			sta @CASETMP_0003
  1281 1551 C9 01			cmp #$01
  1282 1553 D0 07			jne l_04A8
  1283 1555			@
  1284
  1285 				; optimize OK (ai.inc), line = 10
  1286
  1287 1555 A9 01			lda #$01
  1288 1557 85 5B			sta NEWDIR
  1289
  1290 1559 4C 64 15			jmp a_0003
  1291 155C			l_04A8
  1292 155C C9 02			cmp #$02
  1293 155E D0 04			jne l_04B5
  1294 1560			@
  1295
  1296 				; optimize OK (ai.inc), line = 11
  1297
  1298 1560 A9 02			lda #$02
  1299 1562 85 5B			sta NEWDIR
  1300
  1301 1564			l_04B5
  1302 1564			a_0003
  1303 1564			l_049D
  1304
  1305 				; optimize OK (ai.inc), line = 14
  1306
  1307 1564 A5 5C			lda AVAILDIR
  1308 1566 C9 0C			cmp #$0C
  1309 1568 D0 1F			jne l_04D1
  1310 156A A9 02			lda #$02
  1311 156C 20 47 11			jsr SYSTEM.RANDOM_006D
  1312 156F E8				inx
  1313 1570 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1314 1574 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1315 1578 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1316 157A 20 44 10			jsr addAX_CX
  1317 157D CA				dex
  1318 157E B4 18			ldy :STACKORIGIN,x
  1319 1580 B9 40 10			lda adr.DIRECTION,y
  1320 1583 85 5B			sta NEWDIR
  1321 1585 CA				dex
  1322 1586 4C A1 15			jmp l_04E7
  1323 1589			l_04D1
  1324
  1325 				; optimize OK (ai.inc), line = 16
  1326
  1327 1589 A5 5C			lda AVAILDIR
  1328 158B 8D 2D 2D			sta @CASETMP_0004
  1329 158E C9 04			cmp #$04
  1330 1590 D0 07			jne l_04F2
  1331 1592			@
  1332
  1333 				; optimize OK (ai.inc), line = 17
  1334
  1335 1592 A9 04			lda #$04
  1336 1594 85 5B			sta NEWDIR
  1337
  1338 1596 4C A1 15			jmp a_0004
  1339 1599			l_04F2
  1340 1599 C9 08			cmp #$08
  1341 159B D0 04			jne l_04FF
  1342 159D			@
  1343
  1344 				; optimize OK (ai.inc), line = 18
  1345
  1346 159D A9 08			lda #$08
  1347 159F 85 5B			sta NEWDIR
  1348
  1349 15A1			l_04FF
  1350 15A1			a_0004
  1351 15A1			l_04E7
  1352 15A1			l_0479
  1353
  1354 				; ------------------------------------------------------------
  1355
  1356 = 2D2C			@CASETMP_0003	= DATAORIGIN+$0058
  1357 = 2D2D			@CASETMP_0004	= DATAORIGIN+$0059
  1358
  1359 = 2D2C			@VarData	= @CASETMP_0003
  1360 = 0002			@VarDataSize	= 2
  1361
  1362 15A1			@exit
  1363 					.ifdef @new
  1364 					lda <@VarData
  1365 					sta :ztmp
  1366 					lda >@VarData
  1367 					ldy #@VarDataSize-1
  1368 					jmp @FreeMem
  1369 					els
  1370 15A1 60				rts						; ret
  1371 					eif
  1372 				.endl
  1373
  1374 15A2			.local	AISAPPER					; PROCEDURE
  1375
  1376 				; optimize OK (ai.inc), line = 31
  1377
  1378 15A2 A9 00			lda #$00
  1379 15A4 8D 2E 2D			sta L
  1380 15A7 8D 2F 2D			sta R
  1381 15AA 8D 30 2D			sta U
  1382 15AD 8D 31 2D			sta D
  1383
  1384 				; optimize OK (ai.inc), line = 32
  1385
  1386 15B0 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  1387 15BA A0 01			ldy #PLY.Y-DATAORIGIN
  1388 15BC B1 12			lda (:bp2),y
  1389 15BE 0A				asl @
  1390 15BF A8				tay
  1391 15C0 A9 00			lda #$00
  1392 15C2 18 79 0E 10			add adr.MUL40,y
  1393 15C6 85 21			sta :STACKORIGIN+9
  1394 15C8 A9 0C			lda #$0C
  1395 15CA 79 0F 10			adc adr.MUL40+1,y
  1396 15CD 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1397 15CF A0 00			ldy #PLY.X-DATAORIGIN
  1398 15D1 A5 21			lda :STACKORIGIN+9
  1399 15D3 18 71 12			add (:bp2),y
  1400 15D6 85 5D			sta T0W
  1401 15D8 A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1402 15DA 69 00			adc #$00
  1403 15DC 85 5E			sta T0W+1
  1404
  1405 				; optimize OK (ai.inc), line = 34
  1406
  1407 15DE A5 5C			lda AVAILDIR
  1408 15E0 29 01			and #$01
  1409 15E2 F0 73			jeq l_0545
  1410
  1411 				; optimize OK (ai.inc), line = 35
  1412
  1413 15E4 A9 05			lda #$05
  1414 15E6 85 59			sta I0B
  1415
  1416 15E8			l_054F
  1417 				; --- ForToDoCondition
  1418 15E8 A5 59			lda I0B
  1419 15EA C9 01			cmp #$01
  1420 15EC 90 69			jcc l_055D
  1421
  1422 				; optimize OK (ai.inc), line = 36
  1423
  1424 15EE 0A				asl @
  1425 15EF A8				tay
  1426 15F0 A5 5D			lda T0W
  1427 15F2 38 F9 0E 10			sub adr.MUL40,y
  1428 15F6 85 21			sta :STACKORIGIN+9
  1429 15F8 A5 5E			lda T0W+1
  1430 15FA F9 0F 10			sbc adr.MUL40+1,y
  1431 15FD 85 11			sta :bp+1
  1432 15FF A4 21			ldy :STACKORIGIN+9
  1433 1601 B1 10			lda (:bp),y
  1434 1603 C9 20			cmp #$20
  1435 1605 D0 03			jne l_0577
  1436 1607 EE 30 2D			inc U
  1437 160A			l_0577
  1438
  1439 				; optimize OK (ai.inc), line = 37
  1440
  1441 160A A5 59			lda I0B
  1442 160C 0A				asl @
  1443 160D A8				tay
  1444 160E A5 5D			lda T0W
  1445 1610 38 F9 0E 10			sub adr.MUL40,y
  1446 1614 85 21			sta :STACKORIGIN+9
  1447 1616 A5 5E			lda T0W+1
  1448 1618 F9 0F 10			sbc adr.MUL40+1,y
  1449 161B 85 11			sta :bp+1
  1450 161D A5 21			lda :STACKORIGIN+9
  1451 161F 18 69 01			add #$01
  1452 1622 A8				tay
  1453 1623 90 02			scc
  1454 1625 E6 11			inc :bp+1
  1455 1627 B1 10			lda (:bp),y
  1456 1629 C9 20			cmp #$20
  1457 162B D0 03			jne l_059C
  1458 162D EE 30 2D			inc U
  1459 1630			l_059C
  1460
  1461 				; optimize OK (ai.inc), line = 38
  1462
  1463 1630 A5 59			lda I0B
  1464 1632 0A				asl @
  1465 1633 A8				tay
  1466 1634 A5 5D			lda T0W
  1467 1636 38 F9 0E 10			sub adr.MUL40,y
  1468 163A 85 21			sta :STACKORIGIN+9
  1469 163C A5 5E			lda T0W+1
  1470 163E F9 0F 10			sbc adr.MUL40+1,y
  1471 1641 85 11			sta :bp+1
  1472 1643 A4 21			ldy :STACKORIGIN+9
  1473 1645 88				dey
  1474 1646 B0 02			scs
  1475 1648 C6 11			dec :bp+1
  1476 164A B1 10			lda (:bp),y
  1477 164C C9 20			cmp #$20
  1478 164E D0 03			jne l_05C1
  1479 1650 EE 30 2D			inc U
  1480 1653			l_05C1
  1481
  1482 				; --- ForToDoEpilog
  1483 1653 C6 59			dec I0B
  1484 1655 10 91			jpl l_054F
  1485 1657			l_055D
  1486 1657			l_0545
  1487
  1488 				; optimize OK (ai.inc), line = 42
  1489
  1490 1657 A5 5C			lda AVAILDIR
  1491 1659 29 02			and #$02
  1492 165B F0 73			jeq l_05E5
  1493
  1494 				; optimize OK (ai.inc), line = 43
  1495
  1496 165D A9 05			lda #$05
  1497 165F 85 59			sta I0B
  1498
  1499 1661			l_05EF
  1500 				; --- ForToDoCondition
  1501 1661 A5 59			lda I0B
  1502 1663 C9 01			cmp #$01
  1503 1665 90 69			jcc l_05FD
  1504
  1505 				; optimize OK (ai.inc), line = 44
  1506
  1507 1667 0A				asl @
  1508 1668 A8				tay
  1509 1669 A5 5D			lda T0W
  1510 166B 18 79 0E 10			add adr.MUL40,y
  1511 166F 85 21			sta :STACKORIGIN+9
  1512 1671 A5 5E			lda T0W+1
  1513 1673 79 0F 10			adc adr.MUL40+1,y
  1514 1676 85 11			sta :bp+1
  1515 1678 A4 21			ldy :STACKORIGIN+9
  1516 167A B1 10			lda (:bp),y
  1517 167C C9 20			cmp #$20
  1518 167E D0 03			jne l_0617
  1519 1680 EE 31 2D			inc D
  1520 1683			l_0617
  1521
  1522 				; optimize OK (ai.inc), line = 45
  1523
  1524 1683 A5 59			lda I0B
  1525 1685 0A				asl @
  1526 1686 A8				tay
  1527 1687 A5 5D			lda T0W
  1528 1689 18 79 0E 10			add adr.MUL40,y
  1529 168D 85 21			sta :STACKORIGIN+9
  1530 168F A5 5E			lda T0W+1
  1531 1691 79 0F 10			adc adr.MUL40+1,y
  1532 1694 85 11			sta :bp+1
  1533 1696 A5 21			lda :STACKORIGIN+9
  1534 1698 18 69 01			add #$01
  1535 169B A8				tay
  1536 169C 90 02			scc
  1537 169E E6 11			inc :bp+1
  1538 16A0 B1 10			lda (:bp),y
  1539 16A2 C9 20			cmp #$20
  1540 16A4 D0 03			jne l_063C
  1541 16A6 EE 31 2D			inc D
  1542 16A9			l_063C
  1543
  1544 				; optimize OK (ai.inc), line = 46
  1545
  1546 16A9 A5 59			lda I0B
  1547 16AB 0A				asl @
  1548 16AC A8				tay
  1549 16AD A5 5D			lda T0W
  1550 16AF 18 79 0E 10			add adr.MUL40,y
  1551 16B3 85 21			sta :STACKORIGIN+9
  1552 16B5 A5 5E			lda T0W+1
  1553 16B7 79 0F 10			adc adr.MUL40+1,y
  1554 16BA 85 11			sta :bp+1
  1555 16BC A4 21			ldy :STACKORIGIN+9
  1556 16BE 88				dey
  1557 16BF B0 02			scs
  1558 16C1 C6 11			dec :bp+1
  1559 16C3 B1 10			lda (:bp),y
  1560 16C5 C9 20			cmp #$20
  1561 16C7 D0 03			jne l_0661
  1562 16C9 EE 31 2D			inc D
  1563 16CC			l_0661
  1564
  1565 				; --- ForToDoEpilog
  1566 16CC C6 59			dec I0B
  1567 16CE 10 91			jpl l_05EF
  1568 16D0			l_05FD
  1569 16D0			l_05E5
  1570
  1571 				; optimize OK (ai.inc), line = 50
  1572
  1573 16D0 A5 5C			lda AVAILDIR
  1574 16D2 29 04			and #$04
  1575 16D4 F0 5F			jeq l_0685
  1576
  1577 				; optimize OK (ai.inc), line = 51
  1578
  1579 16D6 A9 05			lda #$05
  1580 16D8 85 59			sta I0B
  1581
  1582 16DA			l_068F
  1583 				; --- ForToDoCondition
  1584 16DA A5 59			lda I0B
  1585 16DC C9 01			cmp #$01
  1586 16DE 90 55			jcc l_069D
  1587
  1588 				; optimize OK (ai.inc), line = 52
  1589
  1590 16E0 A5 5D			lda T0W
  1591 16E2 38 E5 59			sub I0B
  1592 16E5 A8				tay
  1593 16E6 A5 5E			lda T0W+1
  1594 16E8 E9 00			sbc #$00
  1595 16EA 85 11			sta :bp+1
  1596 16EC B1 10			lda (:bp),y
  1597 16EE C9 20			cmp #$20
  1598 16F0 D0 03			jne l_06B5
  1599 16F2 EE 2E 2D			inc L
  1600 16F5			l_06B5
  1601
  1602 				; optimize OK (ai.inc), line = 53
  1603
  1604 16F5 A5 5D			lda T0W
  1605 16F7 38 E5 59			sub I0B
  1606 16FA A8				tay
  1607 16FB A5 5E			lda T0W+1
  1608 16FD E9 00			sbc #$00
  1609 16FF 85 11			sta :bp+1
  1610 1701 98				tya
  1611 1702 18 69 28			add #$28
  1612 1705 A8				tay
  1613 1706 90 02			scc
  1614 1708 E6 11			inc :bp+1
  1615 170A B1 10			lda (:bp),y
  1616 170C C9 20			cmp #$20
  1617 170E D0 03			jne l_06D8
  1618 1710 EE 2E 2D			inc L
  1619 1713			l_06D8
  1620
  1621 				; optimize OK (ai.inc), line = 54
  1622
  1623 1713 A5 5D			lda T0W
  1624 1715 38 E5 59			sub I0B
  1625 1718 A8				tay
  1626 1719 A5 5E			lda T0W+1
  1627 171B E9 00			sbc #$00
  1628 171D 85 11			sta :bp+1
  1629 171F 98				tya
  1630 1720 38 E9 28			sub #$28
  1631 1723 A8				tay
  1632 1724 B0 02			scs
  1633 1726 C6 11			dec :bp+1
  1634 1728 B1 10			lda (:bp),y
  1635 172A C9 20			cmp #$20
  1636 172C D0 03			jne l_06FB
  1637 172E EE 2E 2D			inc L
  1638 1731			l_06FB
  1639
  1640 				; --- ForToDoEpilog
  1641 1731 C6 59			dec I0B
  1642 1733 10 A5			jpl l_068F
  1643 1735			l_069D
  1644 1735			l_0685
  1645
  1646 				; optimize OK (ai.inc), line = 58
  1647
  1648 1735 A5 5C			lda AVAILDIR
  1649 1737 29 08			and #$08
  1650 1739 F0 5D			jeq l_071F
  1651
  1652 				; optimize OK (ai.inc), line = 59
  1653
  1654 173B A9 05			lda #$05
  1655 173D 85 59			sta I0B
  1656
  1657 173F			l_0729
  1658 				; --- ForToDoCondition
  1659 173F A5 59			lda I0B
  1660 1741 C9 01			cmp #$01
  1661 1743 90 53			jcc l_0737
  1662
  1663 				; optimize OK (ai.inc), line = 60
  1664
  1665 1745 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1666 174D A4 59			ldy I0B
  1667 174F B1 12			lda (:bp2),y
  1668 1751 C9 20			cmp #$20
  1669 1753 D0 03			jne l_074F
  1670 1755 EE 2F 2D			inc R
  1671 1758			l_074F
  1672
  1673 				; optimize OK (ai.inc), line = 61
  1674
  1675 1758 A5 5D			lda T0W
  1676 175A 18 65 59			add I0B
  1677 175D A8				tay
  1678 175E A5 5E			lda T0W+1
  1679 1760 69 00			adc #$00
  1680 1762 85 11			sta :bp+1
  1681 1764 98				tya
  1682 1765 18 69 28			add #$28
  1683 1768 A8				tay
  1684 1769 90 02			scc
  1685 176B E6 11			inc :bp+1
  1686 176D B1 10			lda (:bp),y
  1687 176F C9 20			cmp #$20
  1688 1771 D0 03			jne l_0772
  1689 1773 EE 2F 2D			inc R
  1690 1776			l_0772
  1691
  1692 				; optimize OK (ai.inc), line = 62
  1693
  1694 1776 A5 5D			lda T0W
  1695 1778 18 65 59			add I0B
  1696 177B A8				tay
  1697 177C A5 5E			lda T0W+1
  1698 177E 69 00			adc #$00
  1699 1780 85 11			sta :bp+1
  1700 1782 98				tya
  1701 1783 38 E9 28			sub #$28
  1702 1786 A8				tay
  1703 1787 B0 02			scs
  1704 1789 C6 11			dec :bp+1
  1705 178B B1 10			lda (:bp),y
  1706 178D C9 20			cmp #$20
  1707 178F D0 03			jne l_0795
  1708 1791 EE 2F 2D			inc R
  1709 1794			l_0795
  1710
  1711 				; --- ForToDoEpilog
  1712 1794 C6 59			dec I0B
  1713 1796 10 A7			jpl l_0729
  1714 1798			l_0737
  1715 1798			l_071F
  1716
  1717 				; optimize OK (ai.inc), line = 66
  1718
  1719 1798 AD 31 2D			lda D
  1720 179B 85 58			sta T0B
  1721
  1722 				; optimize OK (ai.inc), line = 67
  1723
  1724 179D CD 30 2D			cmp U
  1725 17A0 B0 05			jcs l_07BD
  1726 17A2 AD 30 2D			lda U
  1727 17A5 85 58			sta T0B
  1728 17A7			l_07BD
  1729
  1730 				; optimize OK (ai.inc), line = 68
  1731
  1732 17A7 A5 58			lda T0B
  1733 17A9 CD 2E 2D			cmp L
  1734 17AC B0 05			jcs l_07DA
  1735 17AE AD 2E 2D			lda L
  1736 17B1 85 58			sta T0B
  1737 17B3			l_07DA
  1738
  1739 				; optimize OK (ai.inc), line = 69
  1740
  1741 17B3 A5 58			lda T0B
  1742 17B5 CD 2F 2D			cmp R
  1743 17B8 B0 05			jcs l_07F7
  1744 17BA AD 2F 2D			lda R
  1745 17BD 85 58			sta T0B
  1746 17BF			l_07F7
  1747
  1748 				; optimize OK (ai.inc), line = 71
  1749
  1750 17BF A5 58			lda T0B
  1751 17C1 CD 31 2D			cmp D
  1752 17C4 D0 04			jne l_0814
  1753 17C6 A9 02			lda #$02
  1754 17C8 85 58			sta T0B
  1755 17CA			l_0814
  1756
  1757 				; optimize OK (ai.inc), line = 72
  1758
  1759 17CA A5 58			lda T0B
  1760 17CC CD 30 2D			cmp U
  1761 17CF D0 04			jne l_082F
  1762 17D1 A9 01			lda #$01
  1763 17D3 85 58			sta T0B
  1764 17D5			l_082F
  1765
  1766 				; optimize OK (ai.inc), line = 73
  1767
  1768 17D5 A5 58			lda T0B
  1769 17D7 CD 2E 2D			cmp L
  1770 17DA D0 04			jne l_084A
  1771 17DC A9 04			lda #$04
  1772 17DE 85 58			sta T0B
  1773 17E0			l_084A
  1774
  1775 				; optimize OK (ai.inc), line = 74
  1776
  1777 17E0 A5 58			lda T0B
  1778 17E2 CD 2F 2D			cmp R
  1779 17E5 D0 04			jne l_0865
  1780 17E7 A9 08			lda #$08
  1781 17E9 85 58			sta T0B
  1782 17EB			l_0865
  1783
  1784 				; optimize OK (ai.inc), line = 76
  1785
  1786 17EB A5 5C			lda AVAILDIR
  1787 17ED 25 58			and T0B
  1788 17EF F0 07			jeq l_0884
  1789 17F1 A5 58			lda T0B
  1790 17F3 85 5B			sta NEWDIR
  1791 17F5 4C FB 17			jmp l_0894
  1792 17F8			l_0884
  1793
  1794 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1795
  1796 17F8 20 1D 15			jsr AISTRAIGHT
  1797 17FB			l_0894
  1798
  1799 				; ------------------------------------------------------------
  1800
  1801 = 2D2E			L	= DATAORIGIN+$005A
  1802 = 2D2F			R	= DATAORIGIN+$005B
  1803 = 2D30			U	= DATAORIGIN+$005C
  1804 = 2D31			D	= DATAORIGIN+$005D
  1805 = 0001			@FORTMP_054C	= $01
  1806 = 0001			@FORTMP_05EC	= $01
  1807 = 0001			@FORTMP_068C	= $01
  1808 = 0001			@FORTMP_0726	= $01
  1809
  1810 = 2D2E			@VarData	= L
  1811 = 0004			@VarDataSize	= 4
  1812
  1813 17FB			@exit
  1814 					.ifdef @new
  1815 					lda <@VarData
  1816 					sta :ztmp
  1817 					lda >@VarData
  1818 					ldy #@VarDataSize-1
  1819 					jmp @FreeMem
  1820 					els
  1821 17FB 60				rts						; ret
  1822 					eif
  1823 				.endl
  1824
  1825 17FC			.local	AIBULLY						; PROCEDURE
  1826
  1827 				; optimize OK (ai.inc), line = 84
  1828
  1829 17FC AC C3 2C 84 12 AC + 	mwy PLY :bp2
  1830 1806 A0 04			ldy #PLY.DIR-DATAORIGIN
  1831 1808 B1 12			lda (:bp2),y
  1832 180A 85 58			sta T0B
  1833
  1834 				; optimize OK (ai.inc), line = 86
  1835
  1836 180C AD ED 2C			lda PLAYER1.ISALIVE
  1837 180F 0D F5 2C			ora PLAYER2.ISALIVE
  1838 1812 D0 03 4C B9 18		jeq l_08B1
  1839
  1840 				; optimize OK (ai.inc), line = 88
  1841
  1842 1817 AD ED 2C			lda PLAYER1.ISALIVE
  1843 181A F0 0F			jeq l_08BE
  1844 181C AD C7 2C			lda PLAYER1
  1845 181F 8D C5 2C			sta TMPPLY
  1846 1822 AD C8 2C			lda PLAYER1+1
  1847 1825 8D C6 2C			sta TMPPLY+1
  1848 1828 4C 37 18			jmp l_08CD
  1849 182B			l_08BE
  1850 182B AD C9 2C			lda PLAYER2
  1851 182E 8D C5 2C			sta TMPPLY
  1852 1831 AD CA 2C			lda PLAYER2+1
  1853 1834 8D C6 2C			sta TMPPLY+1
  1854 1837			l_08CD
  1855
  1856 				; optimize OK (ai.inc), line = 90
  1857
  1858 1837 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  1859 1841 A0 01			ldy #PLY.Y-DATAORIGIN
  1860 1843 B1 12			lda (:bp2),y
  1861 1845 85 21			sta :STACKORIGIN+9
  1862 1847 AC C5 2C 84 12 AC + 	mwy TMPPLY :bp2
  1863 1851 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1864 1853 B1 12			lda (:bp2),y
  1865 1855 C5 21			cmp :STACKORIGIN+9
  1866 1857 B0 07			jcs l_08E6
  1867 1859 A9 01			lda #$01
  1868 185B 85 58			sta T0B
  1869 185D 4C 64 18			jmp l_08F4
  1870 1860			l_08E6
  1871 1860 A9 02			lda #$02
  1872 1862 85 58			sta T0B
  1873 1864			l_08F4
  1874
  1875 				; optimize OK (ai.inc), line = 91
  1876
  1877 1864 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  1878 186E A0 01			ldy #PLY.Y-DATAORIGIN
  1879 1870 B1 12			lda (:bp2),y
  1880 1872 85 21			sta :STACKORIGIN+9
  1881 1874 AC C5 2C 84 12 AC + 	mwy TMPPLY :bp2
  1882 187E A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1883 1880 B1 12			lda (:bp2),y
  1884 1882 C5 21			cmp :STACKORIGIN+9
  1885 1884 F0 06			jeq l_091Ex
  1886 1886 A5 5C			lda AVAILDIR
  1887 1888 25 58			and T0B
  1888 188A D0 2D			jne l_091E
  1889 188C			l_091Ex
  1890
  1891 				; optimize OK (ai.inc), line = 92
  1892
  1893 188C AC C3 2C 84 12 AC + 	mwy PLY :bp2
  1894 1896 A0 00			ldy #PLY.X-DATAORIGIN
  1895 1898 B1 12			lda (:bp2),y
  1896 189A 85 21			sta :STACKORIGIN+9
  1897 189C AC C5 2C 84 12 AC + 	mwy TMPPLY :bp2
  1898 18A6 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1899 18A8 B1 12			lda (:bp2),y
  1900 18AA C5 21			cmp :STACKORIGIN+9
  1901 18AC B0 07			jcs l_0933
  1902 18AE A9 04			lda #$04
  1903 18B0 85 58			sta T0B
  1904 18B2 4C B9 18			jmp l_0941
  1905 18B5			l_0933
  1906 18B5 A9 08			lda #$08
  1907 18B7 85 58			sta T0B
  1908 18B9			l_0941
  1909 18B9			l_091E
  1910 18B9			l_08B1
  1911
  1912 				; optimize OK (ai.inc), line = 96
  1913
  1914 18B9 A5 5C			lda AVAILDIR
  1915 18BB 25 58			and T0B
  1916 18BD F0 07			jeq l_0961
  1917 18BF A5 58			lda T0B
  1918 18C1 85 5B			sta NEWDIR
  1919 18C3 4C C9 18			jmp l_0971
  1920 18C6			l_0961
  1921
  1922 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  1923
  1924 18C6 20 A2 15			jsr AISAPPER
  1925 18C9			l_0971
  1926 18C9			@exit
  1927 					.ifdef @new
  1928 					lda <@VarData
  1929 					sta :ztmp
  1930 					lda >@VarData
  1931 					ldy #@VarDataSize-1
  1932 					jmp @FreeMem
  1933 					els
  1934 18C9 60				rts						; ret
  1935 					eif
  1936 				.endl
  1937
  1938 18CA			.local	AIMIRROR					; PROCEDURE
  1939
  1940 				; optimize OK (ai.inc), line = 105
  1941
  1942 18CA AC C3 2C 84 12 AC + 	mwy PLY :bp2
  1943 18D4 A0 04			ldy #PLY.DIR-DATAORIGIN
  1944 18D6 B1 12			lda (:bp2),y
  1945 18D8 85 58			sta T0B
  1946
  1947 				; optimize OK (ai.inc), line = 107
  1948
  1949 18DA AD ED 2C			lda PLAYER1.ISALIVE
  1950 18DD F0 2F			jeq l_0988
  1951
  1952 				; optimize OK (ai.inc), line = 108
  1953
  1954 18DF AD EA 2C			lda PLAYER1.DIR
  1955 18E2 8D 32 2D			sta @CASETMP_0005
  1956 18E5 C9 01			cmp #$01
  1957 18E7 D0 07			jne l_0994
  1958 18E9			@
  1959
  1960 				; optimize OK (ai.inc), line = 109
  1961
  1962 18E9 A9 02			lda #$02
  1963 18EB 85 58			sta T0B
  1964
  1965 18ED 4C 0E 19			jmp a_0005
  1966 18F0			l_0994
  1967 18F0 C9 02			cmp #$02
  1968 18F2 D0 07			jne l_09A1
  1969 18F4			@
  1970
  1971 				; optimize OK (ai.inc), line = 110
  1972
  1973 18F4 A9 01			lda #$01
  1974 18F6 85 58			sta T0B
  1975
  1976 18F8 4C 0E 19			jmp a_0005
  1977 18FB			l_09A1
  1978 18FB C9 04			cmp #$04
  1979 18FD D0 07			jne l_09AE
  1980 18FF			@
  1981
  1982 				; optimize OK (ai.inc), line = 111
  1983
  1984 18FF A9 08			lda #$08
  1985 1901 85 58			sta T0B
  1986
  1987 1903 4C 0E 19			jmp a_0005
  1988 1906			l_09AE
  1989 1906 C9 08			cmp #$08
  1990 1908 D0 04			jne l_09BB
  1991 190A			@
  1992
  1993 				; optimize OK (ai.inc), line = 112
  1994
  1995 190A A9 04			lda #$04
  1996 190C 85 58			sta T0B
  1997
  1998 190E			l_09BB
  1999 190E			a_0005
  2000 190E			l_0988
  2001
  2002 				; optimize OK (ai.inc), line = 116
  2003
  2004 190E A5 5C			lda AVAILDIR
  2005 1910 25 58			and T0B
  2006 1912 F0 07			jeq l_09E1
  2007 1914 A5 58			lda T0B
  2008 1916 85 5B			sta NEWDIR
  2009 1918 4C 1E 19			jmp l_09F1
  2010 191B			l_09E1
  2011
  2012 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  2013
  2014 191B 20 A2 15			jsr AISAPPER
  2015 191E			l_09F1
  2016
  2017 				; ------------------------------------------------------------
  2018
  2019 = 2D32			@CASETMP_0005	= DATAORIGIN+$005E
  2020
  2021 = 2D32			@VarData	= @CASETMP_0005
  2022 = 0001			@VarDataSize	= 1
  2023
  2024 191E			@exit
  2025 					.ifdef @new
  2026 					lda <@VarData
  2027 					sta :ztmp
  2028 					lda >@VarData
  2029 					ldy #@VarDataSize-1
  2030 					jmp @FreeMem
  2031 					els
  2032 191E 60				rts						; ret
  2033 					eif
  2034 				.endl
  2035
  2036 191F			.local	SETLEVEL00					; PROCEDURE
  2037
  2038 				; optimize OK (levels.inc), line = 5
  2039
  2040 191F A9 01			lda #$01
  2041 1921 8D 2B 2D			sta SETPLAYER.ISALIVE
  2042 1924 A9 62			lda #$62
  2043 1926 8D 2A 2D			sta SETPLAYER.COLOUR
  2044 1929 A9 51			lda #$51
  2045 192B 8D 29 2D			sta SETPLAYER.HEAD
  2046 192E A9 00			lda #$00
  2047 1930 8D 28 2D			sta SETPLAYER.BRAIN
  2048 1933 A9 08			lda #$08
  2049 1935 8D 27 2D			sta SETPLAYER.DIR
  2050 1938 A9 0C			lda #$0C
  2051 193A 8D 26 2D			sta SETPLAYER.Y
  2052 193D A9 0A			lda #$0A
  2053 193F 8D 25 2D			sta SETPLAYER.X
  2054 1942 AD C7 2C			lda PLAYER1
  2055 1945 8D 23 2D			sta SETPLAYER.P
  2056 1948 AD C8 2C			lda PLAYER1+1
  2057 194B 8D 24 2D			sta SETPLAYER.P+1
  2058 194E 20 23 14			jsr SETPLAYER
  2059
  2060 				; optimize OK (levels.inc), line = 6
  2061
  2062 1951 A9 01			lda #$01
  2063 1953 8D 2B 2D			sta SETPLAYER.ISALIVE
  2064 1956 A9 5D			lda #$5D
  2065 1958 8D 2A 2D			sta SETPLAYER.COLOUR
  2066 195B A9 51			lda #$51
  2067 195D 8D 29 2D			sta SETPLAYER.HEAD
  2068 1960 A9 01			lda #$01
  2069 1962 8D 28 2D			sta SETPLAYER.BRAIN
  2070 1965 A9 04			lda #$04
  2071 1967 8D 27 2D			sta SETPLAYER.DIR
  2072 196A A9 0C			lda #$0C
  2073 196C 8D 26 2D			sta SETPLAYER.Y
  2074 196F A9 1E			lda #$1E
  2075 1971 8D 25 2D			sta SETPLAYER.X
  2076 1974 AD C9 2C			lda PLAYER2
  2077 1977 8D 23 2D			sta SETPLAYER.P
  2078 197A AD CA 2C			lda PLAYER2+1
  2079 197D 8D 24 2D			sta SETPLAYER.P+1
  2080 1980 20 23 14			jsr SETPLAYER
  2081
  2082 				; optimize OK (levels.inc), line = 7
  2083
  2084 1983 A9 00			lda #$00
  2085 1985 8D 2B 2D			sta SETPLAYER.ISALIVE
  2086 1988 A9 71			lda #$71
  2087 198A 8D 2A 2D			sta SETPLAYER.COLOUR
  2088 198D A9 51			lda #$51
  2089 198F 8D 29 2D			sta SETPLAYER.HEAD
  2090 1992 A9 03			lda #$03
  2091 1994 8D 28 2D			sta SETPLAYER.BRAIN
  2092 1997 A9 02			lda #$02
  2093 1999 8D 27 2D			sta SETPLAYER.DIR
  2094 199C A9 04			lda #$04
  2095 199E 8D 26 2D			sta SETPLAYER.Y
  2096 19A1 A9 14			lda #$14
  2097 19A3 8D 25 2D			sta SETPLAYER.X
  2098 19A6 AD CB 2C			lda PLAYER3
  2099 19A9 8D 23 2D			sta SETPLAYER.P
  2100 19AC AD CC 2C			lda PLAYER3+1
  2101 19AF 8D 24 2D			sta SETPLAYER.P+1
  2102 19B2 20 23 14			jsr SETPLAYER
  2103
  2104 				; optimize OK (levels.inc), line = 8
  2105
  2106 19B5 A9 00			lda #$00
  2107 19B7 8D 2B 2D			sta SETPLAYER.ISALIVE
  2108 19BA A9 55			lda #$55
  2109 19BC 8D 2A 2D			sta SETPLAYER.COLOUR
  2110 19BF A9 51			lda #$51
  2111 19C1 8D 29 2D			sta SETPLAYER.HEAD
  2112 19C4 A9 02			lda #$02
  2113 19C6 8D 28 2D			sta SETPLAYER.BRAIN
  2114 19C9 A9 01			lda #$01
  2115 19CB 8D 27 2D			sta SETPLAYER.DIR
  2116 19CE A9 12			lda #$12
  2117 19D0 8D 26 2D			sta SETPLAYER.Y
  2118 19D3 A9 14			lda #$14
  2119 19D5 8D 25 2D			sta SETPLAYER.X
  2120 19D8 AD CD 2C			lda PLAYER4
  2121 19DB 8D 23 2D			sta SETPLAYER.P
  2122 19DE AD CE 2C			lda PLAYER4+1
  2123 19E1 8D 24 2D			sta SETPLAYER.P+1
  2124 19E4 20 23 14			jsr SETPLAYER
  2125
  2126 				; optimize FAIL (1, levels.inc), line = 10
  2127
  2128 19E7 E8				inx
  2129 19E8 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2130 19EC 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2131 19EE A9 06			lda #$06
  2132 19F0 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2133 19F3 A9 0A			lda #$0A
  2134 19F5 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2135 19F8 20 F3 12			jsr CALCOBSTACLEADDR
  2136 19FB B4 17			ldy :STACKORIGIN-1,x
  2137 19FD B5 18			lda :STACKORIGIN,x
  2138 19FF 99 06 2D			sta adr.OBSTACLES,y
  2139 1A02 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2140 1A04 99 07 2D			sta adr.OBSTACLES+1,y
  2141 1A07 CA				dex
  2142
  2143 				; optimize FAIL (1, levels.inc), line = 11
  2144
  2145 1A08 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2146 1A0C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2147 1A10 A9 06			lda #$06
  2148 1A12 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2149 1A15 A9 1E			lda #$1E
  2150 1A17 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2151 1A1A 20 F3 12			jsr CALCOBSTACLEADDR
  2152 1A1D B4 17			ldy :STACKORIGIN-1,x
  2153 1A1F B5 18			lda :STACKORIGIN,x
  2154 1A21 99 06 2D			sta adr.OBSTACLES,y
  2155 1A24 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2156 1A26 99 07 2D			sta adr.OBSTACLES+1,y
  2157 1A29 CA				dex
  2158
  2159 				; optimize FAIL (1, levels.inc), line = 12
  2160
  2161 1A2A A9 04 95 18			mva #$04 :STACKORIGIN,x
  2162 1A2E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2163 1A32 A9 12			lda #$12
  2164 1A34 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2165 1A37 A9 0A			lda #$0A
  2166 1A39 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2167 1A3C 20 F3 12			jsr CALCOBSTACLEADDR
  2168 1A3F B4 17			ldy :STACKORIGIN-1,x
  2169 1A41 B5 18			lda :STACKORIGIN,x
  2170 1A43 99 06 2D			sta adr.OBSTACLES,y
  2171 1A46 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2172 1A48 99 07 2D			sta adr.OBSTACLES+1,y
  2173 1A4B CA				dex
  2174
  2175 				; optimize FAIL (1, levels.inc), line = 13
  2176
  2177 1A4C A9 06 95 18			mva #$06 :STACKORIGIN,x
  2178 1A50 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2179 1A54 A9 12			lda #$12
  2180 1A56 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2181 1A59 A9 1E			lda #$1E
  2182 1A5B 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2183 1A5E 20 F3 12			jsr CALCOBSTACLEADDR
  2184 1A61 B4 17			ldy :STACKORIGIN-1,x
  2185 1A63 B5 18			lda :STACKORIGIN,x
  2186 1A65 99 06 2D			sta adr.OBSTACLES,y
  2187 1A68 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2188 1A6A 99 07 2D			sta adr.OBSTACLES+1,y
  2189 1A6D CA				dex
  2190 1A6E CA				dex
  2191
  2192 				; optimize OK (levels.inc), line = 14
  2193
  2194 1A6F A9 7E			lda #$7E
  2195 1A71 8D 0E 2D			sta adr.OBSTACLES+$08
  2196 1A74 A9 00			lda #$00
  2197 1A76 8D 0F 2D			sta adr.OBSTACLES+1+$08
  2198
  2199 				; optimize FAIL (1, levels.inc), line = 15
  2200
  2201 1A79 E8				inx
  2202 1A7A A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2203 1A7E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2204 1A82 A9 02			lda #$02
  2205 1A84 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2206 1A87 A9 14			lda #$14
  2207 1A89 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2208 1A8C 20 F3 12			jsr CALCOBSTACLEADDR
  2209 1A8F B4 17			ldy :STACKORIGIN-1,x
  2210 1A91 B5 18			lda :STACKORIGIN,x
  2211 1A93 99 06 2D			sta adr.OBSTACLES,y
  2212 1A96 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2213 1A98 99 07 2D			sta adr.OBSTACLES+1,y
  2214 1A9B CA				dex
  2215
  2216 				; optimize FAIL (1, levels.inc), line = 16
  2217
  2218 1A9C A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2219 1AA0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2220 1AA4 A9 16			lda #$16
  2221 1AA6 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2222 1AA9 A9 14			lda #$14
  2223 1AAB 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2224 1AAE 20 F3 12			jsr CALCOBSTACLEADDR
  2225 1AB1 B4 17			ldy :STACKORIGIN-1,x
  2226 1AB3 B5 18			lda :STACKORIGIN,x
  2227 1AB5 99 06 2D			sta adr.OBSTACLES,y
  2228 1AB8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2229 1ABA 99 07 2D			sta adr.OBSTACLES+1,y
  2230 1ABD CA				dex
  2231 1ABE CA				dex
  2232
  2233 				; optimize OK (levels.inc), line = 17
  2234
  2235 1ABF A9 7E			lda #$7E
  2236 1AC1 8D 14 2D			sta adr.OBSTACLES+$0E
  2237 1AC4 A9 00			lda #$00
  2238 1AC6 8D 15 2D			sta adr.OBSTACLES+1+$0E
  2239
  2240 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 19
  2241
  2242 1AC9 20 16 13			jsr SAVEOBSTACLES
  2243 1ACC			@exit
  2244 					.ifdef @new
  2245 					lda <@VarData
  2246 					sta :ztmp
  2247 					lda >@VarData
  2248 					ldy #@VarDataSize-1
  2249 					jmp @FreeMem
  2250 					els
  2251 1ACC 60				rts						; ret
  2252 					eif
  2253 				.endl
  2254
  2255 1ACD			.local	SETLEVEL01					; PROCEDURE
  2256
  2257 				; optimize OK (levels.inc), line = 26
  2258
  2259 1ACD A9 01			lda #$01
  2260 1ACF 8D 2B 2D			sta SETPLAYER.ISALIVE
  2261 1AD2 A9 62			lda #$62
  2262 1AD4 8D 2A 2D			sta SETPLAYER.COLOUR
  2263 1AD7 A9 51			lda #$51
  2264 1AD9 8D 29 2D			sta SETPLAYER.HEAD
  2265 1ADC A9 00			lda #$00
  2266 1ADE 8D 28 2D			sta SETPLAYER.BRAIN
  2267 1AE1 A9 08			lda #$08
  2268 1AE3 8D 27 2D			sta SETPLAYER.DIR
  2269 1AE6 A9 0C			lda #$0C
  2270 1AE8 8D 26 2D			sta SETPLAYER.Y
  2271 1AEB A9 0A			lda #$0A
  2272 1AED 8D 25 2D			sta SETPLAYER.X
  2273 1AF0 AD C7 2C			lda PLAYER1
  2274 1AF3 8D 23 2D			sta SETPLAYER.P
  2275 1AF6 AD C8 2C			lda PLAYER1+1
  2276 1AF9 8D 24 2D			sta SETPLAYER.P+1
  2277 1AFC 20 23 14			jsr SETPLAYER
  2278
  2279 				; optimize OK (levels.inc), line = 27
  2280
  2281 1AFF A9 01			lda #$01
  2282 1B01 8D 2B 2D			sta SETPLAYER.ISALIVE
  2283 1B04 A9 5D			lda #$5D
  2284 1B06 8D 2A 2D			sta SETPLAYER.COLOUR
  2285 1B09 A9 51			lda #$51
  2286 1B0B 8D 29 2D			sta SETPLAYER.HEAD
  2287 1B0E A9 01			lda #$01
  2288 1B10 8D 28 2D			sta SETPLAYER.BRAIN
  2289 1B13 A9 04			lda #$04
  2290 1B15 8D 27 2D			sta SETPLAYER.DIR
  2291 1B18 A9 0C			lda #$0C
  2292 1B1A 8D 26 2D			sta SETPLAYER.Y
  2293 1B1D A9 1E			lda #$1E
  2294 1B1F 8D 25 2D			sta SETPLAYER.X
  2295 1B22 AD C9 2C			lda PLAYER2
  2296 1B25 8D 23 2D			sta SETPLAYER.P
  2297 1B28 AD CA 2C			lda PLAYER2+1
  2298 1B2B 8D 24 2D			sta SETPLAYER.P+1
  2299 1B2E 20 23 14			jsr SETPLAYER
  2300
  2301 				; optimize OK (levels.inc), line = 28
  2302
  2303 1B31 A9 00			lda #$00
  2304 1B33 8D 2B 2D			sta SETPLAYER.ISALIVE
  2305 1B36 A9 71			lda #$71
  2306 1B38 8D 2A 2D			sta SETPLAYER.COLOUR
  2307 1B3B A9 51			lda #$51
  2308 1B3D 8D 29 2D			sta SETPLAYER.HEAD
  2309 1B40 A9 03			lda #$03
  2310 1B42 8D 28 2D			sta SETPLAYER.BRAIN
  2311 1B45 A9 02			lda #$02
  2312 1B47 8D 27 2D			sta SETPLAYER.DIR
  2313 1B4A A9 04			lda #$04
  2314 1B4C 8D 26 2D			sta SETPLAYER.Y
  2315 1B4F A9 14			lda #$14
  2316 1B51 8D 25 2D			sta SETPLAYER.X
  2317 1B54 AD CB 2C			lda PLAYER3
  2318 1B57 8D 23 2D			sta SETPLAYER.P
  2319 1B5A AD CC 2C			lda PLAYER3+1
  2320 1B5D 8D 24 2D			sta SETPLAYER.P+1
  2321 1B60 20 23 14			jsr SETPLAYER
  2322
  2323 				; optimize OK (levels.inc), line = 29
  2324
  2325 1B63 A9 00			lda #$00
  2326 1B65 8D 2B 2D			sta SETPLAYER.ISALIVE
  2327 1B68 A9 55			lda #$55
  2328 1B6A 8D 2A 2D			sta SETPLAYER.COLOUR
  2329 1B6D A9 51			lda #$51
  2330 1B6F 8D 29 2D			sta SETPLAYER.HEAD
  2331 1B72 A9 02			lda #$02
  2332 1B74 8D 28 2D			sta SETPLAYER.BRAIN
  2333 1B77 A9 01			lda #$01
  2334 1B79 8D 27 2D			sta SETPLAYER.DIR
  2335 1B7C A9 12			lda #$12
  2336 1B7E 8D 26 2D			sta SETPLAYER.Y
  2337 1B81 A9 14			lda #$14
  2338 1B83 8D 25 2D			sta SETPLAYER.X
  2339 1B86 AD CD 2C			lda PLAYER4
  2340 1B89 8D 23 2D			sta SETPLAYER.P
  2341 1B8C AD CE 2C			lda PLAYER4+1
  2342 1B8F 8D 24 2D			sta SETPLAYER.P+1
  2343 1B92 20 23 14			jsr SETPLAYER
  2344
  2345 				; optimize FAIL (1, levels.inc), line = 31
  2346
  2347 1B95 E8				inx
  2348 1B96 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2349 1B9A 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2350 1B9C A9 06			lda #$06
  2351 1B9E 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2352 1BA1 A9 0A			lda #$0A
  2353 1BA3 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2354 1BA6 20 F3 12			jsr CALCOBSTACLEADDR
  2355 1BA9 B4 17			ldy :STACKORIGIN-1,x
  2356 1BAB B5 18			lda :STACKORIGIN,x
  2357 1BAD 99 06 2D			sta adr.OBSTACLES,y
  2358 1BB0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2359 1BB2 99 07 2D			sta adr.OBSTACLES+1,y
  2360 1BB5 CA				dex
  2361
  2362 				; optimize FAIL (1, levels.inc), line = 32
  2363
  2364 1BB6 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2365 1BBA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2366 1BBE A9 06			lda #$06
  2367 1BC0 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2368 1BC3 A9 1E			lda #$1E
  2369 1BC5 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2370 1BC8 20 F3 12			jsr CALCOBSTACLEADDR
  2371 1BCB B4 17			ldy :STACKORIGIN-1,x
  2372 1BCD B5 18			lda :STACKORIGIN,x
  2373 1BCF 99 06 2D			sta adr.OBSTACLES,y
  2374 1BD2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2375 1BD4 99 07 2D			sta adr.OBSTACLES+1,y
  2376 1BD7 CA				dex
  2377
  2378 				; optimize FAIL (1, levels.inc), line = 33
  2379
  2380 1BD8 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2381 1BDC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2382 1BE0 A9 12			lda #$12
  2383 1BE2 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2384 1BE5 A9 0A			lda #$0A
  2385 1BE7 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2386 1BEA 20 F3 12			jsr CALCOBSTACLEADDR
  2387 1BED B4 17			ldy :STACKORIGIN-1,x
  2388 1BEF B5 18			lda :STACKORIGIN,x
  2389 1BF1 99 06 2D			sta adr.OBSTACLES,y
  2390 1BF4 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2391 1BF6 99 07 2D			sta adr.OBSTACLES+1,y
  2392 1BF9 CA				dex
  2393
  2394 				; optimize FAIL (1, levels.inc), line = 34
  2395
  2396 1BFA A9 06 95 18			mva #$06 :STACKORIGIN,x
  2397 1BFE A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2398 1C02 A9 12			lda #$12
  2399 1C04 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2400 1C07 A9 1E			lda #$1E
  2401 1C09 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2402 1C0C 20 F3 12			jsr CALCOBSTACLEADDR
  2403 1C0F B4 17			ldy :STACKORIGIN-1,x
  2404 1C11 B5 18			lda :STACKORIGIN,x
  2405 1C13 99 06 2D			sta adr.OBSTACLES,y
  2406 1C16 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2407 1C18 99 07 2D			sta adr.OBSTACLES+1,y
  2408 1C1B CA				dex
  2409 1C1C CA				dex
  2410
  2411 				; optimize OK (levels.inc), line = 35
  2412
  2413 1C1D A9 7E			lda #$7E
  2414 1C1F 8D 0E 2D			sta adr.OBSTACLES+$08
  2415 1C22 A9 00			lda #$00
  2416 1C24 8D 0F 2D			sta adr.OBSTACLES+1+$08
  2417
  2418 				; optimize FAIL (1, levels.inc), line = 36
  2419
  2420 1C27 E8				inx
  2421 1C28 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2422 1C2C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2423 1C30 A9 02			lda #$02
  2424 1C32 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2425 1C35 A9 14			lda #$14
  2426 1C37 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2427 1C3A 20 F3 12			jsr CALCOBSTACLEADDR
  2428 1C3D B4 17			ldy :STACKORIGIN-1,x
  2429 1C3F B5 18			lda :STACKORIGIN,x
  2430 1C41 99 06 2D			sta adr.OBSTACLES,y
  2431 1C44 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2432 1C46 99 07 2D			sta adr.OBSTACLES+1,y
  2433 1C49 CA				dex
  2434
  2435 				; optimize FAIL (1, levels.inc), line = 37
  2436
  2437 1C4A A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2438 1C4E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2439 1C52 A9 16			lda #$16
  2440 1C54 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2441 1C57 A9 14			lda #$14
  2442 1C59 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2443 1C5C 20 F3 12			jsr CALCOBSTACLEADDR
  2444 1C5F B4 17			ldy :STACKORIGIN-1,x
  2445 1C61 B5 18			lda :STACKORIGIN,x
  2446 1C63 99 06 2D			sta adr.OBSTACLES,y
  2447 1C66 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2448 1C68 99 07 2D			sta adr.OBSTACLES+1,y
  2449 1C6B CA				dex
  2450 1C6C CA				dex
  2451
  2452 				; optimize OK (levels.inc), line = 38
  2453
  2454 1C6D A9 7E			lda #$7E
  2455 1C6F 8D 14 2D			sta adr.OBSTACLES+$0E
  2456 1C72 A9 00			lda #$00
  2457 1C74 8D 15 2D			sta adr.OBSTACLES+1+$0E
  2458
  2459 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 40
  2460
  2461 1C77 20 16 13			jsr SAVEOBSTACLES
  2462 1C7A			@exit
  2463 					.ifdef @new
  2464 					lda <@VarData
  2465 					sta :ztmp
  2466 					lda >@VarData
  2467 					ldy #@VarDataSize-1
  2468 					jmp @FreeMem
  2469 					els
  2470 1C7A 60				rts						; ret
  2471 					eif
  2472 				.endl
  2473
  2474 1C7B			.local	SETLEVEL02					; PROCEDURE
  2475
  2476 				; optimize OK (levels.inc), line = 47
  2477
  2478 1C7B A9 01			lda #$01
  2479 1C7D 8D 2B 2D			sta SETPLAYER.ISALIVE
  2480 1C80 A9 62			lda #$62
  2481 1C82 8D 2A 2D			sta SETPLAYER.COLOUR
  2482 1C85 A9 51			lda #$51
  2483 1C87 8D 29 2D			sta SETPLAYER.HEAD
  2484 1C8A A9 00			lda #$00
  2485 1C8C 8D 28 2D			sta SETPLAYER.BRAIN
  2486 1C8F A9 08			lda #$08
  2487 1C91 8D 27 2D			sta SETPLAYER.DIR
  2488 1C94 A9 0C			lda #$0C
  2489 1C96 8D 26 2D			sta SETPLAYER.Y
  2490 1C99 A9 0A			lda #$0A
  2491 1C9B 8D 25 2D			sta SETPLAYER.X
  2492 1C9E AD C7 2C			lda PLAYER1
  2493 1CA1 8D 23 2D			sta SETPLAYER.P
  2494 1CA4 AD C8 2C			lda PLAYER1+1
  2495 1CA7 8D 24 2D			sta SETPLAYER.P+1
  2496 1CAA 20 23 14			jsr SETPLAYER
  2497
  2498 				; optimize OK (levels.inc), line = 48
  2499
  2500 1CAD A9 01			lda #$01
  2501 1CAF 8D 2B 2D			sta SETPLAYER.ISALIVE
  2502 1CB2 A9 5D			lda #$5D
  2503 1CB4 8D 2A 2D			sta SETPLAYER.COLOUR
  2504 1CB7 A9 51			lda #$51
  2505 1CB9 8D 29 2D			sta SETPLAYER.HEAD
  2506 1CBC A9 03			lda #$03
  2507 1CBE 8D 28 2D			sta SETPLAYER.BRAIN
  2508 1CC1 A9 04			lda #$04
  2509 1CC3 8D 27 2D			sta SETPLAYER.DIR
  2510 1CC6 A9 0C			lda #$0C
  2511 1CC8 8D 26 2D			sta SETPLAYER.Y
  2512 1CCB A9 1E			lda #$1E
  2513 1CCD 8D 25 2D			sta SETPLAYER.X
  2514 1CD0 AD C9 2C			lda PLAYER2
  2515 1CD3 8D 23 2D			sta SETPLAYER.P
  2516 1CD6 AD CA 2C			lda PLAYER2+1
  2517 1CD9 8D 24 2D			sta SETPLAYER.P+1
  2518 1CDC 20 23 14			jsr SETPLAYER
  2519
  2520 				; optimize OK (levels.inc), line = 49
  2521
  2522 1CDF A9 00			lda #$00
  2523 1CE1 8D 2B 2D			sta SETPLAYER.ISALIVE
  2524 1CE4 A9 71			lda #$71
  2525 1CE6 8D 2A 2D			sta SETPLAYER.COLOUR
  2526 1CE9 A9 51			lda #$51
  2527 1CEB 8D 29 2D			sta SETPLAYER.HEAD
  2528 1CEE A9 03			lda #$03
  2529 1CF0 8D 28 2D			sta SETPLAYER.BRAIN
  2530 1CF3 A9 02			lda #$02
  2531 1CF5 8D 27 2D			sta SETPLAYER.DIR
  2532 1CF8 A9 04			lda #$04
  2533 1CFA 8D 26 2D			sta SETPLAYER.Y
  2534 1CFD A9 14			lda #$14
  2535 1CFF 8D 25 2D			sta SETPLAYER.X
  2536 1D02 AD CB 2C			lda PLAYER3
  2537 1D05 8D 23 2D			sta SETPLAYER.P
  2538 1D08 AD CC 2C			lda PLAYER3+1
  2539 1D0B 8D 24 2D			sta SETPLAYER.P+1
  2540 1D0E 20 23 14			jsr SETPLAYER
  2541
  2542 				; optimize OK (levels.inc), line = 50
  2543
  2544 1D11 A9 00			lda #$00
  2545 1D13 8D 2B 2D			sta SETPLAYER.ISALIVE
  2546 1D16 A9 55			lda #$55
  2547 1D18 8D 2A 2D			sta SETPLAYER.COLOUR
  2548 1D1B A9 51			lda #$51
  2549 1D1D 8D 29 2D			sta SETPLAYER.HEAD
  2550 1D20 A9 02			lda #$02
  2551 1D22 8D 28 2D			sta SETPLAYER.BRAIN
  2552 1D25 A9 01			lda #$01
  2553 1D27 8D 27 2D			sta SETPLAYER.DIR
  2554 1D2A A9 12			lda #$12
  2555 1D2C 8D 26 2D			sta SETPLAYER.Y
  2556 1D2F A9 14			lda #$14
  2557 1D31 8D 25 2D			sta SETPLAYER.X
  2558 1D34 AD CD 2C			lda PLAYER4
  2559 1D37 8D 23 2D			sta SETPLAYER.P
  2560 1D3A AD CE 2C			lda PLAYER4+1
  2561 1D3D 8D 24 2D			sta SETPLAYER.P+1
  2562 1D40 20 23 14			jsr SETPLAYER
  2563
  2564 				; optimize FAIL (1, levels.inc), line = 52
  2565
  2566 1D43 E8				inx
  2567 1D44 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2568 1D48 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2569 1D4A A9 06			lda #$06
  2570 1D4C 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2571 1D4F A9 0A			lda #$0A
  2572 1D51 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2573 1D54 20 F3 12			jsr CALCOBSTACLEADDR
  2574 1D57 B4 17			ldy :STACKORIGIN-1,x
  2575 1D59 B5 18			lda :STACKORIGIN,x
  2576 1D5B 99 06 2D			sta adr.OBSTACLES,y
  2577 1D5E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2578 1D60 99 07 2D			sta adr.OBSTACLES+1,y
  2579 1D63 CA				dex
  2580
  2581 				; optimize FAIL (1, levels.inc), line = 53
  2582
  2583 1D64 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2584 1D68 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2585 1D6C A9 06			lda #$06
  2586 1D6E 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2587 1D71 A9 1E			lda #$1E
  2588 1D73 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2589 1D76 20 F3 12			jsr CALCOBSTACLEADDR
  2590 1D79 B4 17			ldy :STACKORIGIN-1,x
  2591 1D7B B5 18			lda :STACKORIGIN,x
  2592 1D7D 99 06 2D			sta adr.OBSTACLES,y
  2593 1D80 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2594 1D82 99 07 2D			sta adr.OBSTACLES+1,y
  2595 1D85 CA				dex
  2596
  2597 				; optimize FAIL (1, levels.inc), line = 54
  2598
  2599 1D86 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2600 1D8A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2601 1D8E A9 12			lda #$12
  2602 1D90 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2603 1D93 A9 0A			lda #$0A
  2604 1D95 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2605 1D98 20 F3 12			jsr CALCOBSTACLEADDR
  2606 1D9B B4 17			ldy :STACKORIGIN-1,x
  2607 1D9D B5 18			lda :STACKORIGIN,x
  2608 1D9F 99 06 2D			sta adr.OBSTACLES,y
  2609 1DA2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2610 1DA4 99 07 2D			sta adr.OBSTACLES+1,y
  2611 1DA7 CA				dex
  2612
  2613 				; optimize FAIL (1, levels.inc), line = 55
  2614
  2615 1DA8 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2616 1DAC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2617 1DB0 A9 12			lda #$12
  2618 1DB2 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2619 1DB5 A9 1E			lda #$1E
  2620 1DB7 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2621 1DBA 20 F3 12			jsr CALCOBSTACLEADDR
  2622 1DBD B4 17			ldy :STACKORIGIN-1,x
  2623 1DBF B5 18			lda :STACKORIGIN,x
  2624 1DC1 99 06 2D			sta adr.OBSTACLES,y
  2625 1DC4 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2626 1DC6 99 07 2D			sta adr.OBSTACLES+1,y
  2627 1DC9 CA				dex
  2628 1DCA CA				dex
  2629
  2630 				; optimize OK (levels.inc), line = 56
  2631
  2632 1DCB A9 7E			lda #$7E
  2633 1DCD 8D 0E 2D			sta adr.OBSTACLES+$08
  2634 1DD0 A9 00			lda #$00
  2635 1DD2 8D 0F 2D			sta adr.OBSTACLES+1+$08
  2636
  2637 				; optimize FAIL (1, levels.inc), line = 57
  2638
  2639 1DD5 E8				inx
  2640 1DD6 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2641 1DDA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2642 1DDE A9 02			lda #$02
  2643 1DE0 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2644 1DE3 A9 14			lda #$14
  2645 1DE5 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2646 1DE8 20 F3 12			jsr CALCOBSTACLEADDR
  2647 1DEB B4 17			ldy :STACKORIGIN-1,x
  2648 1DED B5 18			lda :STACKORIGIN,x
  2649 1DEF 99 06 2D			sta adr.OBSTACLES,y
  2650 1DF2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2651 1DF4 99 07 2D			sta adr.OBSTACLES+1,y
  2652 1DF7 CA				dex
  2653
  2654 				; optimize FAIL (1, levels.inc), line = 58
  2655
  2656 1DF8 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2657 1DFC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2658 1E00 A9 16			lda #$16
  2659 1E02 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2660 1E05 A9 14			lda #$14
  2661 1E07 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2662 1E0A 20 F3 12			jsr CALCOBSTACLEADDR
  2663 1E0D B4 17			ldy :STACKORIGIN-1,x
  2664 1E0F B5 18			lda :STACKORIGIN,x
  2665 1E11 99 06 2D			sta adr.OBSTACLES,y
  2666 1E14 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2667 1E16 99 07 2D			sta adr.OBSTACLES+1,y
  2668 1E19 CA				dex
  2669 1E1A CA				dex
  2670
  2671 				; optimize OK (levels.inc), line = 59
  2672
  2673 1E1B A9 7E			lda #$7E
  2674 1E1D 8D 14 2D			sta adr.OBSTACLES+$0E
  2675 1E20 A9 00			lda #$00
  2676 1E22 8D 15 2D			sta adr.OBSTACLES+1+$0E
  2677
  2678 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 61
  2679
  2680 1E25 20 16 13			jsr SAVEOBSTACLES
  2681 1E28			@exit
  2682 					.ifdef @new
  2683 					lda <@VarData
  2684 					sta :ztmp
  2685 					lda >@VarData
  2686 					ldy #@VarDataSize-1
  2687 					jmp @FreeMem
  2688 					els
  2689 1E28 60				rts						; ret
  2690 					eif
  2691 				.endl
  2692
  2693 1E29			.local	SETLEVEL03					; PROCEDURE
  2694
  2695 				; optimize OK (levels.inc), line = 68
  2696
  2697 1E29 A9 01			lda #$01
  2698 1E2B 8D 2B 2D			sta SETPLAYER.ISALIVE
  2699 1E2E A9 62			lda #$62
  2700 1E30 8D 2A 2D			sta SETPLAYER.COLOUR
  2701 1E33 A9 51			lda #$51
  2702 1E35 8D 29 2D			sta SETPLAYER.HEAD
  2703 1E38 A9 00			lda #$00
  2704 1E3A 8D 28 2D			sta SETPLAYER.BRAIN
  2705 1E3D A9 08			lda #$08
  2706 1E3F 8D 27 2D			sta SETPLAYER.DIR
  2707 1E42 A9 0C			lda #$0C
  2708 1E44 8D 26 2D			sta SETPLAYER.Y
  2709 1E47 A9 0A			lda #$0A
  2710 1E49 8D 25 2D			sta SETPLAYER.X
  2711 1E4C AD C7 2C			lda PLAYER1
  2712 1E4F 8D 23 2D			sta SETPLAYER.P
  2713 1E52 AD C8 2C			lda PLAYER1+1
  2714 1E55 8D 24 2D			sta SETPLAYER.P+1
  2715 1E58 20 23 14			jsr SETPLAYER
  2716
  2717 				; optimize OK (levels.inc), line = 69
  2718
  2719 1E5B A9 01			lda #$01
  2720 1E5D 8D 2B 2D			sta SETPLAYER.ISALIVE
  2721 1E60 A9 5D			lda #$5D
  2722 1E62 8D 2A 2D			sta SETPLAYER.COLOUR
  2723 1E65 A9 51			lda #$51
  2724 1E67 8D 29 2D			sta SETPLAYER.HEAD
  2725 1E6A A9 02			lda #$02
  2726 1E6C 8D 28 2D			sta SETPLAYER.BRAIN
  2727 1E6F A9 04			lda #$04
  2728 1E71 8D 27 2D			sta SETPLAYER.DIR
  2729 1E74 A9 0C			lda #$0C
  2730 1E76 8D 26 2D			sta SETPLAYER.Y
  2731 1E79 A9 1E			lda #$1E
  2732 1E7B 8D 25 2D			sta SETPLAYER.X
  2733 1E7E AD C9 2C			lda PLAYER2
  2734 1E81 8D 23 2D			sta SETPLAYER.P
  2735 1E84 AD CA 2C			lda PLAYER2+1
  2736 1E87 8D 24 2D			sta SETPLAYER.P+1
  2737 1E8A 20 23 14			jsr SETPLAYER
  2738
  2739 				; optimize OK (levels.inc), line = 70
  2740
  2741 1E8D A9 00			lda #$00
  2742 1E8F 8D 2B 2D			sta SETPLAYER.ISALIVE
  2743 1E92 A9 71			lda #$71
  2744 1E94 8D 2A 2D			sta SETPLAYER.COLOUR
  2745 1E97 A9 51			lda #$51
  2746 1E99 8D 29 2D			sta SETPLAYER.HEAD
  2747 1E9C A9 03			lda #$03
  2748 1E9E 8D 28 2D			sta SETPLAYER.BRAIN
  2749 1EA1 A9 02			lda #$02
  2750 1EA3 8D 27 2D			sta SETPLAYER.DIR
  2751 1EA6 A9 04			lda #$04
  2752 1EA8 8D 26 2D			sta SETPLAYER.Y
  2753 1EAB A9 14			lda #$14
  2754 1EAD 8D 25 2D			sta SETPLAYER.X
  2755 1EB0 AD CB 2C			lda PLAYER3
  2756 1EB3 8D 23 2D			sta SETPLAYER.P
  2757 1EB6 AD CC 2C			lda PLAYER3+1
  2758 1EB9 8D 24 2D			sta SETPLAYER.P+1
  2759 1EBC 20 23 14			jsr SETPLAYER
  2760
  2761 				; optimize OK (levels.inc), line = 71
  2762
  2763 1EBF A9 00			lda #$00
  2764 1EC1 8D 2B 2D			sta SETPLAYER.ISALIVE
  2765 1EC4 A9 55			lda #$55
  2766 1EC6 8D 2A 2D			sta SETPLAYER.COLOUR
  2767 1EC9 A9 51			lda #$51
  2768 1ECB 8D 29 2D			sta SETPLAYER.HEAD
  2769 1ECE A9 03			lda #$03
  2770 1ED0 8D 28 2D			sta SETPLAYER.BRAIN
  2771 1ED3 A9 01			lda #$01
  2772 1ED5 8D 27 2D			sta SETPLAYER.DIR
  2773 1ED8 A9 12			lda #$12
  2774 1EDA 8D 26 2D			sta SETPLAYER.Y
  2775 1EDD A9 14			lda #$14
  2776 1EDF 8D 25 2D			sta SETPLAYER.X
  2777 1EE2 AD CD 2C			lda PLAYER4
  2778 1EE5 8D 23 2D			sta SETPLAYER.P
  2779 1EE8 AD CE 2C			lda PLAYER4+1
  2780 1EEB 8D 24 2D			sta SETPLAYER.P+1
  2781 1EEE 20 23 14			jsr SETPLAYER
  2782
  2783 				; optimize FAIL (1, levels.inc), line = 73
  2784
  2785 1EF1 E8				inx
  2786 1EF2 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2787 1EF6 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2788 1EF8 A9 06			lda #$06
  2789 1EFA 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2790 1EFD A9 0A			lda #$0A
  2791 1EFF 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2792 1F02 20 F3 12			jsr CALCOBSTACLEADDR
  2793 1F05 B4 17			ldy :STACKORIGIN-1,x
  2794 1F07 B5 18			lda :STACKORIGIN,x
  2795 1F09 99 06 2D			sta adr.OBSTACLES,y
  2796 1F0C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2797 1F0E 99 07 2D			sta adr.OBSTACLES+1,y
  2798 1F11 CA				dex
  2799
  2800 				; optimize FAIL (1, levels.inc), line = 74
  2801
  2802 1F12 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2803 1F16 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2804 1F1A A9 06			lda #$06
  2805 1F1C 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2806 1F1F A9 1E			lda #$1E
  2807 1F21 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2808 1F24 20 F3 12			jsr CALCOBSTACLEADDR
  2809 1F27 B4 17			ldy :STACKORIGIN-1,x
  2810 1F29 B5 18			lda :STACKORIGIN,x
  2811 1F2B 99 06 2D			sta adr.OBSTACLES,y
  2812 1F2E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2813 1F30 99 07 2D			sta adr.OBSTACLES+1,y
  2814 1F33 CA				dex
  2815
  2816 				; optimize FAIL (1, levels.inc), line = 75
  2817
  2818 1F34 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2819 1F38 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2820 1F3C A9 12			lda #$12
  2821 1F3E 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2822 1F41 A9 0A			lda #$0A
  2823 1F43 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2824 1F46 20 F3 12			jsr CALCOBSTACLEADDR
  2825 1F49 B4 17			ldy :STACKORIGIN-1,x
  2826 1F4B B5 18			lda :STACKORIGIN,x
  2827 1F4D 99 06 2D			sta adr.OBSTACLES,y
  2828 1F50 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2829 1F52 99 07 2D			sta adr.OBSTACLES+1,y
  2830 1F55 CA				dex
  2831
  2832 				; optimize FAIL (1, levels.inc), line = 76
  2833
  2834 1F56 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2835 1F5A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2836 1F5E A9 12			lda #$12
  2837 1F60 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2838 1F63 A9 1E			lda #$1E
  2839 1F65 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2840 1F68 20 F3 12			jsr CALCOBSTACLEADDR
  2841 1F6B B4 17			ldy :STACKORIGIN-1,x
  2842 1F6D B5 18			lda :STACKORIGIN,x
  2843 1F6F 99 06 2D			sta adr.OBSTACLES,y
  2844 1F72 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2845 1F74 99 07 2D			sta adr.OBSTACLES+1,y
  2846 1F77 CA				dex
  2847
  2848 				; optimize FAIL (1, levels.inc), line = 77
  2849
  2850 1F78 A9 08 95 18			mva #$08 :STACKORIGIN,x
  2851 1F7C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2852 1F80 A9 0C			lda #$0C
  2853 1F82 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2854 1F85 A9 01			lda #$01
  2855 1F87 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2856 1F8A 20 F3 12			jsr CALCOBSTACLEADDR
  2857 1F8D B4 17			ldy :STACKORIGIN-1,x
  2858 1F8F B5 18			lda :STACKORIGIN,x
  2859 1F91 99 06 2D			sta adr.OBSTACLES,y
  2860 1F94 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2861 1F96 99 07 2D			sta adr.OBSTACLES+1,y
  2862 1F99 CA				dex
  2863
  2864 				; optimize FAIL (1, levels.inc), line = 78
  2865
  2866 1F9A A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2867 1F9E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2868 1FA2 A9 02			lda #$02
  2869 1FA4 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2870 1FA7 A9 14			lda #$14
  2871 1FA9 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2872 1FAC 20 F3 12			jsr CALCOBSTACLEADDR
  2873 1FAF B4 17			ldy :STACKORIGIN-1,x
  2874 1FB1 B5 18			lda :STACKORIGIN,x
  2875 1FB3 99 06 2D			sta adr.OBSTACLES,y
  2876 1FB6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2877 1FB8 99 07 2D			sta adr.OBSTACLES+1,y
  2878 1FBB CA				dex
  2879
  2880 				; optimize FAIL (1, levels.inc), line = 79
  2881
  2882 1FBC A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2883 1FC0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2884 1FC4 A9 16			lda #$16
  2885 1FC6 8D 20 2D			sta CALCOBSTACLEADDR.Y
  2886 1FC9 A9 14			lda #$14
  2887 1FCB 8D 1F 2D			sta CALCOBSTACLEADDR.X
  2888 1FCE 20 F3 12			jsr CALCOBSTACLEADDR
  2889 1FD1 B4 17			ldy :STACKORIGIN-1,x
  2890 1FD3 B5 18			lda :STACKORIGIN,x
  2891 1FD5 99 06 2D			sta adr.OBSTACLES,y
  2892 1FD8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2893 1FDA 99 07 2D			sta adr.OBSTACLES+1,y
  2894 1FDD CA				dex
  2895 1FDE CA				dex
  2896
  2897 				; optimize OK (levels.inc), line = 80
  2898
  2899 1FDF A9 7E			lda #$7E
  2900 1FE1 8D 14 2D			sta adr.OBSTACLES+$0E
  2901 1FE4 A9 00			lda #$00
  2902 1FE6 8D 15 2D			sta adr.OBSTACLES+1+$0E
  2903
  2904 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 82
  2905
  2906 1FE9 20 16 13			jsr SAVEOBSTACLES
  2907 1FEC			@exit
  2908 					.ifdef @new
  2909 					lda <@VarData
  2910 					sta :ztmp
  2911 					lda >@VarData
  2912 					ldy #@VarDataSize-1
  2913 					jmp @FreeMem
  2914 					els
  2915 1FEC 60				rts						; ret
  2916 					eif
  2917 				.endl
  2918
  2919 1FED			.local	SETLEVEL04					; PROCEDURE
  2920
  2921 				; optimize OK (levels.inc), line = 89
  2922
  2923 1FED A9 01			lda #$01
  2924 1FEF 8D 2B 2D			sta SETPLAYER.ISALIVE
  2925 1FF2 A9 62			lda #$62
  2926 1FF4 8D 2A 2D			sta SETPLAYER.COLOUR
  2927 1FF7 A9 51			lda #$51
  2928 1FF9 8D 29 2D			sta SETPLAYER.HEAD
  2929 1FFC A9 00			lda #$00
  2930 1FFE 8D 28 2D			sta SETPLAYER.BRAIN
  2931 2001 A9 04			lda #$04
  2932 2003 8D 27 2D			sta SETPLAYER.DIR
  2933 2006 A9 0C			lda #$0C
  2934 2008 8D 26 2D			sta SETPLAYER.Y
  2935 200B A9 12			lda #$12
  2936 200D 8D 25 2D			sta SETPLAYER.X
  2937 2010 AD C7 2C			lda PLAYER1
  2938 2013 8D 23 2D			sta SETPLAYER.P
  2939 2016 AD C8 2C			lda PLAYER1+1
  2940 2019 8D 24 2D			sta SETPLAYER.P+1
  2941 201C 20 23 14			jsr SETPLAYER
  2942
  2943 				; optimize OK (levels.inc), line = 90
  2944
  2945 201F A9 01			lda #$01
  2946 2021 8D 2B 2D			sta SETPLAYER.ISALIVE
  2947 2024 A9 5D			lda #$5D
  2948 2026 8D 2A 2D			sta SETPLAYER.COLOUR
  2949 2029 A9 51			lda #$51
  2950 202B 8D 29 2D			sta SETPLAYER.HEAD
  2951 202E A9 04			lda #$04
  2952 2030 8D 28 2D			sta SETPLAYER.BRAIN
  2953 2033 A9 08			lda #$08
  2954 2035 8D 27 2D			sta SETPLAYER.DIR
  2955 2038 A9 0C			lda #$0C
  2956 203A 8D 26 2D			sta SETPLAYER.Y
  2957 203D A9 16			lda #$16
  2958 203F 8D 25 2D			sta SETPLAYER.X
  2959 2042 AD C9 2C			lda PLAYER2
  2960 2045 8D 23 2D			sta SETPLAYER.P
  2961 2048 AD CA 2C			lda PLAYER2+1
  2962 204B 8D 24 2D			sta SETPLAYER.P+1
  2963 204E 20 23 14			jsr SETPLAYER
  2964
  2965 				; optimize OK (levels.inc), line = 91
  2966
  2967 2051 A9 00			lda #$00
  2968 2053 8D 2B 2D			sta SETPLAYER.ISALIVE
  2969 2056 A9 71			lda #$71
  2970 2058 8D 2A 2D			sta SETPLAYER.COLOUR
  2971 205B A9 51			lda #$51
  2972 205D 8D 29 2D			sta SETPLAYER.HEAD
  2973 2060 A9 03			lda #$03
  2974 2062 8D 28 2D			sta SETPLAYER.BRAIN
  2975 2065 A9 02			lda #$02
  2976 2067 8D 27 2D			sta SETPLAYER.DIR
  2977 206A A9 04			lda #$04
  2978 206C 8D 26 2D			sta SETPLAYER.Y
  2979 206F A9 14			lda #$14
  2980 2071 8D 25 2D			sta SETPLAYER.X
  2981 2074 AD CB 2C			lda PLAYER3
  2982 2077 8D 23 2D			sta SETPLAYER.P
  2983 207A AD CC 2C			lda PLAYER3+1
  2984 207D 8D 24 2D			sta SETPLAYER.P+1
  2985 2080 20 23 14			jsr SETPLAYER
  2986
  2987 				; optimize OK (levels.inc), line = 92
  2988
  2989 2083 A9 00			lda #$00
  2990 2085 8D 2B 2D			sta SETPLAYER.ISALIVE
  2991 2088 A9 55			lda #$55
  2992 208A 8D 2A 2D			sta SETPLAYER.COLOUR
  2993 208D A9 51			lda #$51
  2994 208F 8D 29 2D			sta SETPLAYER.HEAD
  2995 2092 A9 03			lda #$03
  2996 2094 8D 28 2D			sta SETPLAYER.BRAIN
  2997 2097 A9 01			lda #$01
  2998 2099 8D 27 2D			sta SETPLAYER.DIR
  2999 209C A9 12			lda #$12
  3000 209E 8D 26 2D			sta SETPLAYER.Y
  3001 20A1 A9 14			lda #$14
  3002 20A3 8D 25 2D			sta SETPLAYER.X
  3003 20A6 AD CD 2C			lda PLAYER4
  3004 20A9 8D 23 2D			sta SETPLAYER.P
  3005 20AC AD CE 2C			lda PLAYER4+1
  3006 20AF 8D 24 2D			sta SETPLAYER.P+1
  3007 20B2 20 23 14			jsr SETPLAYER
  3008
  3009 				; optimize FAIL (1, levels.inc), line = 94
  3010
  3011 20B5 E8				inx
  3012 20B6 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3013 20BA 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3014 20BC A9 06			lda #$06
  3015 20BE 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3016 20C1 A9 0A			lda #$0A
  3017 20C3 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3018 20C6 20 F3 12			jsr CALCOBSTACLEADDR
  3019 20C9 B4 17			ldy :STACKORIGIN-1,x
  3020 20CB B5 18			lda :STACKORIGIN,x
  3021 20CD 99 06 2D			sta adr.OBSTACLES,y
  3022 20D0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3023 20D2 99 07 2D			sta adr.OBSTACLES+1,y
  3024 20D5 CA				dex
  3025
  3026 				; optimize FAIL (1, levels.inc), line = 95
  3027
  3028 20D6 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3029 20DA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3030 20DE A9 06			lda #$06
  3031 20E0 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3032 20E3 A9 1E			lda #$1E
  3033 20E5 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3034 20E8 20 F3 12			jsr CALCOBSTACLEADDR
  3035 20EB B4 17			ldy :STACKORIGIN-1,x
  3036 20ED B5 18			lda :STACKORIGIN,x
  3037 20EF 99 06 2D			sta adr.OBSTACLES,y
  3038 20F2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3039 20F4 99 07 2D			sta adr.OBSTACLES+1,y
  3040 20F7 CA				dex
  3041
  3042 				; optimize FAIL (1, levels.inc), line = 96
  3043
  3044 20F8 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3045 20FC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3046 2100 A9 12			lda #$12
  3047 2102 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3048 2105 A9 0A			lda #$0A
  3049 2107 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3050 210A 20 F3 12			jsr CALCOBSTACLEADDR
  3051 210D B4 17			ldy :STACKORIGIN-1,x
  3052 210F B5 18			lda :STACKORIGIN,x
  3053 2111 99 06 2D			sta adr.OBSTACLES,y
  3054 2114 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3055 2116 99 07 2D			sta adr.OBSTACLES+1,y
  3056 2119 CA				dex
  3057
  3058 				; optimize FAIL (1, levels.inc), line = 97
  3059
  3060 211A A9 06 95 18			mva #$06 :STACKORIGIN,x
  3061 211E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3062 2122 A9 12			lda #$12
  3063 2124 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3064 2127 A9 1E			lda #$1E
  3065 2129 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3066 212C 20 F3 12			jsr CALCOBSTACLEADDR
  3067 212F B4 17			ldy :STACKORIGIN-1,x
  3068 2131 B5 18			lda :STACKORIGIN,x
  3069 2133 99 06 2D			sta adr.OBSTACLES,y
  3070 2136 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3071 2138 99 07 2D			sta adr.OBSTACLES+1,y
  3072 213B CA				dex
  3073
  3074 				; optimize FAIL (1, levels.inc), line = 98
  3075
  3076 213C A9 08 95 18			mva #$08 :STACKORIGIN,x
  3077 2140 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3078 2144 A9 0C			lda #$0C
  3079 2146 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3080 2149 A9 01			lda #$01
  3081 214B 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3082 214E 20 F3 12			jsr CALCOBSTACLEADDR
  3083 2151 B4 17			ldy :STACKORIGIN-1,x
  3084 2153 B5 18			lda :STACKORIGIN,x
  3085 2155 99 06 2D			sta adr.OBSTACLES,y
  3086 2158 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3087 215A 99 07 2D			sta adr.OBSTACLES+1,y
  3088 215D CA				dex
  3089
  3090 				; optimize FAIL (1, levels.inc), line = 99
  3091
  3092 215E A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3093 2162 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3094 2166 A9 02			lda #$02
  3095 2168 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3096 216B A9 14			lda #$14
  3097 216D 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3098 2170 20 F3 12			jsr CALCOBSTACLEADDR
  3099 2173 B4 17			ldy :STACKORIGIN-1,x
  3100 2175 B5 18			lda :STACKORIGIN,x
  3101 2177 99 06 2D			sta adr.OBSTACLES,y
  3102 217A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3103 217C 99 07 2D			sta adr.OBSTACLES+1,y
  3104 217F CA				dex
  3105
  3106 				; optimize FAIL (1, levels.inc), line = 100
  3107
  3108 2180 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3109 2184 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3110 2188 A9 16			lda #$16
  3111 218A 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3112 218D A9 14			lda #$14
  3113 218F 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3114 2192 20 F3 12			jsr CALCOBSTACLEADDR
  3115 2195 B4 17			ldy :STACKORIGIN-1,x
  3116 2197 B5 18			lda :STACKORIGIN,x
  3117 2199 99 06 2D			sta adr.OBSTACLES,y
  3118 219C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3119 219E 99 07 2D			sta adr.OBSTACLES+1,y
  3120 21A1 CA				dex
  3121
  3122 				; optimize FAIL (1, levels.inc), line = 101
  3123
  3124 21A2 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3125 21A6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3126 21AA A9 0C			lda #$0C
  3127 21AC 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3128 21AF A9 14			lda #$14
  3129 21B1 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3130 21B4 20 F3 12			jsr CALCOBSTACLEADDR
  3131 21B7 B4 17			ldy :STACKORIGIN-1,x
  3132 21B9 B5 18			lda :STACKORIGIN,x
  3133 21BB 99 06 2D			sta adr.OBSTACLES,y
  3134 21BE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3135 21C0 99 07 2D			sta adr.OBSTACLES+1,y
  3136 21C3 CA				dex
  3137 21C4 CA				dex
  3138
  3139 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 103
  3140
  3141 21C5 20 16 13			jsr SAVEOBSTACLES
  3142 21C8			@exit
  3143 					.ifdef @new
  3144 					lda <@VarData
  3145 					sta :ztmp
  3146 					lda >@VarData
  3147 					ldy #@VarDataSize-1
  3148 					jmp @FreeMem
  3149 					els
  3150 21C8 60				rts						; ret
  3151 					eif
  3152 				.endl
  3153
  3154 21C9			.local	SETLEVEL05					; PROCEDURE
  3155
  3156 				; optimize OK (levels.inc), line = 110
  3157
  3158 21C9 A9 01			lda #$01
  3159 21CB 8D 2B 2D			sta SETPLAYER.ISALIVE
  3160 21CE A9 62			lda #$62
  3161 21D0 8D 2A 2D			sta SETPLAYER.COLOUR
  3162 21D3 A9 51			lda #$51
  3163 21D5 8D 29 2D			sta SETPLAYER.HEAD
  3164 21D8 A9 00			lda #$00
  3165 21DA 8D 28 2D			sta SETPLAYER.BRAIN
  3166 21DD A9 08			lda #$08
  3167 21DF 8D 27 2D			sta SETPLAYER.DIR
  3168 21E2 A9 0C			lda #$0C
  3169 21E4 8D 26 2D			sta SETPLAYER.Y
  3170 21E7 A9 0A			lda #$0A
  3171 21E9 8D 25 2D			sta SETPLAYER.X
  3172 21EC AD C7 2C			lda PLAYER1
  3173 21EF 8D 23 2D			sta SETPLAYER.P
  3174 21F2 AD C8 2C			lda PLAYER1+1
  3175 21F5 8D 24 2D			sta SETPLAYER.P+1
  3176 21F8 20 23 14			jsr SETPLAYER
  3177
  3178 				; optimize OK (levels.inc), line = 111
  3179
  3180 21FB A9 01			lda #$01
  3181 21FD 8D 2B 2D			sta SETPLAYER.ISALIVE
  3182 2200 A9 5D			lda #$5D
  3183 2202 8D 2A 2D			sta SETPLAYER.COLOUR
  3184 2205 A9 51			lda #$51
  3185 2207 8D 29 2D			sta SETPLAYER.HEAD
  3186 220A A9 04			lda #$04
  3187 220C 8D 28 2D			sta SETPLAYER.BRAIN
  3188 220F 8D 27 2D			sta SETPLAYER.DIR
  3189 2212 A9 0C			lda #$0C
  3190 2214 8D 26 2D			sta SETPLAYER.Y
  3191 2217 A9 1E			lda #$1E
  3192 2219 8D 25 2D			sta SETPLAYER.X
  3193 221C AD C9 2C			lda PLAYER2
  3194 221F 8D 23 2D			sta SETPLAYER.P
  3195 2222 AD CA 2C			lda PLAYER2+1
  3196 2225 8D 24 2D			sta SETPLAYER.P+1
  3197 2228 20 23 14			jsr SETPLAYER
  3198
  3199 				; optimize OK (levels.inc), line = 112
  3200
  3201 222B A9 01			lda #$01
  3202 222D 8D 2B 2D			sta SETPLAYER.ISALIVE
  3203 2230 A9 71			lda #$71
  3204 2232 8D 2A 2D			sta SETPLAYER.COLOUR
  3205 2235 A9 51			lda #$51
  3206 2237 8D 29 2D			sta SETPLAYER.HEAD
  3207 223A A9 03			lda #$03
  3208 223C 8D 28 2D			sta SETPLAYER.BRAIN
  3209 223F A9 02			lda #$02
  3210 2241 8D 27 2D			sta SETPLAYER.DIR
  3211 2244 A9 04			lda #$04
  3212 2246 8D 26 2D			sta SETPLAYER.Y
  3213 2249 A9 14			lda #$14
  3214 224B 8D 25 2D			sta SETPLAYER.X
  3215 224E AD CB 2C			lda PLAYER3
  3216 2251 8D 23 2D			sta SETPLAYER.P
  3217 2254 AD CC 2C			lda PLAYER3+1
  3218 2257 8D 24 2D			sta SETPLAYER.P+1
  3219 225A 20 23 14			jsr SETPLAYER
  3220
  3221 				; optimize OK (levels.inc), line = 113
  3222
  3223 225D A9 01			lda #$01
  3224 225F 8D 2B 2D			sta SETPLAYER.ISALIVE
  3225 2262 A9 55			lda #$55
  3226 2264 8D 2A 2D			sta SETPLAYER.COLOUR
  3227 2267 A9 51			lda #$51
  3228 2269 8D 29 2D			sta SETPLAYER.HEAD
  3229 226C A9 02			lda #$02
  3230 226E 8D 28 2D			sta SETPLAYER.BRAIN
  3231 2271 A9 01			lda #$01
  3232 2273 8D 27 2D			sta SETPLAYER.DIR
  3233 2276 A9 12			lda #$12
  3234 2278 8D 26 2D			sta SETPLAYER.Y
  3235 227B A9 14			lda #$14
  3236 227D 8D 25 2D			sta SETPLAYER.X
  3237 2280 AD CD 2C			lda PLAYER4
  3238 2283 8D 23 2D			sta SETPLAYER.P
  3239 2286 AD CE 2C			lda PLAYER4+1
  3240 2289 8D 24 2D			sta SETPLAYER.P+1
  3241 228C 20 23 14			jsr SETPLAYER
  3242
  3243 				; optimize FAIL (1, levels.inc), line = 115
  3244
  3245 228F E8				inx
  3246 2290 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3247 2294 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3248 2296 A9 06			lda #$06
  3249 2298 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3250 229B A9 0A			lda #$0A
  3251 229D 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3252 22A0 20 F3 12			jsr CALCOBSTACLEADDR
  3253 22A3 B4 17			ldy :STACKORIGIN-1,x
  3254 22A5 B5 18			lda :STACKORIGIN,x
  3255 22A7 99 06 2D			sta adr.OBSTACLES,y
  3256 22AA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3257 22AC 99 07 2D			sta adr.OBSTACLES+1,y
  3258 22AF CA				dex
  3259
  3260 				; optimize FAIL (1, levels.inc), line = 116
  3261
  3262 22B0 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3263 22B4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3264 22B8 A9 06			lda #$06
  3265 22BA 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3266 22BD A9 1E			lda #$1E
  3267 22BF 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3268 22C2 20 F3 12			jsr CALCOBSTACLEADDR
  3269 22C5 B4 17			ldy :STACKORIGIN-1,x
  3270 22C7 B5 18			lda :STACKORIGIN,x
  3271 22C9 99 06 2D			sta adr.OBSTACLES,y
  3272 22CC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3273 22CE 99 07 2D			sta adr.OBSTACLES+1,y
  3274 22D1 CA				dex
  3275
  3276 				; optimize FAIL (1, levels.inc), line = 117
  3277
  3278 22D2 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3279 22D6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3280 22DA A9 12			lda #$12
  3281 22DC 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3282 22DF A9 0A			lda #$0A
  3283 22E1 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3284 22E4 20 F3 12			jsr CALCOBSTACLEADDR
  3285 22E7 B4 17			ldy :STACKORIGIN-1,x
  3286 22E9 B5 18			lda :STACKORIGIN,x
  3287 22EB 99 06 2D			sta adr.OBSTACLES,y
  3288 22EE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3289 22F0 99 07 2D			sta adr.OBSTACLES+1,y
  3290 22F3 CA				dex
  3291
  3292 				; optimize FAIL (1, levels.inc), line = 118
  3293
  3294 22F4 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3295 22F8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3296 22FC A9 12			lda #$12
  3297 22FE 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3298 2301 A9 1E			lda #$1E
  3299 2303 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3300 2306 20 F3 12			jsr CALCOBSTACLEADDR
  3301 2309 B4 17			ldy :STACKORIGIN-1,x
  3302 230B B5 18			lda :STACKORIGIN,x
  3303 230D 99 06 2D			sta adr.OBSTACLES,y
  3304 2310 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3305 2312 99 07 2D			sta adr.OBSTACLES+1,y
  3306 2315 CA				dex
  3307
  3308 				; optimize FAIL (1, levels.inc), line = 119
  3309
  3310 2316 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3311 231A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3312 231E A9 0C			lda #$0C
  3313 2320 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3314 2323 A9 01			lda #$01
  3315 2325 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3316 2328 20 F3 12			jsr CALCOBSTACLEADDR
  3317 232B B4 17			ldy :STACKORIGIN-1,x
  3318 232D B5 18			lda :STACKORIGIN,x
  3319 232F 99 06 2D			sta adr.OBSTACLES,y
  3320 2332 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3321 2334 99 07 2D			sta adr.OBSTACLES+1,y
  3322 2337 CA				dex
  3323
  3324 				; optimize FAIL (1, levels.inc), line = 120
  3325
  3326 2338 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3327 233C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3328 2340 A9 02			lda #$02
  3329 2342 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3330 2345 A9 14			lda #$14
  3331 2347 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3332 234A 20 F3 12			jsr CALCOBSTACLEADDR
  3333 234D B4 17			ldy :STACKORIGIN-1,x
  3334 234F B5 18			lda :STACKORIGIN,x
  3335 2351 99 06 2D			sta adr.OBSTACLES,y
  3336 2354 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3337 2356 99 07 2D			sta adr.OBSTACLES+1,y
  3338 2359 CA				dex
  3339
  3340 				; optimize FAIL (1, levels.inc), line = 121
  3341
  3342 235A A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3343 235E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3344 2362 A9 16			lda #$16
  3345 2364 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3346 2367 A9 14			lda #$14
  3347 2369 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3348 236C 20 F3 12			jsr CALCOBSTACLEADDR
  3349 236F B4 17			ldy :STACKORIGIN-1,x
  3350 2371 B5 18			lda :STACKORIGIN,x
  3351 2373 99 06 2D			sta adr.OBSTACLES,y
  3352 2376 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3353 2378 99 07 2D			sta adr.OBSTACLES+1,y
  3354 237B CA				dex
  3355 237C CA				dex
  3356
  3357 				; optimize OK (levels.inc), line = 122
  3358
  3359 237D A9 7E			lda #$7E
  3360 237F 8D 14 2D			sta adr.OBSTACLES+$0E
  3361 2382 A9 00			lda #$00
  3362 2384 8D 15 2D			sta adr.OBSTACLES+1+$0E
  3363
  3364 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 124
  3365
  3366 2387 20 16 13			jsr SAVEOBSTACLES
  3367 238A			@exit
  3368 					.ifdef @new
  3369 					lda <@VarData
  3370 					sta :ztmp
  3371 					lda >@VarData
  3372 					ldy #@VarDataSize-1
  3373 					jmp @FreeMem
  3374 					els
  3375 238A 60				rts						; ret
  3376 					eif
  3377 				.endl
  3378
  3379 238B			.local	SETLEVEL06					; PROCEDURE
  3380
  3381 				; optimize OK (levels.inc), line = 131
  3382
  3383 238B A9 01			lda #$01
  3384 238D 8D 2B 2D			sta SETPLAYER.ISALIVE
  3385 2390 A9 62			lda #$62
  3386 2392 8D 2A 2D			sta SETPLAYER.COLOUR
  3387 2395 A9 51			lda #$51
  3388 2397 8D 29 2D			sta SETPLAYER.HEAD
  3389 239A A9 00			lda #$00
  3390 239C 8D 28 2D			sta SETPLAYER.BRAIN
  3391 239F A9 04			lda #$04
  3392 23A1 8D 27 2D			sta SETPLAYER.DIR
  3393 23A4 A9 0C			lda #$0C
  3394 23A6 8D 26 2D			sta SETPLAYER.Y
  3395 23A9 A9 12			lda #$12
  3396 23AB 8D 25 2D			sta SETPLAYER.X
  3397 23AE AD C7 2C			lda PLAYER1
  3398 23B1 8D 23 2D			sta SETPLAYER.P
  3399 23B4 AD C8 2C			lda PLAYER1+1
  3400 23B7 8D 24 2D			sta SETPLAYER.P+1
  3401 23BA 20 23 14			jsr SETPLAYER
  3402
  3403 				; optimize OK (levels.inc), line = 132
  3404
  3405 23BD A9 01			lda #$01
  3406 23BF 8D 2B 2D			sta SETPLAYER.ISALIVE
  3407 23C2 A9 5D			lda #$5D
  3408 23C4 8D 2A 2D			sta SETPLAYER.COLOUR
  3409 23C7 A9 51			lda #$51
  3410 23C9 8D 29 2D			sta SETPLAYER.HEAD
  3411 23CC A9 02			lda #$02
  3412 23CE 8D 28 2D			sta SETPLAYER.BRAIN
  3413 23D1 A9 08			lda #$08
  3414 23D3 8D 27 2D			sta SETPLAYER.DIR
  3415 23D6 A9 0C			lda #$0C
  3416 23D8 8D 26 2D			sta SETPLAYER.Y
  3417 23DB A9 16			lda #$16
  3418 23DD 8D 25 2D			sta SETPLAYER.X
  3419 23E0 AD C9 2C			lda PLAYER2
  3420 23E3 8D 23 2D			sta SETPLAYER.P
  3421 23E6 AD CA 2C			lda PLAYER2+1
  3422 23E9 8D 24 2D			sta SETPLAYER.P+1
  3423 23EC 20 23 14			jsr SETPLAYER
  3424
  3425 				; optimize OK (levels.inc), line = 133
  3426
  3427 23EF A9 01			lda #$01
  3428 23F1 8D 2B 2D			sta SETPLAYER.ISALIVE
  3429 23F4 A9 71			lda #$71
  3430 23F6 8D 2A 2D			sta SETPLAYER.COLOUR
  3431 23F9 A9 51			lda #$51
  3432 23FB 8D 29 2D			sta SETPLAYER.HEAD
  3433 23FE A9 02			lda #$02
  3434 2400 8D 28 2D			sta SETPLAYER.BRAIN
  3435 2403 8D 27 2D			sta SETPLAYER.DIR
  3436 2406 A9 06			lda #$06
  3437 2408 8D 26 2D			sta SETPLAYER.Y
  3438 240B 8D 25 2D			sta SETPLAYER.X
  3439 240E AD CB 2C			lda PLAYER3
  3440 2411 8D 23 2D			sta SETPLAYER.P
  3441 2414 AD CC 2C			lda PLAYER3+1
  3442 2417 8D 24 2D			sta SETPLAYER.P+1
  3443 241A 20 23 14			jsr SETPLAYER
  3444
  3445 				; optimize OK (levels.inc), line = 134
  3446
  3447 241D A9 01			lda #$01
  3448 241F 8D 2B 2D			sta SETPLAYER.ISALIVE
  3449 2422 A9 55			lda #$55
  3450 2424 8D 2A 2D			sta SETPLAYER.COLOUR
  3451 2427 A9 51			lda #$51
  3452 2429 8D 29 2D			sta SETPLAYER.HEAD
  3453 242C A9 03			lda #$03
  3454 242E 8D 28 2D			sta SETPLAYER.BRAIN
  3455 2431 A9 08			lda #$08
  3456 2433 8D 27 2D			sta SETPLAYER.DIR
  3457 2436 A9 12			lda #$12
  3458 2438 8D 26 2D			sta SETPLAYER.Y
  3459 243B A9 24			lda #$24
  3460 243D 8D 25 2D			sta SETPLAYER.X
  3461 2440 AD CD 2C			lda PLAYER4
  3462 2443 8D 23 2D			sta SETPLAYER.P
  3463 2446 AD CE 2C			lda PLAYER4+1
  3464 2449 8D 24 2D			sta SETPLAYER.P+1
  3465 244C 20 23 14			jsr SETPLAYER
  3466
  3467 				; optimize FAIL (1, levels.inc), line = 136
  3468
  3469 244F E8				inx
  3470 2450 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3471 2454 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3472 2456 A9 06			lda #$06
  3473 2458 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3474 245B A9 0A			lda #$0A
  3475 245D 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3476 2460 20 F3 12			jsr CALCOBSTACLEADDR
  3477 2463 B4 17			ldy :STACKORIGIN-1,x
  3478 2465 B5 18			lda :STACKORIGIN,x
  3479 2467 99 06 2D			sta adr.OBSTACLES,y
  3480 246A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3481 246C 99 07 2D			sta adr.OBSTACLES+1,y
  3482 246F CA				dex
  3483
  3484 				; optimize FAIL (1, levels.inc), line = 137
  3485
  3486 2470 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3487 2474 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3488 2478 A9 06			lda #$06
  3489 247A 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3490 247D A9 1E			lda #$1E
  3491 247F 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3492 2482 20 F3 12			jsr CALCOBSTACLEADDR
  3493 2485 B4 17			ldy :STACKORIGIN-1,x
  3494 2487 B5 18			lda :STACKORIGIN,x
  3495 2489 99 06 2D			sta adr.OBSTACLES,y
  3496 248C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3497 248E 99 07 2D			sta adr.OBSTACLES+1,y
  3498 2491 CA				dex
  3499
  3500 				; optimize FAIL (1, levels.inc), line = 138
  3501
  3502 2492 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3503 2496 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3504 249A A9 12			lda #$12
  3505 249C 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3506 249F A9 0A			lda #$0A
  3507 24A1 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3508 24A4 20 F3 12			jsr CALCOBSTACLEADDR
  3509 24A7 B4 17			ldy :STACKORIGIN-1,x
  3510 24A9 B5 18			lda :STACKORIGIN,x
  3511 24AB 99 06 2D			sta adr.OBSTACLES,y
  3512 24AE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3513 24B0 99 07 2D			sta adr.OBSTACLES+1,y
  3514 24B3 CA				dex
  3515
  3516 				; optimize FAIL (1, levels.inc), line = 139
  3517
  3518 24B4 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3519 24B8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3520 24BC A9 12			lda #$12
  3521 24BE 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3522 24C1 A9 1E			lda #$1E
  3523 24C3 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3524 24C6 20 F3 12			jsr CALCOBSTACLEADDR
  3525 24C9 B4 17			ldy :STACKORIGIN-1,x
  3526 24CB B5 18			lda :STACKORIGIN,x
  3527 24CD 99 06 2D			sta adr.OBSTACLES,y
  3528 24D0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3529 24D2 99 07 2D			sta adr.OBSTACLES+1,y
  3530 24D5 CA				dex
  3531
  3532 				; optimize FAIL (1, levels.inc), line = 140
  3533
  3534 24D6 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3535 24DA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3536 24DE A9 0C			lda #$0C
  3537 24E0 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3538 24E3 A9 01			lda #$01
  3539 24E5 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3540 24E8 20 F3 12			jsr CALCOBSTACLEADDR
  3541 24EB B4 17			ldy :STACKORIGIN-1,x
  3542 24ED B5 18			lda :STACKORIGIN,x
  3543 24EF 99 06 2D			sta adr.OBSTACLES,y
  3544 24F2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3545 24F4 99 07 2D			sta adr.OBSTACLES+1,y
  3546 24F7 CA				dex
  3547
  3548 				; optimize FAIL (1, levels.inc), line = 141
  3549
  3550 24F8 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3551 24FC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3552 2500 A9 02			lda #$02
  3553 2502 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3554 2505 A9 14			lda #$14
  3555 2507 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3556 250A 20 F3 12			jsr CALCOBSTACLEADDR
  3557 250D B4 17			ldy :STACKORIGIN-1,x
  3558 250F B5 18			lda :STACKORIGIN,x
  3559 2511 99 06 2D			sta adr.OBSTACLES,y
  3560 2514 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3561 2516 99 07 2D			sta adr.OBSTACLES+1,y
  3562 2519 CA				dex
  3563
  3564 				; optimize FAIL (1, levels.inc), line = 142
  3565
  3566 251A A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3567 251E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3568 2522 A9 16			lda #$16
  3569 2524 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3570 2527 A9 14			lda #$14
  3571 2529 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3572 252C 20 F3 12			jsr CALCOBSTACLEADDR
  3573 252F B4 17			ldy :STACKORIGIN-1,x
  3574 2531 B5 18			lda :STACKORIGIN,x
  3575 2533 99 06 2D			sta adr.OBSTACLES,y
  3576 2536 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3577 2538 99 07 2D			sta adr.OBSTACLES+1,y
  3578 253B CA				dex
  3579
  3580 				; optimize FAIL (1, levels.inc), line = 143
  3581
  3582 253C A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3583 2540 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3584 2544 A9 0C			lda #$0C
  3585 2546 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3586 2549 A9 14			lda #$14
  3587 254B 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3588 254E 20 F3 12			jsr CALCOBSTACLEADDR
  3589 2551 B4 17			ldy :STACKORIGIN-1,x
  3590 2553 B5 18			lda :STACKORIGIN,x
  3591 2555 99 06 2D			sta adr.OBSTACLES,y
  3592 2558 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3593 255A 99 07 2D			sta adr.OBSTACLES+1,y
  3594 255D CA				dex
  3595 255E CA				dex
  3596
  3597 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 145
  3598
  3599 255F 20 16 13			jsr SAVEOBSTACLES
  3600 2562			@exit
  3601 					.ifdef @new
  3602 					lda <@VarData
  3603 					sta :ztmp
  3604 					lda >@VarData
  3605 					ldy #@VarDataSize-1
  3606 					jmp @FreeMem
  3607 					els
  3608 2562 60				rts						; ret
  3609 					eif
  3610 				.endl
  3611
  3612 2563			.local	SETLEVEL07					; PROCEDURE
  3613
  3614 				; optimize OK (levels.inc), line = 152
  3615
  3616 2563 A9 01			lda #$01
  3617 2565 8D 2B 2D			sta SETPLAYER.ISALIVE
  3618 2568 A9 62			lda #$62
  3619 256A 8D 2A 2D			sta SETPLAYER.COLOUR
  3620 256D A9 51			lda #$51
  3621 256F 8D 29 2D			sta SETPLAYER.HEAD
  3622 2572 A9 00			lda #$00
  3623 2574 8D 28 2D			sta SETPLAYER.BRAIN
  3624 2577 A9 04			lda #$04
  3625 2579 8D 27 2D			sta SETPLAYER.DIR
  3626 257C A9 0C			lda #$0C
  3627 257E 8D 26 2D			sta SETPLAYER.Y
  3628 2581 A9 12			lda #$12
  3629 2583 8D 25 2D			sta SETPLAYER.X
  3630 2586 AD C7 2C			lda PLAYER1
  3631 2589 8D 23 2D			sta SETPLAYER.P
  3632 258C AD C8 2C			lda PLAYER1+1
  3633 258F 8D 24 2D			sta SETPLAYER.P+1
  3634 2592 20 23 14			jsr SETPLAYER
  3635
  3636 				; optimize OK (levels.inc), line = 153
  3637
  3638 2595 A9 01			lda #$01
  3639 2597 8D 2B 2D			sta SETPLAYER.ISALIVE
  3640 259A A9 5D			lda #$5D
  3641 259C 8D 2A 2D			sta SETPLAYER.COLOUR
  3642 259F A9 51			lda #$51
  3643 25A1 8D 29 2D			sta SETPLAYER.HEAD
  3644 25A4 A9 03			lda #$03
  3645 25A6 8D 28 2D			sta SETPLAYER.BRAIN
  3646 25A9 A9 08			lda #$08
  3647 25AB 8D 27 2D			sta SETPLAYER.DIR
  3648 25AE A9 17			lda #$17
  3649 25B0 8D 26 2D			sta SETPLAYER.Y
  3650 25B3 A9 01			lda #$01
  3651 25B5 8D 25 2D			sta SETPLAYER.X
  3652 25B8 AD C9 2C			lda PLAYER2
  3653 25BB 8D 23 2D			sta SETPLAYER.P
  3654 25BE AD CA 2C			lda PLAYER2+1
  3655 25C1 8D 24 2D			sta SETPLAYER.P+1
  3656 25C4 20 23 14			jsr SETPLAYER
  3657
  3658 				; optimize OK (levels.inc), line = 154
  3659
  3660 25C7 A9 01			lda #$01
  3661 25C9 8D 2B 2D			sta SETPLAYER.ISALIVE
  3662 25CC A9 71			lda #$71
  3663 25CE 8D 2A 2D			sta SETPLAYER.COLOUR
  3664 25D1 A9 51			lda #$51
  3665 25D3 8D 29 2D			sta SETPLAYER.HEAD
  3666 25D6 A9 03			lda #$03
  3667 25D8 8D 28 2D			sta SETPLAYER.BRAIN
  3668 25DB A9 02			lda #$02
  3669 25DD 8D 27 2D			sta SETPLAYER.DIR
  3670 25E0 A9 04			lda #$04
  3671 25E2 8D 26 2D			sta SETPLAYER.Y
  3672 25E5 A9 1E			lda #$1E
  3673 25E7 8D 25 2D			sta SETPLAYER.X
  3674 25EA AD CB 2C			lda PLAYER3
  3675 25ED 8D 23 2D			sta SETPLAYER.P
  3676 25F0 AD CC 2C			lda PLAYER3+1
  3677 25F3 8D 24 2D			sta SETPLAYER.P+1
  3678 25F6 20 23 14			jsr SETPLAYER
  3679
  3680 				; optimize OK (levels.inc), line = 155
  3681
  3682 25F9 A9 01			lda #$01
  3683 25FB 8D 2B 2D			sta SETPLAYER.ISALIVE
  3684 25FE A9 55			lda #$55
  3685 2600 8D 2A 2D			sta SETPLAYER.COLOUR
  3686 2603 A9 51			lda #$51
  3687 2605 8D 29 2D			sta SETPLAYER.HEAD
  3688 2608 A9 02			lda #$02
  3689 260A 8D 28 2D			sta SETPLAYER.BRAIN
  3690 260D A9 01			lda #$01
  3691 260F 8D 27 2D			sta SETPLAYER.DIR
  3692 2612 A9 15			lda #$15
  3693 2614 8D 26 2D			sta SETPLAYER.Y
  3694 2617 A9 24			lda #$24
  3695 2619 8D 25 2D			sta SETPLAYER.X
  3696 261C AD CD 2C			lda PLAYER4
  3697 261F 8D 23 2D			sta SETPLAYER.P
  3698 2622 AD CE 2C			lda PLAYER4+1
  3699 2625 8D 24 2D			sta SETPLAYER.P+1
  3700 2628 20 23 14			jsr SETPLAYER
  3701
  3702 				; optimize FAIL (1, levels.inc), line = 157
  3703
  3704 262B E8				inx
  3705 262C A9 00 95 18			mva #$00 :STACKORIGIN,x
  3706 2630 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3707 2632 A9 06			lda #$06
  3708 2634 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3709 2637 A9 0A			lda #$0A
  3710 2639 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3711 263C 20 F3 12			jsr CALCOBSTACLEADDR
  3712 263F B4 17			ldy :STACKORIGIN-1,x
  3713 2641 B5 18			lda :STACKORIGIN,x
  3714 2643 99 06 2D			sta adr.OBSTACLES,y
  3715 2646 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3716 2648 99 07 2D			sta adr.OBSTACLES+1,y
  3717 264B CA				dex
  3718
  3719 				; optimize FAIL (1, levels.inc), line = 158
  3720
  3721 264C A9 02 95 18			mva #$02 :STACKORIGIN,x
  3722 2650 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3723 2654 A9 06			lda #$06
  3724 2656 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3725 2659 A9 1E			lda #$1E
  3726 265B 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3727 265E 20 F3 12			jsr CALCOBSTACLEADDR
  3728 2661 B4 17			ldy :STACKORIGIN-1,x
  3729 2663 B5 18			lda :STACKORIGIN,x
  3730 2665 99 06 2D			sta adr.OBSTACLES,y
  3731 2668 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3732 266A 99 07 2D			sta adr.OBSTACLES+1,y
  3733 266D CA				dex
  3734
  3735 				; optimize FAIL (1, levels.inc), line = 159
  3736
  3737 266E A9 04 95 18			mva #$04 :STACKORIGIN,x
  3738 2672 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3739 2676 A9 12			lda #$12
  3740 2678 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3741 267B A9 0A			lda #$0A
  3742 267D 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3743 2680 20 F3 12			jsr CALCOBSTACLEADDR
  3744 2683 B4 17			ldy :STACKORIGIN-1,x
  3745 2685 B5 18			lda :STACKORIGIN,x
  3746 2687 99 06 2D			sta adr.OBSTACLES,y
  3747 268A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3748 268C 99 07 2D			sta adr.OBSTACLES+1,y
  3749 268F CA				dex
  3750
  3751 				; optimize FAIL (1, levels.inc), line = 160
  3752
  3753 2690 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3754 2694 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3755 2698 A9 12			lda #$12
  3756 269A 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3757 269D A9 1E			lda #$1E
  3758 269F 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3759 26A2 20 F3 12			jsr CALCOBSTACLEADDR
  3760 26A5 B4 17			ldy :STACKORIGIN-1,x
  3761 26A7 B5 18			lda :STACKORIGIN,x
  3762 26A9 99 06 2D			sta adr.OBSTACLES,y
  3763 26AC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3764 26AE 99 07 2D			sta adr.OBSTACLES+1,y
  3765 26B1 CA				dex
  3766
  3767 				; optimize FAIL (1, levels.inc), line = 161
  3768
  3769 26B2 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3770 26B6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3771 26BA A9 0C			lda #$0C
  3772 26BC 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3773 26BF A9 01			lda #$01
  3774 26C1 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3775 26C4 20 F3 12			jsr CALCOBSTACLEADDR
  3776 26C7 B4 17			ldy :STACKORIGIN-1,x
  3777 26C9 B5 18			lda :STACKORIGIN,x
  3778 26CB 99 06 2D			sta adr.OBSTACLES,y
  3779 26CE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3780 26D0 99 07 2D			sta adr.OBSTACLES+1,y
  3781 26D3 CA				dex
  3782
  3783 				; optimize FAIL (1, levels.inc), line = 162
  3784
  3785 26D4 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3786 26D8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3787 26DC A9 02			lda #$02
  3788 26DE 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3789 26E1 A9 14			lda #$14
  3790 26E3 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3791 26E6 20 F3 12			jsr CALCOBSTACLEADDR
  3792 26E9 B4 17			ldy :STACKORIGIN-1,x
  3793 26EB B5 18			lda :STACKORIGIN,x
  3794 26ED 99 06 2D			sta adr.OBSTACLES,y
  3795 26F0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3796 26F2 99 07 2D			sta adr.OBSTACLES+1,y
  3797 26F5 CA				dex
  3798
  3799 				; optimize FAIL (1, levels.inc), line = 163
  3800
  3801 26F6 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3802 26FA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3803 26FE A9 16			lda #$16
  3804 2700 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3805 2703 A9 14			lda #$14
  3806 2705 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3807 2708 20 F3 12			jsr CALCOBSTACLEADDR
  3808 270B B4 17			ldy :STACKORIGIN-1,x
  3809 270D B5 18			lda :STACKORIGIN,x
  3810 270F 99 06 2D			sta adr.OBSTACLES,y
  3811 2712 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3812 2714 99 07 2D			sta adr.OBSTACLES+1,y
  3813 2717 CA				dex
  3814
  3815 				; optimize FAIL (1, levels.inc), line = 164
  3816
  3817 2718 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3818 271C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3819 2720 A9 0C			lda #$0C
  3820 2722 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3821 2725 A9 14			lda #$14
  3822 2727 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3823 272A 20 F3 12			jsr CALCOBSTACLEADDR
  3824 272D B4 17			ldy :STACKORIGIN-1,x
  3825 272F B5 18			lda :STACKORIGIN,x
  3826 2731 99 06 2D			sta adr.OBSTACLES,y
  3827 2734 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3828 2736 99 07 2D			sta adr.OBSTACLES+1,y
  3829 2739 CA				dex
  3830 273A CA				dex
  3831
  3832 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 166
  3833
  3834 273B 20 16 13			jsr SAVEOBSTACLES
  3835 273E			@exit
  3836 					.ifdef @new
  3837 					lda <@VarData
  3838 					sta :ztmp
  3839 					lda >@VarData
  3840 					ldy #@VarDataSize-1
  3841 					jmp @FreeMem
  3842 					els
  3843 273E 60				rts						; ret
  3844 					eif
  3845 				.endl
  3846
  3847 273F			.local	SETLEVEL08					; PROCEDURE
  3848
  3849 				; optimize OK (levels.inc), line = 173
  3850
  3851 273F A9 01			lda #$01
  3852 2741 8D 2B 2D			sta SETPLAYER.ISALIVE
  3853 2744 A9 62			lda #$62
  3854 2746 8D 2A 2D			sta SETPLAYER.COLOUR
  3855 2749 A9 51			lda #$51
  3856 274B 8D 29 2D			sta SETPLAYER.HEAD
  3857 274E A9 00			lda #$00
  3858 2750 8D 28 2D			sta SETPLAYER.BRAIN
  3859 2753 A9 08			lda #$08
  3860 2755 8D 27 2D			sta SETPLAYER.DIR
  3861 2758 A9 17			lda #$17
  3862 275A 8D 26 2D			sta SETPLAYER.Y
  3863 275D A9 01			lda #$01
  3864 275F 8D 25 2D			sta SETPLAYER.X
  3865 2762 AD C7 2C			lda PLAYER1
  3866 2765 8D 23 2D			sta SETPLAYER.P
  3867 2768 AD C8 2C			lda PLAYER1+1
  3868 276B 8D 24 2D			sta SETPLAYER.P+1
  3869 276E 20 23 14			jsr SETPLAYER
  3870
  3871 				; optimize OK (levels.inc), line = 174
  3872
  3873 2771 A9 01			lda #$01
  3874 2773 8D 2B 2D			sta SETPLAYER.ISALIVE
  3875 2776 A9 5D			lda #$5D
  3876 2778 8D 2A 2D			sta SETPLAYER.COLOUR
  3877 277B A9 51			lda #$51
  3878 277D 8D 29 2D			sta SETPLAYER.HEAD
  3879 2780 A9 03			lda #$03
  3880 2782 8D 28 2D			sta SETPLAYER.BRAIN
  3881 2785 A9 04			lda #$04
  3882 2787 8D 27 2D			sta SETPLAYER.DIR
  3883 278A A9 17			lda #$17
  3884 278C 8D 26 2D			sta SETPLAYER.Y
  3885 278F A9 26			lda #$26
  3886 2791 8D 25 2D			sta SETPLAYER.X
  3887 2794 AD C9 2C			lda PLAYER2
  3888 2797 8D 23 2D			sta SETPLAYER.P
  3889 279A AD CA 2C			lda PLAYER2+1
  3890 279D 8D 24 2D			sta SETPLAYER.P+1
  3891 27A0 20 23 14			jsr SETPLAYER
  3892
  3893 				; optimize OK (levels.inc), line = 175
  3894
  3895 27A3 A9 01			lda #$01
  3896 27A5 8D 2B 2D			sta SETPLAYER.ISALIVE
  3897 27A8 A9 71			lda #$71
  3898 27AA 8D 2A 2D			sta SETPLAYER.COLOUR
  3899 27AD A9 51			lda #$51
  3900 27AF 8D 29 2D			sta SETPLAYER.HEAD
  3901 27B2 A9 02			lda #$02
  3902 27B4 8D 28 2D			sta SETPLAYER.BRAIN
  3903 27B7 8D 27 2D			sta SETPLAYER.DIR
  3904 27BA A9 01			lda #$01
  3905 27BC 8D 26 2D			sta SETPLAYER.Y
  3906 27BF A9 0A			lda #$0A
  3907 27C1 8D 25 2D			sta SETPLAYER.X
  3908 27C4 AD CB 2C			lda PLAYER3
  3909 27C7 8D 23 2D			sta SETPLAYER.P
  3910 27CA AD CC 2C			lda PLAYER3+1
  3911 27CD 8D 24 2D			sta SETPLAYER.P+1
  3912 27D0 20 23 14			jsr SETPLAYER
  3913
  3914 				; optimize OK (levels.inc), line = 176
  3915
  3916 27D3 A9 01			lda #$01
  3917 27D5 8D 2B 2D			sta SETPLAYER.ISALIVE
  3918 27D8 A9 55			lda #$55
  3919 27DA 8D 2A 2D			sta SETPLAYER.COLOUR
  3920 27DD A9 51			lda #$51
  3921 27DF 8D 29 2D			sta SETPLAYER.HEAD
  3922 27E2 A9 04			lda #$04
  3923 27E4 8D 28 2D			sta SETPLAYER.BRAIN
  3924 27E7 8D 27 2D			sta SETPLAYER.DIR
  3925 27EA A9 01			lda #$01
  3926 27EC 8D 26 2D			sta SETPLAYER.Y
  3927 27EF A9 26			lda #$26
  3928 27F1 8D 25 2D			sta SETPLAYER.X
  3929 27F4 AD CD 2C			lda PLAYER4
  3930 27F7 8D 23 2D			sta SETPLAYER.P
  3931 27FA AD CE 2C			lda PLAYER4+1
  3932 27FD 8D 24 2D			sta SETPLAYER.P+1
  3933 2800 20 23 14			jsr SETPLAYER
  3934
  3935 				; optimize FAIL (1, levels.inc), line = 178
  3936
  3937 2803 E8				inx
  3938 2804 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3939 2808 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3940 280A A9 06			lda #$06
  3941 280C 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3942 280F A9 0A			lda #$0A
  3943 2811 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3944 2814 20 F3 12			jsr CALCOBSTACLEADDR
  3945 2817 B4 17			ldy :STACKORIGIN-1,x
  3946 2819 B5 18			lda :STACKORIGIN,x
  3947 281B 99 06 2D			sta adr.OBSTACLES,y
  3948 281E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3949 2820 99 07 2D			sta adr.OBSTACLES+1,y
  3950 2823 CA				dex
  3951
  3952 				; optimize FAIL (1, levels.inc), line = 179
  3953
  3954 2824 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3955 2828 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3956 282C A9 06			lda #$06
  3957 282E 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3958 2831 A9 1E			lda #$1E
  3959 2833 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3960 2836 20 F3 12			jsr CALCOBSTACLEADDR
  3961 2839 B4 17			ldy :STACKORIGIN-1,x
  3962 283B B5 18			lda :STACKORIGIN,x
  3963 283D 99 06 2D			sta adr.OBSTACLES,y
  3964 2840 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3965 2842 99 07 2D			sta adr.OBSTACLES+1,y
  3966 2845 CA				dex
  3967
  3968 				; optimize FAIL (1, levels.inc), line = 180
  3969
  3970 2846 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3971 284A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3972 284E A9 12			lda #$12
  3973 2850 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3974 2853 A9 0A			lda #$0A
  3975 2855 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3976 2858 20 F3 12			jsr CALCOBSTACLEADDR
  3977 285B B4 17			ldy :STACKORIGIN-1,x
  3978 285D B5 18			lda :STACKORIGIN,x
  3979 285F 99 06 2D			sta adr.OBSTACLES,y
  3980 2862 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3981 2864 99 07 2D			sta adr.OBSTACLES+1,y
  3982 2867 CA				dex
  3983
  3984 				; optimize FAIL (1, levels.inc), line = 181
  3985
  3986 2868 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3987 286C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3988 2870 A9 12			lda #$12
  3989 2872 8D 20 2D			sta CALCOBSTACLEADDR.Y
  3990 2875 A9 1E			lda #$1E
  3991 2877 8D 1F 2D			sta CALCOBSTACLEADDR.X
  3992 287A 20 F3 12			jsr CALCOBSTACLEADDR
  3993 287D B4 17			ldy :STACKORIGIN-1,x
  3994 287F B5 18			lda :STACKORIGIN,x
  3995 2881 99 06 2D			sta adr.OBSTACLES,y
  3996 2884 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3997 2886 99 07 2D			sta adr.OBSTACLES+1,y
  3998 2889 CA				dex
  3999
  4000 				; optimize FAIL (1, levels.inc), line = 182
  4001
  4002 288A A9 08 95 18			mva #$08 :STACKORIGIN,x
  4003 288E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4004 2892 A9 0C			lda #$0C
  4005 2894 8D 20 2D			sta CALCOBSTACLEADDR.Y
  4006 2897 A9 01			lda #$01
  4007 2899 8D 1F 2D			sta CALCOBSTACLEADDR.X
  4008 289C 20 F3 12			jsr CALCOBSTACLEADDR
  4009 289F B4 17			ldy :STACKORIGIN-1,x
  4010 28A1 B5 18			lda :STACKORIGIN,x
  4011 28A3 99 06 2D			sta adr.OBSTACLES,y
  4012 28A6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4013 28A8 99 07 2D			sta adr.OBSTACLES+1,y
  4014 28AB CA				dex
  4015
  4016 				; optimize FAIL (1, levels.inc), line = 183
  4017
  4018 28AC A9 0A 95 18			mva #$0A :STACKORIGIN,x
  4019 28B0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4020 28B4 A9 02			lda #$02
  4021 28B6 8D 20 2D			sta CALCOBSTACLEADDR.Y
  4022 28B9 A9 14			lda #$14
  4023 28BB 8D 1F 2D			sta CALCOBSTACLEADDR.X
  4024 28BE 20 F3 12			jsr CALCOBSTACLEADDR
  4025 28C1 B4 17			ldy :STACKORIGIN-1,x
  4026 28C3 B5 18			lda :STACKORIGIN,x
  4027 28C5 99 06 2D			sta adr.OBSTACLES,y
  4028 28C8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4029 28CA 99 07 2D			sta adr.OBSTACLES+1,y
  4030 28CD CA				dex
  4031
  4032 				; optimize FAIL (1, levels.inc), line = 184
  4033
  4034 28CE A9 0C 95 18			mva #$0C :STACKORIGIN,x
  4035 28D2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4036 28D6 A9 16			lda #$16
  4037 28D8 8D 20 2D			sta CALCOBSTACLEADDR.Y
  4038 28DB A9 14			lda #$14
  4039 28DD 8D 1F 2D			sta CALCOBSTACLEADDR.X
  4040 28E0 20 F3 12			jsr CALCOBSTACLEADDR
  4041 28E3 B4 17			ldy :STACKORIGIN-1,x
  4042 28E5 B5 18			lda :STACKORIGIN,x
  4043 28E7 99 06 2D			sta adr.OBSTACLES,y
  4044 28EA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4045 28EC 99 07 2D			sta adr.OBSTACLES+1,y
  4046 28EF CA				dex
  4047
  4048 				; optimize FAIL (1, levels.inc), line = 185
  4049
  4050 28F0 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  4051 28F4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4052 28F8 A9 0C			lda #$0C
  4053 28FA 8D 20 2D			sta CALCOBSTACLEADDR.Y
  4054 28FD A9 14			lda #$14
  4055 28FF 8D 1F 2D			sta CALCOBSTACLEADDR.X
  4056 2902 20 F3 12			jsr CALCOBSTACLEADDR
  4057 2905 B4 17			ldy :STACKORIGIN-1,x
  4058 2907 B5 18			lda :STACKORIGIN,x
  4059 2909 99 06 2D			sta adr.OBSTACLES,y
  4060 290C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4061 290E 99 07 2D			sta adr.OBSTACLES+1,y
  4062 2911 CA				dex
  4063 2912 CA				dex
  4064
  4065 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 187
  4066
  4067 2913 20 16 13			jsr SAVEOBSTACLES
  4068 2916			@exit
  4069 					.ifdef @new
  4070 					lda <@VarData
  4071 					sta :ztmp
  4072 					lda >@VarData
  4073 					ldy #@VarDataSize-1
  4074 					jmp @FreeMem
  4075 					els
  4076 2916 60				rts						; ret
  4077 					eif
  4078 				.endl
  4079
  4080 2917			.local	HUMAN						; PROCEDURE
  4081
  4082 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 15
  4083
  4084 2917 20 11 14			jsr CHECKJOYSTATUS
  4085 291A AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4086 2924 A0 04			ldy #PLY.DIR-DATAORIGIN
  4087 2926 B1 12			lda (:bp2),y
  4088 2928 85 5B			sta NEWDIR
  4089
  4090 				; optimize OK (main.pas), line = 16
  4091
  4092 292A A5 63			lda JOYSTATUS
  4093 292C 8D 33 2D			sta @CASETMP_0006
  4094 292F C9 01			cmp #$01
  4095 2931 D0 19			jne l_0D85
  4096 2933			@
  4097
  4098 				; optimize OK (main.pas), line = 17
  4099
  4100 2933 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4101 293D A0 04			ldy #PLY.DIR-DATAORIGIN
  4102 293F B1 12			lda (:bp2),y
  4103 2941 C9 02			cmp #$02
  4104 2943 F0 04			jeq l_0D97
  4105 2945 A9 01			lda #$01
  4106 2947 85 5B			sta NEWDIR
  4107 2949			l_0D97
  4108
  4109 2949 4C A0 29			jmp a_0006
  4110 294C			l_0D85
  4111 294C C9 02			cmp #$02
  4112 294E D0 19			jne l_0DA7
  4113 2950			@
  4114
  4115 				; optimize OK (main.pas), line = 18
  4116
  4117 2950 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4118 295A A0 04			ldy #PLY.DIR-DATAORIGIN
  4119 295C B1 12			lda (:bp2),y
  4120 295E C9 01			cmp #$01
  4121 2960 F0 04			jeq l_0DB9
  4122 2962 A9 02			lda #$02
  4123 2964 85 5B			sta NEWDIR
  4124 2966			l_0DB9
  4125
  4126 2966 4C A0 29			jmp a_0006
  4127 2969			l_0DA7
  4128 2969 C9 04			cmp #$04
  4129 296B D0 19			jne l_0DC9
  4130 296D			@
  4131
  4132 				; optimize OK (main.pas), line = 19
  4133
  4134 296D AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4135 2977 A0 04			ldy #PLY.DIR-DATAORIGIN
  4136 2979 B1 12			lda (:bp2),y
  4137 297B C9 08			cmp #$08
  4138 297D F0 04			jeq l_0DDB
  4139 297F A9 04			lda #$04
  4140 2981 85 5B			sta NEWDIR
  4141 2983			l_0DDB
  4142
  4143 2983 4C A0 29			jmp a_0006
  4144 2986			l_0DC9
  4145 2986 C9 08			cmp #$08
  4146 2988 D0 16			jne l_0DEB
  4147 298A			@
  4148
  4149 				; optimize OK (main.pas), line = 20
  4150
  4151 298A AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4152 2994 A0 04			ldy #PLY.DIR-DATAORIGIN
  4153 2996 B1 12			lda (:bp2),y
  4154 2998 C9 04			cmp #$04
  4155 299A F0 04			jeq l_0DFD
  4156 299C A9 08			lda #$08
  4157 299E 85 5B			sta NEWDIR
  4158 29A0			l_0DFD
  4159
  4160 29A0			l_0DEB
  4161 29A0			a_0006
  4162
  4163 				; optimize OK (main.pas), line = 23
  4164
  4165 29A0 A5 5B			lda NEWDIR
  4166 29A2 25 5C			and AVAILDIR
  4167 29A4 D0 18			jne l_0E24
  4168
  4169 				; optimize OK (main.pas), line = 24
  4170
  4171 29A6 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4172 29B0 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4173 29B2 A9 00			lda #$00
  4174 29B4 91 12			sta (:bp2),y
  4175 29B6 A0 02			ldy #PLY.HEAD-DATAORIGIN
  4176 29B8 A9 2A			lda #$2A
  4177 29BA 91 12			sta (:bp2),y
  4178 29BC C6 5A			dec ALIVE
  4179 29BE			l_0E24
  4180
  4181 				; ------------------------------------------------------------
  4182
  4183 = 2D33			@CASETMP_0006	= DATAORIGIN+$005F
  4184
  4185 = 2D33			@VarData	= @CASETMP_0006
  4186 = 0001			@VarDataSize	= 1
  4187
  4188 29BE			@exit
  4189 					.ifdef @new
  4190 					lda <@VarData
  4191 					sta :ztmp
  4192 					lda >@VarData
  4193 					ldy #@VarDataSize-1
  4194 					jmp @FreeMem
  4195 					els
  4196 29BE 60				rts						; ret
  4197 					eif
  4198 				.endl
  4199
  4200 29BF			.local	PLAYERMOVE					; PROCEDURE
  4201
  4202 				; optimize OK (main.pas), line = 32
  4203
  4204 29BF AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4205 29C9 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4206 29CB B1 12			lda (:bp2),y
  4207 29CD D0 03 4C 13 2B		jeq l_0E43
  4208
  4209 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 33
  4210
  4211 29D2 20 29 12			jsr CHECKAVAILDIR
  4212
  4213 				; optimize OK (main.pas), line = 35
  4214
  4215 29D5 A5 5C			lda AVAILDIR
  4216 29D7 D0 35			jne l_0E57
  4217
  4218 				; optimize OK (main.pas), line = 36
  4219
  4220 29D9 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4221 29E3 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4222 29E5 A9 00			lda #$00
  4223 29E7 91 12			sta (:bp2),y
  4224 29E9 C6 5A			dec ALIVE
  4225
  4226 				; optimize OK (main.pas), line = 37
  4227
  4228 29EB A0 00			ldy #PLY.X-DATAORIGIN
  4229 29ED B1 12			lda (:bp2),y
  4230 29EF 8D 16 2D			sta PUTCHAR_0072.X
  4231 29F2 A0 01			ldy #PLY.Y-DATAORIGIN
  4232 29F4 B1 12			lda (:bp2),y
  4233 29F6 8D 17 2D			sta PUTCHAR_0072.Y
  4234 29F9 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  4235 29FB B1 12			lda (:bp2),y
  4236 29FD 18 69 80			add #$80
  4237 2A00 8D 19 2D			sta PUTCHAR_0072.C
  4238 2A03 A9 57			lda #$57
  4239 2A05 8D 18 2D			sta PUTCHAR_0072.V
  4240 2A08 20 78 11			jsr PUTCHAR_0072
  4241 2A0B 4C 13 2B			jmp l_0E78
  4242 2A0E			l_0E57
  4243
  4244 				; optimize OK (main.pas), line = 40
  4245
  4246 2A0E AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4247 2A18 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  4248 2A1A B1 12			lda (:bp2),y
  4249 2A1C 8D 34 2D			sta @CASETMP_0007
  4250 2A1F C9 00			cmp #$00
  4251 2A21 D0 06			jne l_0E83
  4252 2A23			@
  4253
  4254 				; optimize FAIL ('HUMAN', main.pas), line = 41
  4255
  4256 2A23 20 17 29			jsr HUMAN
  4257 2A26 4C 4E 2A			jmp a_0007
  4258 2A29			l_0E83
  4259 2A29 C9 01			cmp #$01
  4260 2A2B D0 06			jne l_0E8D
  4261 2A2D			@
  4262
  4263 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 42
  4264
  4265 2A2D 20 1D 15			jsr AISTRAIGHT
  4266 2A30 4C 4E 2A			jmp a_0007
  4267 2A33			l_0E8D
  4268 2A33 C9 02			cmp #$02
  4269 2A35 D0 06			jne l_0E97
  4270 2A37			@
  4271
  4272 				; optimize FAIL ('AISAPPER', main.pas), line = 43
  4273
  4274 2A37 20 A2 15			jsr AISAPPER
  4275 2A3A 4C 4E 2A			jmp a_0007
  4276 2A3D			l_0E97
  4277 2A3D C9 03			cmp #$03
  4278 2A3F D0 06			jne l_0EA1
  4279 2A41			@
  4280
  4281 				; optimize FAIL ('AIBULLY', main.pas), line = 44
  4282
  4283 2A41 20 FC 17			jsr AIBULLY
  4284 2A44 4C 4E 2A			jmp a_0007
  4285 2A47			l_0EA1
  4286 2A47 C9 04			cmp #$04
  4287 2A49 D0 03			jne l_0EAB
  4288 2A4B			@
  4289
  4290 				; optimize FAIL ('AIMIRROR', main.pas), line = 45
  4291
  4292 2A4B 20 CA 18			jsr AIMIRROR
  4293 2A4E			l_0EAB
  4294 2A4E			a_0007
  4295
  4296 				; optimize FAIL ('DRAWTAIL', main.pas), line = 48
  4297
  4298 2A4E 20 5A 13			jsr DRAWTAIL
  4299 2A51 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4300 2A5B A0 04			ldy #PLY.DIR-DATAORIGIN
  4301 2A5D A5 5B			lda NEWDIR
  4302 2A5F 91 12			sta (:bp2),y
  4303
  4304 				; optimize OK (main.pas), line = 50
  4305
  4306 2A61 A5 5B			lda NEWDIR
  4307 2A63 8D 35 2D			sta @CASETMP_0008
  4308 2A66 C9 01			cmp #$01
  4309 2A68 D0 16			jne l_0EC7
  4310 2A6A			@
  4311
  4312 				; optimize OK (main.pas), line = 51
  4313
  4314 2A6A AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4315 2A74 A0 01			ldy #PLY.Y-DATAORIGIN
  4316 2A76 B1 12			lda (:bp2),y
  4317 2A78 38 E9 01			sub #$01
  4318 2A7B 91 12			sta (:bp2),y
  4319
  4320 2A7D 4C CB 2A			jmp a_0008
  4321 2A80			l_0EC7
  4322 2A80 C9 02			cmp #$02
  4323 2A82 D0 16			jne l_0ED1
  4324 2A84			@
  4325
  4326 				; optimize OK (main.pas), line = 52
  4327
  4328 2A84 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4329 2A8E A0 01			ldy #PLY.Y-DATAORIGIN
  4330 2A90 B1 12			lda (:bp2),y
  4331 2A92 18 69 01			add #$01
  4332 2A95 91 12			sta (:bp2),y
  4333
  4334 2A97 4C CB 2A			jmp a_0008
  4335 2A9A			l_0ED1
  4336 2A9A C9 04			cmp #$04
  4337 2A9C D0 16			jne l_0EDB
  4338 2A9E			@
  4339
  4340 				; optimize OK (main.pas), line = 53
  4341
  4342 2A9E AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4343 2AA8 A0 00			ldy #PLY.X-DATAORIGIN
  4344 2AAA B1 12			lda (:bp2),y
  4345 2AAC 38 E9 01			sub #$01
  4346 2AAF 91 12			sta (:bp2),y
  4347
  4348 2AB1 4C CB 2A			jmp a_0008
  4349 2AB4			l_0EDB
  4350 2AB4 C9 08			cmp #$08
  4351 2AB6 D0 13			jne l_0EE5
  4352 2AB8			@
  4353
  4354 				; optimize OK (main.pas), line = 54
  4355
  4356 2AB8 AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4357 2AC2 A0 00			ldy #PLY.X-DATAORIGIN
  4358 2AC4 B1 12			lda (:bp2),y
  4359 2AC6 18 69 01			add #$01
  4360 2AC9 91 12			sta (:bp2),y
  4361
  4362 2ACB			l_0EE5
  4363 2ACB			a_0008
  4364
  4365 				; optimize OK (main.pas), line = 57
  4366
  4367 2ACB AC C3 2C 84 12 AC + 	mwy PLY :bp2
  4368 2AD5 A0 00			ldy #PLY.X-DATAORIGIN
  4369 2AD7 B1 12			lda (:bp2),y
  4370 2AD9 8D 16 2D			sta PUTCHAR_0072.X
  4371 2ADC A0 01			ldy #PLY.Y-DATAORIGIN
  4372 2ADE B1 12			lda (:bp2),y
  4373 2AE0 8D 17 2D			sta PUTCHAR_0072.Y
  4374 2AE3 A0 02			ldy #PLY.HEAD-DATAORIGIN
  4375 2AE5 B1 12			lda (:bp2),y
  4376 2AE7 8D 18 2D			sta PUTCHAR_0072.V
  4377 2AEA A0 03			ldy #PLY.COLOUR-DATAORIGIN
  4378 2AEC B1 12			lda (:bp2),y
  4379 2AEE 8D 19 2D			sta PUTCHAR_0072.C
  4380 2AF1 20 78 11			jsr PUTCHAR_0072
  4381
  4382 				; optimize OK (main.pas), line = 60
  4383
  4384 2AF4 AD ED 2C			lda PLAYER1.ISALIVE
  4385 2AF7 D0 1A			jne l_0F0A
  4386 2AF9 AD E9 2C			lda PLAYER1.COLOUR
  4387 2AFC 8D 19 2D			sta PUTCHAR_0072.C
  4388 2AFF A9 2A			lda #$2A
  4389 2B01 8D 18 2D			sta PUTCHAR_0072.V
  4390 2B04 AD E7 2C			lda PLAYER1.Y
  4391 2B07 8D 17 2D			sta PUTCHAR_0072.Y
  4392 2B0A AD E6 2C			lda PLAYER1.X
  4393 2B0D 8D 16 2D			sta PUTCHAR_0072.X
  4394 2B10 20 78 11			jsr PUTCHAR_0072
  4395 2B13			l_0F0A
  4396 2B13			l_0E78
  4397 2B13			l_0E43
  4398
  4399 				; ------------------------------------------------------------
  4400
  4401 = 2D34			@CASETMP_0007	= DATAORIGIN+$0060
  4402 = 2D35			@CASETMP_0008	= DATAORIGIN+$0061
  4403
  4404 = 2D34			@VarData	= @CASETMP_0007
  4405 = 0002			@VarDataSize	= 2
  4406
  4407 2B13			@exit
  4408 					.ifdef @new
  4409 					lda <@VarData
  4410 					sta :ztmp
  4411 					lda >@VarData
  4412 					ldy #@VarDataSize-1
  4413 					jmp @FreeMem
  4414 					els
  4415 2B13 60				rts						; ret
  4416 					eif
  4417 				.endl
  4418
  4419 2B14			.local	STARTSCREEN					; PROCEDURE
  4420
  4421 				; optimize OK (main.pas), line = 71
  4422
  4423 2B14 AD E9 2C			lda PLAYER1.COLOUR
  4424 2B17 18 69 80			add #$80
  4425 2B1A 8D 19 2D			sta PUTCHAR_0072.C
  4426 2B1D AD E8 2C			lda PLAYER1.HEAD
  4427 2B20 8D 18 2D			sta PUTCHAR_0072.V
  4428 2B23 AD E7 2C			lda PLAYER1.Y
  4429 2B26 8D 17 2D			sta PUTCHAR_0072.Y
  4430 2B29 AD E6 2C			lda PLAYER1.X
  4431 2B2C 8D 16 2D			sta PUTCHAR_0072.X
  4432 2B2F 20 78 11			jsr PUTCHAR_0072
  4433
  4434 				; --- RepeatUntilProlog
  4435 2B32			l_0F30
  4436
  4437 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 72
  4438
  4439 2B32 20 11 14			jsr CHECKJOYSTATUS
  4440 2B35 A5 63			lda JOYSTATUS
  4441 2B37 C9 40			cmp #$40
  4442 2B39 D0 F7			jne l_0F30
  4443
  4444 				; optimize OK (main.pas), line = 73
  4445
  4446 2B3B AD E9 2C			lda PLAYER1.COLOUR
  4447 2B3E 8D 19 2D			sta PUTCHAR_0072.C
  4448 2B41 AD E8 2C			lda PLAYER1.HEAD
  4449 2B44 8D 18 2D			sta PUTCHAR_0072.V
  4450 2B47 AD E7 2C			lda PLAYER1.Y
  4451 2B4A 8D 17 2D			sta PUTCHAR_0072.Y
  4452 2B4D AD E6 2C			lda PLAYER1.X
  4453 2B50 8D 16 2D			sta PUTCHAR_0072.X
  4454 2B53 20 78 11			jsr PUTCHAR_0072
  4455 2B56			@exit
  4456 					.ifdef @new
  4457 					lda <@VarData
  4458 					sta :ztmp
  4459 					lda >@VarData
  4460 					ldy #@VarDataSize-1
  4461 					jmp @FreeMem
  4462 					els
  4463 2B56 60				rts						; ret
  4464 					eif
  4465 				.endl
  4466
  4467 2B57			.local	MAINLOOP					; PROCEDURE
  4468
  4469 				; optimize OK (main.pas), line = 80
  4470
  4471 2B57 A9 FF			lda #$FF
  4472 2B59 85 5A			sta ALIVE
  4473
  4474 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 82
  4475
  4476 2B5B 20 87 14			jsr INITPLAYFIELD
  4477
  4478 				; optimize OK (main.pas), line = 84
  4479
  4480 2B5E AD E4 2C			lda LEVEL
  4481 2B61 8D 36 2D			sta @CASETMP_0009
  4482 2B64 C9 00			cmp #$00
  4483 2B66 D0 06			jne l_0F5F
  4484 2B68			@
  4485
  4486 				; optimize FAIL ('SETLEVEL00', main.pas), line = 85
  4487
  4488 2B68 20 1F 19			jsr SETLEVEL00
  4489 2B6B 4C BB 2B			jmp a_0009
  4490 2B6E			l_0F5F
  4491 2B6E C9 01			cmp #$01
  4492 2B70 D0 06			jne l_0F69
  4493 2B72			@
  4494
  4495 				; optimize FAIL ('SETLEVEL01', main.pas), line = 86
  4496
  4497 2B72 20 CD 1A			jsr SETLEVEL01
  4498 2B75 4C BB 2B			jmp a_0009
  4499 2B78			l_0F69
  4500 2B78 C9 02			cmp #$02
  4501 2B7A D0 06			jne l_0F73
  4502 2B7C			@
  4503
  4504 				; optimize FAIL ('SETLEVEL02', main.pas), line = 87
  4505
  4506 2B7C 20 7B 1C			jsr SETLEVEL02
  4507 2B7F 4C BB 2B			jmp a_0009
  4508 2B82			l_0F73
  4509 2B82 C9 03			cmp #$03
  4510 2B84 D0 06			jne l_0F7D
  4511 2B86			@
  4512
  4513 				; optimize FAIL ('SETLEVEL03', main.pas), line = 88
  4514
  4515 2B86 20 29 1E			jsr SETLEVEL03
  4516 2B89 4C BB 2B			jmp a_0009
  4517 2B8C			l_0F7D
  4518 2B8C C9 04			cmp #$04
  4519 2B8E D0 06			jne l_0F87
  4520 2B90			@
  4521
  4522 				; optimize FAIL ('SETLEVEL04', main.pas), line = 89
  4523
  4524 2B90 20 ED 1F			jsr SETLEVEL04
  4525 2B93 4C BB 2B			jmp a_0009
  4526 2B96			l_0F87
  4527 2B96 C9 05			cmp #$05
  4528 2B98 D0 06			jne l_0F91
  4529 2B9A			@
  4530
  4531 				; optimize FAIL ('SETLEVEL05', main.pas), line = 90
  4532
  4533 2B9A 20 C9 21			jsr SETLEVEL05
  4534 2B9D 4C BB 2B			jmp a_0009
  4535 2BA0			l_0F91
  4536 2BA0 C9 06			cmp #$06
  4537 2BA2 D0 06			jne l_0F9B
  4538 2BA4			@
  4539
  4540 				; optimize FAIL ('SETLEVEL06', main.pas), line = 91
  4541
  4542 2BA4 20 8B 23			jsr SETLEVEL06
  4543 2BA7 4C BB 2B			jmp a_0009
  4544 2BAA			l_0F9B
  4545 2BAA C9 07			cmp #$07
  4546 2BAC D0 06			jne l_0FA5
  4547 2BAE			@
  4548
  4549 				; optimize FAIL ('SETLEVEL07', main.pas), line = 92
  4550
  4551 2BAE 20 63 25			jsr SETLEVEL07
  4552 2BB1 4C BB 2B			jmp a_0009
  4553 2BB4			l_0FA5
  4554 2BB4 C9 08			cmp #$08
  4555 2BB6 D0 03			jne l_0FAF
  4556 2BB8			@
  4557
  4558 				; optimize FAIL ('SETLEVEL08', main.pas), line = 93
  4559
  4560 2BB8 20 3F 27			jsr SETLEVEL08
  4561 2BBB			l_0FAF
  4562 2BBB			a_0009
  4563
  4564 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 96
  4565
  4566 2BBB 20 BE 12			jsr ANIMATEOBSTACLES
  4567 2BBE 20 C4 11			jsr SHOWSCORE
  4568 2BC1 20 14 2B			jsr STARTSCREEN
  4569
  4570 				; --- RepeatUntilProlog
  4571 2BC4			l_0FC1
  4572
  4573 				; optimize FAIL ('SYSTEM.PAUSE_006B', main.pas), line = 99
  4574
  4575 2BC4 20 23 11			jsr SYSTEM.PAUSE_006B
  4576
  4577 				; optimize OK (main.pas), line = 100
  4578
  4579 2BC7 AD C7 2C			lda PLAYER1
  4580 2BCA 8D C3 2C			sta PLY
  4581 2BCD AD C8 2C			lda PLAYER1+1
  4582 2BD0 8D C4 2C			sta PLY+1
  4583 2BD3 20 BF 29			jsr PLAYERMOVE
  4584
  4585 				; optimize OK (main.pas), line = 102
  4586
  4587 2BD6 A9 02			lda #$02
  4588 2BD8 8D E0 2C			sta SYSTEM.PAUSE_006C.N
  4589 2BDB A9 00			lda #$00
  4590 2BDD 8D E1 2C			sta SYSTEM.PAUSE_006C.N+1
  4591 2BE0 20 2A 11			jsr SYSTEM.PAUSE_006C
  4592
  4593 				; optimize OK (main.pas), line = 103
  4594
  4595 2BE3 AD C9 2C			lda PLAYER2
  4596 2BE6 8D C3 2C			sta PLY
  4597 2BE9 AD CA 2C			lda PLAYER2+1
  4598 2BEC 8D C4 2C			sta PLY+1
  4599 2BEF 20 BF 29			jsr PLAYERMOVE
  4600
  4601 				; optimize OK (main.pas), line = 104
  4602
  4603 2BF2 AD CB 2C			lda PLAYER3
  4604 2BF5 8D C3 2C			sta PLY
  4605 2BF8 AD CC 2C			lda PLAYER3+1
  4606 2BFB 8D C4 2C			sta PLY+1
  4607 2BFE 20 BF 29			jsr PLAYERMOVE
  4608
  4609 				; optimize OK (main.pas), line = 105
  4610
  4611 2C01 AD CD 2C			lda PLAYER4
  4612 2C04 8D C3 2C			sta PLY
  4613 2C07 AD CE 2C			lda PLAYER4+1
  4614 2C0A 8D C4 2C			sta PLY+1
  4615 2C0D 20 BF 29			jsr PLAYERMOVE
  4616
  4617 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 106
  4618
  4619 2C10 20 BE 12			jsr ANIMATEOBSTACLES
  4620
  4621 				; optimize OK (main.pas), line = 107
  4622
  4623 2C13 A5 5A			lda ALIVE
  4624 2C15 F0 04			jeq l_0FC1x
  4625 2C17 C9 FF			cmp #$FF
  4626 2C19 D0 A9			jne l_0FC1
  4627 2C1B			l_0FC1x
  4628
  4629 				; optimize OK (main.pas), line = 109
  4630
  4631 2C1B AD ED 2C			lda PLAYER1.ISALIVE
  4632 2C1E F0 03			jeq l_1002
  4633 2C20 EE EC 2C			inc PLAYER1.SCORE
  4634 2C23			l_1002
  4635
  4636 				; optimize OK (main.pas), line = 110
  4637
  4638 2C23 AD F5 2C			lda PLAYER2.ISALIVE
  4639 2C26 F0 03			jeq l_1015
  4640 2C28 EE F4 2C			inc PLAYER2.SCORE
  4641 2C2B			l_1015
  4642
  4643 				; optimize OK (main.pas), line = 111
  4644
  4645 2C2B AD FD 2C			lda PLAYER3.ISALIVE
  4646 2C2E F0 03			jeq l_1028
  4647 2C30 EE FC 2C			inc PLAYER3.SCORE
  4648 2C33			l_1028
  4649
  4650 				; optimize OK (main.pas), line = 112
  4651
  4652 2C33 AD 05 2D			lda PLAYER4.ISALIVE
  4653 2C36 F0 03			jeq l_103B
  4654 2C38 EE 04 2D			inc PLAYER4.SCORE
  4655 2C3B			l_103B
  4656
  4657 				; optimize OK (main.pas), line = 114
  4658
  4659 2C3B A9 64			lda #$64
  4660 2C3D 8D E0 2C			sta SYSTEM.PAUSE_006C.N
  4661 2C40 A9 00			lda #$00
  4662 2C42 8D E1 2C			sta SYSTEM.PAUSE_006C.N+1
  4663 2C45 20 2A 11			jsr SYSTEM.PAUSE_006C
  4664
  4665 				; ------------------------------------------------------------
  4666
  4667 = 2D36			@CASETMP_0009	= DATAORIGIN+$0062
  4668
  4669 = 2D36			@VarData	= @CASETMP_0009
  4670 = 0001			@VarDataSize	= 1
  4671
  4672 2C48			@exit
  4673 					.ifdef @new
  4674 					lda <@VarData
  4675 					sta :ztmp
  4676 					lda >@VarData
  4677 					ldy #@VarDataSize-1
  4678 					jmp @FreeMem
  4679 					els
  4680 2C48 60				rts						; ret
  4681 					eif
  4682 				.endl
  4683 2C49			l_0007
  4684
  4685 				; --- RepeatUntilProlog
  4686 2C49			l_1046
  4687
  4688 				; optimize OK (main.pas), line = 121
  4689
  4690 2C49 A9 30			lda #$30
  4691 2C4B 8D EC 2C			sta PLAYER1.SCORE
  4692 2C4E 8D F4 2C			sta PLAYER2.SCORE
  4693
  4694 				; optimize OK (main.pas), line = 122
  4695
  4696 2C51 8D FC 2C			sta PLAYER3.SCORE
  4697 2C54 8D 04 2D			sta PLAYER4.SCORE
  4698
  4699 				; optimize OK (main.pas), line = 123
  4700
  4701 2C57 A9 01			lda #$01
  4702 2C59 8D E4 2C			sta LEVEL
  4703
  4704 				; optimize OK (main.pas), line = 125
  4705
  4706 2C5C A9 00			lda #$00
  4707 2C5E 8D E5 2C			sta GAMEOVER
  4708
  4709 				; --- RepeatUntilProlog
  4710 2C61			l_105F
  4711
  4712 				; optimize FAIL ('MAINLOOP', main.pas), line = 127
  4713
  4714 2C61 20 57 2B			jsr MAINLOOP
  4715
  4716 				; optimize FAIL (0, main.pas), line = 128
  4717
  4718 2C64 EE E4 2C			inc LEVEL
  4719 2C67 AD E4 2C			lda LEVEL
  4720 2C6A C9 08			cmp #$08
  4721 2C6C D0 05			jne l_1076
  4722 2C6E A9 05			lda #$05
  4723 2C70 8D E4 2C			sta LEVEL
  4724 2C73			l_1076
  4725
  4726 				; optimize OK (main.pas), line = 129
  4727
  4728 2C73 AD EC 2C			lda PLAYER1.SCORE
  4729 2C76 C9 39			cmp #$39
  4730 2C78 D0 05			jne l_108F
  4731 2C7A A9 01			lda #$01
  4732 2C7C 8D E5 2C			sta GAMEOVER
  4733 2C7F			l_108F
  4734
  4735 				; optimize OK (main.pas), line = 130
  4736
  4737 2C7F AD F4 2C			lda PLAYER2.SCORE
  4738 2C82 C9 39			cmp #$39
  4739 2C84 D0 05			jne l_10A8
  4740 2C86 A9 01			lda #$01
  4741 2C88 8D E5 2C			sta GAMEOVER
  4742 2C8B			l_10A8
  4743
  4744 				; optimize OK (main.pas), line = 131
  4745
  4746 2C8B AD FC 2C			lda PLAYER3.SCORE
  4747 2C8E C9 39			cmp #$39
  4748 2C90 D0 05			jne l_10C1
  4749 2C92 A9 01			lda #$01
  4750 2C94 8D E5 2C			sta GAMEOVER
  4751 2C97			l_10C1
  4752
  4753 				; optimize OK (main.pas), line = 132
  4754
  4755 2C97 AD 04 2D			lda PLAYER4.SCORE
  4756 2C9A C9 39			cmp #$39
  4757 2C9C D0 05			jne l_10DA
  4758 2C9E A9 01			lda #$01
  4759 2CA0 8D E5 2C			sta GAMEOVER
  4760 2CA3			l_10DA
  4761
  4762 				; optimize OK (main.pas), line = 133
  4763
  4764 2CA3 AD E5 2C			lda GAMEOVER
  4765 2CA6 F0 B9			jeq l_105F
  4766
  4767 				; optimize FAIL ('SHOWSCORE', main.pas), line = 135
  4768
  4769 2CA8 20 C4 11			jsr SHOWSCORE
  4770
  4771 				; optimize OK (main.pas), line = 137
  4772
  4773 2CAB A9 C8			lda #$C8
  4774 2CAD 8D E0 2C			sta SYSTEM.PAUSE_006C.N
  4775 2CB0 A9 00			lda #$00
  4776 2CB2 8D E1 2C			sta SYSTEM.PAUSE_006C.N+1
  4777 2CB5 20 2A 11			jsr SYSTEM.PAUSE_006C
  4778
  4779 				; optimize OK (main.pas), line = 138
  4780
  4781 2CB8 4C 49 2C			jmp l_1046
  4782
  4783 				; ------------------------------------------------------------
  4784
  4785 = 0800			ATTRIBUTE_ADDR	= $0800
  4786 = 0C00			SCREEN_ADDR	= $0C00
  4787 = 001F			BACKGROUND_COLOUR	= $1F
  4788 = 0000			BOREDER_COLOUR	= $00
  4789 = 0009			VICTORIES	= $09
  4790 = 0005			LOOK_AHEAD	= $05
  4791 = 007E			TRASH	= $7E
  4792 = 0020			EMPTY	= $20
  4793 = 00A0			WALL	= $A0
  4794 = 0041			WALL_COLOUR	= $41
  4795 = 0030			ZERO	= $30
  4796 = 0056			OBSTACLE_1	= $56
  4797 = 005B			OBSTACLE_2	= $5B
  4798 = 0035			OBST_COLOUR	= $35
  4799 = 0007			OBST_QUANTITY	= $07
  4800 = 0051			PLY_HEAD	= $51
  4801 = 002A			PLY_CRASH	= $2A
  4802 = 0057			PLY_BUSTED	= $57
  4803 = 0042			PLY_TAIL_UD	= $42
  4804 = 0040			PLY_TAIL_LR	= $40
  4805 = 007D			PLY_TAIL_RD	= $7D
  4806 = 006E			PLY_TAIL_RU	= $6E
  4807 = 006D			PLY_TAIL_LD	= $6D
  4808 = 0070			PLY_TAIL_LU	= $70
  4809 = 0062			PLY1_COLOUR	= $62
  4810 = 005D			PLY2_COLOUR	= $5D
  4811 = 0071			PLY3_COLOUR	= $71
  4812 = 0055			PLY4_COLOUR	= $55
  4813 = 0000			PLY_CTRL	= $00
  4814 = 0001			AI_STRAIGHT	= $01
  4815 = 0002			AI_SAPPER	= $02
  4816 = 0003			AI_BULLY	= $03
  4817 = 0004			AI_MIRROR	= $04
  4818 = 0001			JOY_UP	= $01
  4819 = 0002			JOY_DOWN	= $02
  4820 = 0004			JOY_LEFT	= $04
  4821 = 0008			JOY_RIGHT	= $08
  4822 = 0040			JOY_FIRE	= $40
  4823 = 0002			JOY_SELECT_1	= $02
  4824 = 0004			JOY_SELECT_2	= $04
  4825 = 100E			adr.MUL40	= CODEORIGIN+$0000
  4826 2CBB			.var MUL40	= adr.MUL40 .word
  4827 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  4828 2CBB			.var DIRECTION	= adr.DIRECTION .word
  4829 = FD30			KEYSCAN	= $FD30
  4830 = FF08			JOY	= $FF08
  4831 = FF15			BACKGROUND	= $FF15
  4832 = FF19			BOREDER	= $FF19
  4833 = 0058			T0B	= $58
  4834 = 0059			I0B	= $59
  4835 = 005A			ALIVE	= $5A
  4836 = 005B			NEWDIR	= $5B
  4837 = 005C			AVAILDIR	= $5C
  4838 = 005D			T0W	= $5D
  4839 = 005F			adr.PLY	= $5F
  4840 2CBB			.var PLY	= adr.PLY .word
  4841 = 2CD4			PLY.X	= DATAORIGIN+$0000
  4842 = 2CD5			PLY.Y	= DATAORIGIN+$0001
  4843 = 2CD6			PLY.HEAD	= DATAORIGIN+$0002
  4844 = 2CD7			PLY.COLOUR	= DATAORIGIN+$0003
  4845 = 2CD8			PLY.DIR	= DATAORIGIN+$0004
  4846 = 2CD9			PLY.BRAIN	= DATAORIGIN+$0005
  4847 = 2CDA			PLY.SCORE	= DATAORIGIN+$0006
  4848 = 2CDB			PLY.ISALIVE	= DATAORIGIN+$0007
  4849 = 0061			adr.TMPPLY	= $61
  4850 2CBB			.var TMPPLY	= adr.TMPPLY .word
  4851 = 2CD4			TMPPLY.X	= DATAORIGIN+$0000
  4852 = 2CD5			TMPPLY.Y	= DATAORIGIN+$0001
  4853 = 2CD6			TMPPLY.HEAD	= DATAORIGIN+$0002
  4854 = 2CD7			TMPPLY.COLOUR	= DATAORIGIN+$0003
  4855 = 2CD8			TMPPLY.DIR	= DATAORIGIN+$0004
  4856 = 2CD9			TMPPLY.BRAIN	= DATAORIGIN+$0005
  4857 = 2CDA			TMPPLY.SCORE	= DATAORIGIN+$0006
  4858 = 2CDB			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  4859 = 0063			JOYSTATUS	= $63
  4860 = 2CE4			LEVEL	= DATAORIGIN+$0010
  4861 = 2CE5			GAMEOVER	= DATAORIGIN+$0011
  4862 = 2CE6			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  4863 2CBB			.var PLAYER1	= adr.PLAYER1 .word
  4864 = 2CE6			PLAYER1.X	= DATAORIGIN+$0012
  4865 = 2CE7			PLAYER1.Y	= DATAORIGIN+$0013
  4866 = 2CE8			PLAYER1.HEAD	= DATAORIGIN+$0014
  4867 = 2CE9			PLAYER1.COLOUR	= DATAORIGIN+$0015
  4868 = 2CEA			PLAYER1.DIR	= DATAORIGIN+$0016
  4869 = 2CEB			PLAYER1.BRAIN	= DATAORIGIN+$0017
  4870 = 2CEC			PLAYER1.SCORE	= DATAORIGIN+$0018
  4871 = 2CED			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  4872 = 2CEE			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  4873 2CBB			.var PLAYER2	= adr.PLAYER2 .word
  4874 = 2CEE			PLAYER2.X	= DATAORIGIN+$001A
  4875 = 2CEF			PLAYER2.Y	= DATAORIGIN+$001B
  4876 = 2CF0			PLAYER2.HEAD	= DATAORIGIN+$001C
  4877 = 2CF1			PLAYER2.COLOUR	= DATAORIGIN+$001D
  4878 = 2CF2			PLAYER2.DIR	= DATAORIGIN+$001E
  4879 = 2CF3			PLAYER2.BRAIN	= DATAORIGIN+$001F
  4880 = 2CF4			PLAYER2.SCORE	= DATAORIGIN+$0020
  4881 = 2CF5			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  4882 = 2CF6			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  4883 2CBB			.var PLAYER3	= adr.PLAYER3 .word
  4884 = 2CF6			PLAYER3.X	= DATAORIGIN+$0022
  4885 = 2CF7			PLAYER3.Y	= DATAORIGIN+$0023
  4886 = 2CF8			PLAYER3.HEAD	= DATAORIGIN+$0024
  4887 = 2CF9			PLAYER3.COLOUR	= DATAORIGIN+$0025
  4888 = 2CFA			PLAYER3.DIR	= DATAORIGIN+$0026
  4889 = 2CFB			PLAYER3.BRAIN	= DATAORIGIN+$0027
  4890 = 2CFC			PLAYER3.SCORE	= DATAORIGIN+$0028
  4891 = 2CFD			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  4892 = 2CFE			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  4893 2CBB			.var PLAYER4	= adr.PLAYER4 .word
  4894 = 2CFE			PLAYER4.X	= DATAORIGIN+$002A
  4895 = 2CFF			PLAYER4.Y	= DATAORIGIN+$002B
  4896 = 2D00			PLAYER4.HEAD	= DATAORIGIN+$002C
  4897 = 2D01			PLAYER4.COLOUR	= DATAORIGIN+$002D
  4898 = 2D02			PLAYER4.DIR	= DATAORIGIN+$002E
  4899 = 2D03			PLAYER4.BRAIN	= DATAORIGIN+$002F
  4900 = 2D04			PLAYER4.SCORE	= DATAORIGIN+$0030
  4901 = 2D05			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  4902 = 2D06			adr.OBSTACLES	= [DATAORIGIN+$0032] .array [8] .word
  4903 2CBB			.var OBSTACLES	= adr.OBSTACLES .word
  4904 2CBB			@exit
  4905
  4906 2CBB A2 00		@halt	ldx #$00
  4907 2CBD 9A				txs
  4908
  4909 2CBE 60				rts
  4910
  4911 				; ------------------------------------------------------------
  4912
  4913 				; ------------------------------------------------------------
  4914
  4915 2CBF			.local	@DEFINES
  4916 2CBF			C4P
  4917 				.endl
  4918
  4919 2CBF			.local	@RESOURCE
  4920 				.endl
  4921
  4922 = 2CBF 0E 10		MUL40
  4922 = 2CC1 40 10		DIRECTION
  4922 = 2CC3 5F 00		PLY
  4922 = 2CC5 61 00		TMPPLY
  4922 = 2CC7 E6 2C		PLAYER1
  4922 = 2CC9 EE 2C		PLAYER2
  4922 = 2CCB F6 2C		PLAYER3
  4922 = 2CCD FE 2C		PLAYER4
  4922 = 2CCF 06 2D		OBSTACLES
  4922 				.endl							; MAIN
  4923
  4924 				; ------------------------------------------------------------
  4925 				; ------------------------------------------------------------
  4926
  4927 				.macro	UNITINITIALIZATION
  4928 				
  4929 					.ifdef MAIN.SYSTEM.@UnitInit
  4930 					jsr MAIN.SYSTEM.@UnitInit
  4931 					eif
  4932 				.endm
  4933
  4934 				; ------------------------------------------------------------
  4935
  4936 					ift .SIZEOF(MAIN.SYSTEM) > 0
  4937 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  4937 				SYSTEM: $10D5..$1177
  4938 					eif
  4939
  4940 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  4940 				CODE: $100E..$2CBE
  4941
  4942 				; ------------------------------------------------------------
  4943
  4944 2CD1				.align $04
  4945
  4946 2CD4			DATAORIGIN
  4947 2CD4 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  4948
  4949 = 0006			VARINITSIZE	= *-DATAORIGIN
  4950 = 0063			VARDATASIZE	= 99
  4951
  4952 = 2D37			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  4953
  4954 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  4954 				DATA: $2CD4..$2D37
  4955
  4956 				; ------------------------------------------------------------
  4957
  4958 				.macro	STATICDATA
  4959 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  4960 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  4961 				.by  $C0 $03 $01 $02 $04 $08
  4962 				.endm
  4963
  4964 					end
