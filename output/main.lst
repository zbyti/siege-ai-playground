mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E ED 19			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0040			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 1A06			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 C0			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 46 19 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 46 85 02 A9 1A + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 8E 19			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 0B 1A		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 0B 1A 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 1A0B			RESULT	= DATAORIGIN+$000B
   182
   183 = 1A0B			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD 0C 1A		loop  lda n
   307 1126 0D 0D 1A		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD 0C 1A D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 1A0C			N	= DATAORIGIN+$000C
   321
   322 = 1A0C			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D 0E 1A			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD 0E 1A		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C 0F 1A		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD 0F 1A 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 1A0E			RANGE	= DATAORIGIN+$000E
   383 = 1A0F			RESULT	= DATAORIGIN+$000F
   384
   385 = 1A0E			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 1A00			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 1A02			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 1A04			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 1A05			FILEMODE	= DATAORIGIN+$0005
   450 = 1A06			GRAPHMODE	= DATAORIGIN+$0006
   451 = 1A07			IORESULT	= DATAORIGIN+$0007
   452 = 1A08			EOLN	= DATAORIGIN+$0008
   453 = 1A09			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD 32 1A			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D 31 1A			add X
   466 117D 85 5C			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5D			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5C			ldy T0W
   475 118A AD 34 1A			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5D			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD 33 1A			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 1A31			X	= DATAORIGIN+$0031
   486 = 1A32			Y	= DATAORIGIN+$0032
   487 = 1A33			V	= DATAORIGIN+$0033
   488 = 1A34			C	= DATAORIGIN+$0034
   489
   490 = 1A31			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 14 1A			lda PLAYER1.COLOUR
   510 119F 8D 34 1A			sta PUTCHAR.C
   511 11A2 AD 17 1A			lda PLAYER1.SCORE
   512 11A5 8D 33 1A			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D 32 1A			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D 31 1A			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD 1C 1A			lda PLAYER2.COLOUR
   522 11B8 8D 34 1A			sta PUTCHAR.C
   523 11BB AD 1F 1A			lda PLAYER2.SCORE
   524 11BE 8D 33 1A			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D 32 1A			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D 31 1A			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD 24 1A			lda PLAYER3.COLOUR
   534 11D1 8D 34 1A			sta PUTCHAR.C
   535 11D4 AD 27 1A			lda PLAYER3.SCORE
   536 11D7 8D 33 1A			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D 32 1A			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D 31 1A			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD 2C 1A			lda PLAYER4.COLOUR
   546 11EA 8D 34 1A			sta PUTCHAR.C
   547 11ED AD 2F 1A			lda PLAYER4.SCORE
   548 11F0 8D 33 1A			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D 32 1A			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D 31 1A			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5B			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AC F4 19 84 12 AC + 	mwy PLY :bp2
   576 120F A0 01			ldy #PLY.Y-DATAORIGIN
   577 1211 B1 12			lda (:bp2),y
   578 1213 0A				asl @
   579 1214 A8				tay
   580 1215 A9 00			lda #$00
   581 1217 18 79 0E 10			add adr.MUL40,y
   582 121B 85 21			sta :STACKORIGIN+9
   583 121D A9 0C			lda #$0C
   584 121F 79 0F 10			adc adr.MUL40+1,y
   585 1222 85 31			sta :STACKORIGIN+STACKWIDTH+9
   586 1224 A0 00			ldy #PLY.X-DATAORIGIN
   587 1226 A5 21			lda :STACKORIGIN+9
   588 1228 18 71 12			add (:bp2),y
   589 122B 85 5C			sta T0W
   590 122D A5 31			lda :STACKORIGIN+STACKWIDTH+9
   591 122F 69 00			adc #$00
   592 1231 85 5D			sta T0W+1
   593
   594 				; optimize OK (tools.inc), line = 26
   595
   596 1233 A5 5C			lda T0W
   597 1235 38 E9 28			sub #$28
   598 1238 85 21			sta :STACKORIGIN+9
   599 123A A5 5D			lda T0W+1
   600 123C E9 00			sbc #$00
   601 123E 85 11			sta :bp+1
   602 1240 A4 21			ldy :STACKORIGIN+9
   603 1242 B1 10			lda (:bp),y
   604 1244 C9 20			cmp #$20
   605 1246 D0 06			jne l_00EE
   606 1248 A5 5B			lda AVAILDIR
   607 124A 09 01			ora #$01
   608 124C 85 5B			sta AVAILDIR
   609 124E			l_00EE
   610
   611 				; optimize OK (tools.inc), line = 27
   612
   613 124E A4 5C 84 12 A4 5D + 	mwy T0W :bp2
   614 1256 A0 28			ldy #$28
   615 1258 B1 12			lda (:bp2),y
   616 125A C9 20			cmp #$20
   617 125C D0 06			jne l_0111
   618 125E A5 5B			lda AVAILDIR
   619 1260 09 02			ora #$02
   620 1262 85 5B			sta AVAILDIR
   621 1264			l_0111
   622
   623 				; optimize OK (tools.inc), line = 28
   624
   625 1264 A5 5C			lda T0W
   626 1266 38 E9 01			sub #$01
   627 1269 85 21			sta :STACKORIGIN+9
   628 126B A5 5D			lda T0W+1
   629 126D E9 00			sbc #$00
   630 126F 85 11			sta :bp+1
   631 1271 A4 21			ldy :STACKORIGIN+9
   632 1273 B1 10			lda (:bp),y
   633 1275 C9 20			cmp #$20
   634 1277 D0 06			jne l_0134
   635 1279 A5 5B			lda AVAILDIR
   636 127B 09 04			ora #$04
   637 127D 85 5B			sta AVAILDIR
   638 127F			l_0134
   639
   640 				; optimize OK (tools.inc), line = 29
   641
   642 127F A4 5C 84 12 A4 5D + 	mwy T0W :bp2
   643 1287 A0 01			ldy #$01
   644 1289 B1 12			lda (:bp2),y
   645 128B C9 20			cmp #$20
   646 128D D0 06			jne l_0157
   647 128F A5 5B			lda AVAILDIR
   648 1291 09 08			ora #$08
   649 1293 85 5B			sta AVAILDIR
   650 1295			l_0157
   651 1295			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 1295 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 1296			.local	ANIMATEOBSTACLES				; PROCEDURE
   664
   665 				; optimize FAIL (0, tools.inc), line = 38
   666
   667 1296 EE 35 1A			inc COUNTER
   668
   669 				; optimize OK (tools.inc), line = 39
   670
   671 1299 AD 35 1A			lda COUNTER
   672 129C 29 01			and #$01
   673 129E F0 08			jeq l_0182
   674 12A0 A9 56			lda #$56
   675 12A2 8D 36 1A			sta OBST
   676 12A5 4C AD 12			jmp l_0190
   677 12A8			l_0182
   678 12A8 A9 5B			lda #$5B
   679 12AA 8D 36 1A			sta OBST
   680 12AD			l_0190
   681
   682 				; optimize OK (tools.inc), line = 40
   683
   684 12AD AD 36 1A			lda OBST
   685 12B0 8D FA 0C			sta $0CFA
   686
   687 				; optimize OK (tools.inc), line = 41
   688
   689 12B3 8D 0E 0D			sta $0D0E
   690
   691 				; optimize OK (tools.inc), line = 42
   692
   693 12B6 8D DA 0E			sta $0EDA
   694
   695 				; optimize OK (tools.inc), line = 43
   696
   697 12B9 8D EE 0E			sta $0EEE
   698
   699 				; ------------------------------------------------------------
   700
   701 = 1A35			COUNTER	= DATAORIGIN+$0035
   702 = 1A36			OBST	= DATAORIGIN+$0036
   703
   704 = 1A35			@VarData	= COUNTER
   705 = 0002			@VarDataSize	= 2
   706
   707 12BC			@exit
   708 					.ifdef @new
   709 					lda <@VarData
   710 					sta :ztmp
   711 					lda >@VarData
   712 					ldy #@VarDataSize-1
   713 					jmp @FreeMem
   714 					els
   715 12BC 60				rts						; ret
   716 					eif
   717 				.endl
   718
   719 12BD			.local	DRAWTAIL					; PROCEDURE
   720
   721 				; optimize OK (tools.inc), line = 50
   722
   723 12BD AC F4 19 84 12 AC + 	mwy PLY :bp2
   724 12C7 A0 04			ldy #PLY.DIR-DATAORIGIN
   725 12C9 B1 12			lda (:bp2),y
   726 12CB C5 5A			cmp NEWDIR
   727 12CD D0 14			jne l_01C0
   728
   729 				; optimize OK (tools.inc), line = 51
   730
   731 12CF A5 5A			lda NEWDIR
   732 12D1 29 0C			and #$0C
   733 12D3 F0 07			jeq l_01D7
   734 12D5 A9 40			lda #$40
   735 12D7 85 58			sta T0B
   736 12D9 4C E0 12			jmp l_01E5
   737 12DC			l_01D7
   738 12DC A9 42			lda #$42
   739 12DE 85 58			sta T0B
   740 12E0			l_01E5
   741 12E0 4C 53 13			jmp l_01F2
   742 12E3			l_01C0
   743
   744 				; optimize OK (tools.inc), line = 53
   745
   746 12E3 AC F4 19 84 12 AC + 	mwy PLY :bp2
   747 12ED A0 04			ldy #PLY.DIR-DATAORIGIN
   748 12EF B1 12			lda (:bp2),y
   749 12F1 29 0A			and #$0A
   750 12F3 F0 0A			jeq l_0218
   751 12F5 A5 5A			lda NEWDIR
   752 12F7 29 05			and #$05
   753 12F9 F0 04			jeq l_0218
   754 12FB A9 7D			lda #$7D
   755 12FD 85 58			sta T0B
   756 12FF			l_0218
   757
   758 				; optimize OK (tools.inc), line = 54
   759
   760 12FF AC F4 19 84 12 AC + 	mwy PLY :bp2
   761 1309 A0 04			ldy #PLY.DIR-DATAORIGIN
   762 130B B1 12			lda (:bp2),y
   763 130D 29 09			and #$09
   764 130F F0 0A			jeq l_0245
   765 1311 A5 5A			lda NEWDIR
   766 1313 29 06			and #$06
   767 1315 F0 04			jeq l_0245
   768 1317 A9 6E			lda #$6E
   769 1319 85 58			sta T0B
   770 131B			l_0245
   771
   772 				; optimize OK (tools.inc), line = 55
   773
   774 131B AC F4 19 84 12 AC + 	mwy PLY :bp2
   775 1325 A0 04			ldy #PLY.DIR-DATAORIGIN
   776 1327 B1 12			lda (:bp2),y
   777 1329 29 06			and #$06
   778 132B F0 0A			jeq l_0272
   779 132D A5 5A			lda NEWDIR
   780 132F 29 09			and #$09
   781 1331 F0 04			jeq l_0272
   782 1333 A9 6D			lda #$6D
   783 1335 85 58			sta T0B
   784 1337			l_0272
   785
   786 				; optimize OK (tools.inc), line = 56
   787
   788 1337 AC F4 19 84 12 AC + 	mwy PLY :bp2
   789 1341 A0 04			ldy #PLY.DIR-DATAORIGIN
   790 1343 B1 12			lda (:bp2),y
   791 1345 29 05			and #$05
   792 1347 F0 0A			jeq l_029F
   793 1349 A5 5A			lda NEWDIR
   794 134B 29 0A			and #$0A
   795 134D F0 04			jeq l_029F
   796 134F A9 70			lda #$70
   797 1351 85 58			sta T0B
   798 1353			l_029F
   799 1353			l_01F2
   800
   801 				; optimize OK (tools.inc), line = 58
   802
   803 1353 AC F4 19 84 12 AC + 	mwy PLY :bp2
   804 135D A0 00			ldy #PLY.X-DATAORIGIN
   805 135F B1 12			lda (:bp2),y
   806 1361 8D 31 1A			sta PUTCHAR.X
   807 1364 A0 01			ldy #PLY.Y-DATAORIGIN
   808 1366 B1 12			lda (:bp2),y
   809 1368 8D 32 1A			sta PUTCHAR.Y
   810 136B A0 03			ldy #PLY.COLOUR-DATAORIGIN
   811 136D B1 12			lda (:bp2),y
   812 136F 8D 34 1A			sta PUTCHAR.C
   813 1372 A5 58			lda T0B
   814 1374 8D 33 1A			sta PUTCHAR.V
   815 1377 20 71 11			jsr PUTCHAR
   816 137A			@exit
   817 					.ifdef @new
   818 					lda <@VarData
   819 					sta :ztmp
   820 					lda >@VarData
   821 					ldy #@VarDataSize-1
   822 					jmp @FreeMem
   823 					els
   824 137A 60				rts						; ret
   825 					eif
   826 				.endl
   827
   828 137B			.local	INITPLAYERS					; PROCEDURE
   829
   830 				; optimize OK (init.inc), line = 5
   831
   832 137B AD 37 1A			lda P
   833 137E 8D F4 19			sta PLY
   834 1381 85 12			sta :bp2
   835 1383 AD 38 1A			lda P+1
   836 1386 8D F5 19			sta PLY+1
   837 1389 85 13			sta :bp2+1
   838 				; optimize OK (init.inc), line = 6
   839 138B A0 05			ldy #PLY.BRAIN-DATAORIGIN
   840 138D AD 3C 1A			lda BRAIN
   841 1390 91 12			sta (:bp2),y
   842 1392 A0 00			ldy #PLY.X-DATAORIGIN
   843 1394 AD 39 1A			lda X
   844 1397 91 12			sta (:bp2),y
   845 1399 A0 01			ldy #PLY.Y-DATAORIGIN
   846 139B AD 3A 1A			lda Y
   847 139E 91 12			sta (:bp2),y
   848 13A0 A0 04			ldy #PLY.DIR-DATAORIGIN
   849 13A2 AD 3B 1A			lda DIR
   850 13A5 91 12			sta (:bp2),y
   851
   852 				; optimize OK (init.inc), line = 7
   853
   854 13A7 A0 02			ldy #PLY.HEAD-DATAORIGIN
   855 13A9 AD 3D 1A			lda HEAD
   856 13AC 91 12			sta (:bp2),y
   857 13AE A0 03			ldy #PLY.COLOUR-DATAORIGIN
   858 13B0 AD 3E 1A			lda COLOUR
   859 13B3 91 12			sta (:bp2),y
   860 13B5 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
   861 13B7 AD 3F 1A			lda ISALIVE
   862 13BA 91 12			sta (:bp2),y
   863
   864 				; optimize OK (init.inc), line = 8
   865
   866 13BC AD 3F 1A			lda ISALIVE
   867 13BF F0 1D			jeq l_02F2
   868
   869 				; optimize FAIL (0, init.inc), line = 9
   870
   871 13C1 E6 59			inc ALIVE
   872 13C3 AD 3E 1A			lda COLOUR
   873 13C6 8D 34 1A			sta PUTCHAR.C
   874 13C9 AD 3D 1A			lda HEAD
   875 13CC 8D 33 1A			sta PUTCHAR.V
   876 13CF AD 3A 1A			lda Y
   877 13D2 8D 32 1A			sta PUTCHAR.Y
   878 13D5 AD 39 1A			lda X
   879 13D8 8D 31 1A			sta PUTCHAR.X
   880 13DB 20 71 11			jsr PUTCHAR
   881 13DE			l_02F2
   882
   883 				; ------------------------------------------------------------
   884
   885 = 1A37			P	= DATAORIGIN+$0037
   886 = 1A39			X	= DATAORIGIN+$0039
   887 = 1A3A			Y	= DATAORIGIN+$003A
   888 = 1A3B			DIR	= DATAORIGIN+$003B
   889 = 1A3C			BRAIN	= DATAORIGIN+$003C
   890 = 1A3D			HEAD	= DATAORIGIN+$003D
   891 = 1A3E			COLOUR	= DATAORIGIN+$003E
   892 = 1A3F			ISALIVE	= DATAORIGIN+$003F
   893
   894 = 1A37			@VarData	= P
   895 = 0009			@VarDataSize	= 9
   896
   897 13DE			@exit
   898 					.ifdef @new
   899 					lda <@VarData
   900 					sta :ztmp
   901 					lda >@VarData
   902 					ldy #@VarDataSize-1
   903 					jmp @FreeMem
   904 					els
   905 13DE 60				rts						; ret
   906 					eif
   907 				.endl
   908
   909 13DF			.local	INITPLAYFIELD					; PROCEDURE
   910
   911 				; optimize OK (init.inc), line = 17
   912
   913 13DF A9 1F			lda #$1F
   914 13E1 8D 15 FF			sta BORDERCOLOR
   915 13E4 A9 00			lda #$00
   916 13E6 8D 19 FF			sta BGCOLOR
   917
   918 				; optimize OK (init.inc), line = 18
   919
   920 13E9 A9 20			lda #$20
   921 13EB 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   922 13ED A9 C0			lda #$C0
   923 13EF 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   924 13F1 A9 03			lda #$03
   925 13F3 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
   926 13F5 A9 00			lda #$00
   927 13F7 85 08			sta SYSTEM.FILLCHAR_0056.A
   928 13F9 A9 0C			lda #$0C
   929 13FB 85 09			sta SYSTEM.FILLCHAR_0056.A+1
   930 13FD 20 1F 11			jsr SYSTEM.FILLCHAR_0056
   931
   932 				; optimize OK (init.inc), line = 20
   933
   934 1400 A9 27			lda #$27
   935 1402 85 58			sta T0B
   936
   937 1404			l_031F
   938 				; --- ForToDoCondition
   939
   940 				; optimize OK (init.inc), line = 21
   941
   942 1404 A4 58			ldy T0B
   943 1406 A9 A0			lda #$A0
   944 1408 99 00 0C			sta $0C00,y
   945
   946 				; optimize OK (init.inc), line = 22
   947
   948 140B 99 C0 0F			sta $0FC0,y
   949
   950 				; optimize OK (init.inc), line = 23
   951
   952 140E A9 41			lda #$41
   953 1410 99 00 08			sta $0800,y
   954
   955 				; optimize OK (init.inc), line = 24
   956
   957 1413 99 C0 0B			sta $0BC0,y
   958
   959 				; --- ForToDoEpilog
   960 1416 C6 58			dec T0B
   961 1418 10 EA			jpl l_031F
   962 141A			l_032D
   963
   964 				; optimize OK (init.inc), line = 27
   965
   966 141A A9 18			lda #$18
   967 141C 85 58			sta T0B
   968
   969 141E			l_035F
   970 				; --- ForToDoCondition
   971 141E A5 58			lda T0B
   972 1420 C9 01			cmp #$01
   973 1422 90 3A			jcc l_036D
   974
   975 				; optimize OK (init.inc), line = 28
   976
   977 1424 0A				asl @
   978 1425 A8				tay
   979 1426 A9 FF			lda #$FF
   980 1428 18 79 0E 10			add adr.MUL40,y
   981 142C 85 12			sta :bp2
   982 142E A9 0B			lda #$0B
   983 1430 79 0F 10			adc adr.MUL40+1,y
   984 1433 85 13			sta :bp2+1
   985 1435 A0 00			ldy #$00
   986 1437 A9 A0			lda #$A0
   987 1439 91 12			sta (:bp2),y
   988 143B C8				iny
   989 143C 91 12			sta (:bp2),y
   990
   991 				; optimize OK (init.inc), line = 29
   992
   993 143E A5 58			lda T0B
   994 1440 0A				asl @
   995 1441 A8				tay
   996 1442 A9 FF			lda #$FF
   997 1444 18 79 0E 10			add adr.MUL40,y
   998 1448 85 12			sta :bp2
   999 144A A9 07			lda #$07
  1000 144C 79 0F 10			adc adr.MUL40+1,y
  1001 144F 85 13			sta :bp2+1
  1002 1451 A0 00			ldy #$00
  1003 1453 A9 41			lda #$41
  1004 1455 91 12			sta (:bp2),y
  1005 1457 C8				iny
  1006 1458 91 12			sta (:bp2),y
  1007
  1008 				; --- ForToDoEpilog
  1009 145A C6 58			dec T0B
  1010 145C 10 C0			jpl l_035F
  1011 145E			l_036D
  1012
  1013 				; optimize OK (init.inc), line = 32
  1014
  1015 145E A9 01			lda #$01
  1016 1460 8D 3F 1A			sta INITPLAYERS.ISALIVE
  1017 1463 A9 5F			lda #$5F
  1018 1465 8D 3E 1A			sta INITPLAYERS.COLOUR
  1019 1468 A9 51			lda #$51
  1020 146A 8D 3D 1A			sta INITPLAYERS.HEAD
  1021 146D A9 00			lda #$00
  1022 146F 8D 3C 1A			sta INITPLAYERS.BRAIN
  1023 1472 A9 08			lda #$08
  1024 1474 8D 3B 1A			sta INITPLAYERS.DIR
  1025 1477 A9 0C			lda #$0C
  1026 1479 8D 3A 1A			sta INITPLAYERS.Y
  1027 147C A9 0A			lda #$0A
  1028 147E 8D 39 1A			sta INITPLAYERS.X
  1029 1481 AD F8 19			lda PLAYER1
  1030 1484 8D 37 1A			sta INITPLAYERS.P
  1031 1487 AD F9 19			lda PLAYER1+1
  1032 148A 8D 38 1A			sta INITPLAYERS.P+1
  1033 148D 20 7B 13			jsr INITPLAYERS
  1034
  1035 				; optimize OK (init.inc), line = 33
  1036
  1037 1490 A9 01			lda #$01
  1038 1492 8D 3F 1A			sta INITPLAYERS.ISALIVE
  1039 1495 A9 5D			lda #$5D
  1040 1497 8D 3E 1A			sta INITPLAYERS.COLOUR
  1041 149A A9 51			lda #$51
  1042 149C 8D 3D 1A			sta INITPLAYERS.HEAD
  1043 149F A9 03			lda #$03
  1044 14A1 8D 3C 1A			sta INITPLAYERS.BRAIN
  1045 14A4 A9 04			lda #$04
  1046 14A6 8D 3B 1A			sta INITPLAYERS.DIR
  1047 14A9 A9 0C			lda #$0C
  1048 14AB 8D 3A 1A			sta INITPLAYERS.Y
  1049 14AE A9 1E			lda #$1E
  1050 14B0 8D 39 1A			sta INITPLAYERS.X
  1051 14B3 AD FA 19			lda PLAYER2
  1052 14B6 8D 37 1A			sta INITPLAYERS.P
  1053 14B9 AD FB 19			lda PLAYER2+1
  1054 14BC 8D 38 1A			sta INITPLAYERS.P+1
  1055 14BF 20 7B 13			jsr INITPLAYERS
  1056
  1057 				; optimize OK (init.inc), line = 34
  1058
  1059 14C2 A9 01			lda #$01
  1060 14C4 8D 3F 1A			sta INITPLAYERS.ISALIVE
  1061 14C7 A9 71			lda #$71
  1062 14C9 8D 3E 1A			sta INITPLAYERS.COLOUR
  1063 14CC A9 51			lda #$51
  1064 14CE 8D 3D 1A			sta INITPLAYERS.HEAD
  1065 14D1 A9 02			lda #$02
  1066 14D3 8D 3C 1A			sta INITPLAYERS.BRAIN
  1067 14D6 8D 3B 1A			sta INITPLAYERS.DIR
  1068 14D9 A9 06			lda #$06
  1069 14DB 8D 3A 1A			sta INITPLAYERS.Y
  1070 14DE A9 14			lda #$14
  1071 14E0 8D 39 1A			sta INITPLAYERS.X
  1072 14E3 AD FC 19			lda PLAYER3
  1073 14E6 8D 37 1A			sta INITPLAYERS.P
  1074 14E9 AD FD 19			lda PLAYER3+1
  1075 14EC 8D 38 1A			sta INITPLAYERS.P+1
  1076 14EF 20 7B 13			jsr INITPLAYERS
  1077
  1078 				; optimize OK (init.inc), line = 35
  1079
  1080 14F2 A9 01			lda #$01
  1081 14F4 8D 3F 1A			sta INITPLAYERS.ISALIVE
  1082 14F7 A9 55			lda #$55
  1083 14F9 8D 3E 1A			sta INITPLAYERS.COLOUR
  1084 14FC A9 51			lda #$51
  1085 14FE 8D 3D 1A			sta INITPLAYERS.HEAD
  1086 1501 A9 02			lda #$02
  1087 1503 8D 3C 1A			sta INITPLAYERS.BRAIN
  1088 1506 A9 01			lda #$01
  1089 1508 8D 3B 1A			sta INITPLAYERS.DIR
  1090 150B A9 12			lda #$12
  1091 150D 8D 3A 1A			sta INITPLAYERS.Y
  1092 1510 A9 14			lda #$14
  1093 1512 8D 39 1A			sta INITPLAYERS.X
  1094 1515 AD FE 19			lda PLAYER4
  1095 1518 8D 37 1A			sta INITPLAYERS.P
  1096 151B AD FF 19			lda PLAYER4+1
  1097 151E 8D 38 1A			sta INITPLAYERS.P+1
  1098 1521 20 7B 13			jsr INITPLAYERS
  1099
  1100 				; optimize OK (init.inc), line = 37
  1101
  1102 1524 A9 35			lda #$35
  1103 1526 8D 34 1A			sta PUTCHAR.C
  1104 1529 A9 56			lda #$56
  1105 152B 8D 33 1A			sta PUTCHAR.V
  1106 152E A9 06			lda #$06
  1107 1530 8D 32 1A			sta PUTCHAR.Y
  1108 1533 A9 0A			lda #$0A
  1109 1535 8D 31 1A			sta PUTCHAR.X
  1110 1538 20 71 11			jsr PUTCHAR
  1111
  1112 				; optimize OK (init.inc), line = 38
  1113
  1114 153B A9 35			lda #$35
  1115 153D 8D 34 1A			sta PUTCHAR.C
  1116 1540 A9 56			lda #$56
  1117 1542 8D 33 1A			sta PUTCHAR.V
  1118 1545 A9 06			lda #$06
  1119 1547 8D 32 1A			sta PUTCHAR.Y
  1120 154A A9 1E			lda #$1E
  1121 154C 8D 31 1A			sta PUTCHAR.X
  1122 154F 20 71 11			jsr PUTCHAR
  1123
  1124 				; optimize OK (init.inc), line = 39
  1125
  1126 1552 A9 35			lda #$35
  1127 1554 8D 34 1A			sta PUTCHAR.C
  1128 1557 A9 56			lda #$56
  1129 1559 8D 33 1A			sta PUTCHAR.V
  1130 155C A9 12			lda #$12
  1131 155E 8D 32 1A			sta PUTCHAR.Y
  1132 1561 A9 0A			lda #$0A
  1133 1563 8D 31 1A			sta PUTCHAR.X
  1134 1566 20 71 11			jsr PUTCHAR
  1135
  1136 				; optimize OK (init.inc), line = 40
  1137
  1138 1569 A9 35			lda #$35
  1139 156B 8D 34 1A			sta PUTCHAR.C
  1140 156E A9 56			lda #$56
  1141 1570 8D 33 1A			sta PUTCHAR.V
  1142 1573 A9 12			lda #$12
  1143 1575 8D 32 1A			sta PUTCHAR.Y
  1144 1578 A9 1E			lda #$1E
  1145 157A 8D 31 1A			sta PUTCHAR.X
  1146 157D 20 71 11			jsr PUTCHAR
  1147
  1148 				; optimize FAIL ('SHOWSCORE', init.inc), line = 42
  1149
  1150 1580 20 9C 11			jsr SHOWSCORE
  1151
  1152 				; ------------------------------------------------------------
  1153
  1154 = 0000			@FORTMP_031C	= $00
  1155 = 0001			@FORTMP_035C	= $01
  1156 1583			@exit
  1157 					.ifdef @new
  1158 					lda <@VarData
  1159 					sta :ztmp
  1160 					lda >@VarData
  1161 					ldy #@VarDataSize-1
  1162 					jmp @FreeMem
  1163 					els
  1164 1583 60				rts						; ret
  1165 					eif
  1166 				.endl
  1167
  1168 1584			.local	AISTRAIGHT					; PROCEDURE
  1169
  1170 				; optimize OK (ai.inc), line = 5
  1171
  1172 1584 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1173 158E A0 04			ldy #PLY.DIR-DATAORIGIN
  1174 1590 B1 12			lda (:bp2),y
  1175 1592 25 5B			and AVAILDIR
  1176 1594 F0 07			jeq l_03E1
  1177 1596 B1 12			lda (:bp2),y
  1178 1598 85 5A			sta NEWDIR
  1179 159A 4C 08 16			jmp l_03F1
  1180 159D			l_03E1
  1181
  1182 				; optimize OK (ai.inc), line = 7
  1183
  1184 159D A5 5B			lda AVAILDIR
  1185 159F C9 03			cmp #$03
  1186 15A1 D0 10			jne l_0403
  1187 15A3 A9 02			lda #$02
  1188 15A5 20 40 11			jsr SYSTEM.RANDOM_006C
  1189 15A8 B4 18			ldy :STACKORIGIN,x
  1190 15AA B9 40 10			lda adr.DIRECTION,y
  1191 15AD 85 5A			sta NEWDIR
  1192 15AF CA				dex
  1193 15B0 4C CB 15			jmp l_0415
  1194 15B3			l_0403
  1195
  1196 				; optimize OK (ai.inc), line = 9
  1197
  1198 15B3 A5 5B			lda AVAILDIR
  1199 15B5 8D 40 1A			sta @CASETMP_0003
  1200 15B8 C9 01			cmp #$01
  1201 15BA D0 07			jne l_0420
  1202 15BC			@
  1203
  1204 				; optimize OK (ai.inc), line = 10
  1205
  1206 15BC A9 01			lda #$01
  1207 15BE 85 5A			sta NEWDIR
  1208
  1209 15C0 4C CB 15			jmp a_0003
  1210 15C3			l_0420
  1211 15C3 C9 02			cmp #$02
  1212 15C5 D0 04			jne l_042D
  1213 15C7			@
  1214
  1215 				; optimize OK (ai.inc), line = 11
  1216
  1217 15C7 A9 02			lda #$02
  1218 15C9 85 5A			sta NEWDIR
  1219
  1220 15CB			l_042D
  1221 15CB			a_0003
  1222 15CB			l_0415
  1223
  1224 				; optimize OK (ai.inc), line = 14
  1225
  1226 15CB A5 5B			lda AVAILDIR
  1227 15CD C9 0C			cmp #$0C
  1228 15CF D0 1F			jne l_0449
  1229 15D1 A9 02			lda #$02
  1230 15D3 20 40 11			jsr SYSTEM.RANDOM_006C
  1231 15D6 E8				inx
  1232 15D7 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1233 15DB A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1234 15DF 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1235 15E1 20 44 10			jsr addAX_CX
  1236 15E4 CA				dex
  1237 15E5 B4 18			ldy :STACKORIGIN,x
  1238 15E7 B9 40 10			lda adr.DIRECTION,y
  1239 15EA 85 5A			sta NEWDIR
  1240 15EC CA				dex
  1241 15ED 4C 08 16			jmp l_045F
  1242 15F0			l_0449
  1243
  1244 				; optimize OK (ai.inc), line = 16
  1245
  1246 15F0 A5 5B			lda AVAILDIR
  1247 15F2 8D 41 1A			sta @CASETMP_0004
  1248 15F5 C9 04			cmp #$04
  1249 15F7 D0 07			jne l_046A
  1250 15F9			@
  1251
  1252 				; optimize OK (ai.inc), line = 17
  1253
  1254 15F9 A9 04			lda #$04
  1255 15FB 85 5A			sta NEWDIR
  1256
  1257 15FD 4C 08 16			jmp a_0004
  1258 1600			l_046A
  1259 1600 C9 08			cmp #$08
  1260 1602 D0 04			jne l_0477
  1261 1604			@
  1262
  1263 				; optimize OK (ai.inc), line = 18
  1264
  1265 1604 A9 08			lda #$08
  1266 1606 85 5A			sta NEWDIR
  1267
  1268 1608			l_0477
  1269 1608			a_0004
  1270 1608			l_045F
  1271 1608			l_03F1
  1272
  1273 				; ------------------------------------------------------------
  1274
  1275 = 1A40			@CASETMP_0003	= DATAORIGIN+$0040
  1276 = 1A41			@CASETMP_0004	= DATAORIGIN+$0041
  1277
  1278 = 1A40			@VarData	= @CASETMP_0003
  1279 = 0002			@VarDataSize	= 2
  1280
  1281 1608			@exit
  1282 					.ifdef @new
  1283 					lda <@VarData
  1284 					sta :ztmp
  1285 					lda >@VarData
  1286 					ldy #@VarDataSize-1
  1287 					jmp @FreeMem
  1288 					els
  1289 1608 60				rts						; ret
  1290 					eif
  1291 				.endl
  1292
  1293 1609			.local	AIBULLY						; PROCEDURE
  1294
  1295 				; optimize OK (ai.inc), line = 28
  1296
  1297 1609 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1298 1613 A0 04			ldy #PLY.DIR-DATAORIGIN
  1299 1615 B1 12			lda (:bp2),y
  1300 1617 85 58			sta T0B
  1301
  1302 				; optimize OK (ai.inc), line = 30
  1303
  1304 1619 AD 18 1A			lda PLAYER1.ISALIVE
  1305 161C F0 0F			jeq l_0497
  1306 161E AD F8 19			lda PLAYER1
  1307 1621 8D F6 19			sta TMPPLY
  1308 1624 AD F9 19			lda PLAYER1+1
  1309 1627 8D F7 19			sta TMPPLY+1
  1310 162A 4C 39 16			jmp l_04A6
  1311 162D			l_0497
  1312 162D AD FA 19			lda PLAYER2
  1313 1630 8D F6 19			sta TMPPLY
  1314 1633 AD FB 19			lda PLAYER2+1
  1315 1636 8D F7 19			sta TMPPLY+1
  1316 1639			l_04A6
  1317
  1318 				; optimize OK (ai.inc), line = 32
  1319
  1320 1639 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1321 1643 A0 01			ldy #PLY.Y-DATAORIGIN
  1322 1645 B1 12			lda (:bp2),y
  1323 1647 85 21			sta :STACKORIGIN+9
  1324 1649 AC F6 19 84 12 AC + 	mwy TMPPLY :bp2
  1325 1653 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1326 1655 B1 12			lda (:bp2),y
  1327 1657 C5 21			cmp :STACKORIGIN+9
  1328 1659 B0 07			jcs l_04BF
  1329 165B A9 01			lda #$01
  1330 165D 85 58			sta T0B
  1331 165F 4C 66 16			jmp l_04CD
  1332 1662			l_04BF
  1333 1662 A9 02			lda #$02
  1334 1664 85 58			sta T0B
  1335 1666			l_04CD
  1336
  1337 				; optimize OK (ai.inc), line = 33
  1338
  1339 1666 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1340 1670 A0 01			ldy #PLY.Y-DATAORIGIN
  1341 1672 B1 12			lda (:bp2),y
  1342 1674 85 21			sta :STACKORIGIN+9
  1343 1676 AC F6 19 84 12 AC + 	mwy TMPPLY :bp2
  1344 1680 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1345 1682 B1 12			lda (:bp2),y
  1346 1684 C5 21			cmp :STACKORIGIN+9
  1347 1686 F0 06			jeq l_04F7x
  1348 1688 A5 5B			lda AVAILDIR
  1349 168A 25 58			and T0B
  1350 168C D0 2D			jne l_04F7
  1351 168E			l_04F7x
  1352
  1353 				; optimize OK (ai.inc), line = 34
  1354
  1355 168E AC F4 19 84 12 AC + 	mwy PLY :bp2
  1356 1698 A0 00			ldy #PLY.X-DATAORIGIN
  1357 169A B1 12			lda (:bp2),y
  1358 169C 85 21			sta :STACKORIGIN+9
  1359 169E AC F6 19 84 12 AC + 	mwy TMPPLY :bp2
  1360 16A8 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1361 16AA B1 12			lda (:bp2),y
  1362 16AC C5 21			cmp :STACKORIGIN+9
  1363 16AE B0 07			jcs l_050C
  1364 16B0 A9 04			lda #$04
  1365 16B2 85 58			sta T0B
  1366 16B4 4C BB 16			jmp l_051A
  1367 16B7			l_050C
  1368 16B7 A9 08			lda #$08
  1369 16B9 85 58			sta T0B
  1370 16BB			l_051A
  1371 16BB			l_04F7
  1372
  1373 				; optimize OK (ai.inc), line = 36
  1374
  1375 16BB A5 5B			lda AVAILDIR
  1376 16BD 25 58			and T0B
  1377 16BF F0 07			jeq l_0538
  1378 16C1 A5 58			lda T0B
  1379 16C3 85 5A			sta NEWDIR
  1380 16C5 4C CB 16			jmp l_0548
  1381 16C8			l_0538
  1382
  1383 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 37
  1384
  1385 16C8 20 84 15			jsr AISTRAIGHT
  1386 16CB			l_0548
  1387 16CB			@exit
  1388 					.ifdef @new
  1389 					lda <@VarData
  1390 					sta :ztmp
  1391 					lda >@VarData
  1392 					ldy #@VarDataSize-1
  1393 					jmp @FreeMem
  1394 					els
  1395 16CB 60				rts						; ret
  1396 					eif
  1397 				.endl
  1398
  1399 16CC			.local	AIMIRROR					; PROCEDURE
  1400
  1401 				; optimize OK (ai.inc), line = 44
  1402
  1403 16CC AD 15 1A			lda PLAYER1.DIR
  1404 16CF 8D 42 1A			sta @CASETMP_0005
  1405 16D2 C9 01			cmp #$01
  1406 16D4 D0 07			jne l_0558
  1407 16D6			@
  1408
  1409 				; optimize OK (ai.inc), line = 45
  1410
  1411 16D6 A9 02			lda #$02
  1412 16D8 85 58			sta T0B
  1413
  1414 16DA 4C FB 16			jmp a_0005
  1415 16DD			l_0558
  1416 16DD C9 02			cmp #$02
  1417 16DF D0 07			jne l_0565
  1418 16E1			@
  1419
  1420 				; optimize OK (ai.inc), line = 46
  1421
  1422 16E1 A9 01			lda #$01
  1423 16E3 85 58			sta T0B
  1424
  1425 16E5 4C FB 16			jmp a_0005
  1426 16E8			l_0565
  1427 16E8 C9 04			cmp #$04
  1428 16EA D0 07			jne l_0572
  1429 16EC			@
  1430
  1431 				; optimize OK (ai.inc), line = 47
  1432
  1433 16EC A9 08			lda #$08
  1434 16EE 85 58			sta T0B
  1435
  1436 16F0 4C FB 16			jmp a_0005
  1437 16F3			l_0572
  1438 16F3 C9 08			cmp #$08
  1439 16F5 D0 04			jne l_057F
  1440 16F7			@
  1441
  1442 				; optimize OK (ai.inc), line = 48
  1443
  1444 16F7 A9 04			lda #$04
  1445 16F9 85 58			sta T0B
  1446
  1447 16FB			l_057F
  1448 16FB			a_0005
  1449
  1450 				; optimize OK (ai.inc), line = 51
  1451
  1452 16FB A5 5B			lda AVAILDIR
  1453 16FD 25 58			and T0B
  1454 16FF F0 07			jeq l_05A3
  1455 1701 A5 58			lda T0B
  1456 1703 85 5A			sta NEWDIR
  1457 1705 4C 0B 17			jmp l_05B3
  1458 1708			l_05A3
  1459
  1460 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 52
  1461
  1462 1708 20 84 15			jsr AISTRAIGHT
  1463 170B			l_05B3
  1464
  1465 				; ------------------------------------------------------------
  1466
  1467 = 1A42			@CASETMP_0005	= DATAORIGIN+$0042
  1468
  1469 = 1A42			@VarData	= @CASETMP_0005
  1470 = 0001			@VarDataSize	= 1
  1471
  1472 170B			@exit
  1473 					.ifdef @new
  1474 					lda <@VarData
  1475 					sta :ztmp
  1476 					lda >@VarData
  1477 					ldy #@VarDataSize-1
  1478 					jmp @FreeMem
  1479 					els
  1480 170B 60				rts						; ret
  1481 					eif
  1482 				.endl
  1483
  1484 170C			.local	HUMAN						; PROCEDURE
  1485
  1486 				; optimize OK (main.pas), line = 14
  1487
  1488 170C AC F4 19 84 12 AC + 	mwy PLY :bp2
  1489 1716 A0 04			ldy #PLY.DIR-DATAORIGIN
  1490 1718 B1 12			lda (:bp2),y
  1491 171A 85 5A			sta NEWDIR
  1492
  1493 				; optimize OK (main.pas), line = 15
  1494
  1495 171C A9 02			lda #$02
  1496 171E 8D 08 FF			sta JOY
  1497 1721 A9 FF			lda #$FF
  1498 1723 8D 30 FD			sta KEYSCAN
  1499 1726 AD 08 FF			lda JOY
  1500 1729 49 FF			eor #$FF
  1501 172B 85 58			sta T0B
  1502
  1503 				; optimize OK (main.pas), line = 17
  1504
  1505 172D 8D 43 1A			sta @CASETMP_0006
  1506 1730 C9 01			cmp #$01
  1507 1732 D0 19			jne l_05DB
  1508 1734			@
  1509
  1510 				; optimize OK (main.pas), line = 18
  1511
  1512 1734 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1513 173E A0 04			ldy #PLY.DIR-DATAORIGIN
  1514 1740 B1 12			lda (:bp2),y
  1515 1742 C9 02			cmp #$02
  1516 1744 F0 04			jeq l_05ED
  1517 1746 A9 01			lda #$01
  1518 1748 85 5A			sta NEWDIR
  1519 174A			l_05ED
  1520
  1521 174A 4C A1 17			jmp a_0006
  1522 174D			l_05DB
  1523 174D C9 02			cmp #$02
  1524 174F D0 19			jne l_05FD
  1525 1751			@
  1526
  1527 				; optimize OK (main.pas), line = 19
  1528
  1529 1751 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1530 175B A0 04			ldy #PLY.DIR-DATAORIGIN
  1531 175D B1 12			lda (:bp2),y
  1532 175F C9 01			cmp #$01
  1533 1761 F0 04			jeq l_060F
  1534 1763 A9 02			lda #$02
  1535 1765 85 5A			sta NEWDIR
  1536 1767			l_060F
  1537
  1538 1767 4C A1 17			jmp a_0006
  1539 176A			l_05FD
  1540 176A C9 04			cmp #$04
  1541 176C D0 19			jne l_061F
  1542 176E			@
  1543
  1544 				; optimize OK (main.pas), line = 20
  1545
  1546 176E AC F4 19 84 12 AC + 	mwy PLY :bp2
  1547 1778 A0 04			ldy #PLY.DIR-DATAORIGIN
  1548 177A B1 12			lda (:bp2),y
  1549 177C C9 08			cmp #$08
  1550 177E F0 04			jeq l_0631
  1551 1780 A9 04			lda #$04
  1552 1782 85 5A			sta NEWDIR
  1553 1784			l_0631
  1554
  1555 1784 4C A1 17			jmp a_0006
  1556 1787			l_061F
  1557 1787 C9 08			cmp #$08
  1558 1789 D0 16			jne l_0641
  1559 178B			@
  1560
  1561 				; optimize OK (main.pas), line = 21
  1562
  1563 178B AC F4 19 84 12 AC + 	mwy PLY :bp2
  1564 1795 A0 04			ldy #PLY.DIR-DATAORIGIN
  1565 1797 B1 12			lda (:bp2),y
  1566 1799 C9 04			cmp #$04
  1567 179B F0 04			jeq l_0653
  1568 179D A9 08			lda #$08
  1569 179F 85 5A			sta NEWDIR
  1570 17A1			l_0653
  1571
  1572 17A1			l_0641
  1573 17A1			a_0006
  1574
  1575 				; optimize OK (main.pas), line = 24
  1576
  1577 17A1 A5 5A			lda NEWDIR
  1578 17A3 25 5B			and AVAILDIR
  1579 17A5 D0 18			jne l_067A
  1580
  1581 				; optimize OK (main.pas), line = 25
  1582
  1583 17A7 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1584 17B1 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1585 17B3 A9 00			lda #$00
  1586 17B5 91 12			sta (:bp2),y
  1587 17B7 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1588 17B9 A9 2A			lda #$2A
  1589 17BB 91 12			sta (:bp2),y
  1590 17BD C6 59			dec ALIVE
  1591 17BF			l_067A
  1592
  1593 				; ------------------------------------------------------------
  1594
  1595 = 1A43			@CASETMP_0006	= DATAORIGIN+$0043
  1596
  1597 = 1A43			@VarData	= @CASETMP_0006
  1598 = 0001			@VarDataSize	= 1
  1599
  1600 17BF			@exit
  1601 					.ifdef @new
  1602 					lda <@VarData
  1603 					sta :ztmp
  1604 					lda >@VarData
  1605 					ldy #@VarDataSize-1
  1606 					jmp @FreeMem
  1607 					els
  1608 17BF 60				rts						; ret
  1609 					eif
  1610 				.endl
  1611
  1612 17C0			.local	PLAYERMOVE					; PROCEDURE
  1613
  1614 				; optimize OK (main.pas), line = 33
  1615
  1616 17C0 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1617 17CA A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1618 17CC B1 12			lda (:bp2),y
  1619 17CE D0 03 4C EB 18		jeq l_0699
  1620
  1621 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 34
  1622
  1623 17D3 20 01 12			jsr CHECKAVAILDIR
  1624
  1625 				; optimize OK (main.pas), line = 36
  1626
  1627 17D6 A5 5B			lda AVAILDIR
  1628 17D8 D0 35			jne l_06AD
  1629
  1630 				; optimize OK (main.pas), line = 37
  1631
  1632 17DA AC F4 19 84 12 AC + 	mwy PLY :bp2
  1633 17E4 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1634 17E6 A9 00			lda #$00
  1635 17E8 91 12			sta (:bp2),y
  1636 17EA C6 59			dec ALIVE
  1637
  1638 				; optimize OK (main.pas), line = 38
  1639
  1640 17EC A0 00			ldy #PLY.X-DATAORIGIN
  1641 17EE B1 12			lda (:bp2),y
  1642 17F0 8D 31 1A			sta PUTCHAR.X
  1643 17F3 A0 01			ldy #PLY.Y-DATAORIGIN
  1644 17F5 B1 12			lda (:bp2),y
  1645 17F7 8D 32 1A			sta PUTCHAR.Y
  1646 17FA A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1647 17FC B1 12			lda (:bp2),y
  1648 17FE 18 69 80			add #$80
  1649 1801 8D 34 1A			sta PUTCHAR.C
  1650 1804 A9 57			lda #$57
  1651 1806 8D 33 1A			sta PUTCHAR.V
  1652 1809 20 71 11			jsr PUTCHAR
  1653 180C 4C EB 18			jmp l_06CE
  1654 180F			l_06AD
  1655
  1656 				; optimize OK (main.pas), line = 41
  1657
  1658 180F AC F4 19 84 12 AC + 	mwy PLY :bp2
  1659 1819 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1660 181B B1 12			lda (:bp2),y
  1661 181D 8D 44 1A			sta @CASETMP_0007
  1662 1820 C9 00			cmp #$00
  1663 1822 D0 06			jne l_06D9
  1664 1824			@
  1665
  1666 				; optimize FAIL ('HUMAN', main.pas), line = 42
  1667
  1668 1824 20 0C 17			jsr HUMAN
  1669 1827 4C 45 18			jmp a_0007
  1670 182A			l_06D9
  1671 182A C9 01			cmp #$01
  1672 182C D0 06			jne l_06E3
  1673 182E			@
  1674
  1675 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 43
  1676
  1677 182E 20 84 15			jsr AISTRAIGHT
  1678 1831 4C 45 18			jmp a_0007
  1679 1834			l_06E3
  1680 1834 C9 02			cmp #$02
  1681 1836 D0 06			jne l_06ED
  1682 1838			@
  1683
  1684 				; optimize FAIL ('AIBULLY', main.pas), line = 44
  1685
  1686 1838 20 09 16			jsr AIBULLY
  1687 183B 4C 45 18			jmp a_0007
  1688 183E			l_06ED
  1689 183E C9 03			cmp #$03
  1690 1840 D0 03			jne l_06F7
  1691 1842			@
  1692
  1693 				; optimize FAIL ('AIMIRROR', main.pas), line = 45
  1694
  1695 1842 20 CC 16			jsr AIMIRROR
  1696 1845			l_06F7
  1697 1845			a_0007
  1698
  1699 				; optimize FAIL ('DRAWTAIL', main.pas), line = 48
  1700
  1701 1845 20 BD 12			jsr DRAWTAIL
  1702 1848 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1703 1852 A0 04			ldy #PLY.DIR-DATAORIGIN
  1704 1854 A5 5A			lda NEWDIR
  1705 1856 91 12			sta (:bp2),y
  1706
  1707 				; optimize OK (main.pas), line = 50
  1708
  1709 1858 A5 5A			lda NEWDIR
  1710 185A 8D 45 1A			sta @CASETMP_0008
  1711 185D C9 01			cmp #$01
  1712 185F D0 16			jne l_0712
  1713 1861			@
  1714
  1715 				; optimize OK (main.pas), line = 51
  1716
  1717 1861 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1718 186B A0 01			ldy #PLY.Y-DATAORIGIN
  1719 186D B1 12			lda (:bp2),y
  1720 186F 38 E9 01			sub #$01
  1721 1872 91 12			sta (:bp2),y
  1722
  1723 1874 4C C2 18			jmp a_0008
  1724 1877			l_0712
  1725 1877 C9 02			cmp #$02
  1726 1879 D0 16			jne l_071C
  1727 187B			@
  1728
  1729 				; optimize OK (main.pas), line = 52
  1730
  1731 187B AC F4 19 84 12 AC + 	mwy PLY :bp2
  1732 1885 A0 01			ldy #PLY.Y-DATAORIGIN
  1733 1887 B1 12			lda (:bp2),y
  1734 1889 18 69 01			add #$01
  1735 188C 91 12			sta (:bp2),y
  1736
  1737 188E 4C C2 18			jmp a_0008
  1738 1891			l_071C
  1739 1891 C9 04			cmp #$04
  1740 1893 D0 16			jne l_0726
  1741 1895			@
  1742
  1743 				; optimize OK (main.pas), line = 53
  1744
  1745 1895 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1746 189F A0 00			ldy #PLY.X-DATAORIGIN
  1747 18A1 B1 12			lda (:bp2),y
  1748 18A3 38 E9 01			sub #$01
  1749 18A6 91 12			sta (:bp2),y
  1750
  1751 18A8 4C C2 18			jmp a_0008
  1752 18AB			l_0726
  1753 18AB C9 08			cmp #$08
  1754 18AD D0 13			jne l_0730
  1755 18AF			@
  1756
  1757 				; optimize OK (main.pas), line = 54
  1758
  1759 18AF AC F4 19 84 12 AC + 	mwy PLY :bp2
  1760 18B9 A0 00			ldy #PLY.X-DATAORIGIN
  1761 18BB B1 12			lda (:bp2),y
  1762 18BD 18 69 01			add #$01
  1763 18C0 91 12			sta (:bp2),y
  1764
  1765 18C2			l_0730
  1766 18C2			a_0008
  1767
  1768 				; optimize OK (main.pas), line = 57
  1769
  1770 18C2 AC F4 19 84 12 AC + 	mwy PLY :bp2
  1771 18CC A0 00			ldy #PLY.X-DATAORIGIN
  1772 18CE B1 12			lda (:bp2),y
  1773 18D0 8D 31 1A			sta PUTCHAR.X
  1774 18D3 A0 01			ldy #PLY.Y-DATAORIGIN
  1775 18D5 B1 12			lda (:bp2),y
  1776 18D7 8D 32 1A			sta PUTCHAR.Y
  1777 18DA A0 02			ldy #PLY.HEAD-DATAORIGIN
  1778 18DC B1 12			lda (:bp2),y
  1779 18DE 8D 33 1A			sta PUTCHAR.V
  1780 18E1 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1781 18E3 B1 12			lda (:bp2),y
  1782 18E5 8D 34 1A			sta PUTCHAR.C
  1783 18E8 20 71 11			jsr PUTCHAR
  1784 18EB			l_06CE
  1785 18EB			l_0699
  1786
  1787 				; ------------------------------------------------------------
  1788
  1789 = 1A44			@CASETMP_0007	= DATAORIGIN+$0044
  1790 = 1A45			@CASETMP_0008	= DATAORIGIN+$0045
  1791
  1792 = 1A44			@VarData	= @CASETMP_0007
  1793 = 0002			@VarDataSize	= 2
  1794
  1795 18EB			@exit
  1796 					.ifdef @new
  1797 					lda <@VarData
  1798 					sta :ztmp
  1799 					lda >@VarData
  1800 					ldy #@VarDataSize-1
  1801 					jmp @FreeMem
  1802 					els
  1803 18EB 60				rts						; ret
  1804 					eif
  1805 				.endl
  1806
  1807 18EC			.local	STARTSCREEN					; PROCEDURE
  1808
  1809 				; --- RepeatUntilProlog
  1810 18EC			l_074D
  1811
  1812 				; optimize OK (main.pas), line = 69
  1813
  1814 18EC A9 02			lda #$02
  1815 18EE 8D 08 FF			sta JOY
  1816 18F1 A9 FF			lda #$FF
  1817 18F3 8D 30 FD			sta KEYSCAN
  1818 18F6 AD 08 FF			lda JOY
  1819 18F9 49 FF			eor #$FF
  1820 18FB 85 58			sta T0B
  1821
  1822 				; optimize OK (main.pas), line = 70
  1823
  1824 18FD C9 40			cmp #$40
  1825 18FF D0 EB			jne l_074D
  1826 1901			@exit
  1827 					.ifdef @new
  1828 					lda <@VarData
  1829 					sta :ztmp
  1830 					lda >@VarData
  1831 					ldy #@VarDataSize-1
  1832 					jmp @FreeMem
  1833 					els
  1834 1901 60				rts						; ret
  1835 					eif
  1836 				.endl
  1837
  1838 1902			.local	MAINLOOP					; PROCEDURE
  1839
  1840 				; optimize OK (main.pas), line = 77
  1841
  1842 1902 A9 FF			lda #$FF
  1843 1904 85 59			sta ALIVE
  1844 1906 20 DF 13			jsr INITPLAYFIELD
  1845 1909 20 EC 18			jsr STARTSCREEN
  1846
  1847 				; --- RepeatUntilProlog
  1848 190C			l_0777
  1849
  1850 				; optimize OK (main.pas), line = 80
  1851
  1852 190C A9 03			lda #$03
  1853 190E 8D 0C 1A			sta SYSTEM.PAUSE_006B.N
  1854 1911 A9 00			lda #$00
  1855 1913 8D 0D 1A			sta SYSTEM.PAUSE_006B.N+1
  1856 1916 20 23 11			jsr SYSTEM.PAUSE_006B
  1857
  1858 				; optimize OK (main.pas), line = 81
  1859
  1860 1919 AD F8 19			lda PLAYER1
  1861 191C 8D F4 19			sta PLY
  1862 191F AD F9 19			lda PLAYER1+1
  1863 1922 8D F5 19			sta PLY+1
  1864 1925 20 C0 17			jsr PLAYERMOVE
  1865
  1866 				; optimize OK (main.pas), line = 82
  1867
  1868 1928 AD FA 19			lda PLAYER2
  1869 192B 8D F4 19			sta PLY
  1870 192E AD FB 19			lda PLAYER2+1
  1871 1931 8D F5 19			sta PLY+1
  1872 1934 20 C0 17			jsr PLAYERMOVE
  1873
  1874 				; optimize OK (main.pas), line = 83
  1875
  1876 1937 AD FC 19			lda PLAYER3
  1877 193A 8D F4 19			sta PLY
  1878 193D AD FD 19			lda PLAYER3+1
  1879 1940 8D F5 19			sta PLY+1
  1880 1943 20 C0 17			jsr PLAYERMOVE
  1881
  1882 				; optimize OK (main.pas), line = 84
  1883
  1884 1946 AD FE 19			lda PLAYER4
  1885 1949 8D F4 19			sta PLY
  1886 194C AD FF 19			lda PLAYER4+1
  1887 194F 8D F5 19			sta PLY+1
  1888 1952 20 C0 17			jsr PLAYERMOVE
  1889
  1890 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 85
  1891
  1892 1955 20 96 12			jsr ANIMATEOBSTACLES
  1893
  1894 				; optimize OK (main.pas), line = 86
  1895
  1896 1958 A5 59			lda ALIVE
  1897 195A F0 04			jeq l_0777x
  1898 195C C9 FF			cmp #$FF
  1899 195E D0 AC			jne l_0777
  1900 1960			l_0777x
  1901
  1902 				; optimize OK (main.pas), line = 88
  1903
  1904 1960 AD 18 1A			lda PLAYER1.ISALIVE
  1905 1963 F0 03			jeq l_07B7
  1906 1965 EE 17 1A			inc PLAYER1.SCORE
  1907 1968			l_07B7
  1908
  1909 				; optimize OK (main.pas), line = 89
  1910
  1911 1968 AD 20 1A			lda PLAYER2.ISALIVE
  1912 196B F0 03			jeq l_07CA
  1913 196D EE 1F 1A			inc PLAYER2.SCORE
  1914 1970			l_07CA
  1915
  1916 				; optimize OK (main.pas), line = 90
  1917
  1918 1970 AD 28 1A			lda PLAYER3.ISALIVE
  1919 1973 F0 03			jeq l_07DD
  1920 1975 EE 27 1A			inc PLAYER3.SCORE
  1921 1978			l_07DD
  1922
  1923 				; optimize OK (main.pas), line = 91
  1924
  1925 1978 AD 30 1A			lda PLAYER4.ISALIVE
  1926 197B F0 03			jeq l_07F0
  1927 197D EE 2F 1A			inc PLAYER4.SCORE
  1928 1980			l_07F0
  1929
  1930 				; optimize OK (main.pas), line = 93
  1931
  1932 1980 A9 64			lda #$64
  1933 1982 8D 0C 1A			sta SYSTEM.PAUSE_006B.N
  1934 1985 A9 00			lda #$00
  1935 1987 8D 0D 1A			sta SYSTEM.PAUSE_006B.N+1
  1936 198A 20 23 11			jsr SYSTEM.PAUSE_006B
  1937 198D			@exit
  1938 					.ifdef @new
  1939 					lda <@VarData
  1940 					sta :ztmp
  1941 					lda >@VarData
  1942 					ldy #@VarDataSize-1
  1943 					jmp @FreeMem
  1944 					els
  1945 198D 60				rts						; ret
  1946 					eif
  1947 				.endl
  1948 198E			l_0007
  1949
  1950 				; --- RepeatUntilProlog
  1951 198E			l_07FB
  1952
  1953 				; optimize OK (main.pas), line = 100
  1954
  1955 198E A9 30			lda #$30
  1956 1990 8D 17 1A			sta PLAYER1.SCORE
  1957 1993 8D 1F 1A			sta PLAYER2.SCORE
  1958
  1959 				; optimize OK (main.pas), line = 101
  1960
  1961 1996 8D 27 1A			sta PLAYER3.SCORE
  1962 1999 8D 2F 1A			sta PLAYER4.SCORE
  1963
  1964 				; optimize OK (main.pas), line = 103
  1965
  1966 199C A9 00			lda #$00
  1967 199E 8D 10 1A			sta GAMEOVER
  1968
  1969 				; --- RepeatUntilProlog
  1970 19A1			l_0810
  1971
  1972 				; optimize FAIL ('MAINLOOP', main.pas), line = 105
  1973
  1974 19A1 20 02 19			jsr MAINLOOP
  1975
  1976 				; optimize OK (main.pas), line = 106
  1977
  1978 19A4 AD 17 1A			lda PLAYER1.SCORE
  1979 19A7 C9 39			cmp #$39
  1980 19A9 D0 05			jne l_0823
  1981 19AB A9 01			lda #$01
  1982 19AD 8D 10 1A			sta GAMEOVER
  1983 19B0			l_0823
  1984
  1985 				; optimize OK (main.pas), line = 107
  1986
  1987 19B0 AD 1F 1A			lda PLAYER2.SCORE
  1988 19B3 C9 39			cmp #$39
  1989 19B5 D0 05			jne l_083C
  1990 19B7 A9 01			lda #$01
  1991 19B9 8D 10 1A			sta GAMEOVER
  1992 19BC			l_083C
  1993
  1994 				; optimize OK (main.pas), line = 108
  1995
  1996 19BC AD 27 1A			lda PLAYER3.SCORE
  1997 19BF C9 39			cmp #$39
  1998 19C1 D0 05			jne l_0855
  1999 19C3 A9 01			lda #$01
  2000 19C5 8D 10 1A			sta GAMEOVER
  2001 19C8			l_0855
  2002
  2003 				; optimize OK (main.pas), line = 109
  2004
  2005 19C8 AD 2F 1A			lda PLAYER4.SCORE
  2006 19CB C9 39			cmp #$39
  2007 19CD D0 05			jne l_086E
  2008 19CF A9 01			lda #$01
  2009 19D1 8D 10 1A			sta GAMEOVER
  2010 19D4			l_086E
  2011
  2012 				; optimize OK (main.pas), line = 110
  2013
  2014 19D4 AD 10 1A			lda GAMEOVER
  2015 19D7 F0 C8			jeq l_0810
  2016
  2017 				; optimize FAIL ('SHOWSCORE', main.pas), line = 112
  2018
  2019 19D9 20 9C 11			jsr SHOWSCORE
  2020
  2021 				; optimize OK (main.pas), line = 114
  2022
  2023 19DC A9 C8			lda #$C8
  2024 19DE 8D 0C 1A			sta SYSTEM.PAUSE_006B.N
  2025 19E1 A9 00			lda #$00
  2026 19E3 8D 0D 1A			sta SYSTEM.PAUSE_006B.N+1
  2027 19E6 20 23 11			jsr SYSTEM.PAUSE_006B
  2028
  2029 				; optimize OK (main.pas), line = 115
  2030
  2031 19E9 4C 8E 19			jmp l_07FB
  2032
  2033 				; ------------------------------------------------------------
  2034
  2035 = 0800			ATTRIBUTE_ADDR	= $0800
  2036 = 0C00			SCREEN_ADDR	= $0C00
  2037 = 0009			VICTORIES	= $09
  2038 = 0020			EMPTY	= $20
  2039 = 00A0			WALL	= $A0
  2040 = 0041			WALL_COLOUR	= $41
  2041 = 0030			ZERO	= $30
  2042 = 0056			OBSTACLE_1	= $56
  2043 = 005B			OBSTACLE_2	= $5B
  2044 = 0035			OBST_COLOUR	= $35
  2045 = 0051			PLY_HEAD	= $51
  2046 = 0057			PLY_CRASH	= $57
  2047 = 002A			PLY_CRASH_1	= $2A
  2048 = 0042			PLY_TAIL_UD	= $42
  2049 = 0040			PLY_TAIL_LR	= $40
  2050 = 007D			PLY_TAIL_RD	= $7D
  2051 = 006E			PLY_TAIL_RU	= $6E
  2052 = 006D			PLY_TAIL_LD	= $6D
  2053 = 0070			PLY_TAIL_LU	= $70
  2054 = 005F			PLY1_COLOUR	= $5F
  2055 = 005D			PLY2_COLOUR	= $5D
  2056 = 0071			PLY3_COLOUR	= $71
  2057 = 0055			PLY4_COLOUR	= $55
  2058 = 0000			PLY_CTRL	= $00
  2059 = 0001			AI_STRAIGHT	= $01
  2060 = 0002			AI_BULLY	= $02
  2061 = 0003			AI_MIRROR	= $03
  2062 = 0001			JOY_UP	= $01
  2063 = 0002			JOY_DOWN	= $02
  2064 = 0004			JOY_LEFT	= $04
  2065 = 0008			JOY_RIGHT	= $08
  2066 = 0040			JOY_FIRE	= $40
  2067 = 0002			JOY_SELECT_1	= $02
  2068 = 0004			JOY_SELECT_2	= $04
  2069 = 100E			adr.MUL40	= CODEORIGIN+$0000
  2070 19EC			.var MUL40	= adr.MUL40 .word
  2071 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  2072 19EC			.var DIRECTION	= adr.DIRECTION .word
  2073 = FD30			KEYSCAN	= $FD30
  2074 = FF08			JOY	= $FF08
  2075 = FF15			BORDERCOLOR	= $FF15
  2076 = FF19			BGCOLOR	= $FF19
  2077 = 0058			T0B	= $58
  2078 = 0059			ALIVE	= $59
  2079 = 005A			NEWDIR	= $5A
  2080 = 005B			AVAILDIR	= $5B
  2081 = 005C			T0W	= $5C
  2082 = 005E			adr.PLY	= $5E
  2083 19EC			.var PLY	= adr.PLY .word
  2084 = 1A00			PLY.X	= DATAORIGIN+$0000
  2085 = 1A01			PLY.Y	= DATAORIGIN+$0001
  2086 = 1A02			PLY.HEAD	= DATAORIGIN+$0002
  2087 = 1A03			PLY.COLOUR	= DATAORIGIN+$0003
  2088 = 1A04			PLY.DIR	= DATAORIGIN+$0004
  2089 = 1A05			PLY.BRAIN	= DATAORIGIN+$0005
  2090 = 1A06			PLY.SCORE	= DATAORIGIN+$0006
  2091 = 1A07			PLY.ISALIVE	= DATAORIGIN+$0007
  2092 = 0060			adr.TMPPLY	= $60
  2093 19EC			.var TMPPLY	= adr.TMPPLY .word
  2094 = 1A00			TMPPLY.X	= DATAORIGIN+$0000
  2095 = 1A01			TMPPLY.Y	= DATAORIGIN+$0001
  2096 = 1A02			TMPPLY.HEAD	= DATAORIGIN+$0002
  2097 = 1A03			TMPPLY.COLOUR	= DATAORIGIN+$0003
  2098 = 1A04			TMPPLY.DIR	= DATAORIGIN+$0004
  2099 = 1A05			TMPPLY.BRAIN	= DATAORIGIN+$0005
  2100 = 1A06			TMPPLY.SCORE	= DATAORIGIN+$0006
  2101 = 1A07			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  2102 = 1A10			GAMEOVER	= DATAORIGIN+$0010
  2103 = 1A11			adr.PLAYER1	= [DATAORIGIN+$0011] .array [6]
  2104 19EC			.var PLAYER1	= adr.PLAYER1 .word
  2105 = 1A11			PLAYER1.X	= DATAORIGIN+$0011
  2106 = 1A12			PLAYER1.Y	= DATAORIGIN+$0012
  2107 = 1A13			PLAYER1.HEAD	= DATAORIGIN+$0013
  2108 = 1A14			PLAYER1.COLOUR	= DATAORIGIN+$0014
  2109 = 1A15			PLAYER1.DIR	= DATAORIGIN+$0015
  2110 = 1A16			PLAYER1.BRAIN	= DATAORIGIN+$0016
  2111 = 1A17			PLAYER1.SCORE	= DATAORIGIN+$0017
  2112 = 1A18			PLAYER1.ISALIVE	= DATAORIGIN+$0018
  2113 = 1A19			adr.PLAYER2	= [DATAORIGIN+$0019] .array [6]
  2114 19EC			.var PLAYER2	= adr.PLAYER2 .word
  2115 = 1A19			PLAYER2.X	= DATAORIGIN+$0019
  2116 = 1A1A			PLAYER2.Y	= DATAORIGIN+$001A
  2117 = 1A1B			PLAYER2.HEAD	= DATAORIGIN+$001B
  2118 = 1A1C			PLAYER2.COLOUR	= DATAORIGIN+$001C
  2119 = 1A1D			PLAYER2.DIR	= DATAORIGIN+$001D
  2120 = 1A1E			PLAYER2.BRAIN	= DATAORIGIN+$001E
  2121 = 1A1F			PLAYER2.SCORE	= DATAORIGIN+$001F
  2122 = 1A20			PLAYER2.ISALIVE	= DATAORIGIN+$0020
  2123 = 1A21			adr.PLAYER3	= [DATAORIGIN+$0021] .array [6]
  2124 19EC			.var PLAYER3	= adr.PLAYER3 .word
  2125 = 1A21			PLAYER3.X	= DATAORIGIN+$0021
  2126 = 1A22			PLAYER3.Y	= DATAORIGIN+$0022
  2127 = 1A23			PLAYER3.HEAD	= DATAORIGIN+$0023
  2128 = 1A24			PLAYER3.COLOUR	= DATAORIGIN+$0024
  2129 = 1A25			PLAYER3.DIR	= DATAORIGIN+$0025
  2130 = 1A26			PLAYER3.BRAIN	= DATAORIGIN+$0026
  2131 = 1A27			PLAYER3.SCORE	= DATAORIGIN+$0027
  2132 = 1A28			PLAYER3.ISALIVE	= DATAORIGIN+$0028
  2133 = 1A29			adr.PLAYER4	= [DATAORIGIN+$0029] .array [6]
  2134 19EC			.var PLAYER4	= adr.PLAYER4 .word
  2135 = 1A29			PLAYER4.X	= DATAORIGIN+$0029
  2136 = 1A2A			PLAYER4.Y	= DATAORIGIN+$002A
  2137 = 1A2B			PLAYER4.HEAD	= DATAORIGIN+$002B
  2138 = 1A2C			PLAYER4.COLOUR	= DATAORIGIN+$002C
  2139 = 1A2D			PLAYER4.DIR	= DATAORIGIN+$002D
  2140 = 1A2E			PLAYER4.BRAIN	= DATAORIGIN+$002E
  2141 = 1A2F			PLAYER4.SCORE	= DATAORIGIN+$002F
  2142 = 1A30			PLAYER4.ISALIVE	= DATAORIGIN+$0030
  2143 19EC			@exit
  2144
  2145 19EC A2 00		@halt	ldx #$00
  2146 19EE 9A				txs
  2147
  2148 19EF 60				rts
  2149
  2150 				; ------------------------------------------------------------
  2151
  2152 				; ------------------------------------------------------------
  2153
  2154 19F0			.local	@DEFINES
  2155 19F0			C4P
  2156 				.endl
  2157
  2158 19F0			.local	@RESOURCE
  2159 				.endl
  2160
  2161 = 19F0 0E 10		MUL40
  2161 = 19F2 40 10		DIRECTION
  2161 = 19F4 5E 00		PLY
  2161 = 19F6 60 00		TMPPLY
  2161 = 19F8 11 1A		PLAYER1
  2161 = 19FA 19 1A		PLAYER2
  2161 = 19FC 21 1A		PLAYER3
  2161 = 19FE 29 1A		PLAYER4
  2161 				.endl							; MAIN
  2162
  2163 				; ------------------------------------------------------------
  2164 				; ------------------------------------------------------------
  2165
  2166 				.macro	UNITINITIALIZATION
  2167 				
  2168 					.ifdef MAIN.SYSTEM.@UnitInit
  2169 					jsr MAIN.SYSTEM.@UnitInit
  2170 					eif
  2171 				.endm
  2172
  2173 				; ------------------------------------------------------------
  2174
  2175 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2176 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2176 				SYSTEM: $10D5..$1170
  2177 					eif
  2178
  2179 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2179 				CODE: $100E..$19EF
  2180
  2181 				; ------------------------------------------------------------
  2182
  2183 1A00				.align $04
  2184
  2185 1A00			DATAORIGIN
  2186 1A00 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  2187
  2188 = 0006			VARINITSIZE	= *-DATAORIGIN
  2189 = 0046			VARDATASIZE	= 70
  2190
  2191 = 1A46			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2192
  2193 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2193 				DATA: $1A00..$1A46
  2194
  2195 				; ------------------------------------------------------------
  2196
  2197 				.macro	STATICDATA
  2198 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  2199 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  2200 				.by  $C0 $03 $01 $02 $04 $08
  2201 				.endm
  2202
  2203 					end
