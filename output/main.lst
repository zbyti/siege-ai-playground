mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E 40 1A			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0042			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 1A5A			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 BE			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 9C 19 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 9C 85 02 A9 1A + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C E1 19			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 5F 1A		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 5F 1A 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 1A5F			RESULT	= DATAORIGIN+$000B
   182
   183 = 1A5F			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD 60 1A		loop  lda n
   307 1126 0D 61 1A		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD 60 1A D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 1A60			N	= DATAORIGIN+$000C
   321
   322 = 1A60			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D 62 1A			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD 62 1A		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C 63 1A		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD 63 1A 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 1A62			RANGE	= DATAORIGIN+$000E
   383 = 1A63			RESULT	= DATAORIGIN+$000F
   384
   385 = 1A62			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 1A54			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 1A56			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 1A58			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 1A59			FILEMODE	= DATAORIGIN+$0005
   450 = 1A5A			GRAPHMODE	= DATAORIGIN+$0006
   451 = 1A5B			IORESULT	= DATAORIGIN+$0007
   452 = 1A5C			EOLN	= DATAORIGIN+$0008
   453 = 1A5D			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD 86 1A			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D 85 1A			add X
   466 117D 85 5C			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5D			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5C			ldy T0W
   475 118A AD 88 1A			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5D			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD 87 1A			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 1A85			X	= DATAORIGIN+$0031
   486 = 1A86			Y	= DATAORIGIN+$0032
   487 = 1A87			V	= DATAORIGIN+$0033
   488 = 1A88			C	= DATAORIGIN+$0034
   489
   490 = 1A85			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 68 1A			lda PLAYER1.COLOUR
   510 119F 8D 88 1A			sta PUTCHAR.C
   511 11A2 AD 6B 1A			lda PLAYER1.SCORE
   512 11A5 8D 87 1A			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D 86 1A			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D 85 1A			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD 70 1A			lda PLAYER2.COLOUR
   522 11B8 8D 88 1A			sta PUTCHAR.C
   523 11BB AD 73 1A			lda PLAYER2.SCORE
   524 11BE 8D 87 1A			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D 86 1A			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D 85 1A			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD 78 1A			lda PLAYER3.COLOUR
   534 11D1 8D 88 1A			sta PUTCHAR.C
   535 11D4 AD 7B 1A			lda PLAYER3.SCORE
   536 11D7 8D 87 1A			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D 86 1A			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D 85 1A			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD 80 1A			lda PLAYER4.COLOUR
   546 11EA 8D 88 1A			sta PUTCHAR.C
   547 11ED AD 83 1A			lda PLAYER4.SCORE
   548 11F0 8D 87 1A			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D 86 1A			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D 85 1A			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5B			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AD 8A 1A			lda Y
   576 1208 0A				asl @
   577 1209 A8				tay
   578 120A B9 0E 10			lda adr.MUL40,y
   579 120D 18 6D 89 1A			add X
   580 1211 85 5C			sta T0W
   581 1213 B9 0F 10			lda adr.MUL40+1,y
   582 1216 69 0C			adc #$0C
   583 1218 85 5D			sta T0W+1
   584
   585 				; optimize OK (tools.inc), line = 26
   586
   587 121A A5 5C			lda T0W
   588 121C 38 E9 28			sub #$28
   589 121F 85 21			sta :STACKORIGIN+9
   590 1221 A5 5D			lda T0W+1
   591 1223 E9 00			sbc #$00
   592 1225 85 11			sta :bp+1
   593 1227 A4 21			ldy :STACKORIGIN+9
   594 1229 B1 10			lda (:bp),y
   595 122B C9 20			cmp #$20
   596 122D D0 06			jne l_00EE
   597 122F A5 5B			lda AVAILDIR
   598 1231 09 01			ora #$01
   599 1233 85 5B			sta AVAILDIR
   600 1235			l_00EE
   601
   602 				; optimize OK (tools.inc), line = 27
   603
   604 1235 A4 5C 84 12 A4 5D + 	mwy T0W :bp2
   605 123D A0 28			ldy #$28
   606 123F B1 12			lda (:bp2),y
   607 1241 C9 20			cmp #$20
   608 1243 D0 06			jne l_0111
   609 1245 A5 5B			lda AVAILDIR
   610 1247 09 02			ora #$02
   611 1249 85 5B			sta AVAILDIR
   612 124B			l_0111
   613
   614 				; optimize OK (tools.inc), line = 28
   615
   616 124B A5 5C			lda T0W
   617 124D 38 E9 01			sub #$01
   618 1250 85 21			sta :STACKORIGIN+9
   619 1252 A5 5D			lda T0W+1
   620 1254 E9 00			sbc #$00
   621 1256 85 11			sta :bp+1
   622 1258 A4 21			ldy :STACKORIGIN+9
   623 125A B1 10			lda (:bp),y
   624 125C C9 20			cmp #$20
   625 125E D0 06			jne l_0134
   626 1260 A5 5B			lda AVAILDIR
   627 1262 09 04			ora #$04
   628 1264 85 5B			sta AVAILDIR
   629 1266			l_0134
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 1266 A4 5C 84 12 A4 5D + 	mwy T0W :bp2
   634 126E A0 01			ldy #$01
   635 1270 B1 12			lda (:bp2),y
   636 1272 C9 20			cmp #$20
   637 1274 D0 06			jne l_0157
   638 1276 A5 5B			lda AVAILDIR
   639 1278 09 08			ora #$08
   640 127A 85 5B			sta AVAILDIR
   641 127C			l_0157
   642
   643 				; ------------------------------------------------------------
   644
   645 = 1A89			X	= DATAORIGIN+$0035
   646 = 1A8A			Y	= DATAORIGIN+$0036
   647
   648 = 1A89			@VarData	= X
   649 = 0002			@VarDataSize	= 2
   650
   651 127C			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 127C 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 127D			.local	INITPLAYERS					; PROCEDURE
   664
   665 				; optimize OK (init.inc), line = 5
   666
   667 127D AD 8B 1A			lda P
   668 1280 8D 47 1A			sta PLY
   669 1283 85 12			sta :bp2
   670 1285 AD 8C 1A			lda P+1
   671 1288 8D 48 1A			sta PLY+1
   672 128B 85 13			sta :bp2+1
   673 				; optimize OK (init.inc), line = 6
   674 128D A0 05			ldy #PLY.BRAIN-DATAORIGIN
   675 128F AD 90 1A			lda BRAIN
   676 1292 91 12			sta (:bp2),y
   677 1294 A0 00			ldy #PLY.X-DATAORIGIN
   678 1296 AD 8D 1A			lda X
   679 1299 91 12			sta (:bp2),y
   680 129B A0 01			ldy #PLY.Y-DATAORIGIN
   681 129D AD 8E 1A			lda Y
   682 12A0 91 12			sta (:bp2),y
   683 12A2 A0 04			ldy #PLY.DIR-DATAORIGIN
   684 12A4 AD 8F 1A			lda DIR
   685 12A7 91 12			sta (:bp2),y
   686
   687 				; optimize OK (init.inc), line = 7
   688
   689 12A9 A0 02			ldy #PLY.HEAD-DATAORIGIN
   690 12AB AD 91 1A			lda HEAD
   691 12AE 91 12			sta (:bp2),y
   692 12B0 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   693 12B2 AD 92 1A			lda COLOUR
   694 12B5 91 12			sta (:bp2),y
   695 12B7 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
   696 12B9 AD 93 1A			lda ISDEAD
   697 12BC 91 12			sta (:bp2),y
   698
   699 				; ------------------------------------------------------------
   700
   701 = 1A8B			P	= DATAORIGIN+$0037
   702 = 1A8D			X	= DATAORIGIN+$0039
   703 = 1A8E			Y	= DATAORIGIN+$003A
   704 = 1A8F			DIR	= DATAORIGIN+$003B
   705 = 1A90			BRAIN	= DATAORIGIN+$003C
   706 = 1A91			HEAD	= DATAORIGIN+$003D
   707 = 1A92			COLOUR	= DATAORIGIN+$003E
   708 = 1A93			ISDEAD	= DATAORIGIN+$003F
   709
   710 = 1A8B			@VarData	= P
   711 = 0009			@VarDataSize	= 9
   712
   713 12BE			@exit
   714 					.ifdef @new
   715 					lda <@VarData
   716 					sta :ztmp
   717 					lda >@VarData
   718 					ldy #@VarDataSize-1
   719 					jmp @FreeMem
   720 					els
   721 12BE 60				rts						; ret
   722 					eif
   723 				.endl
   724
   725 12BF			.local	INITPLAYFIELD					; PROCEDURE
   726
   727 				; optimize OK (init.inc), line = 14
   728
   729 12BF A9 00			lda #$00
   730 12C1 8D 93 1A			sta INITPLAYERS.ISDEAD
   731 12C4 A9 5F			lda #$5F
   732 12C6 8D 92 1A			sta INITPLAYERS.COLOUR
   733 12C9 A9 51			lda #$51
   734 12CB 8D 91 1A			sta INITPLAYERS.HEAD
   735 12CE A9 00			lda #$00
   736 12D0 8D 90 1A			sta INITPLAYERS.BRAIN
   737 12D3 A9 08			lda #$08
   738 12D5 8D 8F 1A			sta INITPLAYERS.DIR
   739 12D8 A9 0C			lda #$0C
   740 12DA 8D 8E 1A			sta INITPLAYERS.Y
   741 12DD A9 0A			lda #$0A
   742 12DF 8D 8D 1A			sta INITPLAYERS.X
   743 12E2 AD 4B 1A			lda PLAYER1
   744 12E5 8D 8B 1A			sta INITPLAYERS.P
   745 12E8 AD 4C 1A			lda PLAYER1+1
   746 12EB 8D 8C 1A			sta INITPLAYERS.P+1
   747 12EE 20 7D 12			jsr INITPLAYERS
   748
   749 				; optimize OK (init.inc), line = 15
   750
   751 12F1 A9 00			lda #$00
   752 12F3 8D 93 1A			sta INITPLAYERS.ISDEAD
   753 12F6 A9 5D			lda #$5D
   754 12F8 8D 92 1A			sta INITPLAYERS.COLOUR
   755 12FB A9 51			lda #$51
   756 12FD 8D 91 1A			sta INITPLAYERS.HEAD
   757 1300 A9 03			lda #$03
   758 1302 8D 90 1A			sta INITPLAYERS.BRAIN
   759 1305 A9 04			lda #$04
   760 1307 8D 8F 1A			sta INITPLAYERS.DIR
   761 130A A9 0C			lda #$0C
   762 130C 8D 8E 1A			sta INITPLAYERS.Y
   763 130F A9 1E			lda #$1E
   764 1311 8D 8D 1A			sta INITPLAYERS.X
   765 1314 AD 4D 1A			lda PLAYER2
   766 1317 8D 8B 1A			sta INITPLAYERS.P
   767 131A AD 4E 1A			lda PLAYER2+1
   768 131D 8D 8C 1A			sta INITPLAYERS.P+1
   769 1320 20 7D 12			jsr INITPLAYERS
   770
   771 				; optimize OK (init.inc), line = 16
   772
   773 1323 A9 00			lda #$00
   774 1325 8D 93 1A			sta INITPLAYERS.ISDEAD
   775 1328 A9 71			lda #$71
   776 132A 8D 92 1A			sta INITPLAYERS.COLOUR
   777 132D A9 51			lda #$51
   778 132F 8D 91 1A			sta INITPLAYERS.HEAD
   779 1332 A9 02			lda #$02
   780 1334 8D 90 1A			sta INITPLAYERS.BRAIN
   781 1337 8D 8F 1A			sta INITPLAYERS.DIR
   782 133A A9 06			lda #$06
   783 133C 8D 8E 1A			sta INITPLAYERS.Y
   784 133F A9 14			lda #$14
   785 1341 8D 8D 1A			sta INITPLAYERS.X
   786 1344 AD 4F 1A			lda PLAYER3
   787 1347 8D 8B 1A			sta INITPLAYERS.P
   788 134A AD 50 1A			lda PLAYER3+1
   789 134D 8D 8C 1A			sta INITPLAYERS.P+1
   790 1350 20 7D 12			jsr INITPLAYERS
   791
   792 				; optimize OK (init.inc), line = 17
   793
   794 1353 A9 00			lda #$00
   795 1355 8D 93 1A			sta INITPLAYERS.ISDEAD
   796 1358 A9 55			lda #$55
   797 135A 8D 92 1A			sta INITPLAYERS.COLOUR
   798 135D A9 51			lda #$51
   799 135F 8D 91 1A			sta INITPLAYERS.HEAD
   800 1362 A9 02			lda #$02
   801 1364 8D 90 1A			sta INITPLAYERS.BRAIN
   802 1367 A9 01			lda #$01
   803 1369 8D 8F 1A			sta INITPLAYERS.DIR
   804 136C A9 12			lda #$12
   805 136E 8D 8E 1A			sta INITPLAYERS.Y
   806 1371 A9 14			lda #$14
   807 1373 8D 8D 1A			sta INITPLAYERS.X
   808 1376 AD 51 1A			lda PLAYER4
   809 1379 8D 8B 1A			sta INITPLAYERS.P
   810 137C AD 52 1A			lda PLAYER4+1
   811 137F 8D 8C 1A			sta INITPLAYERS.P+1
   812 1382 20 7D 12			jsr INITPLAYERS
   813
   814 				; optimize OK (init.inc), line = 19
   815
   816 1385 A9 1F			lda #$1F
   817 1387 8D 15 FF			sta BORDERCOLOR
   818 138A A9 00			lda #$00
   819 138C 8D 19 FF			sta BGCOLOR
   820
   821 				; optimize OK (init.inc), line = 20
   822
   823 138F A9 20			lda #$20
   824 1391 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   825 1393 A9 C0			lda #$C0
   826 1395 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   827 1397 A9 03			lda #$03
   828 1399 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
   829 139B A9 00			lda #$00
   830 139D 85 08			sta SYSTEM.FILLCHAR_0056.A
   831 139F A9 0C			lda #$0C
   832 13A1 85 09			sta SYSTEM.FILLCHAR_0056.A+1
   833 13A3 20 1F 11			jsr SYSTEM.FILLCHAR_0056
   834
   835 				; optimize OK (init.inc), line = 22
   836
   837 13A6 A9 27			lda #$27
   838 13A8 85 58			sta T0B
   839
   840 13AA			l_01D8
   841 				; --- ForToDoCondition
   842
   843 				; optimize OK (init.inc), line = 23
   844
   845 13AA A4 58			ldy T0B
   846 13AC A9 A0			lda #$A0
   847 13AE 99 00 0C			sta $0C00,y
   848
   849 				; optimize OK (init.inc), line = 24
   850
   851 13B1 99 C0 0F			sta $0FC0,y
   852
   853 				; optimize OK (init.inc), line = 25
   854
   855 13B4 A9 41			lda #$41
   856 13B6 99 00 08			sta $0800,y
   857
   858 				; optimize OK (init.inc), line = 26
   859
   860 13B9 99 C0 0B			sta $0BC0,y
   861
   862 				; --- ForToDoEpilog
   863 13BC C6 58			dec T0B
   864 13BE 10 EA			jpl l_01D8
   865 13C0			l_01E6
   866
   867 				; optimize OK (init.inc), line = 29
   868
   869 13C0 A9 18			lda #$18
   870 13C2 85 58			sta T0B
   871
   872 13C4			l_0218
   873 				; --- ForToDoCondition
   874 13C4 A5 58			lda T0B
   875 13C6 C9 01			cmp #$01
   876 13C8 90 3A			jcc l_0226
   877
   878 				; optimize OK (init.inc), line = 30
   879
   880 13CA 0A				asl @
   881 13CB A8				tay
   882 13CC A9 FF			lda #$FF
   883 13CE 18 79 0E 10			add adr.MUL40,y
   884 13D2 85 12			sta :bp2
   885 13D4 A9 0B			lda #$0B
   886 13D6 79 0F 10			adc adr.MUL40+1,y
   887 13D9 85 13			sta :bp2+1
   888 13DB A0 00			ldy #$00
   889 13DD A9 A0			lda #$A0
   890 13DF 91 12			sta (:bp2),y
   891 13E1 C8				iny
   892 13E2 91 12			sta (:bp2),y
   893
   894 				; optimize OK (init.inc), line = 31
   895
   896 13E4 A5 58			lda T0B
   897 13E6 0A				asl @
   898 13E7 A8				tay
   899 13E8 A9 FF			lda #$FF
   900 13EA 18 79 0E 10			add adr.MUL40,y
   901 13EE 85 12			sta :bp2
   902 13F0 A9 07			lda #$07
   903 13F2 79 0F 10			adc adr.MUL40+1,y
   904 13F5 85 13			sta :bp2+1
   905 13F7 A0 00			ldy #$00
   906 13F9 A9 41			lda #$41
   907 13FB 91 12			sta (:bp2),y
   908 13FD C8				iny
   909 13FE 91 12			sta (:bp2),y
   910
   911 				; --- ForToDoEpilog
   912 1400 C6 58			dec T0B
   913 1402 10 C0			jpl l_0218
   914 1404			l_0226
   915
   916 				; optimize OK (init.inc), line = 34
   917
   918 1404 AD 6C 1A			lda PLAYER1.ISDEAD
   919 1407 D0 1B			jne l_0250
   920 1409 AD 68 1A			lda PLAYER1.COLOUR
   921 140C 8D 88 1A			sta PUTCHAR.C
   922 140F AD 67 1A			lda PLAYER1.HEAD
   923 1412 8D 87 1A			sta PUTCHAR.V
   924 1415 AD 66 1A			lda PLAYER1.Y
   925 1418 8D 86 1A			sta PUTCHAR.Y
   926 141B AD 65 1A			lda PLAYER1.X
   927 141E 8D 85 1A			sta PUTCHAR.X
   928 1421 20 71 11			jsr PUTCHAR
   929 1424			l_0250
   930
   931 				; optimize OK (init.inc), line = 35
   932
   933 1424 AD 74 1A			lda PLAYER2.ISDEAD
   934 1427 D0 1B			jne l_026F
   935 1429 AD 70 1A			lda PLAYER2.COLOUR
   936 142C 8D 88 1A			sta PUTCHAR.C
   937 142F AD 6F 1A			lda PLAYER2.HEAD
   938 1432 8D 87 1A			sta PUTCHAR.V
   939 1435 AD 6E 1A			lda PLAYER2.Y
   940 1438 8D 86 1A			sta PUTCHAR.Y
   941 143B AD 6D 1A			lda PLAYER2.X
   942 143E 8D 85 1A			sta PUTCHAR.X
   943 1441 20 71 11			jsr PUTCHAR
   944 1444			l_026F
   945
   946 				; optimize OK (init.inc), line = 36
   947
   948 1444 AD 7C 1A			lda PLAYER3.ISDEAD
   949 1447 D0 1B			jne l_028E
   950 1449 AD 78 1A			lda PLAYER3.COLOUR
   951 144C 8D 88 1A			sta PUTCHAR.C
   952 144F AD 77 1A			lda PLAYER3.HEAD
   953 1452 8D 87 1A			sta PUTCHAR.V
   954 1455 AD 76 1A			lda PLAYER3.Y
   955 1458 8D 86 1A			sta PUTCHAR.Y
   956 145B AD 75 1A			lda PLAYER3.X
   957 145E 8D 85 1A			sta PUTCHAR.X
   958 1461 20 71 11			jsr PUTCHAR
   959 1464			l_028E
   960
   961 				; optimize OK (init.inc), line = 37
   962
   963 1464 AD 84 1A			lda PLAYER4.ISDEAD
   964 1467 D0 1B			jne l_02AD
   965 1469 AD 80 1A			lda PLAYER4.COLOUR
   966 146C 8D 88 1A			sta PUTCHAR.C
   967 146F AD 7F 1A			lda PLAYER4.HEAD
   968 1472 8D 87 1A			sta PUTCHAR.V
   969 1475 AD 7E 1A			lda PLAYER4.Y
   970 1478 8D 86 1A			sta PUTCHAR.Y
   971 147B AD 7D 1A			lda PLAYER4.X
   972 147E 8D 85 1A			sta PUTCHAR.X
   973 1481 20 71 11			jsr PUTCHAR
   974 1484			l_02AD
   975
   976 				; optimize OK (init.inc), line = 39
   977
   978 1484 A9 35			lda #$35
   979 1486 8D 88 1A			sta PUTCHAR.C
   980 1489 A9 56			lda #$56
   981 148B 8D 87 1A			sta PUTCHAR.V
   982 148E A9 06			lda #$06
   983 1490 8D 86 1A			sta PUTCHAR.Y
   984 1493 A9 0A			lda #$0A
   985 1495 8D 85 1A			sta PUTCHAR.X
   986 1498 20 71 11			jsr PUTCHAR
   987
   988 				; optimize OK (init.inc), line = 40
   989
   990 149B A9 35			lda #$35
   991 149D 8D 88 1A			sta PUTCHAR.C
   992 14A0 A9 56			lda #$56
   993 14A2 8D 87 1A			sta PUTCHAR.V
   994 14A5 A9 06			lda #$06
   995 14A7 8D 86 1A			sta PUTCHAR.Y
   996 14AA A9 1E			lda #$1E
   997 14AC 8D 85 1A			sta PUTCHAR.X
   998 14AF 20 71 11			jsr PUTCHAR
   999
  1000 				; optimize OK (init.inc), line = 41
  1001
  1002 14B2 A9 35			lda #$35
  1003 14B4 8D 88 1A			sta PUTCHAR.C
  1004 14B7 A9 56			lda #$56
  1005 14B9 8D 87 1A			sta PUTCHAR.V
  1006 14BC A9 12			lda #$12
  1007 14BE 8D 86 1A			sta PUTCHAR.Y
  1008 14C1 A9 0A			lda #$0A
  1009 14C3 8D 85 1A			sta PUTCHAR.X
  1010 14C6 20 71 11			jsr PUTCHAR
  1011
  1012 				; optimize OK (init.inc), line = 42
  1013
  1014 14C9 A9 35			lda #$35
  1015 14CB 8D 88 1A			sta PUTCHAR.C
  1016 14CE A9 56			lda #$56
  1017 14D0 8D 87 1A			sta PUTCHAR.V
  1018 14D3 A9 12			lda #$12
  1019 14D5 8D 86 1A			sta PUTCHAR.Y
  1020 14D8 A9 1E			lda #$1E
  1021 14DA 8D 85 1A			sta PUTCHAR.X
  1022 14DD 20 71 11			jsr PUTCHAR
  1023
  1024 				; optimize FAIL ('SHOWSCORE', init.inc), line = 44
  1025
  1026 14E0 20 9C 11			jsr SHOWSCORE
  1027
  1028 				; ------------------------------------------------------------
  1029
  1030 = 0000			@FORTMP_01D5	= $00
  1031 = 0001			@FORTMP_0215	= $01
  1032 14E3			@exit
  1033 					.ifdef @new
  1034 					lda <@VarData
  1035 					sta :ztmp
  1036 					lda >@VarData
  1037 					ldy #@VarDataSize-1
  1038 					jmp @FreeMem
  1039 					els
  1040 14E3 60				rts						; ret
  1041 					eif
  1042 				.endl
  1043
  1044 14E4			.local	AISTRAIGHT					; PROCEDURE
  1045
  1046 				; optimize OK (ai.inc), line = 5
  1047
  1048 14E4 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1049 14EE A0 04			ldy #PLY.DIR-DATAORIGIN
  1050 14F0 B1 12			lda (:bp2),y
  1051 14F2 25 5B			and AVAILDIR
  1052 14F4 F0 07			jeq l_02EE
  1053 14F6 B1 12			lda (:bp2),y
  1054 14F8 85 5A			sta NEWDIR
  1055 14FA 4C 74 15			jmp l_02FE
  1056 14FD			l_02EE
  1057
  1058 				; optimize OK (ai.inc), line = 7
  1059
  1060 14FD A5 5B			lda AVAILDIR
  1061 14FF C9 03			cmp #$03
  1062 1501 D0 16			jne l_0310
  1063 1503 A9 00			lda #$00
  1064 1505 20 40 11			jsr SYSTEM.RANDOM_006C
  1065 1508 B5 18			lda :STACKORIGIN,x
  1066 150A 29 01			and #$01
  1067 150C 95 18			sta :STACKORIGIN,x
  1068 150E B4 18			ldy :STACKORIGIN,x
  1069 1510 B9 40 10			lda adr.DIRECTION,y
  1070 1513 85 5A			sta NEWDIR
  1071 1515 CA				dex
  1072 1516 4C 31 15			jmp l_0326
  1073 1519			l_0310
  1074
  1075 				; optimize OK (ai.inc), line = 9
  1076
  1077 1519 A5 5B			lda AVAILDIR
  1078 151B 8D 94 1A			sta @CASETMP_0003
  1079 151E C9 01			cmp #$01
  1080 1520 D0 07			jne l_0331
  1081 1522			@
  1082
  1083 				; optimize OK (ai.inc), line = 10
  1084
  1085 1522 A9 01			lda #$01
  1086 1524 85 5A			sta NEWDIR
  1087
  1088 1526 4C 31 15			jmp a_0003
  1089 1529			l_0331
  1090 1529 C9 02			cmp #$02
  1091 152B D0 04			jne l_033E
  1092 152D			@
  1093
  1094 				; optimize OK (ai.inc), line = 11
  1095
  1096 152D A9 02			lda #$02
  1097 152F 85 5A			sta NEWDIR
  1098
  1099 1531			l_033E
  1100 1531			a_0003
  1101 1531			l_0326
  1102
  1103 				; optimize OK (ai.inc), line = 14
  1104
  1105 1531 A5 5B			lda AVAILDIR
  1106 1533 C9 0C			cmp #$0C
  1107 1535 D0 25			jne l_035A
  1108 1537 A9 00			lda #$00
  1109 1539 20 40 11			jsr SYSTEM.RANDOM_006C
  1110 153C B5 18			lda :STACKORIGIN,x
  1111 153E 29 01			and #$01
  1112 1540 95 18			sta :STACKORIGIN,x
  1113 1542 E8				inx
  1114 1543 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1115 1547 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1116 154B 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1117 154D 20 44 10			jsr addAX_CX
  1118 1550 CA				dex
  1119 1551 B4 18			ldy :STACKORIGIN,x
  1120 1553 B9 40 10			lda adr.DIRECTION,y
  1121 1556 85 5A			sta NEWDIR
  1122 1558 CA				dex
  1123 1559 4C 74 15			jmp l_0374
  1124 155C			l_035A
  1125
  1126 				; optimize OK (ai.inc), line = 16
  1127
  1128 155C A5 5B			lda AVAILDIR
  1129 155E 8D 95 1A			sta @CASETMP_0004
  1130 1561 C9 04			cmp #$04
  1131 1563 D0 07			jne l_037F
  1132 1565			@
  1133
  1134 				; optimize OK (ai.inc), line = 17
  1135
  1136 1565 A9 04			lda #$04
  1137 1567 85 5A			sta NEWDIR
  1138
  1139 1569 4C 74 15			jmp a_0004
  1140 156C			l_037F
  1141 156C C9 08			cmp #$08
  1142 156E D0 04			jne l_038C
  1143 1570			@
  1144
  1145 				; optimize OK (ai.inc), line = 18
  1146
  1147 1570 A9 08			lda #$08
  1148 1572 85 5A			sta NEWDIR
  1149
  1150 1574			l_038C
  1151 1574			a_0004
  1152 1574			l_0374
  1153 1574			l_02FE
  1154
  1155 				; ------------------------------------------------------------
  1156
  1157 = 1A94			@CASETMP_0003	= DATAORIGIN+$0040
  1158 = 1A95			@CASETMP_0004	= DATAORIGIN+$0041
  1159
  1160 = 1A94			@VarData	= @CASETMP_0003
  1161 = 0002			@VarDataSize	= 2
  1162
  1163 1574			@exit
  1164 					.ifdef @new
  1165 					lda <@VarData
  1166 					sta :ztmp
  1167 					lda >@VarData
  1168 					ldy #@VarDataSize-1
  1169 					jmp @FreeMem
  1170 					els
  1171 1574 60				rts						; ret
  1172 					eif
  1173 				.endl
  1174
  1175 1575			.local	AIBULLY						; PROCEDURE
  1176
  1177 				; optimize OK (ai.inc), line = 28
  1178
  1179 1575 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1180 157F A0 04			ldy #PLY.DIR-DATAORIGIN
  1181 1581 B1 12			lda (:bp2),y
  1182 1583 85 58			sta T0B
  1183
  1184 				; optimize OK (ai.inc), line = 30
  1185
  1186 1585 AD 6C 1A			lda PLAYER1.ISDEAD
  1187 1588 F0 0F			jeq l_03AC
  1188 158A AD 4D 1A			lda PLAYER2
  1189 158D 8D 49 1A			sta TMPPLY
  1190 1590 AD 4E 1A			lda PLAYER2+1
  1191 1593 8D 4A 1A			sta TMPPLY+1
  1192 1596 4C A5 15			jmp l_03BB
  1193 1599			l_03AC
  1194 1599 AD 4B 1A			lda PLAYER1
  1195 159C 8D 49 1A			sta TMPPLY
  1196 159F AD 4C 1A			lda PLAYER1+1
  1197 15A2 8D 4A 1A			sta TMPPLY+1
  1198 15A5			l_03BB
  1199
  1200 				; optimize OK (ai.inc), line = 32
  1201
  1202 15A5 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1203 15AF A0 01			ldy #PLY.Y-DATAORIGIN
  1204 15B1 B1 12			lda (:bp2),y
  1205 15B3 85 21			sta :STACKORIGIN+9
  1206 15B5 AC 49 1A 84 12 AC + 	mwy TMPPLY :bp2
  1207 15BF A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1208 15C1 B1 12			lda (:bp2),y
  1209 15C3 C5 21			cmp :STACKORIGIN+9
  1210 15C5 B0 07			jcs l_03D4
  1211 15C7 A9 01			lda #$01
  1212 15C9 85 58			sta T0B
  1213 15CB 4C D2 15			jmp l_03E2
  1214 15CE			l_03D4
  1215 15CE A9 02			lda #$02
  1216 15D0 85 58			sta T0B
  1217 15D2			l_03E2
  1218
  1219 				; optimize OK (ai.inc), line = 33
  1220
  1221 15D2 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1222 15DC A0 01			ldy #PLY.Y-DATAORIGIN
  1223 15DE B1 12			lda (:bp2),y
  1224 15E0 85 21			sta :STACKORIGIN+9
  1225 15E2 AC 49 1A 84 12 AC + 	mwy TMPPLY :bp2
  1226 15EC A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1227 15EE B1 12			lda (:bp2),y
  1228 15F0 C5 21			cmp :STACKORIGIN+9
  1229 15F2 F0 06			jeq l_040Cx
  1230 15F4 A5 5B			lda AVAILDIR
  1231 15F6 25 58			and T0B
  1232 15F8 D0 2D			jne l_040C
  1233 15FA			l_040Cx
  1234
  1235 				; optimize OK (ai.inc), line = 34
  1236
  1237 15FA AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1238 1604 A0 00			ldy #PLY.X-DATAORIGIN
  1239 1606 B1 12			lda (:bp2),y
  1240 1608 85 21			sta :STACKORIGIN+9
  1241 160A AC 49 1A 84 12 AC + 	mwy TMPPLY :bp2
  1242 1614 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1243 1616 B1 12			lda (:bp2),y
  1244 1618 C5 21			cmp :STACKORIGIN+9
  1245 161A B0 07			jcs l_0421
  1246 161C A9 04			lda #$04
  1247 161E 85 58			sta T0B
  1248 1620 4C 27 16			jmp l_042F
  1249 1623			l_0421
  1250 1623 A9 08			lda #$08
  1251 1625 85 58			sta T0B
  1252 1627			l_042F
  1253 1627			l_040C
  1254
  1255 				; optimize OK (ai.inc), line = 37
  1256
  1257 1627 A5 5B			lda AVAILDIR
  1258 1629 25 58			and T0B
  1259 162B F0 07			jeq l_044D
  1260 162D A5 58			lda T0B
  1261 162F 85 5A			sta NEWDIR
  1262 1631 4C 37 16			jmp l_045D
  1263 1634			l_044D
  1264
  1265 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 38
  1266
  1267 1634 20 E4 14			jsr AISTRAIGHT
  1268 1637			l_045D
  1269 1637			@exit
  1270 					.ifdef @new
  1271 					lda <@VarData
  1272 					sta :ztmp
  1273 					lda >@VarData
  1274 					ldy #@VarDataSize-1
  1275 					jmp @FreeMem
  1276 					els
  1277 1637 60				rts						; ret
  1278 					eif
  1279 				.endl
  1280
  1281 1638			.local	AIMIRROR					; PROCEDURE
  1282
  1283 				; optimize OK (ai.inc), line = 45
  1284
  1285 1638 AD 69 1A			lda PLAYER1.DIR
  1286 163B 8D 96 1A			sta @CASETMP_0005
  1287 163E C9 01			cmp #$01
  1288 1640 D0 07			jne l_046D
  1289 1642			@
  1290
  1291 				; optimize OK (ai.inc), line = 46
  1292
  1293 1642 A9 02			lda #$02
  1294 1644 85 58			sta T0B
  1295
  1296 1646 4C 67 16			jmp a_0005
  1297 1649			l_046D
  1298 1649 C9 02			cmp #$02
  1299 164B D0 07			jne l_047A
  1300 164D			@
  1301
  1302 				; optimize OK (ai.inc), line = 47
  1303
  1304 164D A9 01			lda #$01
  1305 164F 85 58			sta T0B
  1306
  1307 1651 4C 67 16			jmp a_0005
  1308 1654			l_047A
  1309 1654 C9 04			cmp #$04
  1310 1656 D0 07			jne l_0487
  1311 1658			@
  1312
  1313 				; optimize OK (ai.inc), line = 48
  1314
  1315 1658 A9 08			lda #$08
  1316 165A 85 58			sta T0B
  1317
  1318 165C 4C 67 16			jmp a_0005
  1319 165F			l_0487
  1320 165F C9 08			cmp #$08
  1321 1661 D0 04			jne l_0494
  1322 1663			@
  1323
  1324 				; optimize OK (ai.inc), line = 49
  1325
  1326 1663 A9 04			lda #$04
  1327 1665 85 58			sta T0B
  1328
  1329 1667			l_0494
  1330 1667			a_0005
  1331
  1332 				; optimize OK (ai.inc), line = 52
  1333
  1334 1667 A5 5B			lda AVAILDIR
  1335 1669 25 58			and T0B
  1336 166B F0 07			jeq l_04B8
  1337 166D A5 58			lda T0B
  1338 166F 85 5A			sta NEWDIR
  1339 1671 4C 77 16			jmp l_04C8
  1340 1674			l_04B8
  1341
  1342 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 53
  1343
  1344 1674 20 E4 14			jsr AISTRAIGHT
  1345 1677			l_04C8
  1346
  1347 				; ------------------------------------------------------------
  1348
  1349 = 1A96			@CASETMP_0005	= DATAORIGIN+$0042
  1350
  1351 = 1A96			@VarData	= @CASETMP_0005
  1352 = 0001			@VarDataSize	= 1
  1353
  1354 1677			@exit
  1355 					.ifdef @new
  1356 					lda <@VarData
  1357 					sta :ztmp
  1358 					lda >@VarData
  1359 					ldy #@VarDataSize-1
  1360 					jmp @FreeMem
  1361 					els
  1362 1677 60				rts						; ret
  1363 					eif
  1364 				.endl
  1365
  1366 1678			.local	HUMAN						; PROCEDURE
  1367
  1368 				; optimize OK (main.pas), line = 14
  1369
  1370 1678 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1371 1682 A0 04			ldy #PLY.DIR-DATAORIGIN
  1372 1684 B1 12			lda (:bp2),y
  1373 1686 85 5A			sta NEWDIR
  1374
  1375 				; optimize OK (main.pas), line = 15
  1376
  1377 1688 A9 02			lda #$02
  1378 168A 8D 08 FF			sta JOY
  1379 168D A9 FF			lda #$FF
  1380 168F 8D 30 FD			sta KEY_PIO
  1381 1692 AD 08 FF			lda JOY
  1382 1695 49 FF			eor #$FF
  1383 1697 85 58			sta T0B
  1384
  1385 				; optimize OK (main.pas), line = 17
  1386
  1387 1699 8D 97 1A			sta @CASETMP_0006
  1388 169C C9 01			cmp #$01
  1389 169E D0 19			jne l_04F0
  1390 16A0			@
  1391
  1392 				; optimize OK (main.pas), line = 18
  1393
  1394 16A0 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1395 16AA A0 04			ldy #PLY.DIR-DATAORIGIN
  1396 16AC B1 12			lda (:bp2),y
  1397 16AE C9 02			cmp #$02
  1398 16B0 F0 04			jeq l_0502
  1399 16B2 A9 01			lda #$01
  1400 16B4 85 5A			sta NEWDIR
  1401 16B6			l_0502
  1402
  1403 16B6 4C 0D 17			jmp a_0006
  1404 16B9			l_04F0
  1405 16B9 C9 02			cmp #$02
  1406 16BB D0 19			jne l_0512
  1407 16BD			@
  1408
  1409 				; optimize OK (main.pas), line = 19
  1410
  1411 16BD AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1412 16C7 A0 04			ldy #PLY.DIR-DATAORIGIN
  1413 16C9 B1 12			lda (:bp2),y
  1414 16CB C9 01			cmp #$01
  1415 16CD F0 04			jeq l_0524
  1416 16CF A9 02			lda #$02
  1417 16D1 85 5A			sta NEWDIR
  1418 16D3			l_0524
  1419
  1420 16D3 4C 0D 17			jmp a_0006
  1421 16D6			l_0512
  1422 16D6 C9 04			cmp #$04
  1423 16D8 D0 19			jne l_0534
  1424 16DA			@
  1425
  1426 				; optimize OK (main.pas), line = 20
  1427
  1428 16DA AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1429 16E4 A0 04			ldy #PLY.DIR-DATAORIGIN
  1430 16E6 B1 12			lda (:bp2),y
  1431 16E8 C9 08			cmp #$08
  1432 16EA F0 04			jeq l_0546
  1433 16EC A9 04			lda #$04
  1434 16EE 85 5A			sta NEWDIR
  1435 16F0			l_0546
  1436
  1437 16F0 4C 0D 17			jmp a_0006
  1438 16F3			l_0534
  1439 16F3 C9 08			cmp #$08
  1440 16F5 D0 16			jne l_0556
  1441 16F7			@
  1442
  1443 				; optimize OK (main.pas), line = 21
  1444
  1445 16F7 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1446 1701 A0 04			ldy #PLY.DIR-DATAORIGIN
  1447 1703 B1 12			lda (:bp2),y
  1448 1705 C9 04			cmp #$04
  1449 1707 F0 04			jeq l_0568
  1450 1709 A9 08			lda #$08
  1451 170B 85 5A			sta NEWDIR
  1452 170D			l_0568
  1453
  1454 170D			l_0556
  1455 170D			a_0006
  1456
  1457 				; optimize OK (main.pas), line = 24
  1458
  1459 170D A5 5A			lda NEWDIR
  1460 170F 25 5B			and AVAILDIR
  1461 1711 D0 18			jne l_058F
  1462
  1463 				; optimize OK (main.pas), line = 25
  1464
  1465 1713 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1466 171D A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1467 171F A9 01			lda #$01
  1468 1721 91 12			sta (:bp2),y
  1469 1723 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1470 1725 A9 2A			lda #$2A
  1471 1727 91 12			sta (:bp2),y
  1472 1729 C6 59			dec ALIVE
  1473 172B			l_058F
  1474
  1475 				; ------------------------------------------------------------
  1476
  1477 = 1A97			@CASETMP_0006	= DATAORIGIN+$0043
  1478
  1479 = 1A97			@VarData	= @CASETMP_0006
  1480 = 0001			@VarDataSize	= 1
  1481
  1482 172B			@exit
  1483 					.ifdef @new
  1484 					lda <@VarData
  1485 					sta :ztmp
  1486 					lda >@VarData
  1487 					ldy #@VarDataSize-1
  1488 					jmp @FreeMem
  1489 					els
  1490 172B 60				rts						; ret
  1491 					eif
  1492 				.endl
  1493
  1494 172C			.local	PLAYERMOVE					; PROCEDURE
  1495
  1496 				; optimize OK (main.pas), line = 33
  1497
  1498 172C AD 98 1A			lda P
  1499 172F 8D 47 1A			sta PLY
  1500 1732 85 12			sta :bp2
  1501 1734 AD 99 1A			lda P+1
  1502 1737 8D 48 1A			sta PLY+1
  1503 173A 85 13			sta :bp2+1
  1504 				; optimize OK (main.pas), line = 35
  1505 173C A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1506 173E B1 12			lda (:bp2),y
  1507 1740 F0 03 4C 25 19		jne l_05B6
  1508
  1509 				; optimize OK (main.pas), line = 37
  1510
  1511 1745 A0 00			ldy #PLY.X-DATAORIGIN
  1512 1747 B1 12			lda (:bp2),y
  1513 1749 8D 89 1A			sta CHECKAVAILDIR.X
  1514 174C A0 01			ldy #PLY.Y-DATAORIGIN
  1515 174E B1 12			lda (:bp2),y
  1516 1750 8D 8A 1A			sta CHECKAVAILDIR.Y
  1517 1753 20 01 12			jsr CHECKAVAILDIR
  1518
  1519 				; optimize OK (main.pas), line = 39
  1520
  1521 1756 A5 5B			lda AVAILDIR
  1522 1758 D0 35			jne l_05D0
  1523
  1524 				; optimize OK (main.pas), line = 40
  1525
  1526 175A AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1527 1764 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1528 1766 A9 01			lda #$01
  1529 1768 91 12			sta (:bp2),y
  1530 176A C6 59			dec ALIVE
  1531
  1532 				; optimize OK (main.pas), line = 41
  1533
  1534 176C A0 00			ldy #PLY.X-DATAORIGIN
  1535 176E B1 12			lda (:bp2),y
  1536 1770 8D 85 1A			sta PUTCHAR.X
  1537 1773 A0 01			ldy #PLY.Y-DATAORIGIN
  1538 1775 B1 12			lda (:bp2),y
  1539 1777 8D 86 1A			sta PUTCHAR.Y
  1540 177A A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1541 177C B1 12			lda (:bp2),y
  1542 177E 18 69 80			add #$80
  1543 1781 8D 88 1A			sta PUTCHAR.C
  1544 1784 A9 57			lda #$57
  1545 1786 8D 87 1A			sta PUTCHAR.V
  1546 1789 20 71 11			jsr PUTCHAR
  1547 178C 4C 25 19			jmp l_05F1
  1548 178F			l_05D0
  1549
  1550 				; optimize OK (main.pas), line = 44
  1551
  1552 178F AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1553 1799 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1554 179B B1 12			lda (:bp2),y
  1555 179D 8D 9A 1A			sta @CASETMP_0007
  1556 17A0 C9 00			cmp #$00
  1557 17A2 D0 06			jne l_05FC
  1558 17A4			@
  1559
  1560 				; optimize FAIL ('HUMAN', main.pas), line = 45
  1561
  1562 17A4 20 78 16			jsr HUMAN
  1563 17A7 4C C5 17			jmp a_0007
  1564 17AA			l_05FC
  1565 17AA C9 01			cmp #$01
  1566 17AC D0 06			jne l_0606
  1567 17AE			@
  1568
  1569 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 46
  1570
  1571 17AE 20 E4 14			jsr AISTRAIGHT
  1572 17B1 4C C5 17			jmp a_0007
  1573 17B4			l_0606
  1574 17B4 C9 02			cmp #$02
  1575 17B6 D0 06			jne l_0610
  1576 17B8			@
  1577
  1578 				; optimize FAIL ('AIBULLY', main.pas), line = 47
  1579
  1580 17B8 20 75 15			jsr AIBULLY
  1581 17BB 4C C5 17			jmp a_0007
  1582 17BE			l_0610
  1583 17BE C9 03			cmp #$03
  1584 17C0 D0 03			jne l_061A
  1585 17C2			@
  1586
  1587 				; optimize FAIL ('AIMIRROR', main.pas), line = 48
  1588
  1589 17C2 20 38 16			jsr AIMIRROR
  1590 17C5			l_061A
  1591 17C5			a_0007
  1592
  1593 				; optimize OK (main.pas), line = 51
  1594
  1595 17C5 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1596 17CF A0 04			ldy #PLY.DIR-DATAORIGIN
  1597 17D1 B1 12			lda (:bp2),y
  1598 17D3 C5 5A			cmp NEWDIR
  1599 17D5 D0 14			jne l_0637
  1600
  1601 				; optimize OK (main.pas), line = 52
  1602
  1603 17D7 A5 5A			lda NEWDIR
  1604 17D9 29 0C			and #$0C
  1605 17DB F0 07			jeq l_064E
  1606 17DD A9 40			lda #$40
  1607 17DF 85 58			sta T0B
  1608 17E1 4C E8 17			jmp l_065C
  1609 17E4			l_064E
  1610 17E4 A9 42			lda #$42
  1611 17E6 85 58			sta T0B
  1612 17E8			l_065C
  1613 17E8 4C 5B 18			jmp l_0669
  1614 17EB			l_0637
  1615
  1616 				; optimize OK (main.pas), line = 54
  1617
  1618 17EB AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1619 17F5 A0 04			ldy #PLY.DIR-DATAORIGIN
  1620 17F7 B1 12			lda (:bp2),y
  1621 17F9 29 0A			and #$0A
  1622 17FB F0 0A			jeq l_068F
  1623 17FD A5 5A			lda NEWDIR
  1624 17FF 29 05			and #$05
  1625 1801 F0 04			jeq l_068F
  1626 1803 A9 7D			lda #$7D
  1627 1805 85 58			sta T0B
  1628 1807			l_068F
  1629
  1630 				; optimize OK (main.pas), line = 55
  1631
  1632 1807 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1633 1811 A0 04			ldy #PLY.DIR-DATAORIGIN
  1634 1813 B1 12			lda (:bp2),y
  1635 1815 29 09			and #$09
  1636 1817 F0 0A			jeq l_06BC
  1637 1819 A5 5A			lda NEWDIR
  1638 181B 29 06			and #$06
  1639 181D F0 04			jeq l_06BC
  1640 181F A9 6E			lda #$6E
  1641 1821 85 58			sta T0B
  1642 1823			l_06BC
  1643
  1644 				; optimize OK (main.pas), line = 56
  1645
  1646 1823 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1647 182D A0 04			ldy #PLY.DIR-DATAORIGIN
  1648 182F B1 12			lda (:bp2),y
  1649 1831 29 06			and #$06
  1650 1833 F0 0A			jeq l_06E9
  1651 1835 A5 5A			lda NEWDIR
  1652 1837 29 09			and #$09
  1653 1839 F0 04			jeq l_06E9
  1654 183B A9 6D			lda #$6D
  1655 183D 85 58			sta T0B
  1656 183F			l_06E9
  1657
  1658 				; optimize OK (main.pas), line = 57
  1659
  1660 183F AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1661 1849 A0 04			ldy #PLY.DIR-DATAORIGIN
  1662 184B B1 12			lda (:bp2),y
  1663 184D 29 05			and #$05
  1664 184F F0 0A			jeq l_0716
  1665 1851 A5 5A			lda NEWDIR
  1666 1853 29 0A			and #$0A
  1667 1855 F0 04			jeq l_0716
  1668 1857 A9 70			lda #$70
  1669 1859 85 58			sta T0B
  1670 185B			l_0716
  1671 185B			l_0669
  1672
  1673 				; optimize OK (main.pas), line = 59
  1674
  1675 185B AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1676 1865 A0 00			ldy #PLY.X-DATAORIGIN
  1677 1867 B1 12			lda (:bp2),y
  1678 1869 8D 85 1A			sta PUTCHAR.X
  1679 186C A0 01			ldy #PLY.Y-DATAORIGIN
  1680 186E B1 12			lda (:bp2),y
  1681 1870 8D 86 1A			sta PUTCHAR.Y
  1682 1873 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1683 1875 B1 12			lda (:bp2),y
  1684 1877 8D 88 1A			sta PUTCHAR.C
  1685 187A A5 58			lda T0B
  1686 187C 8D 87 1A			sta PUTCHAR.V
  1687 187F 20 71 11			jsr PUTCHAR
  1688
  1689 				; optimize OK (main.pas), line = 61
  1690
  1691 1882 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1692 188C A0 04			ldy #PLY.DIR-DATAORIGIN
  1693 188E A5 5A			lda NEWDIR
  1694 1890 91 12			sta (:bp2),y
  1695
  1696 				; optimize OK (main.pas), line = 63
  1697
  1698 1892 A5 5A			lda NEWDIR
  1699 1894 8D 9B 1A			sta @CASETMP_0008
  1700 1897 C9 01			cmp #$01
  1701 1899 D0 16			jne l_073B
  1702 189B			@
  1703
  1704 				; optimize OK (main.pas), line = 64
  1705
  1706 189B AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1707 18A5 A0 01			ldy #PLY.Y-DATAORIGIN
  1708 18A7 B1 12			lda (:bp2),y
  1709 18A9 38 E9 01			sub #$01
  1710 18AC 91 12			sta (:bp2),y
  1711
  1712 18AE 4C FC 18			jmp a_0008
  1713 18B1			l_073B
  1714 18B1 C9 02			cmp #$02
  1715 18B3 D0 16			jne l_0745
  1716 18B5			@
  1717
  1718 				; optimize OK (main.pas), line = 65
  1719
  1720 18B5 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1721 18BF A0 01			ldy #PLY.Y-DATAORIGIN
  1722 18C1 B1 12			lda (:bp2),y
  1723 18C3 18 69 01			add #$01
  1724 18C6 91 12			sta (:bp2),y
  1725
  1726 18C8 4C FC 18			jmp a_0008
  1727 18CB			l_0745
  1728 18CB C9 04			cmp #$04
  1729 18CD D0 16			jne l_074F
  1730 18CF			@
  1731
  1732 				; optimize OK (main.pas), line = 66
  1733
  1734 18CF AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1735 18D9 A0 00			ldy #PLY.X-DATAORIGIN
  1736 18DB B1 12			lda (:bp2),y
  1737 18DD 38 E9 01			sub #$01
  1738 18E0 91 12			sta (:bp2),y
  1739
  1740 18E2 4C FC 18			jmp a_0008
  1741 18E5			l_074F
  1742 18E5 C9 08			cmp #$08
  1743 18E7 D0 13			jne l_0759
  1744 18E9			@
  1745
  1746 				; optimize OK (main.pas), line = 67
  1747
  1748 18E9 AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1749 18F3 A0 00			ldy #PLY.X-DATAORIGIN
  1750 18F5 B1 12			lda (:bp2),y
  1751 18F7 18 69 01			add #$01
  1752 18FA 91 12			sta (:bp2),y
  1753
  1754 18FC			l_0759
  1755 18FC			a_0008
  1756
  1757 				; optimize OK (main.pas), line = 70
  1758
  1759 18FC AC 47 1A 84 12 AC + 	mwy PLY :bp2
  1760 1906 A0 00			ldy #PLY.X-DATAORIGIN
  1761 1908 B1 12			lda (:bp2),y
  1762 190A 8D 85 1A			sta PUTCHAR.X
  1763 190D A0 01			ldy #PLY.Y-DATAORIGIN
  1764 190F B1 12			lda (:bp2),y
  1765 1911 8D 86 1A			sta PUTCHAR.Y
  1766 1914 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1767 1916 B1 12			lda (:bp2),y
  1768 1918 8D 87 1A			sta PUTCHAR.V
  1769 191B A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1770 191D B1 12			lda (:bp2),y
  1771 191F 8D 88 1A			sta PUTCHAR.C
  1772 1922 20 71 11			jsr PUTCHAR
  1773 1925			l_05F1
  1774 1925			l_05B6
  1775
  1776 				; ------------------------------------------------------------
  1777
  1778 = 1A98			P	= DATAORIGIN+$0044
  1779 = 1A9A			@CASETMP_0007	= DATAORIGIN+$0046
  1780 = 1A9B			@CASETMP_0008	= DATAORIGIN+$0047
  1781
  1782 = 1A98			@VarData	= P
  1783 = 0004			@VarDataSize	= 4
  1784
  1785 1925			@exit
  1786 					.ifdef @new
  1787 					lda <@VarData
  1788 					sta :ztmp
  1789 					lda >@VarData
  1790 					ldy #@VarDataSize-1
  1791 					jmp @FreeMem
  1792 					els
  1793 1925 60				rts						; ret
  1794 					eif
  1795 				.endl
  1796
  1797 1926			.local	STARTSCREEN					; PROCEDURE
  1798
  1799 				; --- RepeatUntilProlog
  1800 1926			l_0776
  1801
  1802 				; optimize OK (main.pas), line = 82
  1803
  1804 1926 A9 02			lda #$02
  1805 1928 8D 08 FF			sta JOY
  1806 192B A9 FF			lda #$FF
  1807 192D 8D 30 FD			sta KEY_PIO
  1808 1930 AD 08 FF			lda JOY
  1809 1933 49 FF			eor #$FF
  1810 1935 85 58			sta T0B
  1811
  1812 				; optimize OK (main.pas), line = 83
  1813
  1814 1937 C9 40			cmp #$40
  1815 1939 D0 EB			jne l_0776
  1816 193B			@exit
  1817 					.ifdef @new
  1818 					lda <@VarData
  1819 					sta :ztmp
  1820 					lda >@VarData
  1821 					ldy #@VarDataSize-1
  1822 					jmp @FreeMem
  1823 					els
  1824 193B 60				rts						; ret
  1825 					eif
  1826 				.endl
  1827
  1828 193C			.local	MAINLOOP					; PROCEDURE
  1829
  1830 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 90
  1831
  1832 193C 20 BF 12			jsr INITPLAYFIELD
  1833
  1834 				; optimize FAIL ('STARTSCREEN', main.pas), line = 91
  1835
  1836 193F 20 26 19			jsr STARTSCREEN
  1837
  1838 				; optimize OK (main.pas), line = 93
  1839
  1840 1942 A9 FF			lda #$FF
  1841 1944 85 59			sta ALIVE
  1842
  1843 				; optimize OK (main.pas), line = 94
  1844
  1845 1946 AD 6C 1A			lda PLAYER1.ISDEAD
  1846 1949 D0 02			jne l_07AE
  1847 194B E6 59			inc ALIVE
  1848 194D			l_07AE
  1849
  1850 				; optimize OK (main.pas), line = 95
  1851
  1852 194D AD 74 1A			lda PLAYER2.ISDEAD
  1853 1950 D0 02			jne l_07C4
  1854 1952 E6 59			inc ALIVE
  1855 1954			l_07C4
  1856
  1857 				; optimize OK (main.pas), line = 96
  1858
  1859 1954 AD 7C 1A			lda PLAYER3.ISDEAD
  1860 1957 D0 02			jne l_07DA
  1861 1959 E6 59			inc ALIVE
  1862 195B			l_07DA
  1863
  1864 				; optimize OK (main.pas), line = 97
  1865
  1866 195B AD 84 1A			lda PLAYER4.ISDEAD
  1867 195E D0 02			jne l_07F0
  1868 1960 E6 59			inc ALIVE
  1869 1962			l_07F0
  1870
  1871 				; --- RepeatUntilProlog
  1872 1962			l_07F8
  1873
  1874 				; optimize OK (main.pas), line = 100
  1875
  1876 1962 A9 03			lda #$03
  1877 1964 8D 60 1A			sta SYSTEM.PAUSE_006B.N
  1878 1967 A9 00			lda #$00
  1879 1969 8D 61 1A			sta SYSTEM.PAUSE_006B.N+1
  1880 196C 20 23 11			jsr SYSTEM.PAUSE_006B
  1881
  1882 				; optimize OK (main.pas), line = 101
  1883
  1884 196F AD 4B 1A			lda PLAYER1
  1885 1972 8D 98 1A			sta PLAYERMOVE.P
  1886 1975 AD 4C 1A			lda PLAYER1+1
  1887 1978 8D 99 1A			sta PLAYERMOVE.P+1
  1888 197B 20 2C 17			jsr PLAYERMOVE
  1889 197E AD 4D 1A			lda PLAYER2
  1890 1981 8D 98 1A			sta PLAYERMOVE.P
  1891 1984 AD 4E 1A			lda PLAYER2+1
  1892 1987 8D 99 1A			sta PLAYERMOVE.P+1
  1893 198A 20 2C 17			jsr PLAYERMOVE
  1894
  1895 				; optimize OK (main.pas), line = 102
  1896
  1897 198D AD 4F 1A			lda PLAYER3
  1898 1990 8D 98 1A			sta PLAYERMOVE.P
  1899 1993 AD 50 1A			lda PLAYER3+1
  1900 1996 8D 99 1A			sta PLAYERMOVE.P+1
  1901 1999 20 2C 17			jsr PLAYERMOVE
  1902 199C AD 51 1A			lda PLAYER4
  1903 199F 8D 98 1A			sta PLAYERMOVE.P
  1904 19A2 AD 52 1A			lda PLAYER4+1
  1905 19A5 8D 99 1A			sta PLAYERMOVE.P+1
  1906 19A8 20 2C 17			jsr PLAYERMOVE
  1907
  1908 				; optimize OK (main.pas), line = 103
  1909
  1910 19AB A5 59			lda ALIVE
  1911 19AD F0 04			jeq l_07F8x
  1912 19AF C9 FF			cmp #$FF
  1913 19B1 D0 AF			jne l_07F8
  1914 19B3			l_07F8x
  1915
  1916 				; optimize OK (main.pas), line = 105
  1917
  1918 19B3 AD 6C 1A			lda PLAYER1.ISDEAD
  1919 19B6 D0 03			jne l_082E
  1920 19B8 EE 6B 1A			inc PLAYER1.SCORE
  1921 19BB			l_082E
  1922
  1923 				; optimize OK (main.pas), line = 106
  1924
  1925 19BB AD 74 1A			lda PLAYER2.ISDEAD
  1926 19BE D0 03			jne l_0844
  1927 19C0 EE 73 1A			inc PLAYER2.SCORE
  1928 19C3			l_0844
  1929
  1930 				; optimize OK (main.pas), line = 107
  1931
  1932 19C3 AD 7C 1A			lda PLAYER3.ISDEAD
  1933 19C6 D0 03			jne l_085A
  1934 19C8 EE 7B 1A			inc PLAYER3.SCORE
  1935 19CB			l_085A
  1936
  1937 				; optimize OK (main.pas), line = 108
  1938
  1939 19CB AD 84 1A			lda PLAYER4.ISDEAD
  1940 19CE D0 03			jne l_0870
  1941 19D0 EE 83 1A			inc PLAYER4.SCORE
  1942 19D3			l_0870
  1943
  1944 				; optimize OK (main.pas), line = 110
  1945
  1946 19D3 A9 64			lda #$64
  1947 19D5 8D 60 1A			sta SYSTEM.PAUSE_006B.N
  1948 19D8 A9 00			lda #$00
  1949 19DA 8D 61 1A			sta SYSTEM.PAUSE_006B.N+1
  1950 19DD 20 23 11			jsr SYSTEM.PAUSE_006B
  1951 19E0			@exit
  1952 					.ifdef @new
  1953 					lda <@VarData
  1954 					sta :ztmp
  1955 					lda >@VarData
  1956 					ldy #@VarDataSize-1
  1957 					jmp @FreeMem
  1958 					els
  1959 19E0 60				rts						; ret
  1960 					eif
  1961 				.endl
  1962 19E1			l_0007
  1963
  1964 				; --- RepeatUntilProlog
  1965 19E1			l_087B
  1966
  1967 				; optimize OK (main.pas), line = 117
  1968
  1969 19E1 A9 30			lda #$30
  1970 19E3 8D 6B 1A			sta PLAYER1.SCORE
  1971 19E6 8D 73 1A			sta PLAYER2.SCORE
  1972
  1973 				; optimize OK (main.pas), line = 118
  1974
  1975 19E9 8D 7B 1A			sta PLAYER3.SCORE
  1976 19EC 8D 83 1A			sta PLAYER4.SCORE
  1977
  1978 				; optimize OK (main.pas), line = 120
  1979
  1980 19EF A9 00			lda #$00
  1981 19F1 8D 64 1A			sta GAMEOVER
  1982
  1983 				; --- RepeatUntilProlog
  1984 19F4			l_0890
  1985
  1986 				; optimize FAIL ('MAINLOOP', main.pas), line = 122
  1987
  1988 19F4 20 3C 19			jsr MAINLOOP
  1989
  1990 				; optimize OK (main.pas), line = 123
  1991
  1992 19F7 AD 6B 1A			lda PLAYER1.SCORE
  1993 19FA C9 39			cmp #$39
  1994 19FC D0 05			jne l_08A3
  1995 19FE A9 01			lda #$01
  1996 1A00 8D 64 1A			sta GAMEOVER
  1997 1A03			l_08A3
  1998
  1999 				; optimize OK (main.pas), line = 124
  2000
  2001 1A03 AD 73 1A			lda PLAYER2.SCORE
  2002 1A06 C9 39			cmp #$39
  2003 1A08 D0 05			jne l_08BC
  2004 1A0A A9 01			lda #$01
  2005 1A0C 8D 64 1A			sta GAMEOVER
  2006 1A0F			l_08BC
  2007
  2008 				; optimize OK (main.pas), line = 125
  2009
  2010 1A0F AD 7B 1A			lda PLAYER3.SCORE
  2011 1A12 C9 39			cmp #$39
  2012 1A14 D0 05			jne l_08D5
  2013 1A16 A9 01			lda #$01
  2014 1A18 8D 64 1A			sta GAMEOVER
  2015 1A1B			l_08D5
  2016
  2017 				; optimize OK (main.pas), line = 126
  2018
  2019 1A1B AD 83 1A			lda PLAYER4.SCORE
  2020 1A1E C9 39			cmp #$39
  2021 1A20 D0 05			jne l_08EE
  2022 1A22 A9 01			lda #$01
  2023 1A24 8D 64 1A			sta GAMEOVER
  2024 1A27			l_08EE
  2025
  2026 				; optimize OK (main.pas), line = 127
  2027
  2028 1A27 AD 64 1A			lda GAMEOVER
  2029 1A2A F0 C8			jeq l_0890
  2030
  2031 				; optimize FAIL ('SHOWSCORE', main.pas), line = 128
  2032
  2033 1A2C 20 9C 11			jsr SHOWSCORE
  2034
  2035 				; optimize OK (main.pas), line = 130
  2036
  2037 1A2F A9 C8			lda #$C8
  2038 1A31 8D 60 1A			sta SYSTEM.PAUSE_006B.N
  2039 1A34 A9 00			lda #$00
  2040 1A36 8D 61 1A			sta SYSTEM.PAUSE_006B.N+1
  2041 1A39 20 23 11			jsr SYSTEM.PAUSE_006B
  2042
  2043 				; optimize OK (main.pas), line = 131
  2044
  2045 1A3C 4C E1 19			jmp l_087B
  2046
  2047 				; ------------------------------------------------------------
  2048
  2049 = 0800			ATTRIBUTE_ADDR	= $0800
  2050 = 0C00			SCREEN_ADDR	= $0C00
  2051 = 0020			EMPTY	= $20
  2052 = 00A0			WALL	= $A0
  2053 = 0041			WALL_COLOUR	= $41
  2054 = 0030			ZERO	= $30
  2055 = 0056			OBSTACLE	= $56
  2056 = 0035			OBST_COLOUR	= $35
  2057 = 0051			PLY_HEAD	= $51
  2058 = 0057			PLY_CRASH	= $57
  2059 = 002A			PLY_CRASH_1	= $2A
  2060 = 0042			PLY_TAIL_UD	= $42
  2061 = 0040			PLY_TAIL_LR	= $40
  2062 = 007D			PLY_TAIL_RD	= $7D
  2063 = 006E			PLY_TAIL_RU	= $6E
  2064 = 006D			PLY_TAIL_LD	= $6D
  2065 = 0070			PLY_TAIL_LU	= $70
  2066 = 005F			PLY1_COLOUR	= $5F
  2067 = 005D			PLY2_COLOUR	= $5D
  2068 = 0071			PLY3_COLOUR	= $71
  2069 = 0055			PLY4_COLOUR	= $55
  2070 = 0000			PLY_CTRL	= $00
  2071 = 0001			AI_STRAIGHT	= $01
  2072 = 0002			AI_BULLY	= $02
  2073 = 0003			AI_MIRROR	= $03
  2074 = 0001			JOY_UP	= $01
  2075 = 0002			JOY_DOWN	= $02
  2076 = 0004			JOY_LEFT	= $04
  2077 = 0008			JOY_RIGHT	= $08
  2078 = 0040			JOY_FIRE	= $40
  2079 = 0002			JOY_SELECT_1	= $02
  2080 = 0004			JOY_SELECT_2	= $04
  2081 = 000A			LOOK_AHEAD	= $0A
  2082 = 100E			adr.MUL40	= CODEORIGIN+$0000
  2083 1A3F			.var MUL40	= adr.MUL40 .word
  2084 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  2085 1A3F			.var DIRECTION	= adr.DIRECTION .word
  2086 = FD30			KEY_PIO	= $FD30
  2087 = FF08			JOY	= $FF08
  2088 = FF15			BORDERCOLOR	= $FF15
  2089 = FF19			BGCOLOR	= $FF19
  2090 = 0058			T0B	= $58
  2091 = 0059			ALIVE	= $59
  2092 = 005A			NEWDIR	= $5A
  2093 = 005B			AVAILDIR	= $5B
  2094 = 005C			T0W	= $5C
  2095 = 005E			adr.PLY	= $5E
  2096 1A3F			.var PLY	= adr.PLY .word
  2097 = 1A54			PLY.X	= DATAORIGIN+$0000
  2098 = 1A55			PLY.Y	= DATAORIGIN+$0001
  2099 = 1A56			PLY.HEAD	= DATAORIGIN+$0002
  2100 = 1A57			PLY.COLOUR	= DATAORIGIN+$0003
  2101 = 1A58			PLY.DIR	= DATAORIGIN+$0004
  2102 = 1A59			PLY.BRAIN	= DATAORIGIN+$0005
  2103 = 1A5A			PLY.SCORE	= DATAORIGIN+$0006
  2104 = 1A5B			PLY.ISDEAD	= DATAORIGIN+$0007
  2105 = 0060			adr.TMPPLY	= $60
  2106 1A3F			.var TMPPLY	= adr.TMPPLY .word
  2107 = 1A54			TMPPLY.X	= DATAORIGIN+$0000
  2108 = 1A55			TMPPLY.Y	= DATAORIGIN+$0001
  2109 = 1A56			TMPPLY.HEAD	= DATAORIGIN+$0002
  2110 = 1A57			TMPPLY.COLOUR	= DATAORIGIN+$0003
  2111 = 1A58			TMPPLY.DIR	= DATAORIGIN+$0004
  2112 = 1A59			TMPPLY.BRAIN	= DATAORIGIN+$0005
  2113 = 1A5A			TMPPLY.SCORE	= DATAORIGIN+$0006
  2114 = 1A5B			TMPPLY.ISDEAD	= DATAORIGIN+$0007
  2115 = 1A64			GAMEOVER	= DATAORIGIN+$0010
  2116 = 1A65			adr.PLAYER1	= [DATAORIGIN+$0011] .array [6]
  2117 1A3F			.var PLAYER1	= adr.PLAYER1 .word
  2118 = 1A65			PLAYER1.X	= DATAORIGIN+$0011
  2119 = 1A66			PLAYER1.Y	= DATAORIGIN+$0012
  2120 = 1A67			PLAYER1.HEAD	= DATAORIGIN+$0013
  2121 = 1A68			PLAYER1.COLOUR	= DATAORIGIN+$0014
  2122 = 1A69			PLAYER1.DIR	= DATAORIGIN+$0015
  2123 = 1A6A			PLAYER1.BRAIN	= DATAORIGIN+$0016
  2124 = 1A6B			PLAYER1.SCORE	= DATAORIGIN+$0017
  2125 = 1A6C			PLAYER1.ISDEAD	= DATAORIGIN+$0018
  2126 = 1A6D			adr.PLAYER2	= [DATAORIGIN+$0019] .array [6]
  2127 1A3F			.var PLAYER2	= adr.PLAYER2 .word
  2128 = 1A6D			PLAYER2.X	= DATAORIGIN+$0019
  2129 = 1A6E			PLAYER2.Y	= DATAORIGIN+$001A
  2130 = 1A6F			PLAYER2.HEAD	= DATAORIGIN+$001B
  2131 = 1A70			PLAYER2.COLOUR	= DATAORIGIN+$001C
  2132 = 1A71			PLAYER2.DIR	= DATAORIGIN+$001D
  2133 = 1A72			PLAYER2.BRAIN	= DATAORIGIN+$001E
  2134 = 1A73			PLAYER2.SCORE	= DATAORIGIN+$001F
  2135 = 1A74			PLAYER2.ISDEAD	= DATAORIGIN+$0020
  2136 = 1A75			adr.PLAYER3	= [DATAORIGIN+$0021] .array [6]
  2137 1A3F			.var PLAYER3	= adr.PLAYER3 .word
  2138 = 1A75			PLAYER3.X	= DATAORIGIN+$0021
  2139 = 1A76			PLAYER3.Y	= DATAORIGIN+$0022
  2140 = 1A77			PLAYER3.HEAD	= DATAORIGIN+$0023
  2141 = 1A78			PLAYER3.COLOUR	= DATAORIGIN+$0024
  2142 = 1A79			PLAYER3.DIR	= DATAORIGIN+$0025
  2143 = 1A7A			PLAYER3.BRAIN	= DATAORIGIN+$0026
  2144 = 1A7B			PLAYER3.SCORE	= DATAORIGIN+$0027
  2145 = 1A7C			PLAYER3.ISDEAD	= DATAORIGIN+$0028
  2146 = 1A7D			adr.PLAYER4	= [DATAORIGIN+$0029] .array [6]
  2147 1A3F			.var PLAYER4	= adr.PLAYER4 .word
  2148 = 1A7D			PLAYER4.X	= DATAORIGIN+$0029
  2149 = 1A7E			PLAYER4.Y	= DATAORIGIN+$002A
  2150 = 1A7F			PLAYER4.HEAD	= DATAORIGIN+$002B
  2151 = 1A80			PLAYER4.COLOUR	= DATAORIGIN+$002C
  2152 = 1A81			PLAYER4.DIR	= DATAORIGIN+$002D
  2153 = 1A82			PLAYER4.BRAIN	= DATAORIGIN+$002E
  2154 = 1A83			PLAYER4.SCORE	= DATAORIGIN+$002F
  2155 = 1A84			PLAYER4.ISDEAD	= DATAORIGIN+$0030
  2156 1A3F			@exit
  2157
  2158 1A3F A2 00		@halt	ldx #$00
  2159 1A41 9A				txs
  2160
  2161 1A42 60				rts
  2162
  2163 				; ------------------------------------------------------------
  2164
  2165 				; ------------------------------------------------------------
  2166
  2167 1A43			.local	@DEFINES
  2168 1A43			C4P
  2169 				.endl
  2170
  2171 1A43			.local	@RESOURCE
  2172 				.endl
  2173
  2174 = 1A43 0E 10		MUL40
  2174 = 1A45 40 10		DIRECTION
  2174 = 1A47 5E 00		PLY
  2174 = 1A49 60 00		TMPPLY
  2174 = 1A4B 65 1A		PLAYER1
  2174 = 1A4D 6D 1A		PLAYER2
  2174 = 1A4F 75 1A		PLAYER3
  2174 = 1A51 7D 1A		PLAYER4
  2174 				.endl							; MAIN
  2175
  2176 				; ------------------------------------------------------------
  2177 				; ------------------------------------------------------------
  2178
  2179 				.macro	UNITINITIALIZATION
  2180 				
  2181 					.ifdef MAIN.SYSTEM.@UnitInit
  2182 					jsr MAIN.SYSTEM.@UnitInit
  2183 					eif
  2184 				.endm
  2185
  2186 				; ------------------------------------------------------------
  2187
  2188 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2189 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2189 				SYSTEM: $10D5..$1170
  2190 					eif
  2191
  2192 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2192 				CODE: $100E..$1A42
  2193
  2194 				; ------------------------------------------------------------
  2195
  2196 1A53				.align $04
  2197
  2198 1A54			DATAORIGIN
  2199 1A54 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  2200
  2201 = 0006			VARINITSIZE	= *-DATAORIGIN
  2202 = 0048			VARDATASIZE	= 72
  2203
  2204 = 1A9C			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2205
  2206 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2206 				DATA: $1A54..$1A9C
  2207
  2208 				; ------------------------------------------------------------
  2209
  2210 				.macro	STATICDATA
  2211 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  2212 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  2213 				.by  $C0 $03 $01 $02 $04 $08
  2214 				.endm
  2215
  2216 					end
