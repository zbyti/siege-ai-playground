mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E 04 25			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0056			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 2522			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 AA			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 78 24 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 78 85 02 A9 25 + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 91 24			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 27 25		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 27 25 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 2527			RESULT	= DATAORIGIN+$000B
   182
   183 = 2527			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 034  ---------------------
   304
   305 1123 A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   306
   307 1129			@exit
   308 					.ifdef @new
   309 					lda <@VarData
   310 					sta :ztmp
   311 					lda >@VarData
   312 					ldy #@VarDataSize-1
   313 					jmp @FreeMem
   314 					els
   315 1129 60				rts						; ret
   316 					eif
   317 				.endl
   318
   319 112A			.local	PAUSE_006C					; PROCEDURE | ASSEMBLER | OVERLOAD
   320
   321 				; ---------------------  ASM Block 035  ---------------------
   322
   323
   324 112A AD 28 25		loop  lda n
   325 112D 0D 29 25		  ora n+1
   326 1130 F0 14		  beq stop
   327
   328 1132 A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   329
   330 1138 AD 28 25 D0 03 CE +   dew n
   331
   332 1143 4C 2A 11		  jmp loop
   333 1146			stop
   334
   335
   336 				; ------------------------------------------------------------
   337
   338 = 2528			N	= DATAORIGIN+$000C
   339
   340 = 2528			@VarData	= N
   341 = 0002			@VarDataSize	= 2
   342
   343 1146			@exit
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					els
   351 1146 60				rts						; ret
   352 					eif
   353 				.endl
   354
   355 1147			.local	RANDOM_006D					; FUNCTION | ASSEMBLER | OVERLOAD
   356 1147 8D 2A 25			sta RANGE
   357
   358 				; ---------------------  ASM Block 039  ---------------------
   359
   360
   361 114A AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   362 114D 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   363 1150 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   364 1153 6D 1E FF		  adc ted_hcount    //Horizontal counter
   365 1156 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   366 1159 4D 1E FF		  eor ted_hcount    //Horizontal counter
   367 115C A8			  tay
   368
   369 115D AD 2A 25		  lda range
   370 1160 F0 08		  beq stop
   371
   372 1162 85 0C		  sta ecx
   373 1164 84 04		  sty eax
   374
   375 1166 20 A3 10		  jsr imulCL
   376 1169 A8			  tay
   377
   378 116A 8C 2B 25		stop  sty Result
   379
   380 116D			@exit
   381
   382 				; ------------------------------------------------------------
   383
   384 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   385 				; as Pointer
   386
   387 116D E8				inx
   388 116E AD 2B 25 95 18		mva RESULT :STACKORIGIN,x
   389
   390 					.ifdef @new
   391 					lda <@VarData
   392 					sta :ztmp
   393 					lda >@VarData
   394 					ldy #@VarDataSize-1
   395 					jmp @FreeMem
   396 					eif
   397
   398 				; ------------------------------------------------------------
   399
   400 = 252A			RANGE	= DATAORIGIN+$000E
   401 = 252B			RESULT	= DATAORIGIN+$000F
   402
   403 = 252A			@VarData	= RANGE
   404 = 0002			@VarDataSize	= 2
   405
   406 1173 60				rts						; ret
   407 				.endl
   408
   409 				; ------------------------------------------------------------
   410
   411 = 0101			__PORTB_BANKS	= $0101
   412 = 0648			M_PI_2	= $0648
   413 = 0192			D_PI_2	= $0192
   414 = 0004			D_PI_180	= $04
   415 = 0000			MGTIA	= $00
   416 = 0080			MVBXE	= $80
   417 = 0000			VBXE_XDLADR	= $00
   418 = 0100			VBXE_BCBADR	= $0100
   419 = 1000			VBXE_MAPADR	= $1000
   420 = 5000			VBXE_OVRADR	= $5000
   421 = B000			VBXE_WINDOW	= $B000
   422 = 0000			IDLI	= $00
   423 = 0001			IVBL	= $01
   424 = 00FE			CH_DELCHR	= $FE
   425 = 009B			CH_ENTER	= $9B
   426 = 001B			CH_ESC	= $1B
   427 = 001C			CH_CURS_UP	= $1C
   428 = 001D			CH_CURS_DOWN	= $1D
   429 = 001E			CH_CURS_LEFT	= $1E
   430 = 001F			CH_CURS_RIGHT	= $1F
   431 = 007F			CH_TAB	= $7F
   432 = 009B			CH_EOL	= $9B
   433 = 007D			CH_CLR	= $7D
   434 = 00FD			CH_BELL	= $FD
   435 = 007E			CH_DEL	= $7E
   436 = 009C			CH_DELLINE	= $9C
   437 = 009D			CH_INSLINE	= $9D
   438 = 0000			COLOR_BLACK	= $00
   439 = 000E			COLOR_WHITE	= $0E
   440 = 0032			COLOR_RED	= $32
   441 = 0096			COLOR_CYAN	= $96
   442 = 0068			COLOR_VIOLET	= $68
   443 = 00C4			COLOR_GREEN	= $C4
   444 = 0074			COLOR_BLUE	= $74
   445 = 00EE			COLOR_YELLOW	= $EE
   446 = 0028			COLOR_ORANGE	= $28
   447 = 00E4			COLOR_BROWN	= $E4
   448 = 003C			COLOR_LIGHTRED	= $3C
   449 = 0004			COLOR_GRAY1	= $04
   450 = 0006			COLOR_GRAY2	= $06
   451 = 000A			COLOR_GRAY3	= $0A
   452 = 00CC			COLOR_LIGHTGREEN	= $CC
   453 = 007C			COLOR_LIGHTBLUE	= $7C
   454 = 0004			FMOPENREAD	= $04
   455 = 0008			FMOPENWRITE	= $08
   456 = 0009			FMOPENAPPEND	= $09
   457 = 000C			FMOPENREADWRITE	= $0C
   458 = 251C			SCREENWIDTH	= DATAORIGIN+$0000
   459 = 251E			SCREENHEIGHT	= DATAORIGIN+$0002
   460 = 2520			DATESEPARATOR	= DATAORIGIN+$0004
   461 = D014			TVSYSTEM	= $D014
   462 = D20A			RND	= $D20A
   463 = 02C0			adr.PALETTE	= $02C0
   464 1174			.var PALETTE	= adr.PALETTE .word
   465 = D012			adr.HPALETTE	= $D012
   466 1174			.var HPALETTE	= adr.HPALETTE .word
   467 = 2521			FILEMODE	= DATAORIGIN+$0005
   468 = 2522			GRAPHMODE	= DATAORIGIN+$0006
   469 = 2523			IORESULT	= DATAORIGIN+$0007
   470 = 2524			EOLN	= DATAORIGIN+$0008
   471 = 2525			RNDSEED	= DATAORIGIN+$0009
   472
   473 = 1174 C0 02		PALETTE
   473 = 1176 12 D0		HPALETTE
   473 				.endl							; UNIT SYSTEM
   474
   475 1178			.local	PUTCHAR						; PROCEDURE
   476
   477 				; optimize OK (tools.inc), line = 5
   478
   479 1178 AD 5F 25			lda Y
   480 117B 0A				asl @
   481 117C A8				tay
   482 117D B9 0E 10			lda adr.MUL40,y
   483 1180 18 6D 5E 25			add X
   484 1184 85 5D			sta T0W
   485 1186 B9 0F 10			lda adr.MUL40+1,y
   486 1189 69 08			adc #$08
   487 118B 85 5E			sta T0W+1
   488
   489 				; optimize OK (tools.inc), line = 6
   490
   491 118D 85 11			sta :bp+1
   492 118F A4 5D			ldy T0W
   493 1191 AD 61 25			lda C
   494 1194 91 10			sta (:bp),y
   495 1196 A5 5E			lda T0W+1
   496 1198 18 69 04			add #$04
   497 119B 85 11			sta :bp+1
   498 119D AD 60 25			lda V
   499 11A0 91 10			sta (:bp),y
   500
   501 				; ------------------------------------------------------------
   502
   503 = 255E			X	= DATAORIGIN+$0042
   504 = 255F			Y	= DATAORIGIN+$0043
   505 = 2560			V	= DATAORIGIN+$0044
   506 = 2561			C	= DATAORIGIN+$0045
   507
   508 = 255E			@VarData	= X
   509 = 0004			@VarDataSize	= 4
   510
   511 11A2			@exit
   512 					.ifdef @new
   513 					lda <@VarData
   514 					sta :ztmp
   515 					lda >@VarData
   516 					ldy #@VarDataSize-1
   517 					jmp @FreeMem
   518 					els
   519 11A2 60				rts						; ret
   520 					eif
   521 				.endl
   522
   523 11A3			.local	SHOWSCORE					; PROCEDURE
   524
   525 				; optimize OK (tools.inc), line = 13
   526
   527 11A3 AD 31 25			lda PLAYER1.COLOUR
   528 11A6 8D 61 25			sta PUTCHAR.C
   529 11A9 AD 34 25			lda PLAYER1.SCORE
   530 11AC 8D 60 25			sta PUTCHAR.V
   531 11AF A9 00			lda #$00
   532 11B1 8D 5F 25			sta PUTCHAR.Y
   533 11B4 A9 1E			lda #$1E
   534 11B6 8D 5E 25			sta PUTCHAR.X
   535 11B9 20 78 11			jsr PUTCHAR
   536
   537 				; optimize OK (tools.inc), line = 14
   538
   539 11BC AD 39 25			lda PLAYER2.COLOUR
   540 11BF 8D 61 25			sta PUTCHAR.C
   541 11C2 AD 3C 25			lda PLAYER2.SCORE
   542 11C5 8D 60 25			sta PUTCHAR.V
   543 11C8 A9 00			lda #$00
   544 11CA 8D 5F 25			sta PUTCHAR.Y
   545 11CD A9 20			lda #$20
   546 11CF 8D 5E 25			sta PUTCHAR.X
   547 11D2 20 78 11			jsr PUTCHAR
   548
   549 				; optimize OK (tools.inc), line = 15
   550
   551 11D5 AD 41 25			lda PLAYER3.COLOUR
   552 11D8 8D 61 25			sta PUTCHAR.C
   553 11DB AD 44 25			lda PLAYER3.SCORE
   554 11DE 8D 60 25			sta PUTCHAR.V
   555 11E1 A9 00			lda #$00
   556 11E3 8D 5F 25			sta PUTCHAR.Y
   557 11E6 A9 22			lda #$22
   558 11E8 8D 5E 25			sta PUTCHAR.X
   559 11EB 20 78 11			jsr PUTCHAR
   560
   561 				; optimize OK (tools.inc), line = 16
   562
   563 11EE AD 49 25			lda PLAYER4.COLOUR
   564 11F1 8D 61 25			sta PUTCHAR.C
   565 11F4 AD 4C 25			lda PLAYER4.SCORE
   566 11F7 8D 60 25			sta PUTCHAR.V
   567 11FA A9 00			lda #$00
   568 11FC 8D 5F 25			sta PUTCHAR.Y
   569 11FF A9 24			lda #$24
   570 1201 8D 5E 25			sta PUTCHAR.X
   571 1204 20 78 11			jsr PUTCHAR
   572 1207			@exit
   573 					.ifdef @new
   574 					lda <@VarData
   575 					sta :ztmp
   576 					lda >@VarData
   577 					ldy #@VarDataSize-1
   578 					jmp @FreeMem
   579 					els
   580 1207 60				rts						; ret
   581 					eif
   582 				.endl
   583
   584 1208			.local	CHECKAVAILDIR					; PROCEDURE
   585
   586 				; optimize OK (tools.inc), line = 23
   587
   588 1208 A9 00			lda #$00
   589 120A 85 5C			sta AVAILDIR
   590
   591 				; optimize OK (tools.inc), line = 24
   592
   593 120C AC 0B 25 84 12 AC + 	mwy PLY :bp2
   594 1216 A0 01			ldy #PLY.Y-DATAORIGIN
   595 1218 B1 12			lda (:bp2),y
   596 121A 0A				asl @
   597 121B A8				tay
   598 121C A9 00			lda #$00
   599 121E 18 79 0E 10			add adr.MUL40,y
   600 1222 85 21			sta :STACKORIGIN+9
   601 1224 A9 0C			lda #$0C
   602 1226 79 0F 10			adc adr.MUL40+1,y
   603 1229 85 31			sta :STACKORIGIN+STACKWIDTH+9
   604 122B A0 00			ldy #PLY.X-DATAORIGIN
   605 122D A5 21			lda :STACKORIGIN+9
   606 122F 18 71 12			add (:bp2),y
   607 1232 85 5D			sta T0W
   608 1234 A5 31			lda :STACKORIGIN+STACKWIDTH+9
   609 1236 69 00			adc #$00
   610 1238 85 5E			sta T0W+1
   611
   612 				; optimize OK (tools.inc), line = 26
   613
   614 123A A5 5D			lda T0W
   615 123C 38 E9 28			sub #$28
   616 123F 85 21			sta :STACKORIGIN+9
   617 1241 A5 5E			lda T0W+1
   618 1243 E9 00			sbc #$00
   619 1245 85 11			sta :bp+1
   620 1247 A4 21			ldy :STACKORIGIN+9
   621 1249 B1 10			lda (:bp),y
   622 124B C9 20			cmp #$20
   623 124D D0 06			jne l_00EF
   624 124F A5 5C			lda AVAILDIR
   625 1251 09 01			ora #$01
   626 1253 85 5C			sta AVAILDIR
   627 1255			l_00EF
   628
   629 				; optimize OK (tools.inc), line = 27
   630
   631 1255 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   632 125D A0 28			ldy #$28
   633 125F B1 12			lda (:bp2),y
   634 1261 C9 20			cmp #$20
   635 1263 D0 06			jne l_0112
   636 1265 A5 5C			lda AVAILDIR
   637 1267 09 02			ora #$02
   638 1269 85 5C			sta AVAILDIR
   639 126B			l_0112
   640
   641 				; optimize OK (tools.inc), line = 28
   642
   643 126B A5 5D			lda T0W
   644 126D 38 E9 01			sub #$01
   645 1270 85 21			sta :STACKORIGIN+9
   646 1272 A5 5E			lda T0W+1
   647 1274 E9 00			sbc #$00
   648 1276 85 11			sta :bp+1
   649 1278 A4 21			ldy :STACKORIGIN+9
   650 127A B1 10			lda (:bp),y
   651 127C C9 20			cmp #$20
   652 127E D0 06			jne l_0135
   653 1280 A5 5C			lda AVAILDIR
   654 1282 09 04			ora #$04
   655 1284 85 5C			sta AVAILDIR
   656 1286			l_0135
   657
   658 				; optimize OK (tools.inc), line = 29
   659
   660 1286 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   661 128E A0 01			ldy #$01
   662 1290 B1 12			lda (:bp2),y
   663 1292 C9 20			cmp #$20
   664 1294 D0 06			jne l_0158
   665 1296 A5 5C			lda AVAILDIR
   666 1298 09 08			ora #$08
   667 129A 85 5C			sta AVAILDIR
   668 129C			l_0158
   669 129C			@exit
   670 					.ifdef @new
   671 					lda <@VarData
   672 					sta :ztmp
   673 					lda >@VarData
   674 					ldy #@VarDataSize-1
   675 					jmp @FreeMem
   676 					els
   677 129C 60				rts						; ret
   678 					eif
   679 				.endl
   680
   681 129D			.local	ANIMATEOBSTACLES				; PROCEDURE
   682
   683 				; optimize FAIL (0, tools.inc), line = 38
   684
   685 129D EE 62 25			inc COUNTER
   686
   687 				; optimize OK (tools.inc), line = 39
   688
   689 12A0 AD 62 25			lda COUNTER
   690 12A3 29 01			and #$01
   691 12A5 F0 08			jeq l_0183
   692 12A7 A9 56			lda #$56
   693 12A9 8D 63 25			sta OBST
   694 12AC 4C B4 12			jmp l_0191
   695 12AF			l_0183
   696 12AF A9 5B			lda #$5B
   697 12B1 8D 63 25			sta OBST
   698 12B4			l_0191
   699
   700 				; optimize OK (tools.inc), line = 40
   701
   702 12B4 A9 07			lda #$07
   703 12B6 85 59			sta I0B
   704
   705 12B8			l_019E
   706 				; --- ForToDoCondition
   707 12B8 A5 59			lda I0B
   708 12BA 0A				asl @
   709 12BB A8				tay
   710 12BC B9 4E 25			lda adr.OBSTACLES,y
   711 12BF 85 21			sta :STACKORIGIN+9
   712 12C1 B9 4F 25			lda adr.OBSTACLES+1,y
   713 12C4 85 11			sta :bp+1
   714 12C6 A4 21			ldy :STACKORIGIN+9
   715 12C8 AD 63 25			lda OBST
   716 12CB 91 10			sta (:bp),y
   717 12CD C6 59			dec I0B
   718 12CF 10 E7			jpl l_019E
   719 12D1			l_01AC
   720
   721 				; ------------------------------------------------------------
   722
   723 = 2562			COUNTER	= DATAORIGIN+$0046
   724 = 2563			OBST	= DATAORIGIN+$0047
   725 = 0000			@FORTMP_019B	= $00
   726
   727 = 2562			@VarData	= COUNTER
   728 = 0002			@VarDataSize	= 2
   729
   730 12D1			@exit
   731 					.ifdef @new
   732 					lda <@VarData
   733 					sta :ztmp
   734 					lda >@VarData
   735 					ldy #@VarDataSize-1
   736 					jmp @FreeMem
   737 					els
   738 12D1 60				rts						; ret
   739 					eif
   740 				.endl
   741
   742 12D2			.local	SAVEOBSTACLES					; PROCEDURE
   743
   744 				; optimize OK (tools.inc), line = 47
   745
   746 12D2 A9 07			lda #$07
   747 12D4 85 59			sta I0B
   748
   749 12D6			l_01C7
   750 				; --- ForToDoCondition
   751
   752 				; optimize OK (tools.inc), line = 48
   753
   754 12D6 A5 59			lda I0B
   755 12D8 0A				asl @
   756 12D9 A8				tay
   757 12DA B9 4F 25			lda adr.OBSTACLES+1,y
   758 12DD C9 00			cmp #$00
   759 12DF D0 05			bne @+
   760 12E1 B9 4E 25			lda adr.OBSTACLES,y
   761 12E4 C9 7E			cmp #$7E
   762 12E6			@
   763 12E6 F0 29			jeq l_01E9
   764
   765 				; optimize OK (tools.inc), line = 49
   766
   767 12E8 B9 4E 25			lda adr.OBSTACLES,y
   768 12EB 85 21			sta :STACKORIGIN+9
   769 12ED B9 4F 25			lda adr.OBSTACLES+1,y
   770 12F0 85 11			sta :bp+1
   771 12F2 A4 21			ldy :STACKORIGIN+9
   772 12F4 A9 56			lda #$56
   773 12F6 91 10			sta (:bp),y
   774
   775 				; optimize OK (tools.inc), line = 50
   776
   777 12F8 A5 59			lda I0B
   778 12FA 0A				asl @
   779 12FB A8				tay
   780 12FC B9 4E 25			lda adr.OBSTACLES,y
   781 12FF 38 E9 00			sub #$00
   782 1302 85 21			sta :STACKORIGIN+9
   783 1304 B9 4F 25			lda adr.OBSTACLES+1,y
   784 1307 E9 04			sbc #$04
   785 1309 85 11			sta :bp+1
   786 130B A4 21			ldy :STACKORIGIN+9
   787 130D A9 35			lda #$35
   788 130F 91 10			sta (:bp),y
   789 1311			l_01E9
   790
   791 				; --- ForToDoEpilog
   792 1311 C6 59			dec I0B
   793 1313 10 C1			jpl l_01C7
   794 1315			l_01D5
   795
   796 				; ------------------------------------------------------------
   797
   798 = 0000			@FORTMP_01C4	= $00
   799 1315			@exit
   800 					.ifdef @new
   801 					lda <@VarData
   802 					sta :ztmp
   803 					lda >@VarData
   804 					ldy #@VarDataSize-1
   805 					jmp @FreeMem
   806 					els
   807 1315 60				rts						; ret
   808 					eif
   809 				.endl
   810
   811 1316			.local	DRAWTAIL					; PROCEDURE
   812
   813 				; optimize OK (tools.inc), line = 59
   814
   815 1316 AC 0B 25 84 12 AC + 	mwy PLY :bp2
   816 1320 A0 04			ldy #PLY.DIR-DATAORIGIN
   817 1322 B1 12			lda (:bp2),y
   818 1324 C5 5B			cmp NEWDIR
   819 1326 D0 14			jne l_021B
   820
   821 				; optimize OK (tools.inc), line = 60
   822
   823 1328 A5 5B			lda NEWDIR
   824 132A 29 0C			and #$0C
   825 132C F0 07			jeq l_0232
   826 132E A9 40			lda #$40
   827 1330 85 58			sta T0B
   828 1332 4C 39 13			jmp l_0240
   829 1335			l_0232
   830 1335 A9 42			lda #$42
   831 1337 85 58			sta T0B
   832 1339			l_0240
   833 1339 4C AC 13			jmp l_024D
   834 133C			l_021B
   835
   836 				; optimize OK (tools.inc), line = 62
   837
   838 133C AC 0B 25 84 12 AC + 	mwy PLY :bp2
   839 1346 A0 04			ldy #PLY.DIR-DATAORIGIN
   840 1348 B1 12			lda (:bp2),y
   841 134A 29 0A			and #$0A
   842 134C F0 0A			jeq l_0273
   843 134E A5 5B			lda NEWDIR
   844 1350 29 05			and #$05
   845 1352 F0 04			jeq l_0273
   846 1354 A9 7D			lda #$7D
   847 1356 85 58			sta T0B
   848 1358			l_0273
   849
   850 				; optimize OK (tools.inc), line = 63
   851
   852 1358 AC 0B 25 84 12 AC + 	mwy PLY :bp2
   853 1362 A0 04			ldy #PLY.DIR-DATAORIGIN
   854 1364 B1 12			lda (:bp2),y
   855 1366 29 09			and #$09
   856 1368 F0 0A			jeq l_02A0
   857 136A A5 5B			lda NEWDIR
   858 136C 29 06			and #$06
   859 136E F0 04			jeq l_02A0
   860 1370 A9 6E			lda #$6E
   861 1372 85 58			sta T0B
   862 1374			l_02A0
   863
   864 				; optimize OK (tools.inc), line = 64
   865
   866 1374 AC 0B 25 84 12 AC + 	mwy PLY :bp2
   867 137E A0 04			ldy #PLY.DIR-DATAORIGIN
   868 1380 B1 12			lda (:bp2),y
   869 1382 29 06			and #$06
   870 1384 F0 0A			jeq l_02CD
   871 1386 A5 5B			lda NEWDIR
   872 1388 29 09			and #$09
   873 138A F0 04			jeq l_02CD
   874 138C A9 6D			lda #$6D
   875 138E 85 58			sta T0B
   876 1390			l_02CD
   877
   878 				; optimize OK (tools.inc), line = 65
   879
   880 1390 AC 0B 25 84 12 AC + 	mwy PLY :bp2
   881 139A A0 04			ldy #PLY.DIR-DATAORIGIN
   882 139C B1 12			lda (:bp2),y
   883 139E 29 05			and #$05
   884 13A0 F0 0A			jeq l_02FA
   885 13A2 A5 5B			lda NEWDIR
   886 13A4 29 0A			and #$0A
   887 13A6 F0 04			jeq l_02FA
   888 13A8 A9 70			lda #$70
   889 13AA 85 58			sta T0B
   890 13AC			l_02FA
   891 13AC			l_024D
   892
   893 				; optimize OK (tools.inc), line = 67
   894
   895 13AC AC 0B 25 84 12 AC + 	mwy PLY :bp2
   896 13B6 A0 00			ldy #PLY.X-DATAORIGIN
   897 13B8 B1 12			lda (:bp2),y
   898 13BA 8D 5E 25			sta PUTCHAR.X
   899 13BD A0 01			ldy #PLY.Y-DATAORIGIN
   900 13BF B1 12			lda (:bp2),y
   901 13C1 8D 5F 25			sta PUTCHAR.Y
   902 13C4 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   903 13C6 B1 12			lda (:bp2),y
   904 13C8 8D 61 25			sta PUTCHAR.C
   905 13CB A5 58			lda T0B
   906 13CD 8D 60 25			sta PUTCHAR.V
   907 13D0 20 78 11			jsr PUTCHAR
   908 13D3			@exit
   909 					.ifdef @new
   910 					lda <@VarData
   911 					sta :ztmp
   912 					lda >@VarData
   913 					ldy #@VarDataSize-1
   914 					jmp @FreeMem
   915 					els
   916 13D3 60				rts						; ret
   917 					eif
   918 				.endl
   919
   920 13D4			.local	CHECKJOYSTATUS					; PROCEDURE
   921
   922 				; optimize OK (tools.inc), line = 74
   923
   924 13D4 A9 02			lda #$02
   925 13D6 8D 08 FF			sta JOY
   926 13D9 A9 FF			lda #$FF
   927 13DB 8D 30 FD			sta KEYSCAN
   928
   929 				; optimize OK (tools.inc), line = 75
   930
   931 13DE AD 08 FF			lda JOY
   932 13E1 49 FF			eor #$FF
   933 13E3 85 63			sta JOYSTATUS
   934 13E5			@exit
   935 					.ifdef @new
   936 					lda <@VarData
   937 					sta :ztmp
   938 					lda >@VarData
   939 					ldy #@VarDataSize-1
   940 					jmp @FreeMem
   941 					els
   942 13E5 60				rts						; ret
   943 					eif
   944 				.endl
   945
   946 13E6			.local	INITPLAYERS					; PROCEDURE
   947
   948 				; optimize OK (init.inc), line = 5
   949
   950 13E6 AD 64 25			lda P
   951 13E9 8D 0B 25			sta PLY
   952 13EC 85 12			sta :bp2
   953 13EE AD 65 25			lda P+1
   954 13F1 8D 0C 25			sta PLY+1
   955 13F4 85 13			sta :bp2+1
   956 				; optimize OK (init.inc), line = 6
   957 13F6 A0 05			ldy #PLY.BRAIN-DATAORIGIN
   958 13F8 AD 69 25			lda BRAIN
   959 13FB 91 12			sta (:bp2),y
   960 13FD A0 00			ldy #PLY.X-DATAORIGIN
   961 13FF AD 66 25			lda X
   962 1402 91 12			sta (:bp2),y
   963 1404 A0 01			ldy #PLY.Y-DATAORIGIN
   964 1406 AD 67 25			lda Y
   965 1409 91 12			sta (:bp2),y
   966 140B A0 04			ldy #PLY.DIR-DATAORIGIN
   967 140D AD 68 25			lda DIR
   968 1410 91 12			sta (:bp2),y
   969
   970 				; optimize OK (init.inc), line = 7
   971
   972 1412 A0 02			ldy #PLY.HEAD-DATAORIGIN
   973 1414 AD 6A 25			lda HEAD
   974 1417 91 12			sta (:bp2),y
   975 1419 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   976 141B AD 6B 25			lda COLOUR
   977 141E 91 12			sta (:bp2),y
   978 1420 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
   979 1422 AD 6C 25			lda ISALIVE
   980 1425 91 12			sta (:bp2),y
   981
   982 				; optimize OK (init.inc), line = 8
   983
   984 1427 AD 6C 25			lda ISALIVE
   985 142A F0 1D			jeq l_0363
   986
   987 				; optimize FAIL (0, init.inc), line = 9
   988
   989 142C E6 5A			inc ALIVE
   990 142E AD 6B 25			lda COLOUR
   991 1431 8D 61 25			sta PUTCHAR.C
   992 1434 AD 6A 25			lda HEAD
   993 1437 8D 60 25			sta PUTCHAR.V
   994 143A AD 67 25			lda Y
   995 143D 8D 5F 25			sta PUTCHAR.Y
   996 1440 AD 66 25			lda X
   997 1443 8D 5E 25			sta PUTCHAR.X
   998 1446 20 78 11			jsr PUTCHAR
   999 1449			l_0363
  1000
  1001 				; ------------------------------------------------------------
  1002
  1003 = 2564			P	= DATAORIGIN+$0048
  1004 = 2566			X	= DATAORIGIN+$004A
  1005 = 2567			Y	= DATAORIGIN+$004B
  1006 = 2568			DIR	= DATAORIGIN+$004C
  1007 = 2569			BRAIN	= DATAORIGIN+$004D
  1008 = 256A			HEAD	= DATAORIGIN+$004E
  1009 = 256B			COLOUR	= DATAORIGIN+$004F
  1010 = 256C			ISALIVE	= DATAORIGIN+$0050
  1011
  1012 = 2564			@VarData	= P
  1013 = 0009			@VarDataSize	= 9
  1014
  1015 1449			@exit
  1016 					.ifdef @new
  1017 					lda <@VarData
  1018 					sta :ztmp
  1019 					lda >@VarData
  1020 					ldy #@VarDataSize-1
  1021 					jmp @FreeMem
  1022 					els
  1023 1449 60				rts						; ret
  1024 					eif
  1025 				.endl
  1026
  1027 144A			.local	INITPLAYFIELD					; PROCEDURE
  1028
  1029 				; optimize OK (init.inc), line = 17
  1030
  1031 144A A9 1F			lda #$1F
  1032 144C 8D 15 FF			sta BACKGROUND
  1033 144F A9 00			lda #$00
  1034 1451 8D 19 FF			sta BOREDER
  1035
  1036 				; optimize OK (init.inc), line = 18
  1037
  1038 1454 A9 20			lda #$20
  1039 1456 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
  1040 1458 A9 C0			lda #$C0
  1041 145A 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
  1042 145C A9 03			lda #$03
  1043 145E 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
  1044 1460 A9 00			lda #$00
  1045 1462 85 08			sta SYSTEM.FILLCHAR_0056.A
  1046 1464 A9 0C			lda #$0C
  1047 1466 85 09			sta SYSTEM.FILLCHAR_0056.A+1
  1048 1468 20 1F 11			jsr SYSTEM.FILLCHAR_0056
  1049
  1050 				; optimize OK (init.inc), line = 20
  1051
  1052 146B A9 27			lda #$27
  1053 146D 85 58			sta T0B
  1054
  1055 146F			l_0390
  1056 				; --- ForToDoCondition
  1057
  1058 				; optimize OK (init.inc), line = 21
  1059
  1060 146F A4 58			ldy T0B
  1061 1471 A9 A0			lda #$A0
  1062 1473 99 00 0C			sta $0C00,y
  1063
  1064 				; optimize OK (init.inc), line = 22
  1065
  1066 1476 99 C0 0F			sta $0FC0,y
  1067
  1068 				; optimize OK (init.inc), line = 23
  1069
  1070 1479 A9 41			lda #$41
  1071 147B 99 00 08			sta $0800,y
  1072
  1073 				; optimize OK (init.inc), line = 24
  1074
  1075 147E 99 C0 0B			sta $0BC0,y
  1076
  1077 				; --- ForToDoEpilog
  1078 1481 C6 58			dec T0B
  1079 1483 10 EA			jpl l_0390
  1080 1485			l_039E
  1081
  1082 				; optimize OK (init.inc), line = 27
  1083
  1084 1485 A9 18			lda #$18
  1085 1487 85 58			sta T0B
  1086
  1087 1489			l_03D0
  1088 				; --- ForToDoCondition
  1089 1489 A5 58			lda T0B
  1090 148B C9 01			cmp #$01
  1091 148D 90 3A			jcc l_03DE
  1092
  1093 				; optimize OK (init.inc), line = 28
  1094
  1095 148F 0A				asl @
  1096 1490 A8				tay
  1097 1491 A9 FF			lda #$FF
  1098 1493 18 79 0E 10			add adr.MUL40,y
  1099 1497 85 12			sta :bp2
  1100 1499 A9 0B			lda #$0B
  1101 149B 79 0F 10			adc adr.MUL40+1,y
  1102 149E 85 13			sta :bp2+1
  1103 14A0 A0 00			ldy #$00
  1104 14A2 A9 A0			lda #$A0
  1105 14A4 91 12			sta (:bp2),y
  1106 14A6 C8				iny
  1107 14A7 91 12			sta (:bp2),y
  1108
  1109 				; optimize OK (init.inc), line = 29
  1110
  1111 14A9 A5 58			lda T0B
  1112 14AB 0A				asl @
  1113 14AC A8				tay
  1114 14AD A9 FF			lda #$FF
  1115 14AF 18 79 0E 10			add adr.MUL40,y
  1116 14B3 85 12			sta :bp2
  1117 14B5 A9 07			lda #$07
  1118 14B7 79 0F 10			adc adr.MUL40+1,y
  1119 14BA 85 13			sta :bp2+1
  1120 14BC A0 00			ldy #$00
  1121 14BE A9 41			lda #$41
  1122 14C0 91 12			sta (:bp2),y
  1123 14C2 C8				iny
  1124 14C3 91 12			sta (:bp2),y
  1125
  1126 				; --- ForToDoEpilog
  1127 14C5 C6 58			dec T0B
  1128 14C7 10 C0			jpl l_03D0
  1129 14C9			l_03DE
  1130
  1131 				; ------------------------------------------------------------
  1132
  1133 = 0000			@FORTMP_038D	= $00
  1134 = 0001			@FORTMP_03CD	= $01
  1135 14C9			@exit
  1136 					.ifdef @new
  1137 					lda <@VarData
  1138 					sta :ztmp
  1139 					lda >@VarData
  1140 					ldy #@VarDataSize-1
  1141 					jmp @FreeMem
  1142 					els
  1143 14C9 60				rts						; ret
  1144 					eif
  1145 				.endl
  1146
  1147 14CA			.local	AISTRAIGHT					; PROCEDURE
  1148
  1149 				; optimize OK (ai.inc), line = 5
  1150
  1151 14CA AC 0B 25 84 12 AC + 	mwy PLY :bp2
  1152 14D4 A0 04			ldy #PLY.DIR-DATAORIGIN
  1153 14D6 B1 12			lda (:bp2),y
  1154 14D8 25 5C			and AVAILDIR
  1155 14DA F0 07			jeq l_0415
  1156 14DC B1 12			lda (:bp2),y
  1157 14DE 85 5B			sta NEWDIR
  1158 14E0 4C 4E 15			jmp l_0425
  1159 14E3			l_0415
  1160
  1161 				; optimize OK (ai.inc), line = 7
  1162
  1163 14E3 A5 5C			lda AVAILDIR
  1164 14E5 C9 03			cmp #$03
  1165 14E7 D0 10			jne l_0437
  1166 14E9 A9 02			lda #$02
  1167 14EB 20 47 11			jsr SYSTEM.RANDOM_006D
  1168 14EE B4 18			ldy :STACKORIGIN,x
  1169 14F0 B9 40 10			lda adr.DIRECTION,y
  1170 14F3 85 5B			sta NEWDIR
  1171 14F5 CA				dex
  1172 14F6 4C 11 15			jmp l_0449
  1173 14F9			l_0437
  1174
  1175 				; optimize OK (ai.inc), line = 9
  1176
  1177 14F9 A5 5C			lda AVAILDIR
  1178 14FB 8D 6D 25			sta @CASETMP_0003
  1179 14FE C9 01			cmp #$01
  1180 1500 D0 07			jne l_0454
  1181 1502			@
  1182
  1183 				; optimize OK (ai.inc), line = 10
  1184
  1185 1502 A9 01			lda #$01
  1186 1504 85 5B			sta NEWDIR
  1187
  1188 1506 4C 11 15			jmp a_0003
  1189 1509			l_0454
  1190 1509 C9 02			cmp #$02
  1191 150B D0 04			jne l_0461
  1192 150D			@
  1193
  1194 				; optimize OK (ai.inc), line = 11
  1195
  1196 150D A9 02			lda #$02
  1197 150F 85 5B			sta NEWDIR
  1198
  1199 1511			l_0461
  1200 1511			a_0003
  1201 1511			l_0449
  1202
  1203 				; optimize OK (ai.inc), line = 14
  1204
  1205 1511 A5 5C			lda AVAILDIR
  1206 1513 C9 0C			cmp #$0C
  1207 1515 D0 1F			jne l_047D
  1208 1517 A9 02			lda #$02
  1209 1519 20 47 11			jsr SYSTEM.RANDOM_006D
  1210 151C E8				inx
  1211 151D A9 02 95 18			mva #$02 :STACKORIGIN,x
  1212 1521 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1213 1525 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1214 1527 20 44 10			jsr addAX_CX
  1215 152A CA				dex
  1216 152B B4 18			ldy :STACKORIGIN,x
  1217 152D B9 40 10			lda adr.DIRECTION,y
  1218 1530 85 5B			sta NEWDIR
  1219 1532 CA				dex
  1220 1533 4C 4E 15			jmp l_0493
  1221 1536			l_047D
  1222
  1223 				; optimize OK (ai.inc), line = 16
  1224
  1225 1536 A5 5C			lda AVAILDIR
  1226 1538 8D 6E 25			sta @CASETMP_0004
  1227 153B C9 04			cmp #$04
  1228 153D D0 07			jne l_049E
  1229 153F			@
  1230
  1231 				; optimize OK (ai.inc), line = 17
  1232
  1233 153F A9 04			lda #$04
  1234 1541 85 5B			sta NEWDIR
  1235
  1236 1543 4C 4E 15			jmp a_0004
  1237 1546			l_049E
  1238 1546 C9 08			cmp #$08
  1239 1548 D0 04			jne l_04AB
  1240 154A			@
  1241
  1242 				; optimize OK (ai.inc), line = 18
  1243
  1244 154A A9 08			lda #$08
  1245 154C 85 5B			sta NEWDIR
  1246
  1247 154E			l_04AB
  1248 154E			a_0004
  1249 154E			l_0493
  1250 154E			l_0425
  1251
  1252 				; ------------------------------------------------------------
  1253
  1254 = 256D			@CASETMP_0003	= DATAORIGIN+$0051
  1255 = 256E			@CASETMP_0004	= DATAORIGIN+$0052
  1256
  1257 = 256D			@VarData	= @CASETMP_0003
  1258 = 0002			@VarDataSize	= 2
  1259
  1260 154E			@exit
  1261 					.ifdef @new
  1262 					lda <@VarData
  1263 					sta :ztmp
  1264 					lda >@VarData
  1265 					ldy #@VarDataSize-1
  1266 					jmp @FreeMem
  1267 					els
  1268 154E 60				rts						; ret
  1269 					eif
  1270 				.endl
  1271
  1272 154F			.local	AISAPPER					; PROCEDURE
  1273
  1274 				; optimize OK (ai.inc), line = 31
  1275
  1276 154F A9 00			lda #$00
  1277 1551 8D 6F 25			sta L
  1278 1554 8D 70 25			sta R
  1279 1557 8D 71 25			sta U
  1280 155A 8D 72 25			sta D
  1281
  1282 				; optimize OK (ai.inc), line = 32
  1283
  1284 155D AC 0B 25 84 12 AC + 	mwy PLY :bp2
  1285 1567 A0 01			ldy #PLY.Y-DATAORIGIN
  1286 1569 B1 12			lda (:bp2),y
  1287 156B 0A				asl @
  1288 156C A8				tay
  1289 156D A9 00			lda #$00
  1290 156F 18 79 0E 10			add adr.MUL40,y
  1291 1573 85 21			sta :STACKORIGIN+9
  1292 1575 A9 0C			lda #$0C
  1293 1577 79 0F 10			adc adr.MUL40+1,y
  1294 157A 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1295 157C A0 00			ldy #PLY.X-DATAORIGIN
  1296 157E A5 21			lda :STACKORIGIN+9
  1297 1580 18 71 12			add (:bp2),y
  1298 1583 85 5D			sta T0W
  1299 1585 A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1300 1587 69 00			adc #$00
  1301 1589 85 5E			sta T0W+1
  1302
  1303 				; optimize OK (ai.inc), line = 34
  1304
  1305 158B A5 5C			lda AVAILDIR
  1306 158D 29 01			and #$01
  1307 158F F0 73			jeq l_04F1
  1308
  1309 				; optimize OK (ai.inc), line = 35
  1310
  1311 1591 A9 05			lda #$05
  1312 1593 85 59			sta I0B
  1313
  1314 1595			l_04FB
  1315 				; --- ForToDoCondition
  1316 1595 A5 59			lda I0B
  1317 1597 C9 01			cmp #$01
  1318 1599 90 69			jcc l_0509
  1319
  1320 				; optimize OK (ai.inc), line = 36
  1321
  1322 159B 0A				asl @
  1323 159C A8				tay
  1324 159D A5 5D			lda T0W
  1325 159F 38 F9 0E 10			sub adr.MUL40,y
  1326 15A3 85 21			sta :STACKORIGIN+9
  1327 15A5 A5 5E			lda T0W+1
  1328 15A7 F9 0F 10			sbc adr.MUL40+1,y
  1329 15AA 85 11			sta :bp+1
  1330 15AC A4 21			ldy :STACKORIGIN+9
  1331 15AE B1 10			lda (:bp),y
  1332 15B0 C9 20			cmp #$20
  1333 15B2 D0 03			jne l_0523
  1334 15B4 EE 71 25			inc U
  1335 15B7			l_0523
  1336
  1337 				; optimize OK (ai.inc), line = 37
  1338
  1339 15B7 A5 59			lda I0B
  1340 15B9 0A				asl @
  1341 15BA A8				tay
  1342 15BB A5 5D			lda T0W
  1343 15BD 38 F9 0E 10			sub adr.MUL40,y
  1344 15C1 85 21			sta :STACKORIGIN+9
  1345 15C3 A5 5E			lda T0W+1
  1346 15C5 F9 0F 10			sbc adr.MUL40+1,y
  1347 15C8 85 11			sta :bp+1
  1348 15CA A5 21			lda :STACKORIGIN+9
  1349 15CC 18 69 01			add #$01
  1350 15CF A8				tay
  1351 15D0 90 02			scc
  1352 15D2 E6 11			inc :bp+1
  1353 15D4 B1 10			lda (:bp),y
  1354 15D6 C9 20			cmp #$20
  1355 15D8 D0 03			jne l_0548
  1356 15DA EE 71 25			inc U
  1357 15DD			l_0548
  1358
  1359 				; optimize OK (ai.inc), line = 38
  1360
  1361 15DD A5 59			lda I0B
  1362 15DF 0A				asl @
  1363 15E0 A8				tay
  1364 15E1 A5 5D			lda T0W
  1365 15E3 38 F9 0E 10			sub adr.MUL40,y
  1366 15E7 85 21			sta :STACKORIGIN+9
  1367 15E9 A5 5E			lda T0W+1
  1368 15EB F9 0F 10			sbc adr.MUL40+1,y
  1369 15EE 85 11			sta :bp+1
  1370 15F0 A4 21			ldy :STACKORIGIN+9
  1371 15F2 88				dey
  1372 15F3 B0 02			scs
  1373 15F5 C6 11			dec :bp+1
  1374 15F7 B1 10			lda (:bp),y
  1375 15F9 C9 20			cmp #$20
  1376 15FB D0 03			jne l_056D
  1377 15FD EE 71 25			inc U
  1378 1600			l_056D
  1379
  1380 				; --- ForToDoEpilog
  1381 1600 C6 59			dec I0B
  1382 1602 10 91			jpl l_04FB
  1383 1604			l_0509
  1384 1604			l_04F1
  1385
  1386 				; optimize OK (ai.inc), line = 42
  1387
  1388 1604 A5 5C			lda AVAILDIR
  1389 1606 29 02			and #$02
  1390 1608 F0 73			jeq l_0591
  1391
  1392 				; optimize OK (ai.inc), line = 43
  1393
  1394 160A A9 05			lda #$05
  1395 160C 85 59			sta I0B
  1396
  1397 160E			l_059B
  1398 				; --- ForToDoCondition
  1399 160E A5 59			lda I0B
  1400 1610 C9 01			cmp #$01
  1401 1612 90 69			jcc l_05A9
  1402
  1403 				; optimize OK (ai.inc), line = 44
  1404
  1405 1614 0A				asl @
  1406 1615 A8				tay
  1407 1616 A5 5D			lda T0W
  1408 1618 18 79 0E 10			add adr.MUL40,y
  1409 161C 85 21			sta :STACKORIGIN+9
  1410 161E A5 5E			lda T0W+1
  1411 1620 79 0F 10			adc adr.MUL40+1,y
  1412 1623 85 11			sta :bp+1
  1413 1625 A4 21			ldy :STACKORIGIN+9
  1414 1627 B1 10			lda (:bp),y
  1415 1629 C9 20			cmp #$20
  1416 162B D0 03			jne l_05C3
  1417 162D EE 72 25			inc D
  1418 1630			l_05C3
  1419
  1420 				; optimize OK (ai.inc), line = 45
  1421
  1422 1630 A5 59			lda I0B
  1423 1632 0A				asl @
  1424 1633 A8				tay
  1425 1634 A5 5D			lda T0W
  1426 1636 18 79 0E 10			add adr.MUL40,y
  1427 163A 85 21			sta :STACKORIGIN+9
  1428 163C A5 5E			lda T0W+1
  1429 163E 79 0F 10			adc adr.MUL40+1,y
  1430 1641 85 11			sta :bp+1
  1431 1643 A5 21			lda :STACKORIGIN+9
  1432 1645 18 69 01			add #$01
  1433 1648 A8				tay
  1434 1649 90 02			scc
  1435 164B E6 11			inc :bp+1
  1436 164D B1 10			lda (:bp),y
  1437 164F C9 20			cmp #$20
  1438 1651 D0 03			jne l_05E8
  1439 1653 EE 72 25			inc D
  1440 1656			l_05E8
  1441
  1442 				; optimize OK (ai.inc), line = 46
  1443
  1444 1656 A5 59			lda I0B
  1445 1658 0A				asl @
  1446 1659 A8				tay
  1447 165A A5 5D			lda T0W
  1448 165C 18 79 0E 10			add adr.MUL40,y
  1449 1660 85 21			sta :STACKORIGIN+9
  1450 1662 A5 5E			lda T0W+1
  1451 1664 79 0F 10			adc adr.MUL40+1,y
  1452 1667 85 11			sta :bp+1
  1453 1669 A4 21			ldy :STACKORIGIN+9
  1454 166B 88				dey
  1455 166C B0 02			scs
  1456 166E C6 11			dec :bp+1
  1457 1670 B1 10			lda (:bp),y
  1458 1672 C9 20			cmp #$20
  1459 1674 D0 03			jne l_060D
  1460 1676 EE 72 25			inc D
  1461 1679			l_060D
  1462
  1463 				; --- ForToDoEpilog
  1464 1679 C6 59			dec I0B
  1465 167B 10 91			jpl l_059B
  1466 167D			l_05A9
  1467 167D			l_0591
  1468
  1469 				; optimize OK (ai.inc), line = 50
  1470
  1471 167D A5 5C			lda AVAILDIR
  1472 167F 29 04			and #$04
  1473 1681 F0 5F			jeq l_0631
  1474
  1475 				; optimize OK (ai.inc), line = 51
  1476
  1477 1683 A9 05			lda #$05
  1478 1685 85 59			sta I0B
  1479
  1480 1687			l_063B
  1481 				; --- ForToDoCondition
  1482 1687 A5 59			lda I0B
  1483 1689 C9 01			cmp #$01
  1484 168B 90 55			jcc l_0649
  1485
  1486 				; optimize OK (ai.inc), line = 52
  1487
  1488 168D A5 5D			lda T0W
  1489 168F 38 E5 59			sub I0B
  1490 1692 A8				tay
  1491 1693 A5 5E			lda T0W+1
  1492 1695 E9 00			sbc #$00
  1493 1697 85 11			sta :bp+1
  1494 1699 B1 10			lda (:bp),y
  1495 169B C9 20			cmp #$20
  1496 169D D0 03			jne l_0661
  1497 169F EE 6F 25			inc L
  1498 16A2			l_0661
  1499
  1500 				; optimize OK (ai.inc), line = 53
  1501
  1502 16A2 A5 5D			lda T0W
  1503 16A4 38 E5 59			sub I0B
  1504 16A7 A8				tay
  1505 16A8 A5 5E			lda T0W+1
  1506 16AA E9 00			sbc #$00
  1507 16AC 85 11			sta :bp+1
  1508 16AE 98				tya
  1509 16AF 18 69 28			add #$28
  1510 16B2 A8				tay
  1511 16B3 90 02			scc
  1512 16B5 E6 11			inc :bp+1
  1513 16B7 B1 10			lda (:bp),y
  1514 16B9 C9 20			cmp #$20
  1515 16BB D0 03			jne l_0684
  1516 16BD EE 6F 25			inc L
  1517 16C0			l_0684
  1518
  1519 				; optimize OK (ai.inc), line = 54
  1520
  1521 16C0 A5 5D			lda T0W
  1522 16C2 38 E5 59			sub I0B
  1523 16C5 A8				tay
  1524 16C6 A5 5E			lda T0W+1
  1525 16C8 E9 00			sbc #$00
  1526 16CA 85 11			sta :bp+1
  1527 16CC 98				tya
  1528 16CD 38 E9 28			sub #$28
  1529 16D0 A8				tay
  1530 16D1 B0 02			scs
  1531 16D3 C6 11			dec :bp+1
  1532 16D5 B1 10			lda (:bp),y
  1533 16D7 C9 20			cmp #$20
  1534 16D9 D0 03			jne l_06A7
  1535 16DB EE 6F 25			inc L
  1536 16DE			l_06A7
  1537
  1538 				; --- ForToDoEpilog
  1539 16DE C6 59			dec I0B
  1540 16E0 10 A5			jpl l_063B
  1541 16E2			l_0649
  1542 16E2			l_0631
  1543
  1544 				; optimize OK (ai.inc), line = 58
  1545
  1546 16E2 A5 5C			lda AVAILDIR
  1547 16E4 29 08			and #$08
  1548 16E6 F0 5D			jeq l_06CB
  1549
  1550 				; optimize OK (ai.inc), line = 59
  1551
  1552 16E8 A9 05			lda #$05
  1553 16EA 85 59			sta I0B
  1554
  1555 16EC			l_06D5
  1556 				; --- ForToDoCondition
  1557 16EC A5 59			lda I0B
  1558 16EE C9 01			cmp #$01
  1559 16F0 90 53			jcc l_06E3
  1560
  1561 				; optimize OK (ai.inc), line = 60
  1562
  1563 16F2 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1564 16FA A4 59			ldy I0B
  1565 16FC B1 12			lda (:bp2),y
  1566 16FE C9 20			cmp #$20
  1567 1700 D0 03			jne l_06FB
  1568 1702 EE 70 25			inc R
  1569 1705			l_06FB
  1570
  1571 				; optimize OK (ai.inc), line = 61
  1572
  1573 1705 A5 5D			lda T0W
  1574 1707 18 65 59			add I0B
  1575 170A A8				tay
  1576 170B A5 5E			lda T0W+1
  1577 170D 69 00			adc #$00
  1578 170F 85 11			sta :bp+1
  1579 1711 98				tya
  1580 1712 18 69 28			add #$28
  1581 1715 A8				tay
  1582 1716 90 02			scc
  1583 1718 E6 11			inc :bp+1
  1584 171A B1 10			lda (:bp),y
  1585 171C C9 20			cmp #$20
  1586 171E D0 03			jne l_071E
  1587 1720 EE 70 25			inc R
  1588 1723			l_071E
  1589
  1590 				; optimize OK (ai.inc), line = 62
  1591
  1592 1723 A5 5D			lda T0W
  1593 1725 18 65 59			add I0B
  1594 1728 A8				tay
  1595 1729 A5 5E			lda T0W+1
  1596 172B 69 00			adc #$00
  1597 172D 85 11			sta :bp+1
  1598 172F 98				tya
  1599 1730 38 E9 28			sub #$28
  1600 1733 A8				tay
  1601 1734 B0 02			scs
  1602 1736 C6 11			dec :bp+1
  1603 1738 B1 10			lda (:bp),y
  1604 173A C9 20			cmp #$20
  1605 173C D0 03			jne l_0741
  1606 173E EE 70 25			inc R
  1607 1741			l_0741
  1608
  1609 				; --- ForToDoEpilog
  1610 1741 C6 59			dec I0B
  1611 1743 10 A7			jpl l_06D5
  1612 1745			l_06E3
  1613 1745			l_06CB
  1614
  1615 				; optimize OK (ai.inc), line = 66
  1616
  1617 1745 AD 72 25			lda D
  1618 1748 85 58			sta T0B
  1619
  1620 				; optimize OK (ai.inc), line = 67
  1621
  1622 174A CD 71 25			cmp U
  1623 174D B0 05			jcs l_0769
  1624 174F AD 71 25			lda U
  1625 1752 85 58			sta T0B
  1626 1754			l_0769
  1627
  1628 				; optimize OK (ai.inc), line = 68
  1629
  1630 1754 A5 58			lda T0B
  1631 1756 CD 6F 25			cmp L
  1632 1759 B0 05			jcs l_0786
  1633 175B AD 6F 25			lda L
  1634 175E 85 58			sta T0B
  1635 1760			l_0786
  1636
  1637 				; optimize OK (ai.inc), line = 69
  1638
  1639 1760 A5 58			lda T0B
  1640 1762 CD 70 25			cmp R
  1641 1765 B0 05			jcs l_07A3
  1642 1767 AD 70 25			lda R
  1643 176A 85 58			sta T0B
  1644 176C			l_07A3
  1645
  1646 				; optimize OK (ai.inc), line = 71
  1647
  1648 176C A5 58			lda T0B
  1649 176E CD 72 25			cmp D
  1650 1771 D0 04			jne l_07C0
  1651 1773 A9 02			lda #$02
  1652 1775 85 58			sta T0B
  1653 1777			l_07C0
  1654
  1655 				; optimize OK (ai.inc), line = 72
  1656
  1657 1777 A5 58			lda T0B
  1658 1779 CD 71 25			cmp U
  1659 177C D0 04			jne l_07DB
  1660 177E A9 01			lda #$01
  1661 1780 85 58			sta T0B
  1662 1782			l_07DB
  1663
  1664 				; optimize OK (ai.inc), line = 73
  1665
  1666 1782 A5 58			lda T0B
  1667 1784 CD 6F 25			cmp L
  1668 1787 D0 04			jne l_07F6
  1669 1789 A9 04			lda #$04
  1670 178B 85 58			sta T0B
  1671 178D			l_07F6
  1672
  1673 				; optimize OK (ai.inc), line = 74
  1674
  1675 178D A5 58			lda T0B
  1676 178F CD 70 25			cmp R
  1677 1792 D0 04			jne l_0811
  1678 1794 A9 08			lda #$08
  1679 1796 85 58			sta T0B
  1680 1798			l_0811
  1681
  1682 				; optimize OK (ai.inc), line = 76
  1683
  1684 1798 A5 5C			lda AVAILDIR
  1685 179A 25 58			and T0B
  1686 179C F0 07			jeq l_0830
  1687 179E A5 58			lda T0B
  1688 17A0 85 5B			sta NEWDIR
  1689 17A2 4C A8 17			jmp l_0840
  1690 17A5			l_0830
  1691
  1692 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1693
  1694 17A5 20 CA 14			jsr AISTRAIGHT
  1695 17A8			l_0840
  1696
  1697 				; ------------------------------------------------------------
  1698
  1699 = 256F			L	= DATAORIGIN+$0053
  1700 = 2570			R	= DATAORIGIN+$0054
  1701 = 2571			U	= DATAORIGIN+$0055
  1702 = 2572			D	= DATAORIGIN+$0056
  1703 = 0001			@FORTMP_04F8	= $01
  1704 = 0001			@FORTMP_0598	= $01
  1705 = 0001			@FORTMP_0638	= $01
  1706 = 0001			@FORTMP_06D2	= $01
  1707
  1708 = 256F			@VarData	= L
  1709 = 0004			@VarDataSize	= 4
  1710
  1711 17A8			@exit
  1712 					.ifdef @new
  1713 					lda <@VarData
  1714 					sta :ztmp
  1715 					lda >@VarData
  1716 					ldy #@VarDataSize-1
  1717 					jmp @FreeMem
  1718 					els
  1719 17A8 60				rts						; ret
  1720 					eif
  1721 				.endl
  1722
  1723 17A9			.local	AIBULLY						; PROCEDURE
  1724
  1725 				; optimize OK (ai.inc), line = 84
  1726
  1727 17A9 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  1728 17B3 A0 04			ldy #PLY.DIR-DATAORIGIN
  1729 17B5 B1 12			lda (:bp2),y
  1730 17B7 85 58			sta T0B
  1731
  1732 				; optimize OK (ai.inc), line = 86
  1733
  1734 17B9 AD 35 25			lda PLAYER1.ISALIVE
  1735 17BC 0D 3D 25			ora PLAYER2.ISALIVE
  1736 17BF D0 03 4C 66 18		jeq l_085D
  1737
  1738 				; optimize OK (ai.inc), line = 88
  1739
  1740 17C4 AD 35 25			lda PLAYER1.ISALIVE
  1741 17C7 F0 0F			jeq l_086A
  1742 17C9 AD 0F 25			lda PLAYER1
  1743 17CC 8D 0D 25			sta TMPPLY
  1744 17CF AD 10 25			lda PLAYER1+1
  1745 17D2 8D 0E 25			sta TMPPLY+1
  1746 17D5 4C E4 17			jmp l_0879
  1747 17D8			l_086A
  1748 17D8 AD 11 25			lda PLAYER2
  1749 17DB 8D 0D 25			sta TMPPLY
  1750 17DE AD 12 25			lda PLAYER2+1
  1751 17E1 8D 0E 25			sta TMPPLY+1
  1752 17E4			l_0879
  1753
  1754 				; optimize OK (ai.inc), line = 90
  1755
  1756 17E4 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  1757 17EE A0 01			ldy #PLY.Y-DATAORIGIN
  1758 17F0 B1 12			lda (:bp2),y
  1759 17F2 85 21			sta :STACKORIGIN+9
  1760 17F4 AC 0D 25 84 12 AC + 	mwy TMPPLY :bp2
  1761 17FE A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1762 1800 B1 12			lda (:bp2),y
  1763 1802 C5 21			cmp :STACKORIGIN+9
  1764 1804 B0 07			jcs l_0892
  1765 1806 A9 01			lda #$01
  1766 1808 85 58			sta T0B
  1767 180A 4C 11 18			jmp l_08A0
  1768 180D			l_0892
  1769 180D A9 02			lda #$02
  1770 180F 85 58			sta T0B
  1771 1811			l_08A0
  1772
  1773 				; optimize OK (ai.inc), line = 91
  1774
  1775 1811 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  1776 181B A0 01			ldy #PLY.Y-DATAORIGIN
  1777 181D B1 12			lda (:bp2),y
  1778 181F 85 21			sta :STACKORIGIN+9
  1779 1821 AC 0D 25 84 12 AC + 	mwy TMPPLY :bp2
  1780 182B A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1781 182D B1 12			lda (:bp2),y
  1782 182F C5 21			cmp :STACKORIGIN+9
  1783 1831 F0 06			jeq l_08CAx
  1784 1833 A5 5C			lda AVAILDIR
  1785 1835 25 58			and T0B
  1786 1837 D0 2D			jne l_08CA
  1787 1839			l_08CAx
  1788
  1789 				; optimize OK (ai.inc), line = 92
  1790
  1791 1839 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  1792 1843 A0 00			ldy #PLY.X-DATAORIGIN
  1793 1845 B1 12			lda (:bp2),y
  1794 1847 85 21			sta :STACKORIGIN+9
  1795 1849 AC 0D 25 84 12 AC + 	mwy TMPPLY :bp2
  1796 1853 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1797 1855 B1 12			lda (:bp2),y
  1798 1857 C5 21			cmp :STACKORIGIN+9
  1799 1859 B0 07			jcs l_08DF
  1800 185B A9 04			lda #$04
  1801 185D 85 58			sta T0B
  1802 185F 4C 66 18			jmp l_08ED
  1803 1862			l_08DF
  1804 1862 A9 08			lda #$08
  1805 1864 85 58			sta T0B
  1806 1866			l_08ED
  1807 1866			l_08CA
  1808 1866			l_085D
  1809
  1810 				; optimize OK (ai.inc), line = 96
  1811
  1812 1866 A5 5C			lda AVAILDIR
  1813 1868 25 58			and T0B
  1814 186A F0 07			jeq l_090D
  1815 186C A5 58			lda T0B
  1816 186E 85 5B			sta NEWDIR
  1817 1870 4C 76 18			jmp l_091D
  1818 1873			l_090D
  1819
  1820 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  1821
  1822 1873 20 4F 15			jsr AISAPPER
  1823 1876			l_091D
  1824 1876			@exit
  1825 					.ifdef @new
  1826 					lda <@VarData
  1827 					sta :ztmp
  1828 					lda >@VarData
  1829 					ldy #@VarDataSize-1
  1830 					jmp @FreeMem
  1831 					els
  1832 1876 60				rts						; ret
  1833 					eif
  1834 				.endl
  1835
  1836 1877			.local	AIMIRROR					; PROCEDURE
  1837
  1838 				; optimize OK (ai.inc), line = 105
  1839
  1840 1877 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  1841 1881 A0 04			ldy #PLY.DIR-DATAORIGIN
  1842 1883 B1 12			lda (:bp2),y
  1843 1885 85 58			sta T0B
  1844
  1845 				; optimize OK (ai.inc), line = 107
  1846
  1847 1887 AD 35 25			lda PLAYER1.ISALIVE
  1848 188A F0 2F			jeq l_0934
  1849
  1850 				; optimize OK (ai.inc), line = 108
  1851
  1852 188C AD 32 25			lda PLAYER1.DIR
  1853 188F 8D 73 25			sta @CASETMP_0005
  1854 1892 C9 01			cmp #$01
  1855 1894 D0 07			jne l_0940
  1856 1896			@
  1857
  1858 				; optimize OK (ai.inc), line = 109
  1859
  1860 1896 A9 02			lda #$02
  1861 1898 85 58			sta T0B
  1862
  1863 189A 4C BB 18			jmp a_0005
  1864 189D			l_0940
  1865 189D C9 02			cmp #$02
  1866 189F D0 07			jne l_094D
  1867 18A1			@
  1868
  1869 				; optimize OK (ai.inc), line = 110
  1870
  1871 18A1 A9 01			lda #$01
  1872 18A3 85 58			sta T0B
  1873
  1874 18A5 4C BB 18			jmp a_0005
  1875 18A8			l_094D
  1876 18A8 C9 04			cmp #$04
  1877 18AA D0 07			jne l_095A
  1878 18AC			@
  1879
  1880 				; optimize OK (ai.inc), line = 111
  1881
  1882 18AC A9 08			lda #$08
  1883 18AE 85 58			sta T0B
  1884
  1885 18B0 4C BB 18			jmp a_0005
  1886 18B3			l_095A
  1887 18B3 C9 08			cmp #$08
  1888 18B5 D0 04			jne l_0967
  1889 18B7			@
  1890
  1891 				; optimize OK (ai.inc), line = 112
  1892
  1893 18B7 A9 04			lda #$04
  1894 18B9 85 58			sta T0B
  1895
  1896 18BB			l_0967
  1897 18BB			a_0005
  1898 18BB			l_0934
  1899
  1900 				; optimize OK (ai.inc), line = 116
  1901
  1902 18BB A5 5C			lda AVAILDIR
  1903 18BD 25 58			and T0B
  1904 18BF F0 07			jeq l_098D
  1905 18C1 A5 58			lda T0B
  1906 18C3 85 5B			sta NEWDIR
  1907 18C5 4C CB 18			jmp l_099D
  1908 18C8			l_098D
  1909
  1910 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  1911
  1912 18C8 20 4F 15			jsr AISAPPER
  1913 18CB			l_099D
  1914
  1915 				; ------------------------------------------------------------
  1916
  1917 = 2573			@CASETMP_0005	= DATAORIGIN+$0057
  1918
  1919 = 2573			@VarData	= @CASETMP_0005
  1920 = 0001			@VarDataSize	= 1
  1921
  1922 18CB			@exit
  1923 					.ifdef @new
  1924 					lda <@VarData
  1925 					sta :ztmp
  1926 					lda >@VarData
  1927 					ldy #@VarDataSize-1
  1928 					jmp @FreeMem
  1929 					els
  1930 18CB 60				rts						; ret
  1931 					eif
  1932 				.endl
  1933
  1934 18CC			.local	SETLEVEL01					; PROCEDURE
  1935
  1936 				; optimize OK (levels.inc), line = 13
  1937
  1938 18CC A9 01			lda #$01
  1939 18CE 8D 6C 25			sta INITPLAYERS.ISALIVE
  1940 18D1 A9 5F			lda #$5F
  1941 18D3 8D 6B 25			sta INITPLAYERS.COLOUR
  1942 18D6 A9 51			lda #$51
  1943 18D8 8D 6A 25			sta INITPLAYERS.HEAD
  1944 18DB A9 00			lda #$00
  1945 18DD 8D 69 25			sta INITPLAYERS.BRAIN
  1946 18E0 A9 08			lda #$08
  1947 18E2 8D 68 25			sta INITPLAYERS.DIR
  1948 18E5 A9 0C			lda #$0C
  1949 18E7 8D 67 25			sta INITPLAYERS.Y
  1950 18EA A9 0A			lda #$0A
  1951 18EC 8D 66 25			sta INITPLAYERS.X
  1952 18EF AD 0F 25			lda PLAYER1
  1953 18F2 8D 64 25			sta INITPLAYERS.P
  1954 18F5 AD 10 25			lda PLAYER1+1
  1955 18F8 8D 65 25			sta INITPLAYERS.P+1
  1956 18FB 20 E6 13			jsr INITPLAYERS
  1957
  1958 				; optimize OK (levels.inc), line = 14
  1959
  1960 18FE A9 01			lda #$01
  1961 1900 8D 6C 25			sta INITPLAYERS.ISALIVE
  1962 1903 A9 5D			lda #$5D
  1963 1905 8D 6B 25			sta INITPLAYERS.COLOUR
  1964 1908 A9 51			lda #$51
  1965 190A 8D 6A 25			sta INITPLAYERS.HEAD
  1966 190D A9 01			lda #$01
  1967 190F 8D 69 25			sta INITPLAYERS.BRAIN
  1968 1912 A9 04			lda #$04
  1969 1914 8D 68 25			sta INITPLAYERS.DIR
  1970 1917 A9 0C			lda #$0C
  1971 1919 8D 67 25			sta INITPLAYERS.Y
  1972 191C A9 1E			lda #$1E
  1973 191E 8D 66 25			sta INITPLAYERS.X
  1974 1921 AD 11 25			lda PLAYER2
  1975 1924 8D 64 25			sta INITPLAYERS.P
  1976 1927 AD 12 25			lda PLAYER2+1
  1977 192A 8D 65 25			sta INITPLAYERS.P+1
  1978 192D 20 E6 13			jsr INITPLAYERS
  1979
  1980 				; optimize OK (levels.inc), line = 15
  1981
  1982 1930 A9 00			lda #$00
  1983 1932 8D 6C 25			sta INITPLAYERS.ISALIVE
  1984 1935 A9 71			lda #$71
  1985 1937 8D 6B 25			sta INITPLAYERS.COLOUR
  1986 193A A9 51			lda #$51
  1987 193C 8D 6A 25			sta INITPLAYERS.HEAD
  1988 193F A9 03			lda #$03
  1989 1941 8D 69 25			sta INITPLAYERS.BRAIN
  1990 1944 A9 02			lda #$02
  1991 1946 8D 68 25			sta INITPLAYERS.DIR
  1992 1949 A9 04			lda #$04
  1993 194B 8D 67 25			sta INITPLAYERS.Y
  1994 194E A9 14			lda #$14
  1995 1950 8D 66 25			sta INITPLAYERS.X
  1996 1953 AD 13 25			lda PLAYER3
  1997 1956 8D 64 25			sta INITPLAYERS.P
  1998 1959 AD 14 25			lda PLAYER3+1
  1999 195C 8D 65 25			sta INITPLAYERS.P+1
  2000 195F 20 E6 13			jsr INITPLAYERS
  2001
  2002 				; optimize OK (levels.inc), line = 16
  2003
  2004 1962 A9 00			lda #$00
  2005 1964 8D 6C 25			sta INITPLAYERS.ISALIVE
  2006 1967 A9 55			lda #$55
  2007 1969 8D 6B 25			sta INITPLAYERS.COLOUR
  2008 196C A9 51			lda #$51
  2009 196E 8D 6A 25			sta INITPLAYERS.HEAD
  2010 1971 A9 02			lda #$02
  2011 1973 8D 69 25			sta INITPLAYERS.BRAIN
  2012 1976 A9 01			lda #$01
  2013 1978 8D 68 25			sta INITPLAYERS.DIR
  2014 197B A9 12			lda #$12
  2015 197D 8D 67 25			sta INITPLAYERS.Y
  2016 1980 A9 14			lda #$14
  2017 1982 8D 66 25			sta INITPLAYERS.X
  2018 1985 AD 15 25			lda PLAYER4
  2019 1988 8D 64 25			sta INITPLAYERS.P
  2020 198B AD 16 25			lda PLAYER4+1
  2021 198E 8D 65 25			sta INITPLAYERS.P+1
  2022 1991 20 E6 13			jsr INITPLAYERS
  2023
  2024 				; optimize OK (levels.inc), line = 18
  2025
  2026 1994 A9 FA			lda #$FA
  2027 1996 8D 4E 25			sta adr.OBSTACLES+$00
  2028 1999 A9 0C			lda #$0C
  2029 199B 8D 4F 25			sta adr.OBSTACLES+1+$00
  2030
  2031 				; optimize OK (levels.inc), line = 19
  2032
  2033 199E A9 0E			lda #$0E
  2034 19A0 8D 50 25			sta adr.OBSTACLES+$02
  2035 19A3 A9 0D			lda #$0D
  2036 19A5 8D 51 25			sta adr.OBSTACLES+1+$02
  2037
  2038 				; optimize OK (levels.inc), line = 20
  2039
  2040 19A8 A9 DA			lda #$DA
  2041 19AA 8D 52 25			sta adr.OBSTACLES+$04
  2042 19AD A9 0E			lda #$0E
  2043 19AF 8D 53 25			sta adr.OBSTACLES+1+$04
  2044
  2045 				; optimize OK (levels.inc), line = 21
  2046
  2047 19B2 A9 EE			lda #$EE
  2048 19B4 8D 54 25			sta adr.OBSTACLES+$06
  2049 19B7 A9 0E			lda #$0E
  2050 19B9 8D 55 25			sta adr.OBSTACLES+1+$06
  2051
  2052 				; optimize OK (levels.inc), line = 22
  2053
  2054 19BC A9 7E			lda #$7E
  2055 19BE 8D 56 25			sta adr.OBSTACLES+$08
  2056 19C1 A9 00			lda #$00
  2057 19C3 8D 57 25			sta adr.OBSTACLES+1+$08
  2058
  2059 				; optimize OK (levels.inc), line = 23
  2060
  2061 19C6 A9 64			lda #$64
  2062 19C8 8D 58 25			sta adr.OBSTACLES+$0A
  2063 19CB A9 0C			lda #$0C
  2064 19CD 8D 59 25			sta adr.OBSTACLES+1+$0A
  2065
  2066 				; optimize OK (levels.inc), line = 24
  2067
  2068 19D0 A9 84			lda #$84
  2069 19D2 8D 5A 25			sta adr.OBSTACLES+$0C
  2070 19D5 A9 0F			lda #$0F
  2071 19D7 8D 5B 25			sta adr.OBSTACLES+1+$0C
  2072
  2073 				; optimize OK (levels.inc), line = 25
  2074
  2075 19DA A9 7E			lda #$7E
  2076 19DC 8D 5C 25			sta adr.OBSTACLES+$0E
  2077 19DF A9 00			lda #$00
  2078 19E1 8D 5D 25			sta adr.OBSTACLES+1+$0E
  2079
  2080 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 27
  2081
  2082 19E4 20 D2 12			jsr SAVEOBSTACLES
  2083 19E7			@exit
  2084 					.ifdef @new
  2085 					lda <@VarData
  2086 					sta :ztmp
  2087 					lda >@VarData
  2088 					ldy #@VarDataSize-1
  2089 					jmp @FreeMem
  2090 					els
  2091 19E7 60				rts						; ret
  2092 					eif
  2093 				.endl
  2094
  2095 19E8			.local	SETLEVEL02					; PROCEDURE
  2096
  2097 				; optimize OK (levels.inc), line = 34
  2098
  2099 19E8 A9 01			lda #$01
  2100 19EA 8D 6C 25			sta INITPLAYERS.ISALIVE
  2101 19ED A9 5F			lda #$5F
  2102 19EF 8D 6B 25			sta INITPLAYERS.COLOUR
  2103 19F2 A9 51			lda #$51
  2104 19F4 8D 6A 25			sta INITPLAYERS.HEAD
  2105 19F7 A9 00			lda #$00
  2106 19F9 8D 69 25			sta INITPLAYERS.BRAIN
  2107 19FC A9 08			lda #$08
  2108 19FE 8D 68 25			sta INITPLAYERS.DIR
  2109 1A01 A9 0C			lda #$0C
  2110 1A03 8D 67 25			sta INITPLAYERS.Y
  2111 1A06 A9 0A			lda #$0A
  2112 1A08 8D 66 25			sta INITPLAYERS.X
  2113 1A0B AD 0F 25			lda PLAYER1
  2114 1A0E 8D 64 25			sta INITPLAYERS.P
  2115 1A11 AD 10 25			lda PLAYER1+1
  2116 1A14 8D 65 25			sta INITPLAYERS.P+1
  2117 1A17 20 E6 13			jsr INITPLAYERS
  2118
  2119 				; optimize OK (levels.inc), line = 35
  2120
  2121 1A1A A9 01			lda #$01
  2122 1A1C 8D 6C 25			sta INITPLAYERS.ISALIVE
  2123 1A1F A9 5D			lda #$5D
  2124 1A21 8D 6B 25			sta INITPLAYERS.COLOUR
  2125 1A24 A9 51			lda #$51
  2126 1A26 8D 6A 25			sta INITPLAYERS.HEAD
  2127 1A29 A9 03			lda #$03
  2128 1A2B 8D 69 25			sta INITPLAYERS.BRAIN
  2129 1A2E A9 04			lda #$04
  2130 1A30 8D 68 25			sta INITPLAYERS.DIR
  2131 1A33 A9 0C			lda #$0C
  2132 1A35 8D 67 25			sta INITPLAYERS.Y
  2133 1A38 A9 1E			lda #$1E
  2134 1A3A 8D 66 25			sta INITPLAYERS.X
  2135 1A3D AD 11 25			lda PLAYER2
  2136 1A40 8D 64 25			sta INITPLAYERS.P
  2137 1A43 AD 12 25			lda PLAYER2+1
  2138 1A46 8D 65 25			sta INITPLAYERS.P+1
  2139 1A49 20 E6 13			jsr INITPLAYERS
  2140
  2141 				; optimize OK (levels.inc), line = 36
  2142
  2143 1A4C A9 00			lda #$00
  2144 1A4E 8D 6C 25			sta INITPLAYERS.ISALIVE
  2145 1A51 A9 71			lda #$71
  2146 1A53 8D 6B 25			sta INITPLAYERS.COLOUR
  2147 1A56 A9 51			lda #$51
  2148 1A58 8D 6A 25			sta INITPLAYERS.HEAD
  2149 1A5B A9 03			lda #$03
  2150 1A5D 8D 69 25			sta INITPLAYERS.BRAIN
  2151 1A60 A9 02			lda #$02
  2152 1A62 8D 68 25			sta INITPLAYERS.DIR
  2153 1A65 A9 04			lda #$04
  2154 1A67 8D 67 25			sta INITPLAYERS.Y
  2155 1A6A A9 14			lda #$14
  2156 1A6C 8D 66 25			sta INITPLAYERS.X
  2157 1A6F AD 13 25			lda PLAYER3
  2158 1A72 8D 64 25			sta INITPLAYERS.P
  2159 1A75 AD 14 25			lda PLAYER3+1
  2160 1A78 8D 65 25			sta INITPLAYERS.P+1
  2161 1A7B 20 E6 13			jsr INITPLAYERS
  2162
  2163 				; optimize OK (levels.inc), line = 37
  2164
  2165 1A7E A9 00			lda #$00
  2166 1A80 8D 6C 25			sta INITPLAYERS.ISALIVE
  2167 1A83 A9 55			lda #$55
  2168 1A85 8D 6B 25			sta INITPLAYERS.COLOUR
  2169 1A88 A9 51			lda #$51
  2170 1A8A 8D 6A 25			sta INITPLAYERS.HEAD
  2171 1A8D A9 02			lda #$02
  2172 1A8F 8D 69 25			sta INITPLAYERS.BRAIN
  2173 1A92 A9 01			lda #$01
  2174 1A94 8D 68 25			sta INITPLAYERS.DIR
  2175 1A97 A9 12			lda #$12
  2176 1A99 8D 67 25			sta INITPLAYERS.Y
  2177 1A9C A9 14			lda #$14
  2178 1A9E 8D 66 25			sta INITPLAYERS.X
  2179 1AA1 AD 15 25			lda PLAYER4
  2180 1AA4 8D 64 25			sta INITPLAYERS.P
  2181 1AA7 AD 16 25			lda PLAYER4+1
  2182 1AAA 8D 65 25			sta INITPLAYERS.P+1
  2183 1AAD 20 E6 13			jsr INITPLAYERS
  2184
  2185 				; optimize OK (levels.inc), line = 39
  2186
  2187 1AB0 A9 FA			lda #$FA
  2188 1AB2 8D 4E 25			sta adr.OBSTACLES+$00
  2189 1AB5 A9 0C			lda #$0C
  2190 1AB7 8D 4F 25			sta adr.OBSTACLES+1+$00
  2191
  2192 				; optimize OK (levels.inc), line = 40
  2193
  2194 1ABA A9 0E			lda #$0E
  2195 1ABC 8D 50 25			sta adr.OBSTACLES+$02
  2196 1ABF A9 0D			lda #$0D
  2197 1AC1 8D 51 25			sta adr.OBSTACLES+1+$02
  2198
  2199 				; optimize OK (levels.inc), line = 41
  2200
  2201 1AC4 A9 DA			lda #$DA
  2202 1AC6 8D 52 25			sta adr.OBSTACLES+$04
  2203 1AC9 A9 0E			lda #$0E
  2204 1ACB 8D 53 25			sta adr.OBSTACLES+1+$04
  2205
  2206 				; optimize OK (levels.inc), line = 42
  2207
  2208 1ACE A9 EE			lda #$EE
  2209 1AD0 8D 54 25			sta adr.OBSTACLES+$06
  2210 1AD3 A9 0E			lda #$0E
  2211 1AD5 8D 55 25			sta adr.OBSTACLES+1+$06
  2212
  2213 				; optimize OK (levels.inc), line = 43
  2214
  2215 1AD8 A9 7E			lda #$7E
  2216 1ADA 8D 56 25			sta adr.OBSTACLES+$08
  2217 1ADD A9 00			lda #$00
  2218 1ADF 8D 57 25			sta adr.OBSTACLES+1+$08
  2219
  2220 				; optimize OK (levels.inc), line = 44
  2221
  2222 1AE2 A9 64			lda #$64
  2223 1AE4 8D 58 25			sta adr.OBSTACLES+$0A
  2224 1AE7 A9 0C			lda #$0C
  2225 1AE9 8D 59 25			sta adr.OBSTACLES+1+$0A
  2226
  2227 				; optimize OK (levels.inc), line = 45
  2228
  2229 1AEC A9 84			lda #$84
  2230 1AEE 8D 5A 25			sta adr.OBSTACLES+$0C
  2231 1AF1 A9 0F			lda #$0F
  2232 1AF3 8D 5B 25			sta adr.OBSTACLES+1+$0C
  2233
  2234 				; optimize OK (levels.inc), line = 46
  2235
  2236 1AF6 A9 7E			lda #$7E
  2237 1AF8 8D 5C 25			sta adr.OBSTACLES+$0E
  2238 1AFB A9 00			lda #$00
  2239 1AFD 8D 5D 25			sta adr.OBSTACLES+1+$0E
  2240
  2241 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 48
  2242
  2243 1B00 20 D2 12			jsr SAVEOBSTACLES
  2244 1B03			@exit
  2245 					.ifdef @new
  2246 					lda <@VarData
  2247 					sta :ztmp
  2248 					lda >@VarData
  2249 					ldy #@VarDataSize-1
  2250 					jmp @FreeMem
  2251 					els
  2252 1B03 60				rts						; ret
  2253 					eif
  2254 				.endl
  2255
  2256 1B04			.local	SETLEVEL03					; PROCEDURE
  2257
  2258 				; optimize OK (levels.inc), line = 55
  2259
  2260 1B04 A9 01			lda #$01
  2261 1B06 8D 6C 25			sta INITPLAYERS.ISALIVE
  2262 1B09 A9 5F			lda #$5F
  2263 1B0B 8D 6B 25			sta INITPLAYERS.COLOUR
  2264 1B0E A9 51			lda #$51
  2265 1B10 8D 6A 25			sta INITPLAYERS.HEAD
  2266 1B13 A9 00			lda #$00
  2267 1B15 8D 69 25			sta INITPLAYERS.BRAIN
  2268 1B18 A9 08			lda #$08
  2269 1B1A 8D 68 25			sta INITPLAYERS.DIR
  2270 1B1D A9 0C			lda #$0C
  2271 1B1F 8D 67 25			sta INITPLAYERS.Y
  2272 1B22 A9 0A			lda #$0A
  2273 1B24 8D 66 25			sta INITPLAYERS.X
  2274 1B27 AD 0F 25			lda PLAYER1
  2275 1B2A 8D 64 25			sta INITPLAYERS.P
  2276 1B2D AD 10 25			lda PLAYER1+1
  2277 1B30 8D 65 25			sta INITPLAYERS.P+1
  2278 1B33 20 E6 13			jsr INITPLAYERS
  2279
  2280 				; optimize OK (levels.inc), line = 56
  2281
  2282 1B36 A9 01			lda #$01
  2283 1B38 8D 6C 25			sta INITPLAYERS.ISALIVE
  2284 1B3B A9 5D			lda #$5D
  2285 1B3D 8D 6B 25			sta INITPLAYERS.COLOUR
  2286 1B40 A9 51			lda #$51
  2287 1B42 8D 6A 25			sta INITPLAYERS.HEAD
  2288 1B45 A9 02			lda #$02
  2289 1B47 8D 69 25			sta INITPLAYERS.BRAIN
  2290 1B4A A9 04			lda #$04
  2291 1B4C 8D 68 25			sta INITPLAYERS.DIR
  2292 1B4F A9 0C			lda #$0C
  2293 1B51 8D 67 25			sta INITPLAYERS.Y
  2294 1B54 A9 1E			lda #$1E
  2295 1B56 8D 66 25			sta INITPLAYERS.X
  2296 1B59 AD 11 25			lda PLAYER2
  2297 1B5C 8D 64 25			sta INITPLAYERS.P
  2298 1B5F AD 12 25			lda PLAYER2+1
  2299 1B62 8D 65 25			sta INITPLAYERS.P+1
  2300 1B65 20 E6 13			jsr INITPLAYERS
  2301
  2302 				; optimize OK (levels.inc), line = 57
  2303
  2304 1B68 A9 00			lda #$00
  2305 1B6A 8D 6C 25			sta INITPLAYERS.ISALIVE
  2306 1B6D A9 71			lda #$71
  2307 1B6F 8D 6B 25			sta INITPLAYERS.COLOUR
  2308 1B72 A9 51			lda #$51
  2309 1B74 8D 6A 25			sta INITPLAYERS.HEAD
  2310 1B77 A9 03			lda #$03
  2311 1B79 8D 69 25			sta INITPLAYERS.BRAIN
  2312 1B7C A9 02			lda #$02
  2313 1B7E 8D 68 25			sta INITPLAYERS.DIR
  2314 1B81 A9 04			lda #$04
  2315 1B83 8D 67 25			sta INITPLAYERS.Y
  2316 1B86 A9 14			lda #$14
  2317 1B88 8D 66 25			sta INITPLAYERS.X
  2318 1B8B AD 13 25			lda PLAYER3
  2319 1B8E 8D 64 25			sta INITPLAYERS.P
  2320 1B91 AD 14 25			lda PLAYER3+1
  2321 1B94 8D 65 25			sta INITPLAYERS.P+1
  2322 1B97 20 E6 13			jsr INITPLAYERS
  2323
  2324 				; optimize OK (levels.inc), line = 58
  2325
  2326 1B9A A9 00			lda #$00
  2327 1B9C 8D 6C 25			sta INITPLAYERS.ISALIVE
  2328 1B9F A9 55			lda #$55
  2329 1BA1 8D 6B 25			sta INITPLAYERS.COLOUR
  2330 1BA4 A9 51			lda #$51
  2331 1BA6 8D 6A 25			sta INITPLAYERS.HEAD
  2332 1BA9 A9 03			lda #$03
  2333 1BAB 8D 69 25			sta INITPLAYERS.BRAIN
  2334 1BAE A9 01			lda #$01
  2335 1BB0 8D 68 25			sta INITPLAYERS.DIR
  2336 1BB3 A9 12			lda #$12
  2337 1BB5 8D 67 25			sta INITPLAYERS.Y
  2338 1BB8 A9 14			lda #$14
  2339 1BBA 8D 66 25			sta INITPLAYERS.X
  2340 1BBD AD 15 25			lda PLAYER4
  2341 1BC0 8D 64 25			sta INITPLAYERS.P
  2342 1BC3 AD 16 25			lda PLAYER4+1
  2343 1BC6 8D 65 25			sta INITPLAYERS.P+1
  2344 1BC9 20 E6 13			jsr INITPLAYERS
  2345
  2346 				; optimize OK (levels.inc), line = 60
  2347
  2348 1BCC A9 FA			lda #$FA
  2349 1BCE 8D 4E 25			sta adr.OBSTACLES+$00
  2350 1BD1 A9 0C			lda #$0C
  2351 1BD3 8D 4F 25			sta adr.OBSTACLES+1+$00
  2352
  2353 				; optimize OK (levels.inc), line = 61
  2354
  2355 1BD6 A9 0E			lda #$0E
  2356 1BD8 8D 50 25			sta adr.OBSTACLES+$02
  2357 1BDB A9 0D			lda #$0D
  2358 1BDD 8D 51 25			sta adr.OBSTACLES+1+$02
  2359
  2360 				; optimize OK (levels.inc), line = 62
  2361
  2362 1BE0 A9 DA			lda #$DA
  2363 1BE2 8D 52 25			sta adr.OBSTACLES+$04
  2364 1BE5 A9 0E			lda #$0E
  2365 1BE7 8D 53 25			sta adr.OBSTACLES+1+$04
  2366
  2367 				; optimize OK (levels.inc), line = 63
  2368
  2369 1BEA A9 EE			lda #$EE
  2370 1BEC 8D 54 25			sta adr.OBSTACLES+$06
  2371 1BEF A9 0E			lda #$0E
  2372 1BF1 8D 55 25			sta adr.OBSTACLES+1+$06
  2373
  2374 				; optimize OK (levels.inc), line = 64
  2375
  2376 1BF4 A9 E1			lda #$E1
  2377 1BF6 8D 56 25			sta adr.OBSTACLES+$08
  2378 1BF9 A9 0D			lda #$0D
  2379 1BFB 8D 57 25			sta adr.OBSTACLES+1+$08
  2380
  2381 				; optimize OK (levels.inc), line = 65
  2382
  2383 1BFE A9 64			lda #$64
  2384 1C00 8D 58 25			sta adr.OBSTACLES+$0A
  2385 1C03 A9 0C			lda #$0C
  2386 1C05 8D 59 25			sta adr.OBSTACLES+1+$0A
  2387
  2388 				; optimize OK (levels.inc), line = 66
  2389
  2390 1C08 A9 84			lda #$84
  2391 1C0A 8D 5A 25			sta adr.OBSTACLES+$0C
  2392 1C0D A9 0F			lda #$0F
  2393 1C0F 8D 5B 25			sta adr.OBSTACLES+1+$0C
  2394
  2395 				; optimize OK (levels.inc), line = 67
  2396
  2397 1C12 A9 7E			lda #$7E
  2398 1C14 8D 5C 25			sta adr.OBSTACLES+$0E
  2399 1C17 A9 00			lda #$00
  2400 1C19 8D 5D 25			sta adr.OBSTACLES+1+$0E
  2401
  2402 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 69
  2403
  2404 1C1C 20 D2 12			jsr SAVEOBSTACLES
  2405 1C1F			@exit
  2406 					.ifdef @new
  2407 					lda <@VarData
  2408 					sta :ztmp
  2409 					lda >@VarData
  2410 					ldy #@VarDataSize-1
  2411 					jmp @FreeMem
  2412 					els
  2413 1C1F 60				rts						; ret
  2414 					eif
  2415 				.endl
  2416
  2417 1C20			.local	SETLEVEL04					; PROCEDURE
  2418
  2419 				; optimize OK (levels.inc), line = 76
  2420
  2421 1C20 A9 01			lda #$01
  2422 1C22 8D 6C 25			sta INITPLAYERS.ISALIVE
  2423 1C25 A9 5F			lda #$5F
  2424 1C27 8D 6B 25			sta INITPLAYERS.COLOUR
  2425 1C2A A9 51			lda #$51
  2426 1C2C 8D 6A 25			sta INITPLAYERS.HEAD
  2427 1C2F A9 00			lda #$00
  2428 1C31 8D 69 25			sta INITPLAYERS.BRAIN
  2429 1C34 A9 04			lda #$04
  2430 1C36 8D 68 25			sta INITPLAYERS.DIR
  2431 1C39 A9 0C			lda #$0C
  2432 1C3B 8D 67 25			sta INITPLAYERS.Y
  2433 1C3E A9 12			lda #$12
  2434 1C40 8D 66 25			sta INITPLAYERS.X
  2435 1C43 AD 0F 25			lda PLAYER1
  2436 1C46 8D 64 25			sta INITPLAYERS.P
  2437 1C49 AD 10 25			lda PLAYER1+1
  2438 1C4C 8D 65 25			sta INITPLAYERS.P+1
  2439 1C4F 20 E6 13			jsr INITPLAYERS
  2440
  2441 				; optimize OK (levels.inc), line = 77
  2442
  2443 1C52 A9 01			lda #$01
  2444 1C54 8D 6C 25			sta INITPLAYERS.ISALIVE
  2445 1C57 A9 5D			lda #$5D
  2446 1C59 8D 6B 25			sta INITPLAYERS.COLOUR
  2447 1C5C A9 51			lda #$51
  2448 1C5E 8D 6A 25			sta INITPLAYERS.HEAD
  2449 1C61 A9 04			lda #$04
  2450 1C63 8D 69 25			sta INITPLAYERS.BRAIN
  2451 1C66 A9 08			lda #$08
  2452 1C68 8D 68 25			sta INITPLAYERS.DIR
  2453 1C6B A9 0C			lda #$0C
  2454 1C6D 8D 67 25			sta INITPLAYERS.Y
  2455 1C70 A9 16			lda #$16
  2456 1C72 8D 66 25			sta INITPLAYERS.X
  2457 1C75 AD 11 25			lda PLAYER2
  2458 1C78 8D 64 25			sta INITPLAYERS.P
  2459 1C7B AD 12 25			lda PLAYER2+1
  2460 1C7E 8D 65 25			sta INITPLAYERS.P+1
  2461 1C81 20 E6 13			jsr INITPLAYERS
  2462
  2463 				; optimize OK (levels.inc), line = 78
  2464
  2465 1C84 A9 00			lda #$00
  2466 1C86 8D 6C 25			sta INITPLAYERS.ISALIVE
  2467 1C89 A9 71			lda #$71
  2468 1C8B 8D 6B 25			sta INITPLAYERS.COLOUR
  2469 1C8E A9 51			lda #$51
  2470 1C90 8D 6A 25			sta INITPLAYERS.HEAD
  2471 1C93 A9 03			lda #$03
  2472 1C95 8D 69 25			sta INITPLAYERS.BRAIN
  2473 1C98 A9 02			lda #$02
  2474 1C9A 8D 68 25			sta INITPLAYERS.DIR
  2475 1C9D A9 04			lda #$04
  2476 1C9F 8D 67 25			sta INITPLAYERS.Y
  2477 1CA2 A9 14			lda #$14
  2478 1CA4 8D 66 25			sta INITPLAYERS.X
  2479 1CA7 AD 13 25			lda PLAYER3
  2480 1CAA 8D 64 25			sta INITPLAYERS.P
  2481 1CAD AD 14 25			lda PLAYER3+1
  2482 1CB0 8D 65 25			sta INITPLAYERS.P+1
  2483 1CB3 20 E6 13			jsr INITPLAYERS
  2484
  2485 				; optimize OK (levels.inc), line = 79
  2486
  2487 1CB6 A9 00			lda #$00
  2488 1CB8 8D 6C 25			sta INITPLAYERS.ISALIVE
  2489 1CBB A9 55			lda #$55
  2490 1CBD 8D 6B 25			sta INITPLAYERS.COLOUR
  2491 1CC0 A9 51			lda #$51
  2492 1CC2 8D 6A 25			sta INITPLAYERS.HEAD
  2493 1CC5 A9 03			lda #$03
  2494 1CC7 8D 69 25			sta INITPLAYERS.BRAIN
  2495 1CCA A9 01			lda #$01
  2496 1CCC 8D 68 25			sta INITPLAYERS.DIR
  2497 1CCF A9 12			lda #$12
  2498 1CD1 8D 67 25			sta INITPLAYERS.Y
  2499 1CD4 A9 14			lda #$14
  2500 1CD6 8D 66 25			sta INITPLAYERS.X
  2501 1CD9 AD 15 25			lda PLAYER4
  2502 1CDC 8D 64 25			sta INITPLAYERS.P
  2503 1CDF AD 16 25			lda PLAYER4+1
  2504 1CE2 8D 65 25			sta INITPLAYERS.P+1
  2505 1CE5 20 E6 13			jsr INITPLAYERS
  2506
  2507 				; optimize OK (levels.inc), line = 81
  2508
  2509 1CE8 A9 FA			lda #$FA
  2510 1CEA 8D 4E 25			sta adr.OBSTACLES+$00
  2511 1CED A9 0C			lda #$0C
  2512 1CEF 8D 4F 25			sta adr.OBSTACLES+1+$00
  2513
  2514 				; optimize OK (levels.inc), line = 82
  2515
  2516 1CF2 A9 0E			lda #$0E
  2517 1CF4 8D 50 25			sta adr.OBSTACLES+$02
  2518 1CF7 A9 0D			lda #$0D
  2519 1CF9 8D 51 25			sta adr.OBSTACLES+1+$02
  2520
  2521 				; optimize OK (levels.inc), line = 83
  2522
  2523 1CFC A9 DA			lda #$DA
  2524 1CFE 8D 52 25			sta adr.OBSTACLES+$04
  2525 1D01 A9 0E			lda #$0E
  2526 1D03 8D 53 25			sta adr.OBSTACLES+1+$04
  2527
  2528 				; optimize OK (levels.inc), line = 84
  2529
  2530 1D06 A9 EE			lda #$EE
  2531 1D08 8D 54 25			sta adr.OBSTACLES+$06
  2532 1D0B A9 0E			lda #$0E
  2533 1D0D 8D 55 25			sta adr.OBSTACLES+1+$06
  2534
  2535 				; optimize OK (levels.inc), line = 85
  2536
  2537 1D10 A9 E1			lda #$E1
  2538 1D12 8D 56 25			sta adr.OBSTACLES+$08
  2539 1D15 A9 0D			lda #$0D
  2540 1D17 8D 57 25			sta adr.OBSTACLES+1+$08
  2541
  2542 				; optimize OK (levels.inc), line = 86
  2543
  2544 1D1A A9 64			lda #$64
  2545 1D1C 8D 58 25			sta adr.OBSTACLES+$0A
  2546 1D1F A9 0C			lda #$0C
  2547 1D21 8D 59 25			sta adr.OBSTACLES+1+$0A
  2548
  2549 				; optimize OK (levels.inc), line = 87
  2550
  2551 1D24 A9 84			lda #$84
  2552 1D26 8D 5A 25			sta adr.OBSTACLES+$0C
  2553 1D29 A9 0F			lda #$0F
  2554 1D2B 8D 5B 25			sta adr.OBSTACLES+1+$0C
  2555
  2556 				; optimize OK (levels.inc), line = 88
  2557
  2558 1D2E A9 F4			lda #$F4
  2559 1D30 8D 5C 25			sta adr.OBSTACLES+$0E
  2560 1D33 A9 0D			lda #$0D
  2561 1D35 8D 5D 25			sta adr.OBSTACLES+1+$0E
  2562
  2563 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 90
  2564
  2565 1D38 20 D2 12			jsr SAVEOBSTACLES
  2566 1D3B			@exit
  2567 					.ifdef @new
  2568 					lda <@VarData
  2569 					sta :ztmp
  2570 					lda >@VarData
  2571 					ldy #@VarDataSize-1
  2572 					jmp @FreeMem
  2573 					els
  2574 1D3B 60				rts						; ret
  2575 					eif
  2576 				.endl
  2577
  2578 1D3C			.local	SETLEVEL05					; PROCEDURE
  2579
  2580 				; optimize OK (levels.inc), line = 97
  2581
  2582 1D3C A9 01			lda #$01
  2583 1D3E 8D 6C 25			sta INITPLAYERS.ISALIVE
  2584 1D41 A9 5F			lda #$5F
  2585 1D43 8D 6B 25			sta INITPLAYERS.COLOUR
  2586 1D46 A9 51			lda #$51
  2587 1D48 8D 6A 25			sta INITPLAYERS.HEAD
  2588 1D4B A9 00			lda #$00
  2589 1D4D 8D 69 25			sta INITPLAYERS.BRAIN
  2590 1D50 A9 08			lda #$08
  2591 1D52 8D 68 25			sta INITPLAYERS.DIR
  2592 1D55 A9 0C			lda #$0C
  2593 1D57 8D 67 25			sta INITPLAYERS.Y
  2594 1D5A A9 0A			lda #$0A
  2595 1D5C 8D 66 25			sta INITPLAYERS.X
  2596 1D5F AD 0F 25			lda PLAYER1
  2597 1D62 8D 64 25			sta INITPLAYERS.P
  2598 1D65 AD 10 25			lda PLAYER1+1
  2599 1D68 8D 65 25			sta INITPLAYERS.P+1
  2600 1D6B 20 E6 13			jsr INITPLAYERS
  2601
  2602 				; optimize OK (levels.inc), line = 98
  2603
  2604 1D6E A9 01			lda #$01
  2605 1D70 8D 6C 25			sta INITPLAYERS.ISALIVE
  2606 1D73 A9 5D			lda #$5D
  2607 1D75 8D 6B 25			sta INITPLAYERS.COLOUR
  2608 1D78 A9 51			lda #$51
  2609 1D7A 8D 6A 25			sta INITPLAYERS.HEAD
  2610 1D7D A9 04			lda #$04
  2611 1D7F 8D 69 25			sta INITPLAYERS.BRAIN
  2612 1D82 8D 68 25			sta INITPLAYERS.DIR
  2613 1D85 A9 0C			lda #$0C
  2614 1D87 8D 67 25			sta INITPLAYERS.Y
  2615 1D8A A9 1E			lda #$1E
  2616 1D8C 8D 66 25			sta INITPLAYERS.X
  2617 1D8F AD 11 25			lda PLAYER2
  2618 1D92 8D 64 25			sta INITPLAYERS.P
  2619 1D95 AD 12 25			lda PLAYER2+1
  2620 1D98 8D 65 25			sta INITPLAYERS.P+1
  2621 1D9B 20 E6 13			jsr INITPLAYERS
  2622
  2623 				; optimize OK (levels.inc), line = 99
  2624
  2625 1D9E A9 01			lda #$01
  2626 1DA0 8D 6C 25			sta INITPLAYERS.ISALIVE
  2627 1DA3 A9 71			lda #$71
  2628 1DA5 8D 6B 25			sta INITPLAYERS.COLOUR
  2629 1DA8 A9 51			lda #$51
  2630 1DAA 8D 6A 25			sta INITPLAYERS.HEAD
  2631 1DAD A9 03			lda #$03
  2632 1DAF 8D 69 25			sta INITPLAYERS.BRAIN
  2633 1DB2 A9 02			lda #$02
  2634 1DB4 8D 68 25			sta INITPLAYERS.DIR
  2635 1DB7 A9 04			lda #$04
  2636 1DB9 8D 67 25			sta INITPLAYERS.Y
  2637 1DBC A9 14			lda #$14
  2638 1DBE 8D 66 25			sta INITPLAYERS.X
  2639 1DC1 AD 13 25			lda PLAYER3
  2640 1DC4 8D 64 25			sta INITPLAYERS.P
  2641 1DC7 AD 14 25			lda PLAYER3+1
  2642 1DCA 8D 65 25			sta INITPLAYERS.P+1
  2643 1DCD 20 E6 13			jsr INITPLAYERS
  2644
  2645 				; optimize OK (levels.inc), line = 100
  2646
  2647 1DD0 A9 01			lda #$01
  2648 1DD2 8D 6C 25			sta INITPLAYERS.ISALIVE
  2649 1DD5 A9 55			lda #$55
  2650 1DD7 8D 6B 25			sta INITPLAYERS.COLOUR
  2651 1DDA A9 51			lda #$51
  2652 1DDC 8D 6A 25			sta INITPLAYERS.HEAD
  2653 1DDF A9 02			lda #$02
  2654 1DE1 8D 69 25			sta INITPLAYERS.BRAIN
  2655 1DE4 A9 01			lda #$01
  2656 1DE6 8D 68 25			sta INITPLAYERS.DIR
  2657 1DE9 A9 12			lda #$12
  2658 1DEB 8D 67 25			sta INITPLAYERS.Y
  2659 1DEE A9 14			lda #$14
  2660 1DF0 8D 66 25			sta INITPLAYERS.X
  2661 1DF3 AD 15 25			lda PLAYER4
  2662 1DF6 8D 64 25			sta INITPLAYERS.P
  2663 1DF9 AD 16 25			lda PLAYER4+1
  2664 1DFC 8D 65 25			sta INITPLAYERS.P+1
  2665 1DFF 20 E6 13			jsr INITPLAYERS
  2666
  2667 				; optimize OK (levels.inc), line = 102
  2668
  2669 1E02 A9 FA			lda #$FA
  2670 1E04 8D 4E 25			sta adr.OBSTACLES+$00
  2671 1E07 A9 0C			lda #$0C
  2672 1E09 8D 4F 25			sta adr.OBSTACLES+1+$00
  2673
  2674 				; optimize OK (levels.inc), line = 103
  2675
  2676 1E0C A9 0E			lda #$0E
  2677 1E0E 8D 50 25			sta adr.OBSTACLES+$02
  2678 1E11 A9 0D			lda #$0D
  2679 1E13 8D 51 25			sta adr.OBSTACLES+1+$02
  2680
  2681 				; optimize OK (levels.inc), line = 104
  2682
  2683 1E16 A9 DA			lda #$DA
  2684 1E18 8D 52 25			sta adr.OBSTACLES+$04
  2685 1E1B A9 0E			lda #$0E
  2686 1E1D 8D 53 25			sta adr.OBSTACLES+1+$04
  2687
  2688 				; optimize OK (levels.inc), line = 105
  2689
  2690 1E20 A9 EE			lda #$EE
  2691 1E22 8D 54 25			sta adr.OBSTACLES+$06
  2692 1E25 A9 0E			lda #$0E
  2693 1E27 8D 55 25			sta adr.OBSTACLES+1+$06
  2694
  2695 				; optimize OK (levels.inc), line = 106
  2696
  2697 1E2A A9 E1			lda #$E1
  2698 1E2C 8D 56 25			sta adr.OBSTACLES+$08
  2699 1E2F A9 0D			lda #$0D
  2700 1E31 8D 57 25			sta adr.OBSTACLES+1+$08
  2701
  2702 				; optimize OK (levels.inc), line = 107
  2703
  2704 1E34 A9 64			lda #$64
  2705 1E36 8D 58 25			sta adr.OBSTACLES+$0A
  2706 1E39 A9 0C			lda #$0C
  2707 1E3B 8D 59 25			sta adr.OBSTACLES+1+$0A
  2708
  2709 				; optimize OK (levels.inc), line = 108
  2710
  2711 1E3E A9 84			lda #$84
  2712 1E40 8D 5A 25			sta adr.OBSTACLES+$0C
  2713 1E43 A9 0F			lda #$0F
  2714 1E45 8D 5B 25			sta adr.OBSTACLES+1+$0C
  2715
  2716 				; optimize OK (levels.inc), line = 109
  2717
  2718 1E48 A9 7E			lda #$7E
  2719 1E4A 8D 5C 25			sta adr.OBSTACLES+$0E
  2720 1E4D A9 00			lda #$00
  2721 1E4F 8D 5D 25			sta adr.OBSTACLES+1+$0E
  2722
  2723 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 111
  2724
  2725 1E52 20 D2 12			jsr SAVEOBSTACLES
  2726 1E55			@exit
  2727 					.ifdef @new
  2728 					lda <@VarData
  2729 					sta :ztmp
  2730 					lda >@VarData
  2731 					ldy #@VarDataSize-1
  2732 					jmp @FreeMem
  2733 					els
  2734 1E55 60				rts						; ret
  2735 					eif
  2736 				.endl
  2737
  2738 1E56			.local	SETLEVEL06					; PROCEDURE
  2739
  2740 				; optimize OK (levels.inc), line = 118
  2741
  2742 1E56 A9 01			lda #$01
  2743 1E58 8D 6C 25			sta INITPLAYERS.ISALIVE
  2744 1E5B A9 5F			lda #$5F
  2745 1E5D 8D 6B 25			sta INITPLAYERS.COLOUR
  2746 1E60 A9 51			lda #$51
  2747 1E62 8D 6A 25			sta INITPLAYERS.HEAD
  2748 1E65 A9 00			lda #$00
  2749 1E67 8D 69 25			sta INITPLAYERS.BRAIN
  2750 1E6A A9 04			lda #$04
  2751 1E6C 8D 68 25			sta INITPLAYERS.DIR
  2752 1E6F A9 0C			lda #$0C
  2753 1E71 8D 67 25			sta INITPLAYERS.Y
  2754 1E74 A9 12			lda #$12
  2755 1E76 8D 66 25			sta INITPLAYERS.X
  2756 1E79 AD 0F 25			lda PLAYER1
  2757 1E7C 8D 64 25			sta INITPLAYERS.P
  2758 1E7F AD 10 25			lda PLAYER1+1
  2759 1E82 8D 65 25			sta INITPLAYERS.P+1
  2760 1E85 20 E6 13			jsr INITPLAYERS
  2761
  2762 				; optimize OK (levels.inc), line = 119
  2763
  2764 1E88 A9 01			lda #$01
  2765 1E8A 8D 6C 25			sta INITPLAYERS.ISALIVE
  2766 1E8D A9 5D			lda #$5D
  2767 1E8F 8D 6B 25			sta INITPLAYERS.COLOUR
  2768 1E92 A9 51			lda #$51
  2769 1E94 8D 6A 25			sta INITPLAYERS.HEAD
  2770 1E97 A9 02			lda #$02
  2771 1E99 8D 69 25			sta INITPLAYERS.BRAIN
  2772 1E9C A9 08			lda #$08
  2773 1E9E 8D 68 25			sta INITPLAYERS.DIR
  2774 1EA1 A9 0C			lda #$0C
  2775 1EA3 8D 67 25			sta INITPLAYERS.Y
  2776 1EA6 A9 16			lda #$16
  2777 1EA8 8D 66 25			sta INITPLAYERS.X
  2778 1EAB AD 11 25			lda PLAYER2
  2779 1EAE 8D 64 25			sta INITPLAYERS.P
  2780 1EB1 AD 12 25			lda PLAYER2+1
  2781 1EB4 8D 65 25			sta INITPLAYERS.P+1
  2782 1EB7 20 E6 13			jsr INITPLAYERS
  2783
  2784 				; optimize OK (levels.inc), line = 120
  2785
  2786 1EBA A9 01			lda #$01
  2787 1EBC 8D 6C 25			sta INITPLAYERS.ISALIVE
  2788 1EBF A9 71			lda #$71
  2789 1EC1 8D 6B 25			sta INITPLAYERS.COLOUR
  2790 1EC4 A9 51			lda #$51
  2791 1EC6 8D 6A 25			sta INITPLAYERS.HEAD
  2792 1EC9 A9 02			lda #$02
  2793 1ECB 8D 69 25			sta INITPLAYERS.BRAIN
  2794 1ECE 8D 68 25			sta INITPLAYERS.DIR
  2795 1ED1 A9 06			lda #$06
  2796 1ED3 8D 67 25			sta INITPLAYERS.Y
  2797 1ED6 8D 66 25			sta INITPLAYERS.X
  2798 1ED9 AD 13 25			lda PLAYER3
  2799 1EDC 8D 64 25			sta INITPLAYERS.P
  2800 1EDF AD 14 25			lda PLAYER3+1
  2801 1EE2 8D 65 25			sta INITPLAYERS.P+1
  2802 1EE5 20 E6 13			jsr INITPLAYERS
  2803
  2804 				; optimize OK (levels.inc), line = 121
  2805
  2806 1EE8 A9 01			lda #$01
  2807 1EEA 8D 6C 25			sta INITPLAYERS.ISALIVE
  2808 1EED A9 55			lda #$55
  2809 1EEF 8D 6B 25			sta INITPLAYERS.COLOUR
  2810 1EF2 A9 51			lda #$51
  2811 1EF4 8D 6A 25			sta INITPLAYERS.HEAD
  2812 1EF7 A9 03			lda #$03
  2813 1EF9 8D 69 25			sta INITPLAYERS.BRAIN
  2814 1EFC A9 08			lda #$08
  2815 1EFE 8D 68 25			sta INITPLAYERS.DIR
  2816 1F01 A9 12			lda #$12
  2817 1F03 8D 67 25			sta INITPLAYERS.Y
  2818 1F06 A9 24			lda #$24
  2819 1F08 8D 66 25			sta INITPLAYERS.X
  2820 1F0B AD 15 25			lda PLAYER4
  2821 1F0E 8D 64 25			sta INITPLAYERS.P
  2822 1F11 AD 16 25			lda PLAYER4+1
  2823 1F14 8D 65 25			sta INITPLAYERS.P+1
  2824 1F17 20 E6 13			jsr INITPLAYERS
  2825
  2826 				; optimize OK (levels.inc), line = 123
  2827
  2828 1F1A A9 FA			lda #$FA
  2829 1F1C 8D 4E 25			sta adr.OBSTACLES+$00
  2830 1F1F A9 0C			lda #$0C
  2831 1F21 8D 4F 25			sta adr.OBSTACLES+1+$00
  2832
  2833 				; optimize OK (levels.inc), line = 124
  2834
  2835 1F24 A9 0E			lda #$0E
  2836 1F26 8D 50 25			sta adr.OBSTACLES+$02
  2837 1F29 A9 0D			lda #$0D
  2838 1F2B 8D 51 25			sta adr.OBSTACLES+1+$02
  2839
  2840 				; optimize OK (levels.inc), line = 125
  2841
  2842 1F2E A9 DA			lda #$DA
  2843 1F30 8D 52 25			sta adr.OBSTACLES+$04
  2844 1F33 A9 0E			lda #$0E
  2845 1F35 8D 53 25			sta adr.OBSTACLES+1+$04
  2846
  2847 				; optimize OK (levels.inc), line = 126
  2848
  2849 1F38 A9 EE			lda #$EE
  2850 1F3A 8D 54 25			sta adr.OBSTACLES+$06
  2851 1F3D A9 0E			lda #$0E
  2852 1F3F 8D 55 25			sta adr.OBSTACLES+1+$06
  2853
  2854 				; optimize OK (levels.inc), line = 127
  2855
  2856 1F42 A9 E1			lda #$E1
  2857 1F44 8D 56 25			sta adr.OBSTACLES+$08
  2858 1F47 A9 0D			lda #$0D
  2859 1F49 8D 57 25			sta adr.OBSTACLES+1+$08
  2860
  2861 				; optimize OK (levels.inc), line = 128
  2862
  2863 1F4C A9 64			lda #$64
  2864 1F4E 8D 58 25			sta adr.OBSTACLES+$0A
  2865 1F51 A9 0C			lda #$0C
  2866 1F53 8D 59 25			sta adr.OBSTACLES+1+$0A
  2867
  2868 				; optimize OK (levels.inc), line = 129
  2869
  2870 1F56 A9 84			lda #$84
  2871 1F58 8D 5A 25			sta adr.OBSTACLES+$0C
  2872 1F5B A9 0F			lda #$0F
  2873 1F5D 8D 5B 25			sta adr.OBSTACLES+1+$0C
  2874
  2875 				; optimize OK (levels.inc), line = 130
  2876
  2877 1F60 A9 F4			lda #$F4
  2878 1F62 8D 5C 25			sta adr.OBSTACLES+$0E
  2879 1F65 A9 0D			lda #$0D
  2880 1F67 8D 5D 25			sta adr.OBSTACLES+1+$0E
  2881
  2882 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 132
  2883
  2884 1F6A 20 D2 12			jsr SAVEOBSTACLES
  2885 1F6D			@exit
  2886 					.ifdef @new
  2887 					lda <@VarData
  2888 					sta :ztmp
  2889 					lda >@VarData
  2890 					ldy #@VarDataSize-1
  2891 					jmp @FreeMem
  2892 					els
  2893 1F6D 60				rts						; ret
  2894 					eif
  2895 				.endl
  2896
  2897 1F6E			.local	SETLEVEL07					; PROCEDURE
  2898
  2899 				; optimize OK (levels.inc), line = 139
  2900
  2901 1F6E A9 01			lda #$01
  2902 1F70 8D 6C 25			sta INITPLAYERS.ISALIVE
  2903 1F73 A9 5F			lda #$5F
  2904 1F75 8D 6B 25			sta INITPLAYERS.COLOUR
  2905 1F78 A9 51			lda #$51
  2906 1F7A 8D 6A 25			sta INITPLAYERS.HEAD
  2907 1F7D A9 00			lda #$00
  2908 1F7F 8D 69 25			sta INITPLAYERS.BRAIN
  2909 1F82 A9 04			lda #$04
  2910 1F84 8D 68 25			sta INITPLAYERS.DIR
  2911 1F87 A9 0C			lda #$0C
  2912 1F89 8D 67 25			sta INITPLAYERS.Y
  2913 1F8C A9 12			lda #$12
  2914 1F8E 8D 66 25			sta INITPLAYERS.X
  2915 1F91 AD 0F 25			lda PLAYER1
  2916 1F94 8D 64 25			sta INITPLAYERS.P
  2917 1F97 AD 10 25			lda PLAYER1+1
  2918 1F9A 8D 65 25			sta INITPLAYERS.P+1
  2919 1F9D 20 E6 13			jsr INITPLAYERS
  2920
  2921 				; optimize OK (levels.inc), line = 140
  2922
  2923 1FA0 A9 01			lda #$01
  2924 1FA2 8D 6C 25			sta INITPLAYERS.ISALIVE
  2925 1FA5 A9 5D			lda #$5D
  2926 1FA7 8D 6B 25			sta INITPLAYERS.COLOUR
  2927 1FAA A9 51			lda #$51
  2928 1FAC 8D 6A 25			sta INITPLAYERS.HEAD
  2929 1FAF A9 03			lda #$03
  2930 1FB1 8D 69 25			sta INITPLAYERS.BRAIN
  2931 1FB4 A9 08			lda #$08
  2932 1FB6 8D 68 25			sta INITPLAYERS.DIR
  2933 1FB9 A9 17			lda #$17
  2934 1FBB 8D 67 25			sta INITPLAYERS.Y
  2935 1FBE A9 01			lda #$01
  2936 1FC0 8D 66 25			sta INITPLAYERS.X
  2937 1FC3 AD 11 25			lda PLAYER2
  2938 1FC6 8D 64 25			sta INITPLAYERS.P
  2939 1FC9 AD 12 25			lda PLAYER2+1
  2940 1FCC 8D 65 25			sta INITPLAYERS.P+1
  2941 1FCF 20 E6 13			jsr INITPLAYERS
  2942
  2943 				; optimize OK (levels.inc), line = 141
  2944
  2945 1FD2 A9 01			lda #$01
  2946 1FD4 8D 6C 25			sta INITPLAYERS.ISALIVE
  2947 1FD7 A9 71			lda #$71
  2948 1FD9 8D 6B 25			sta INITPLAYERS.COLOUR
  2949 1FDC A9 51			lda #$51
  2950 1FDE 8D 6A 25			sta INITPLAYERS.HEAD
  2951 1FE1 A9 03			lda #$03
  2952 1FE3 8D 69 25			sta INITPLAYERS.BRAIN
  2953 1FE6 A9 02			lda #$02
  2954 1FE8 8D 68 25			sta INITPLAYERS.DIR
  2955 1FEB A9 04			lda #$04
  2956 1FED 8D 67 25			sta INITPLAYERS.Y
  2957 1FF0 A9 1E			lda #$1E
  2958 1FF2 8D 66 25			sta INITPLAYERS.X
  2959 1FF5 AD 13 25			lda PLAYER3
  2960 1FF8 8D 64 25			sta INITPLAYERS.P
  2961 1FFB AD 14 25			lda PLAYER3+1
  2962 1FFE 8D 65 25			sta INITPLAYERS.P+1
  2963 2001 20 E6 13			jsr INITPLAYERS
  2964
  2965 				; optimize OK (levels.inc), line = 142
  2966
  2967 2004 A9 01			lda #$01
  2968 2006 8D 6C 25			sta INITPLAYERS.ISALIVE
  2969 2009 A9 55			lda #$55
  2970 200B 8D 6B 25			sta INITPLAYERS.COLOUR
  2971 200E A9 51			lda #$51
  2972 2010 8D 6A 25			sta INITPLAYERS.HEAD
  2973 2013 A9 02			lda #$02
  2974 2015 8D 69 25			sta INITPLAYERS.BRAIN
  2975 2018 A9 01			lda #$01
  2976 201A 8D 68 25			sta INITPLAYERS.DIR
  2977 201D A9 15			lda #$15
  2978 201F 8D 67 25			sta INITPLAYERS.Y
  2979 2022 A9 24			lda #$24
  2980 2024 8D 66 25			sta INITPLAYERS.X
  2981 2027 AD 15 25			lda PLAYER4
  2982 202A 8D 64 25			sta INITPLAYERS.P
  2983 202D AD 16 25			lda PLAYER4+1
  2984 2030 8D 65 25			sta INITPLAYERS.P+1
  2985 2033 20 E6 13			jsr INITPLAYERS
  2986
  2987 				; optimize OK (levels.inc), line = 144
  2988
  2989 2036 A9 FA			lda #$FA
  2990 2038 8D 4E 25			sta adr.OBSTACLES+$00
  2991 203B A9 0C			lda #$0C
  2992 203D 8D 4F 25			sta adr.OBSTACLES+1+$00
  2993
  2994 				; optimize OK (levels.inc), line = 145
  2995
  2996 2040 A9 0E			lda #$0E
  2997 2042 8D 50 25			sta adr.OBSTACLES+$02
  2998 2045 A9 0D			lda #$0D
  2999 2047 8D 51 25			sta adr.OBSTACLES+1+$02
  3000
  3001 				; optimize OK (levels.inc), line = 146
  3002
  3003 204A A9 DA			lda #$DA
  3004 204C 8D 52 25			sta adr.OBSTACLES+$04
  3005 204F A9 0E			lda #$0E
  3006 2051 8D 53 25			sta adr.OBSTACLES+1+$04
  3007
  3008 				; optimize OK (levels.inc), line = 147
  3009
  3010 2054 A9 EE			lda #$EE
  3011 2056 8D 54 25			sta adr.OBSTACLES+$06
  3012 2059 A9 0E			lda #$0E
  3013 205B 8D 55 25			sta adr.OBSTACLES+1+$06
  3014
  3015 				; optimize OK (levels.inc), line = 148
  3016
  3017 205E A9 E1			lda #$E1
  3018 2060 8D 56 25			sta adr.OBSTACLES+$08
  3019 2063 A9 0D			lda #$0D
  3020 2065 8D 57 25			sta adr.OBSTACLES+1+$08
  3021
  3022 				; optimize OK (levels.inc), line = 149
  3023
  3024 2068 A9 64			lda #$64
  3025 206A 8D 58 25			sta adr.OBSTACLES+$0A
  3026 206D A9 0C			lda #$0C
  3027 206F 8D 59 25			sta adr.OBSTACLES+1+$0A
  3028
  3029 				; optimize OK (levels.inc), line = 150
  3030
  3031 2072 A9 84			lda #$84
  3032 2074 8D 5A 25			sta adr.OBSTACLES+$0C
  3033 2077 A9 0F			lda #$0F
  3034 2079 8D 5B 25			sta adr.OBSTACLES+1+$0C
  3035
  3036 				; optimize OK (levels.inc), line = 151
  3037
  3038 207C A9 F4			lda #$F4
  3039 207E 8D 5C 25			sta adr.OBSTACLES+$0E
  3040 2081 A9 0D			lda #$0D
  3041 2083 8D 5D 25			sta adr.OBSTACLES+1+$0E
  3042
  3043 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 153
  3044
  3045 2086 20 D2 12			jsr SAVEOBSTACLES
  3046 2089			@exit
  3047 					.ifdef @new
  3048 					lda <@VarData
  3049 					sta :ztmp
  3050 					lda >@VarData
  3051 					ldy #@VarDataSize-1
  3052 					jmp @FreeMem
  3053 					els
  3054 2089 60				rts						; ret
  3055 					eif
  3056 				.endl
  3057
  3058 208A			.local	SETLEVEL08					; PROCEDURE
  3059
  3060 				; optimize OK (levels.inc), line = 160
  3061
  3062 208A A9 01			lda #$01
  3063 208C 8D 6C 25			sta INITPLAYERS.ISALIVE
  3064 208F A9 5F			lda #$5F
  3065 2091 8D 6B 25			sta INITPLAYERS.COLOUR
  3066 2094 A9 51			lda #$51
  3067 2096 8D 6A 25			sta INITPLAYERS.HEAD
  3068 2099 A9 00			lda #$00
  3069 209B 8D 69 25			sta INITPLAYERS.BRAIN
  3070 209E A9 08			lda #$08
  3071 20A0 8D 68 25			sta INITPLAYERS.DIR
  3072 20A3 A9 17			lda #$17
  3073 20A5 8D 67 25			sta INITPLAYERS.Y
  3074 20A8 A9 01			lda #$01
  3075 20AA 8D 66 25			sta INITPLAYERS.X
  3076 20AD AD 0F 25			lda PLAYER1
  3077 20B0 8D 64 25			sta INITPLAYERS.P
  3078 20B3 AD 10 25			lda PLAYER1+1
  3079 20B6 8D 65 25			sta INITPLAYERS.P+1
  3080 20B9 20 E6 13			jsr INITPLAYERS
  3081
  3082 				; optimize OK (levels.inc), line = 161
  3083
  3084 20BC A9 01			lda #$01
  3085 20BE 8D 6C 25			sta INITPLAYERS.ISALIVE
  3086 20C1 A9 5D			lda #$5D
  3087 20C3 8D 6B 25			sta INITPLAYERS.COLOUR
  3088 20C6 A9 51			lda #$51
  3089 20C8 8D 6A 25			sta INITPLAYERS.HEAD
  3090 20CB A9 03			lda #$03
  3091 20CD 8D 69 25			sta INITPLAYERS.BRAIN
  3092 20D0 A9 04			lda #$04
  3093 20D2 8D 68 25			sta INITPLAYERS.DIR
  3094 20D5 A9 17			lda #$17
  3095 20D7 8D 67 25			sta INITPLAYERS.Y
  3096 20DA A9 26			lda #$26
  3097 20DC 8D 66 25			sta INITPLAYERS.X
  3098 20DF AD 11 25			lda PLAYER2
  3099 20E2 8D 64 25			sta INITPLAYERS.P
  3100 20E5 AD 12 25			lda PLAYER2+1
  3101 20E8 8D 65 25			sta INITPLAYERS.P+1
  3102 20EB 20 E6 13			jsr INITPLAYERS
  3103
  3104 				; optimize OK (levels.inc), line = 162
  3105
  3106 20EE A9 01			lda #$01
  3107 20F0 8D 6C 25			sta INITPLAYERS.ISALIVE
  3108 20F3 A9 71			lda #$71
  3109 20F5 8D 6B 25			sta INITPLAYERS.COLOUR
  3110 20F8 A9 51			lda #$51
  3111 20FA 8D 6A 25			sta INITPLAYERS.HEAD
  3112 20FD A9 02			lda #$02
  3113 20FF 8D 69 25			sta INITPLAYERS.BRAIN
  3114 2102 8D 68 25			sta INITPLAYERS.DIR
  3115 2105 A9 01			lda #$01
  3116 2107 8D 67 25			sta INITPLAYERS.Y
  3117 210A A9 0A			lda #$0A
  3118 210C 8D 66 25			sta INITPLAYERS.X
  3119 210F AD 13 25			lda PLAYER3
  3120 2112 8D 64 25			sta INITPLAYERS.P
  3121 2115 AD 14 25			lda PLAYER3+1
  3122 2118 8D 65 25			sta INITPLAYERS.P+1
  3123 211B 20 E6 13			jsr INITPLAYERS
  3124
  3125 				; optimize OK (levels.inc), line = 163
  3126
  3127 211E A9 01			lda #$01
  3128 2120 8D 6C 25			sta INITPLAYERS.ISALIVE
  3129 2123 A9 55			lda #$55
  3130 2125 8D 6B 25			sta INITPLAYERS.COLOUR
  3131 2128 A9 51			lda #$51
  3132 212A 8D 6A 25			sta INITPLAYERS.HEAD
  3133 212D A9 04			lda #$04
  3134 212F 8D 69 25			sta INITPLAYERS.BRAIN
  3135 2132 8D 68 25			sta INITPLAYERS.DIR
  3136 2135 A9 01			lda #$01
  3137 2137 8D 67 25			sta INITPLAYERS.Y
  3138 213A A9 26			lda #$26
  3139 213C 8D 66 25			sta INITPLAYERS.X
  3140 213F AD 15 25			lda PLAYER4
  3141 2142 8D 64 25			sta INITPLAYERS.P
  3142 2145 AD 16 25			lda PLAYER4+1
  3143 2148 8D 65 25			sta INITPLAYERS.P+1
  3144 214B 20 E6 13			jsr INITPLAYERS
  3145
  3146 				; optimize OK (levels.inc), line = 165
  3147
  3148 214E A9 FA			lda #$FA
  3149 2150 8D 4E 25			sta adr.OBSTACLES+$00
  3150 2153 A9 0C			lda #$0C
  3151 2155 8D 4F 25			sta adr.OBSTACLES+1+$00
  3152
  3153 				; optimize OK (levels.inc), line = 166
  3154
  3155 2158 A9 0E			lda #$0E
  3156 215A 8D 50 25			sta adr.OBSTACLES+$02
  3157 215D A9 0D			lda #$0D
  3158 215F 8D 51 25			sta adr.OBSTACLES+1+$02
  3159
  3160 				; optimize OK (levels.inc), line = 167
  3161
  3162 2162 A9 DA			lda #$DA
  3163 2164 8D 52 25			sta adr.OBSTACLES+$04
  3164 2167 A9 0E			lda #$0E
  3165 2169 8D 53 25			sta adr.OBSTACLES+1+$04
  3166
  3167 				; optimize OK (levels.inc), line = 168
  3168
  3169 216C A9 EE			lda #$EE
  3170 216E 8D 54 25			sta adr.OBSTACLES+$06
  3171 2171 A9 0E			lda #$0E
  3172 2173 8D 55 25			sta adr.OBSTACLES+1+$06
  3173
  3174 				; optimize OK (levels.inc), line = 169
  3175
  3176 2176 A9 E1			lda #$E1
  3177 2178 8D 56 25			sta adr.OBSTACLES+$08
  3178 217B A9 0D			lda #$0D
  3179 217D 8D 57 25			sta adr.OBSTACLES+1+$08
  3180
  3181 				; optimize OK (levels.inc), line = 170
  3182
  3183 2180 A9 64			lda #$64
  3184 2182 8D 58 25			sta adr.OBSTACLES+$0A
  3185 2185 A9 0C			lda #$0C
  3186 2187 8D 59 25			sta adr.OBSTACLES+1+$0A
  3187
  3188 				; optimize OK (levels.inc), line = 171
  3189
  3190 218A A9 84			lda #$84
  3191 218C 8D 5A 25			sta adr.OBSTACLES+$0C
  3192 218F A9 0F			lda #$0F
  3193 2191 8D 5B 25			sta adr.OBSTACLES+1+$0C
  3194
  3195 				; optimize OK (levels.inc), line = 172
  3196
  3197 2194 A9 F4			lda #$F4
  3198 2196 8D 5C 25			sta adr.OBSTACLES+$0E
  3199 2199 A9 0D			lda #$0D
  3200 219B 8D 5D 25			sta adr.OBSTACLES+1+$0E
  3201
  3202 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 174
  3203
  3204 219E 20 D2 12			jsr SAVEOBSTACLES
  3205 21A1			@exit
  3206 					.ifdef @new
  3207 					lda <@VarData
  3208 					sta :ztmp
  3209 					lda >@VarData
  3210 					ldy #@VarDataSize-1
  3211 					jmp @FreeMem
  3212 					els
  3213 21A1 60				rts						; ret
  3214 					eif
  3215 				.endl
  3216
  3217 21A2			.local	HUMAN						; PROCEDURE
  3218
  3219 				; optimize OK (main.pas), line = 15
  3220
  3221 21A2 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3222 21AC A0 04			ldy #PLY.DIR-DATAORIGIN
  3223 21AE B1 12			lda (:bp2),y
  3224 21B0 85 5B			sta NEWDIR
  3225
  3226 				; optimize OK (main.pas), line = 16
  3227
  3228 21B2 A5 63			lda JOYSTATUS
  3229 21B4 8D 74 25			sta @CASETMP_0006
  3230 21B7 C9 01			cmp #$01
  3231 21B9 D0 19			jne l_0C5B
  3232 21BB			@
  3233
  3234 				; optimize OK (main.pas), line = 17
  3235
  3236 21BB AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3237 21C5 A0 04			ldy #PLY.DIR-DATAORIGIN
  3238 21C7 B1 12			lda (:bp2),y
  3239 21C9 C9 02			cmp #$02
  3240 21CB F0 04			jeq l_0C6D
  3241 21CD A9 01			lda #$01
  3242 21CF 85 5B			sta NEWDIR
  3243 21D1			l_0C6D
  3244
  3245 21D1 4C 28 22			jmp a_0006
  3246 21D4			l_0C5B
  3247 21D4 C9 02			cmp #$02
  3248 21D6 D0 19			jne l_0C7D
  3249 21D8			@
  3250
  3251 				; optimize OK (main.pas), line = 18
  3252
  3253 21D8 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3254 21E2 A0 04			ldy #PLY.DIR-DATAORIGIN
  3255 21E4 B1 12			lda (:bp2),y
  3256 21E6 C9 01			cmp #$01
  3257 21E8 F0 04			jeq l_0C8F
  3258 21EA A9 02			lda #$02
  3259 21EC 85 5B			sta NEWDIR
  3260 21EE			l_0C8F
  3261
  3262 21EE 4C 28 22			jmp a_0006
  3263 21F1			l_0C7D
  3264 21F1 C9 04			cmp #$04
  3265 21F3 D0 19			jne l_0C9F
  3266 21F5			@
  3267
  3268 				; optimize OK (main.pas), line = 19
  3269
  3270 21F5 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3271 21FF A0 04			ldy #PLY.DIR-DATAORIGIN
  3272 2201 B1 12			lda (:bp2),y
  3273 2203 C9 08			cmp #$08
  3274 2205 F0 04			jeq l_0CB1
  3275 2207 A9 04			lda #$04
  3276 2209 85 5B			sta NEWDIR
  3277 220B			l_0CB1
  3278
  3279 220B 4C 28 22			jmp a_0006
  3280 220E			l_0C9F
  3281 220E C9 08			cmp #$08
  3282 2210 D0 16			jne l_0CC1
  3283 2212			@
  3284
  3285 				; optimize OK (main.pas), line = 20
  3286
  3287 2212 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3288 221C A0 04			ldy #PLY.DIR-DATAORIGIN
  3289 221E B1 12			lda (:bp2),y
  3290 2220 C9 04			cmp #$04
  3291 2222 F0 04			jeq l_0CD3
  3292 2224 A9 08			lda #$08
  3293 2226 85 5B			sta NEWDIR
  3294 2228			l_0CD3
  3295
  3296 2228			l_0CC1
  3297 2228			a_0006
  3298
  3299 				; optimize OK (main.pas), line = 23
  3300
  3301 2228 A5 5B			lda NEWDIR
  3302 222A 25 5C			and AVAILDIR
  3303 222C D0 18			jne l_0CFA
  3304
  3305 				; optimize OK (main.pas), line = 24
  3306
  3307 222E AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3308 2238 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3309 223A A9 00			lda #$00
  3310 223C 91 12			sta (:bp2),y
  3311 223E A0 02			ldy #PLY.HEAD-DATAORIGIN
  3312 2240 A9 2A			lda #$2A
  3313 2242 91 12			sta (:bp2),y
  3314 2244 C6 5A			dec ALIVE
  3315 2246			l_0CFA
  3316
  3317 				; ------------------------------------------------------------
  3318
  3319 = 2574			@CASETMP_0006	= DATAORIGIN+$0058
  3320
  3321 = 2574			@VarData	= @CASETMP_0006
  3322 = 0001			@VarDataSize	= 1
  3323
  3324 2246			@exit
  3325 					.ifdef @new
  3326 					lda <@VarData
  3327 					sta :ztmp
  3328 					lda >@VarData
  3329 					ldy #@VarDataSize-1
  3330 					jmp @FreeMem
  3331 					els
  3332 2246 60				rts						; ret
  3333 					eif
  3334 				.endl
  3335
  3336 2247			.local	PLAYERMOVE					; PROCEDURE
  3337
  3338 				; optimize OK (main.pas), line = 32
  3339
  3340 2247 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3341 2251 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3342 2253 B1 12			lda (:bp2),y
  3343 2255 D0 03 4C 9B 23		jeq l_0D19
  3344
  3345 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 33
  3346
  3347 225A 20 08 12			jsr CHECKAVAILDIR
  3348
  3349 				; optimize OK (main.pas), line = 35
  3350
  3351 225D A5 5C			lda AVAILDIR
  3352 225F D0 35			jne l_0D2D
  3353
  3354 				; optimize OK (main.pas), line = 36
  3355
  3356 2261 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3357 226B A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3358 226D A9 00			lda #$00
  3359 226F 91 12			sta (:bp2),y
  3360 2271 C6 5A			dec ALIVE
  3361
  3362 				; optimize OK (main.pas), line = 37
  3363
  3364 2273 A0 00			ldy #PLY.X-DATAORIGIN
  3365 2275 B1 12			lda (:bp2),y
  3366 2277 8D 5E 25			sta PUTCHAR.X
  3367 227A A0 01			ldy #PLY.Y-DATAORIGIN
  3368 227C B1 12			lda (:bp2),y
  3369 227E 8D 5F 25			sta PUTCHAR.Y
  3370 2281 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3371 2283 B1 12			lda (:bp2),y
  3372 2285 18 69 80			add #$80
  3373 2288 8D 61 25			sta PUTCHAR.C
  3374 228B A9 57			lda #$57
  3375 228D 8D 60 25			sta PUTCHAR.V
  3376 2290 20 78 11			jsr PUTCHAR
  3377 2293 4C 9B 23			jmp l_0D4E
  3378 2296			l_0D2D
  3379
  3380 				; optimize OK (main.pas), line = 40
  3381
  3382 2296 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3383 22A0 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  3384 22A2 B1 12			lda (:bp2),y
  3385 22A4 8D 75 25			sta @CASETMP_0007
  3386 22A7 C9 00			cmp #$00
  3387 22A9 D0 06			jne l_0D59
  3388 22AB			@
  3389
  3390 				; optimize FAIL ('HUMAN', main.pas), line = 41
  3391
  3392 22AB 20 A2 21			jsr HUMAN
  3393 22AE 4C D6 22			jmp a_0007
  3394 22B1			l_0D59
  3395 22B1 C9 01			cmp #$01
  3396 22B3 D0 06			jne l_0D63
  3397 22B5			@
  3398
  3399 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 42
  3400
  3401 22B5 20 CA 14			jsr AISTRAIGHT
  3402 22B8 4C D6 22			jmp a_0007
  3403 22BB			l_0D63
  3404 22BB C9 02			cmp #$02
  3405 22BD D0 06			jne l_0D6D
  3406 22BF			@
  3407
  3408 				; optimize FAIL ('AISAPPER', main.pas), line = 43
  3409
  3410 22BF 20 4F 15			jsr AISAPPER
  3411 22C2 4C D6 22			jmp a_0007
  3412 22C5			l_0D6D
  3413 22C5 C9 03			cmp #$03
  3414 22C7 D0 06			jne l_0D77
  3415 22C9			@
  3416
  3417 				; optimize FAIL ('AIBULLY', main.pas), line = 44
  3418
  3419 22C9 20 A9 17			jsr AIBULLY
  3420 22CC 4C D6 22			jmp a_0007
  3421 22CF			l_0D77
  3422 22CF C9 04			cmp #$04
  3423 22D1 D0 03			jne l_0D81
  3424 22D3			@
  3425
  3426 				; optimize FAIL ('AIMIRROR', main.pas), line = 45
  3427
  3428 22D3 20 77 18			jsr AIMIRROR
  3429 22D6			l_0D81
  3430 22D6			a_0007
  3431
  3432 				; optimize FAIL ('DRAWTAIL', main.pas), line = 48
  3433
  3434 22D6 20 16 13			jsr DRAWTAIL
  3435 22D9 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3436 22E3 A0 04			ldy #PLY.DIR-DATAORIGIN
  3437 22E5 A5 5B			lda NEWDIR
  3438 22E7 91 12			sta (:bp2),y
  3439
  3440 				; optimize OK (main.pas), line = 50
  3441
  3442 22E9 A5 5B			lda NEWDIR
  3443 22EB 8D 76 25			sta @CASETMP_0008
  3444 22EE C9 01			cmp #$01
  3445 22F0 D0 16			jne l_0D9D
  3446 22F2			@
  3447
  3448 				; optimize OK (main.pas), line = 51
  3449
  3450 22F2 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3451 22FC A0 01			ldy #PLY.Y-DATAORIGIN
  3452 22FE B1 12			lda (:bp2),y
  3453 2300 38 E9 01			sub #$01
  3454 2303 91 12			sta (:bp2),y
  3455
  3456 2305 4C 53 23			jmp a_0008
  3457 2308			l_0D9D
  3458 2308 C9 02			cmp #$02
  3459 230A D0 16			jne l_0DA7
  3460 230C			@
  3461
  3462 				; optimize OK (main.pas), line = 52
  3463
  3464 230C AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3465 2316 A0 01			ldy #PLY.Y-DATAORIGIN
  3466 2318 B1 12			lda (:bp2),y
  3467 231A 18 69 01			add #$01
  3468 231D 91 12			sta (:bp2),y
  3469
  3470 231F 4C 53 23			jmp a_0008
  3471 2322			l_0DA7
  3472 2322 C9 04			cmp #$04
  3473 2324 D0 16			jne l_0DB1
  3474 2326			@
  3475
  3476 				; optimize OK (main.pas), line = 53
  3477
  3478 2326 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3479 2330 A0 00			ldy #PLY.X-DATAORIGIN
  3480 2332 B1 12			lda (:bp2),y
  3481 2334 38 E9 01			sub #$01
  3482 2337 91 12			sta (:bp2),y
  3483
  3484 2339 4C 53 23			jmp a_0008
  3485 233C			l_0DB1
  3486 233C C9 08			cmp #$08
  3487 233E D0 13			jne l_0DBB
  3488 2340			@
  3489
  3490 				; optimize OK (main.pas), line = 54
  3491
  3492 2340 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3493 234A A0 00			ldy #PLY.X-DATAORIGIN
  3494 234C B1 12			lda (:bp2),y
  3495 234E 18 69 01			add #$01
  3496 2351 91 12			sta (:bp2),y
  3497
  3498 2353			l_0DBB
  3499 2353			a_0008
  3500
  3501 				; optimize OK (main.pas), line = 57
  3502
  3503 2353 AC 0B 25 84 12 AC + 	mwy PLY :bp2
  3504 235D A0 00			ldy #PLY.X-DATAORIGIN
  3505 235F B1 12			lda (:bp2),y
  3506 2361 8D 5E 25			sta PUTCHAR.X
  3507 2364 A0 01			ldy #PLY.Y-DATAORIGIN
  3508 2366 B1 12			lda (:bp2),y
  3509 2368 8D 5F 25			sta PUTCHAR.Y
  3510 236B A0 02			ldy #PLY.HEAD-DATAORIGIN
  3511 236D B1 12			lda (:bp2),y
  3512 236F 8D 60 25			sta PUTCHAR.V
  3513 2372 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3514 2374 B1 12			lda (:bp2),y
  3515 2376 8D 61 25			sta PUTCHAR.C
  3516 2379 20 78 11			jsr PUTCHAR
  3517
  3518 				; optimize OK (main.pas), line = 60
  3519
  3520 237C AD 35 25			lda PLAYER1.ISALIVE
  3521 237F D0 1A			jne l_0DE0
  3522 2381 AD 31 25			lda PLAYER1.COLOUR
  3523 2384 8D 61 25			sta PUTCHAR.C
  3524 2387 A9 2A			lda #$2A
  3525 2389 8D 60 25			sta PUTCHAR.V
  3526 238C AD 2F 25			lda PLAYER1.Y
  3527 238F 8D 5F 25			sta PUTCHAR.Y
  3528 2392 AD 2E 25			lda PLAYER1.X
  3529 2395 8D 5E 25			sta PUTCHAR.X
  3530 2398 20 78 11			jsr PUTCHAR
  3531 239B			l_0DE0
  3532 239B			l_0D4E
  3533 239B			l_0D19
  3534
  3535 				; ------------------------------------------------------------
  3536
  3537 = 2575			@CASETMP_0007	= DATAORIGIN+$0059
  3538 = 2576			@CASETMP_0008	= DATAORIGIN+$005A
  3539
  3540 = 2575			@VarData	= @CASETMP_0007
  3541 = 0002			@VarDataSize	= 2
  3542
  3543 239B			@exit
  3544 					.ifdef @new
  3545 					lda <@VarData
  3546 					sta :ztmp
  3547 					lda >@VarData
  3548 					ldy #@VarDataSize-1
  3549 					jmp @FreeMem
  3550 					els
  3551 239B 60				rts						; ret
  3552 					eif
  3553 				.endl
  3554
  3555 239C			.local	STARTSCREEN					; PROCEDURE
  3556
  3557 				; --- RepeatUntilProlog
  3558 239C			l_0DF5
  3559
  3560 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 71
  3561
  3562 239C 20 D4 13			jsr CHECKJOYSTATUS
  3563 239F A5 63			lda JOYSTATUS
  3564 23A1 C9 40			cmp #$40
  3565 23A3 D0 F7			jne l_0DF5
  3566 23A5			@exit
  3567 					.ifdef @new
  3568 					lda <@VarData
  3569 					sta :ztmp
  3570 					lda >@VarData
  3571 					ldy #@VarDataSize-1
  3572 					jmp @FreeMem
  3573 					els
  3574 23A5 60				rts						; ret
  3575 					eif
  3576 				.endl
  3577
  3578 23A6			.local	MAINLOOP					; PROCEDURE
  3579
  3580 				; optimize OK (main.pas), line = 78
  3581
  3582 23A6 A9 FF			lda #$FF
  3583 23A8 85 5A			sta ALIVE
  3584
  3585 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 80
  3586
  3587 23AA 20 4A 14			jsr INITPLAYFIELD
  3588
  3589 				; optimize OK (main.pas), line = 82
  3590
  3591 23AD AD 2C 25			lda LEVEL
  3592 23B0 8D 77 25			sta @CASETMP_0009
  3593 23B3 C9 01			cmp #$01
  3594 23B5 D0 06			jne l_0E17
  3595 23B7			@
  3596
  3597 				; optimize FAIL ('SETLEVEL01', main.pas), line = 83
  3598
  3599 23B7 20 CC 18			jsr SETLEVEL01
  3600 23BA 4C 00 24			jmp a_0009
  3601 23BD			l_0E17
  3602 23BD C9 02			cmp #$02
  3603 23BF D0 06			jne l_0E21
  3604 23C1			@
  3605
  3606 				; optimize FAIL ('SETLEVEL02', main.pas), line = 84
  3607
  3608 23C1 20 E8 19			jsr SETLEVEL02
  3609 23C4 4C 00 24			jmp a_0009
  3610 23C7			l_0E21
  3611 23C7 C9 03			cmp #$03
  3612 23C9 D0 06			jne l_0E2B
  3613 23CB			@
  3614
  3615 				; optimize FAIL ('SETLEVEL03', main.pas), line = 85
  3616
  3617 23CB 20 04 1B			jsr SETLEVEL03
  3618 23CE 4C 00 24			jmp a_0009
  3619 23D1			l_0E2B
  3620 23D1 C9 04			cmp #$04
  3621 23D3 D0 06			jne l_0E35
  3622 23D5			@
  3623
  3624 				; optimize FAIL ('SETLEVEL04', main.pas), line = 86
  3625
  3626 23D5 20 20 1C			jsr SETLEVEL04
  3627 23D8 4C 00 24			jmp a_0009
  3628 23DB			l_0E35
  3629 23DB C9 05			cmp #$05
  3630 23DD D0 06			jne l_0E3F
  3631 23DF			@
  3632
  3633 				; optimize FAIL ('SETLEVEL05', main.pas), line = 87
  3634
  3635 23DF 20 3C 1D			jsr SETLEVEL05
  3636 23E2 4C 00 24			jmp a_0009
  3637 23E5			l_0E3F
  3638 23E5 C9 06			cmp #$06
  3639 23E7 D0 06			jne l_0E49
  3640 23E9			@
  3641
  3642 				; optimize FAIL ('SETLEVEL06', main.pas), line = 88
  3643
  3644 23E9 20 56 1E			jsr SETLEVEL06
  3645 23EC 4C 00 24			jmp a_0009
  3646 23EF			l_0E49
  3647 23EF C9 07			cmp #$07
  3648 23F1 D0 06			jne l_0E53
  3649 23F3			@
  3650
  3651 				; optimize FAIL ('SETLEVEL07', main.pas), line = 89
  3652
  3653 23F3 20 6E 1F			jsr SETLEVEL07
  3654 23F6 4C 00 24			jmp a_0009
  3655 23F9			l_0E53
  3656 23F9 C9 08			cmp #$08
  3657 23FB D0 03			jne l_0E5D
  3658 23FD			@
  3659
  3660 				; optimize FAIL ('SETLEVEL08', main.pas), line = 90
  3661
  3662 23FD 20 8A 20			jsr SETLEVEL08
  3663 2400			l_0E5D
  3664 2400			a_0009
  3665
  3666 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 93
  3667
  3668 2400 20 9D 12			jsr ANIMATEOBSTACLES
  3669 2403 20 A3 11			jsr SHOWSCORE
  3670 2406 20 9C 23			jsr STARTSCREEN
  3671
  3672 				; --- RepeatUntilProlog
  3673 2409			l_0E6E
  3674
  3675 				; optimize FAIL ('SYSTEM.PAUSE_006B', main.pas), line = 96
  3676
  3677 2409 20 23 11			jsr SYSTEM.PAUSE_006B
  3678 240C 20 D4 13			jsr CHECKJOYSTATUS
  3679
  3680 				; optimize OK (main.pas), line = 97
  3681
  3682 240F AD 0F 25			lda PLAYER1
  3683 2412 8D 0B 25			sta PLY
  3684 2415 AD 10 25			lda PLAYER1+1
  3685 2418 8D 0C 25			sta PLY+1
  3686 241B 20 47 22			jsr PLAYERMOVE
  3687
  3688 				; optimize OK (main.pas), line = 99
  3689
  3690 241E A9 02			lda #$02
  3691 2420 8D 28 25			sta SYSTEM.PAUSE_006C.N
  3692 2423 A9 00			lda #$00
  3693 2425 8D 29 25			sta SYSTEM.PAUSE_006C.N+1
  3694 2428 20 2A 11			jsr SYSTEM.PAUSE_006C
  3695
  3696 				; optimize OK (main.pas), line = 100
  3697
  3698 242B AD 11 25			lda PLAYER2
  3699 242E 8D 0B 25			sta PLY
  3700 2431 AD 12 25			lda PLAYER2+1
  3701 2434 8D 0C 25			sta PLY+1
  3702 2437 20 47 22			jsr PLAYERMOVE
  3703
  3704 				; optimize OK (main.pas), line = 101
  3705
  3706 243A AD 13 25			lda PLAYER3
  3707 243D 8D 0B 25			sta PLY
  3708 2440 AD 14 25			lda PLAYER3+1
  3709 2443 8D 0C 25			sta PLY+1
  3710 2446 20 47 22			jsr PLAYERMOVE
  3711
  3712 				; optimize OK (main.pas), line = 102
  3713
  3714 2449 AD 15 25			lda PLAYER4
  3715 244C 8D 0B 25			sta PLY
  3716 244F AD 16 25			lda PLAYER4+1
  3717 2452 8D 0C 25			sta PLY+1
  3718 2455 20 47 22			jsr PLAYERMOVE
  3719
  3720 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 103
  3721
  3722 2458 20 9D 12			jsr ANIMATEOBSTACLES
  3723
  3724 				; optimize OK (main.pas), line = 104
  3725
  3726 245B A5 5A			lda ALIVE
  3727 245D F0 04			jeq l_0E6Ex
  3728 245F C9 FF			cmp #$FF
  3729 2461 D0 A6			jne l_0E6E
  3730 2463			l_0E6Ex
  3731
  3732 				; optimize OK (main.pas), line = 106
  3733
  3734 2463 AD 35 25			lda PLAYER1.ISALIVE
  3735 2466 F0 03			jeq l_0EB0
  3736 2468 EE 34 25			inc PLAYER1.SCORE
  3737 246B			l_0EB0
  3738
  3739 				; optimize OK (main.pas), line = 107
  3740
  3741 246B AD 3D 25			lda PLAYER2.ISALIVE
  3742 246E F0 03			jeq l_0EC3
  3743 2470 EE 3C 25			inc PLAYER2.SCORE
  3744 2473			l_0EC3
  3745
  3746 				; optimize OK (main.pas), line = 108
  3747
  3748 2473 AD 45 25			lda PLAYER3.ISALIVE
  3749 2476 F0 03			jeq l_0ED6
  3750 2478 EE 44 25			inc PLAYER3.SCORE
  3751 247B			l_0ED6
  3752
  3753 				; optimize OK (main.pas), line = 109
  3754
  3755 247B AD 4D 25			lda PLAYER4.ISALIVE
  3756 247E F0 03			jeq l_0EE9
  3757 2480 EE 4C 25			inc PLAYER4.SCORE
  3758 2483			l_0EE9
  3759
  3760 				; optimize OK (main.pas), line = 111
  3761
  3762 2483 A9 64			lda #$64
  3763 2485 8D 28 25			sta SYSTEM.PAUSE_006C.N
  3764 2488 A9 00			lda #$00
  3765 248A 8D 29 25			sta SYSTEM.PAUSE_006C.N+1
  3766 248D 20 2A 11			jsr SYSTEM.PAUSE_006C
  3767
  3768 				; ------------------------------------------------------------
  3769
  3770 = 2577			@CASETMP_0009	= DATAORIGIN+$005B
  3771
  3772 = 2577			@VarData	= @CASETMP_0009
  3773 = 0001			@VarDataSize	= 1
  3774
  3775 2490			@exit
  3776 					.ifdef @new
  3777 					lda <@VarData
  3778 					sta :ztmp
  3779 					lda >@VarData
  3780 					ldy #@VarDataSize-1
  3781 					jmp @FreeMem
  3782 					els
  3783 2490 60				rts						; ret
  3784 					eif
  3785 				.endl
  3786 2491			l_0007
  3787
  3788 				; --- RepeatUntilProlog
  3789 2491			l_0EF4
  3790
  3791 				; optimize OK (main.pas), line = 118
  3792
  3793 2491 A9 30			lda #$30
  3794 2493 8D 34 25			sta PLAYER1.SCORE
  3795 2496 8D 3C 25			sta PLAYER2.SCORE
  3796
  3797 				; optimize OK (main.pas), line = 119
  3798
  3799 2499 8D 44 25			sta PLAYER3.SCORE
  3800 249C 8D 4C 25			sta PLAYER4.SCORE
  3801
  3802 				; optimize OK (main.pas), line = 120
  3803
  3804 249F A9 01			lda #$01
  3805 24A1 8D 2C 25			sta LEVEL
  3806
  3807 				; optimize OK (main.pas), line = 122
  3808
  3809 24A4 A9 00			lda #$00
  3810 24A6 8D 2D 25			sta GAMEOVER
  3811
  3812 				; --- RepeatUntilProlog
  3813 24A9			l_0F0D
  3814
  3815 				; optimize FAIL ('MAINLOOP', main.pas), line = 124
  3816
  3817 24A9 20 A6 23			jsr MAINLOOP
  3818
  3819 				; optimize FAIL (0, main.pas), line = 125
  3820
  3821 24AC EE 2C 25			inc LEVEL
  3822 24AF AD 2C 25			lda LEVEL
  3823 24B2 C9 08			cmp #$08
  3824 24B4 D0 05			jne l_0F24
  3825 24B6 A9 05			lda #$05
  3826 24B8 8D 2C 25			sta LEVEL
  3827 24BB			l_0F24
  3828
  3829 				; optimize OK (main.pas), line = 126
  3830
  3831 24BB AD 34 25			lda PLAYER1.SCORE
  3832 24BE C9 39			cmp #$39
  3833 24C0 D0 05			jne l_0F3D
  3834 24C2 A9 01			lda #$01
  3835 24C4 8D 2D 25			sta GAMEOVER
  3836 24C7			l_0F3D
  3837
  3838 				; optimize OK (main.pas), line = 127
  3839
  3840 24C7 AD 3C 25			lda PLAYER2.SCORE
  3841 24CA C9 39			cmp #$39
  3842 24CC D0 05			jne l_0F56
  3843 24CE A9 01			lda #$01
  3844 24D0 8D 2D 25			sta GAMEOVER
  3845 24D3			l_0F56
  3846
  3847 				; optimize OK (main.pas), line = 128
  3848
  3849 24D3 AD 44 25			lda PLAYER3.SCORE
  3850 24D6 C9 39			cmp #$39
  3851 24D8 D0 05			jne l_0F6F
  3852 24DA A9 01			lda #$01
  3853 24DC 8D 2D 25			sta GAMEOVER
  3854 24DF			l_0F6F
  3855
  3856 				; optimize OK (main.pas), line = 129
  3857
  3858 24DF AD 4C 25			lda PLAYER4.SCORE
  3859 24E2 C9 39			cmp #$39
  3860 24E4 D0 05			jne l_0F88
  3861 24E6 A9 01			lda #$01
  3862 24E8 8D 2D 25			sta GAMEOVER
  3863 24EB			l_0F88
  3864
  3865 				; optimize OK (main.pas), line = 130
  3866
  3867 24EB AD 2D 25			lda GAMEOVER
  3868 24EE F0 B9			jeq l_0F0D
  3869
  3870 				; optimize FAIL ('SHOWSCORE', main.pas), line = 132
  3871
  3872 24F0 20 A3 11			jsr SHOWSCORE
  3873
  3874 				; optimize OK (main.pas), line = 134
  3875
  3876 24F3 A9 C8			lda #$C8
  3877 24F5 8D 28 25			sta SYSTEM.PAUSE_006C.N
  3878 24F8 A9 00			lda #$00
  3879 24FA 8D 29 25			sta SYSTEM.PAUSE_006C.N+1
  3880 24FD 20 2A 11			jsr SYSTEM.PAUSE_006C
  3881
  3882 				; optimize OK (main.pas), line = 135
  3883
  3884 2500 4C 91 24			jmp l_0EF4
  3885
  3886 				; ------------------------------------------------------------
  3887
  3888 = 0800			ATTRIBUTE_ADDR	= $0800
  3889 = 0C00			SCREEN_ADDR	= $0C00
  3890 = 0009			VICTORIES	= $09
  3891 = 0005			LOOK_AHEAD	= $05
  3892 = 007E			TRASH	= $7E
  3893 = 0020			EMPTY	= $20
  3894 = 00A0			WALL	= $A0
  3895 = 0041			WALL_COLOUR	= $41
  3896 = 0030			ZERO	= $30
  3897 = 0056			OBSTACLE_1	= $56
  3898 = 005B			OBSTACLE_2	= $5B
  3899 = 0035			OBST_COLOUR	= $35
  3900 = 0051			PLY_HEAD	= $51
  3901 = 002A			PLY_CRASH	= $2A
  3902 = 0057			PLY_BUSTED	= $57
  3903 = 0042			PLY_TAIL_UD	= $42
  3904 = 0040			PLY_TAIL_LR	= $40
  3905 = 007D			PLY_TAIL_RD	= $7D
  3906 = 006E			PLY_TAIL_RU	= $6E
  3907 = 006D			PLY_TAIL_LD	= $6D
  3908 = 0070			PLY_TAIL_LU	= $70
  3909 = 005F			PLY1_COLOUR	= $5F
  3910 = 005D			PLY2_COLOUR	= $5D
  3911 = 0071			PLY3_COLOUR	= $71
  3912 = 0055			PLY4_COLOUR	= $55
  3913 = 0000			PLY_CTRL	= $00
  3914 = 0001			AI_STRAIGHT	= $01
  3915 = 0002			AI_SAPPER	= $02
  3916 = 0003			AI_BULLY	= $03
  3917 = 0004			AI_MIRROR	= $04
  3918 = 0001			JOY_UP	= $01
  3919 = 0002			JOY_DOWN	= $02
  3920 = 0004			JOY_LEFT	= $04
  3921 = 0008			JOY_RIGHT	= $08
  3922 = 0040			JOY_FIRE	= $40
  3923 = 0002			JOY_SELECT_1	= $02
  3924 = 0004			JOY_SELECT_2	= $04
  3925 = 100E			adr.MUL40	= CODEORIGIN+$0000
  3926 2503			.var MUL40	= adr.MUL40 .word
  3927 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  3928 2503			.var DIRECTION	= adr.DIRECTION .word
  3929 = FD30			KEYSCAN	= $FD30
  3930 = FF08			JOY	= $FF08
  3931 = FF15			BACKGROUND	= $FF15
  3932 = FF19			BOREDER	= $FF19
  3933 = FF1D			VCOUNT	= $FF1D
  3934 = 0058			T0B	= $58
  3935 = 0059			I0B	= $59
  3936 = 005A			ALIVE	= $5A
  3937 = 005B			NEWDIR	= $5B
  3938 = 005C			AVAILDIR	= $5C
  3939 = 005D			T0W	= $5D
  3940 = 005F			adr.PLY	= $5F
  3941 2503			.var PLY	= adr.PLY .word
  3942 = 251C			PLY.X	= DATAORIGIN+$0000
  3943 = 251D			PLY.Y	= DATAORIGIN+$0001
  3944 = 251E			PLY.HEAD	= DATAORIGIN+$0002
  3945 = 251F			PLY.COLOUR	= DATAORIGIN+$0003
  3946 = 2520			PLY.DIR	= DATAORIGIN+$0004
  3947 = 2521			PLY.BRAIN	= DATAORIGIN+$0005
  3948 = 2522			PLY.SCORE	= DATAORIGIN+$0006
  3949 = 2523			PLY.ISALIVE	= DATAORIGIN+$0007
  3950 = 0061			adr.TMPPLY	= $61
  3951 2503			.var TMPPLY	= adr.TMPPLY .word
  3952 = 251C			TMPPLY.X	= DATAORIGIN+$0000
  3953 = 251D			TMPPLY.Y	= DATAORIGIN+$0001
  3954 = 251E			TMPPLY.HEAD	= DATAORIGIN+$0002
  3955 = 251F			TMPPLY.COLOUR	= DATAORIGIN+$0003
  3956 = 2520			TMPPLY.DIR	= DATAORIGIN+$0004
  3957 = 2521			TMPPLY.BRAIN	= DATAORIGIN+$0005
  3958 = 2522			TMPPLY.SCORE	= DATAORIGIN+$0006
  3959 = 2523			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  3960 = 0063			JOYSTATUS	= $63
  3961 = 252C			LEVEL	= DATAORIGIN+$0010
  3962 = 252D			GAMEOVER	= DATAORIGIN+$0011
  3963 = 252E			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  3964 2503			.var PLAYER1	= adr.PLAYER1 .word
  3965 = 252E			PLAYER1.X	= DATAORIGIN+$0012
  3966 = 252F			PLAYER1.Y	= DATAORIGIN+$0013
  3967 = 2530			PLAYER1.HEAD	= DATAORIGIN+$0014
  3968 = 2531			PLAYER1.COLOUR	= DATAORIGIN+$0015
  3969 = 2532			PLAYER1.DIR	= DATAORIGIN+$0016
  3970 = 2533			PLAYER1.BRAIN	= DATAORIGIN+$0017
  3971 = 2534			PLAYER1.SCORE	= DATAORIGIN+$0018
  3972 = 2535			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  3973 = 2536			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  3974 2503			.var PLAYER2	= adr.PLAYER2 .word
  3975 = 2536			PLAYER2.X	= DATAORIGIN+$001A
  3976 = 2537			PLAYER2.Y	= DATAORIGIN+$001B
  3977 = 2538			PLAYER2.HEAD	= DATAORIGIN+$001C
  3978 = 2539			PLAYER2.COLOUR	= DATAORIGIN+$001D
  3979 = 253A			PLAYER2.DIR	= DATAORIGIN+$001E
  3980 = 253B			PLAYER2.BRAIN	= DATAORIGIN+$001F
  3981 = 253C			PLAYER2.SCORE	= DATAORIGIN+$0020
  3982 = 253D			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  3983 = 253E			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  3984 2503			.var PLAYER3	= adr.PLAYER3 .word
  3985 = 253E			PLAYER3.X	= DATAORIGIN+$0022
  3986 = 253F			PLAYER3.Y	= DATAORIGIN+$0023
  3987 = 2540			PLAYER3.HEAD	= DATAORIGIN+$0024
  3988 = 2541			PLAYER3.COLOUR	= DATAORIGIN+$0025
  3989 = 2542			PLAYER3.DIR	= DATAORIGIN+$0026
  3990 = 2543			PLAYER3.BRAIN	= DATAORIGIN+$0027
  3991 = 2544			PLAYER3.SCORE	= DATAORIGIN+$0028
  3992 = 2545			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  3993 = 2546			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  3994 2503			.var PLAYER4	= adr.PLAYER4 .word
  3995 = 2546			PLAYER4.X	= DATAORIGIN+$002A
  3996 = 2547			PLAYER4.Y	= DATAORIGIN+$002B
  3997 = 2548			PLAYER4.HEAD	= DATAORIGIN+$002C
  3998 = 2549			PLAYER4.COLOUR	= DATAORIGIN+$002D
  3999 = 254A			PLAYER4.DIR	= DATAORIGIN+$002E
  4000 = 254B			PLAYER4.BRAIN	= DATAORIGIN+$002F
  4001 = 254C			PLAYER4.SCORE	= DATAORIGIN+$0030
  4002 = 254D			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  4003 = 254E			adr.OBSTACLES	= [DATAORIGIN+$0032] .array [8] .word
  4004 2503			.var OBSTACLES	= adr.OBSTACLES .word
  4005 2503			@exit
  4006
  4007 2503 A2 00		@halt	ldx #$00
  4008 2505 9A				txs
  4009
  4010 2506 60				rts
  4011
  4012 				; ------------------------------------------------------------
  4013
  4014 				; ------------------------------------------------------------
  4015
  4016 2507			.local	@DEFINES
  4017 2507			C4P
  4018 				.endl
  4019
  4020 2507			.local	@RESOURCE
  4021 				.endl
  4022
  4023 = 2507 0E 10		MUL40
  4023 = 2509 40 10		DIRECTION
  4023 = 250B 5F 00		PLY
  4023 = 250D 61 00		TMPPLY
  4023 = 250F 2E 25		PLAYER1
  4023 = 2511 36 25		PLAYER2
  4023 = 2513 3E 25		PLAYER3
  4023 = 2515 46 25		PLAYER4
  4023 = 2517 4E 25		OBSTACLES
  4023 				.endl							; MAIN
  4024
  4025 				; ------------------------------------------------------------
  4026 				; ------------------------------------------------------------
  4027
  4028 				.macro	UNITINITIALIZATION
  4029 				
  4030 					.ifdef MAIN.SYSTEM.@UnitInit
  4031 					jsr MAIN.SYSTEM.@UnitInit
  4032 					eif
  4033 				.endm
  4034
  4035 				; ------------------------------------------------------------
  4036
  4037 					ift .SIZEOF(MAIN.SYSTEM) > 0
  4038 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  4038 				SYSTEM: $10D5..$1177
  4039 					eif
  4040
  4041 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  4041 				CODE: $100E..$2506
  4042
  4043 				; ------------------------------------------------------------
  4044
  4045 2519				.align $04
  4046
  4047 251C			DATAORIGIN
  4048 251C 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  4049
  4050 = 0006			VARINITSIZE	= *-DATAORIGIN
  4051 = 005C			VARDATASIZE	= 92
  4052
  4053 = 2578			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  4054
  4055 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  4055 				DATA: $251C..$2578
  4056
  4057 				; ------------------------------------------------------------
  4058
  4059 				.macro	STATICDATA
  4060 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  4061 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  4062 				.by  $C0 $03 $01 $02 $04 $08
  4063 				.endm
  4064
  4065 					end
