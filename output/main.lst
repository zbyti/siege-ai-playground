mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $105B..$1136
   102
   103 				; ------------------------------------------------------------
   104
   105 1137			START
   106 1137 BA				tsx
   107 1138 8E 37 2C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0002			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 30D2			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 113B A2 FE			ldx #256-VLEN
   120 113D A9 00			lda #$00
   121 113F 9D D4 2F E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 1145 A9 D4 85 02 A9 30 + 	mwa #PROGRAMSTACK psptr
   127
   128 114D A2 00			ldx #$00
   129 114F 86 10			stx bp						; BP = 0
   130
   131 1151 CA				dex						; X = 255
   132
   133 1152				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 1152			.local	MAIN						; PROCEDURE
   136
   137 1152 4C 05 2C			jmp l_001E
   138
   139 				; ------------------------------------------------------------
   140
   141 1155			.local	SYSTEM						; UNIT
   142
   143 1155			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 1155 B5 18			lda :STACKORIGIN,x
   150 1157 85 08			sta A
   151 1159 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 115B 85 09			sta A+1
   153 115D CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 115E A0 00			ldy #0
   158 1160 B1 08 8D 57 2C		mva (edx),y Result
   159
   160 1165			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 1165 E8				inx
   168 1166 AD 57 2C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 2C57			RESULT	= DATAORIGIN+$000B
   182
   183 = 2C57			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 116B 60				rts						; ret
   187 				.endl
   188
   189 116C			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 116C B5 18			lda :STACKORIGIN,x
   196 116E 85 0C			sta VALUE
   197 1170 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 1171 B5 18			lda :STACKORIGIN,x
   204 1173 85 08			sta A
   205 1175 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 1177 85 09			sta A+1
   207 1179 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 117A A0 00			ldy #0
   212 117C A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1180			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1180 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1181			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1181 B5 18			lda :STACKORIGIN,x
   238 1183 85 0C			sta VALUE
   239 1185 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1187 85 0D			sta VALUE+1
   241 1189 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 118A B5 18			lda :STACKORIGIN,x
   248 118C 85 08			sta A
   249 118E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1190 85 09			sta A+1
   251 1192 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1193 A0 00			ldy #0
   256 1195 A5 0C 91 08			mva value (edx),y
   257 1199 C8				iny
   258 119A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 119E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 119E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 119F			.local	FILLCHAR_006D					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 119F 20 DB 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 11A2			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 11A2 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 11A3			.local	MOVE_006E					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   302
   303 				; ---------------------  ASM Block 026  ---------------------
   304
   305 11A3 20 86 10			jsr @move
   306
   307
   308 				; ------------------------------------------------------------
   309
   310 = 0008			SOURCE	= edx
   311 = 000C			DEST	= ecx
   312 = 0004			COUNT	= eax
   313 11A6			@exit
   314 					.ifdef @new
   315 					lda <@VarData
   316 					sta :ztmp
   317 					lda >@VarData
   318 					ldy #@VarDataSize-1
   319 					jmp @FreeMem
   320 					els
   321 11A6 60				rts						; ret
   322 					eif
   323 				.endl
   324
   325 11A7			.local	MOVE_006F					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   326
   327 				; ---------------------  ASM Block 028  ---------------------
   328
   329 11A7 20 86 10			jsr @move
   330
   331
   332 				; ------------------------------------------------------------
   333
   334 = 0008			SOURCE	= edx
   335 = 000C			DEST	= ecx
   336 = 0004			COUNT	= eax
   337 11AA			@exit
   338 					.ifdef @new
   339 					lda <@VarData
   340 					sta :ztmp
   341 					lda >@VarData
   342 					ldy #@VarDataSize-1
   343 					jmp @FreeMem
   344 					els
   345 11AA 60				rts						; ret
   346 					eif
   347 				.endl
   348
   349 11AB			.local	PAUSE_0084					; PROCEDURE | ASSEMBLER | OVERLOAD
   350
   351 				; ---------------------  ASM Block 034  ---------------------
   352
   353 11AB A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   354
   355 11B1			@exit
   356 					.ifdef @new
   357 					lda <@VarData
   358 					sta :ztmp
   359 					lda >@VarData
   360 					ldy #@VarDataSize-1
   361 					jmp @FreeMem
   362 					els
   363 11B1 60				rts						; ret
   364 					eif
   365 				.endl
   366
   367 11B2			.local	PAUSE_0085					; PROCEDURE | ASSEMBLER | OVERLOAD
   368
   369 				; ---------------------  ASM Block 035  ---------------------
   370
   371
   372 11B2 AD 58 2C		loop  lda n
   373 11B5 0D 59 2C		  ora n+1
   374 11B8 F0 14		  beq stop
   375
   376 11BA A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   377
   378 11C0 AD 58 2C D0 03 CE +   dew n
   379
   380 11CB 4C B2 11		  jmp loop
   381 11CE			stop
   382
   383
   384 				; ------------------------------------------------------------
   385
   386 = 2C58			N	= DATAORIGIN+$000C
   387
   388 = 2C58			@VarData	= N
   389 = 0002			@VarDataSize	= 2
   390
   391 11CE			@exit
   392 					.ifdef @new
   393 					lda <@VarData
   394 					sta :ztmp
   395 					lda >@VarData
   396 					ldy #@VarDataSize-1
   397 					jmp @FreeMem
   398 					els
   399 11CE 60				rts						; ret
   400 					eif
   401 				.endl
   402
   403 11CF			.local	RANDOM_0086					; FUNCTION | ASSEMBLER | OVERLOAD
   404 11CF 8D 5A 2C			sta RANGE
   405
   406 				; ---------------------  ASM Block 039  ---------------------
   407
   408
   409 11D2 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   410 11D5 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   411 11D8 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   412 11DB 6D 1E FF		  adc ted_hcount    //Horizontal counter
   413 11DE 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   414 11E1 4D 1E FF		  eor ted_hcount    //Horizontal counter
   415 11E4 A8			  tay
   416
   417 11E5 AD 5A 2C		  lda range
   418 11E8 F0 08		  beq stop
   419
   420 11EA 85 0C		  sta ecx
   421 11EC 84 04		  sty eax
   422
   423 11EE 20 23 11		  jsr imulCL
   424 11F1 A8			  tay
   425
   426 11F2 8C 5B 2C		stop  sty Result
   427
   428 11F5			@exit
   429
   430 				; ------------------------------------------------------------
   431
   432 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   433 				; as Pointer
   434
   435 11F5 E8				inx
   436 11F6 AD 5B 2C 95 18		mva RESULT :STACKORIGIN,x
   437
   438 					.ifdef @new
   439 					lda <@VarData
   440 					sta :ztmp
   441 					lda >@VarData
   442 					ldy #@VarDataSize-1
   443 					jmp @FreeMem
   444 					eif
   445
   446 				; ------------------------------------------------------------
   447
   448 = 2C5A			RANGE	= DATAORIGIN+$000E
   449 = 2C5B			RESULT	= DATAORIGIN+$000F
   450
   451 = 2C5A			@VarData	= RANGE
   452 = 0002			@VarDataSize	= 2
   453
   454 11FB 60				rts						; ret
   455 				.endl
   456
   457 				; ------------------------------------------------------------
   458
   459 = 0101			__PORTB_BANKS	= $0101
   460 = 0648			M_PI_2	= $0648
   461 = 0192			D_PI_2	= $0192
   462 = 0004			D_PI_180	= $04
   463 = 0000			MGTIA	= $00
   464 = 0080			MVBXE	= $80
   465 = 0000			VBXE_XDLADR	= $00
   466 = 0100			VBXE_BCBADR	= $0100
   467 = 1000			VBXE_MAPADR	= $1000
   468 = 1000			VBXE_CHBASE	= $1000
   469 = 5000			VBXE_OVRADR	= $5000
   470 = B000			VBXE_WINDOW	= $B000
   471 = 0000			IDLI	= $00
   472 = 0001			IVBL	= $01
   473 = 00FE			CH_DELCHR	= $FE
   474 = 009B			CH_ENTER	= $9B
   475 = 001B			CH_ESC	= $1B
   476 = 001C			CH_CURS_UP	= $1C
   477 = 001D			CH_CURS_DOWN	= $1D
   478 = 001E			CH_CURS_LEFT	= $1E
   479 = 001F			CH_CURS_RIGHT	= $1F
   480 = 007F			CH_TAB	= $7F
   481 = 009B			CH_EOL	= $9B
   482 = 007D			CH_CLR	= $7D
   483 = 00FD			CH_BELL	= $FD
   484 = 007E			CH_DEL	= $7E
   485 = 009C			CH_DELLINE	= $9C
   486 = 009D			CH_INSLINE	= $9D
   487 = 0000			COLOR_BLACK	= $00
   488 = 000E			COLOR_WHITE	= $0E
   489 = 0032			COLOR_RED	= $32
   490 = 0096			COLOR_CYAN	= $96
   491 = 0068			COLOR_VIOLET	= $68
   492 = 00C4			COLOR_GREEN	= $C4
   493 = 0074			COLOR_BLUE	= $74
   494 = 00EE			COLOR_YELLOW	= $EE
   495 = 0028			COLOR_ORANGE	= $28
   496 = 00E4			COLOR_BROWN	= $E4
   497 = 003C			COLOR_LIGHTRED	= $3C
   498 = 0004			COLOR_GRAY1	= $04
   499 = 0006			COLOR_GRAY2	= $06
   500 = 000A			COLOR_GRAY3	= $0A
   501 = 00CC			COLOR_LIGHTGREEN	= $CC
   502 = 007C			COLOR_LIGHTBLUE	= $7C
   503 = 0004			FMOPENREAD	= $04
   504 = 0008			FMOPENWRITE	= $08
   505 = 0009			FMOPENAPPEND	= $09
   506 = 000C			FMOPENREADWRITE	= $0C
   507 = 2C4C			SCREENWIDTH	= DATAORIGIN+$0000
   508 = 2C4E			SCREENHEIGHT	= DATAORIGIN+$0002
   509 = 2C50			DATESEPARATOR	= DATAORIGIN+$0004
   510 = D20A			RND	= $D20A
   511 = 02C0			adr.PALETTE	= $02C0
   512 11FC			.var PALETTE	= adr.PALETTE .word
   513 = D012			adr.HPALETTE	= $D012
   514 11FC			.var HPALETTE	= adr.HPALETTE .word
   515 = 2C51			FILEMODE	= DATAORIGIN+$0005
   516 = 2C52			GRAPHMODE	= DATAORIGIN+$0006
   517 = 2C53			IORESULT	= DATAORIGIN+$0007
   518 = 2C54			EOLN	= DATAORIGIN+$0008
   519 = 2C55			RNDSEED	= DATAORIGIN+$0009
   520
   521 = 11FC C0 02		PALETTE
   521 = 11FE 12 D0		HPALETTE
   521 				.endl							; UNIT SYSTEM
   522
   523 1200			.local	CALCSCRADDR					; FUNCTION
   524
   525 				; optimize OK (tools.inc), line = 5
   526
   527 1200 AD 7F 2C			lda Y
   528 1203 0A				asl @
   529 1204 A8				tay
   530 1205 AD 7E 2C			lda X
   531 1208 18 79 25 10			add adr.MUL40,y
   532 120C 8D 80 2C			sta RESULT
   533 120F A9 0C			lda #$0C
   534 1211 79 26 10			adc adr.MUL40+1,y
   535 1214 8D 81 2C			sta RESULT+1
   536 1217			@exit
   537
   538 				; ------------------------------------------------------------
   539
   540 				; Push WORD / SMALLINT / SHORTREAL / POINTER
   541 				; as Pointer
   542
   543 1217 E8				inx
   544 1218 AD 80 2C 95 18		mva RESULT :STACKORIGIN,x
   545 121D AD 81 2C 95 28		mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
   546
   547 					.ifdef @new
   548 					lda <@VarData
   549 					sta :ztmp
   550 					lda >@VarData
   551 					ldy #@VarDataSize-1
   552 					jmp @FreeMem
   553 					eif
   554
   555 				; ------------------------------------------------------------
   556
   557 = 2C7E			X	= DATAORIGIN+$0032
   558 = 2C7F			Y	= DATAORIGIN+$0033
   559 = 2C80			RESULT	= DATAORIGIN+$0034
   560
   561 = 2C7E			@VarData	= X
   562 = 0004			@VarDataSize	= 4
   563
   564 1222 60				rts						; ret
   565 				.endl
   566
   567 1223			.local	PUTCHAR_00A3					; PROCEDURE | OVERLOAD
   568
   569 				; optimize OK (tools.inc), line = 12
   570
   571 1223 AD 83 2C			lda Y
   572 1226 8D 7F 2C			sta CALCSCRADDR.Y
   573 1229 AD 82 2C			lda X
   574 122C 8D 7E 2C			sta CALCSCRADDR.X
   575 122F 20 00 12			jsr CALCSCRADDR
   576 1232 E8				inx
   577 1233 AD 84 2C 95 18		mva V :STACKORIGIN,x
   578 1238 20 6C 11			jsr SYSTEM.POKE
   579
   580 				; ------------------------------------------------------------
   581
   582 = 2C82			X	= DATAORIGIN+$0036
   583 = 2C83			Y	= DATAORIGIN+$0037
   584 = 2C84			V	= DATAORIGIN+$0038
   585
   586 = 2C82			@VarData	= X
   587 = 0003			@VarDataSize	= 3
   588
   589 123B			@exit
   590 					.ifdef @new
   591 					lda <@VarData
   592 					sta :ztmp
   593 					lda >@VarData
   594 					ldy #@VarDataSize-1
   595 					jmp @FreeMem
   596 					els
   597 123B 60				rts						; ret
   598 					eif
   599 				.endl
   600
   601 123C			.local	PUTCHAR_00B2					; PROCEDURE | OVERLOAD
   602
   603 				; optimize OK (tools.inc), line = 19
   604
   605 123C AD 86 2C			lda Y
   606 123F 8D 7F 2C			sta CALCSCRADDR.Y
   607 1242 AD 85 2C			lda X
   608 1245 8D 7E 2C			sta CALCSCRADDR.X
   609 1248 20 00 12			jsr CALCSCRADDR
   610 124B B5 18			lda :STACKORIGIN,x
   611 124D 85 5E			sta T0W
   612 124F B5 28			lda :STACKORIGIN+STACKWIDTH,x
   613 1251 85 5F			sta T0W+1
   614 1253 CA				dex
   615
   616 				; optimize OK (tools.inc), line = 20
   617
   618 1254 A4 5F			ldy T0W+1
   619 1256 84 11			sty :bp+1
   620 1258 A4 5E			ldy T0W
   621 125A AD 87 2C			lda V
   622 125D 91 10			sta (:bp),y
   623 125F A5 5F			lda T0W+1
   624 1261 38 E9 04			sub #$04
   625 1264 85 11			sta :bp+1
   626 1266 AD 88 2C			lda C
   627 1269 91 10			sta (:bp),y
   628
   629 				; ------------------------------------------------------------
   630
   631 = 2C85			X	= DATAORIGIN+$0039
   632 = 2C86			Y	= DATAORIGIN+$003A
   633 = 2C87			V	= DATAORIGIN+$003B
   634 = 2C88			C	= DATAORIGIN+$003C
   635
   636 = 2C85			@VarData	= X
   637 = 0004			@VarDataSize	= 4
   638
   639 126B			@exit
   640 					.ifdef @new
   641 					lda <@VarData
   642 					sta :ztmp
   643 					lda >@VarData
   644 					ldy #@VarDataSize-1
   645 					jmp @FreeMem
   646 					els
   647 126B 60				rts						; ret
   648 					eif
   649 				.endl
   650
   651 126C			.local	PRINTXY						; PROCEDURE
   652
   653 				; ------------------------------------------------------------
   654
   655 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   656 				; as Pointer
   657 126C B5 18			lda :STACKORIGIN,x
   658 126E 8D 8B 2D			sta C
   659 1271 CA				dex
   660
   661 				; ------------------------------------------------------------
   662
   663 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   664 				; as Pointer
   665 1272 B5 18			lda :STACKORIGIN,x
   666 1274 8D 8A 2D			sta Y
   667 1277 CA				dex
   668
   669 				; ------------------------------------------------------------
   670
   671 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   672 				; as Pointer
   673 1278 B5 18			lda :STACKORIGIN,x
   674 127A 8D 89 2D			sta X
   675 127D CA				dex
   676
   677 				; ------------------------------------------------------------
   678
   679 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   680 				; as Pointer
   681 127E B5 18			lda :STACKORIGIN,x
   682 1280 85 12			sta :bp2
   683 1282 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   684 1284 85 13			sta :bp2+1
   685 1286 A0 00			ldy #$00
   686 1288 B1 12 99 89 2C C8 + 	mva:rne (:bp2),y adr.S,y+
   687 1290 A9 89 8D EC 12 A9 + 	mwa #adr.S S
   688 129A CA				dex
   689
   690 				; optimize OK (tools.inc), line = 27
   691
   692 129B AD 8A 2D			lda Y
   693 129E 8D 7F 2C			sta CALCSCRADDR.Y
   694 12A1 AD 89 2D			lda X
   695 12A4 8D 7E 2C			sta CALCSCRADDR.X
   696 12A7 20 00 12			jsr CALCSCRADDR
   697 12AA B5 18			lda :STACKORIGIN,x
   698 12AC 85 5E			sta T0W
   699 12AE B5 28			lda :STACKORIGIN+STACKWIDTH,x
   700 12B0 85 5F			sta T0W+1
   701 12B2 CA				dex
   702
   703 				; optimize OK (tools.inc), line = 28
   704
   705 12B3 A9 8A			lda <adr.S+$01
   706 12B5 85 08			sta SYSTEM.MOVE_006F.SOURCE
   707 12B7 A9 2C			lda >adr.S+$01
   708 12B9 85 09			sta SYSTEM.MOVE_006F.SOURCE+1
   709 12BB AD 89 2C			lda adr.S
   710 12BE 85 04			sta SYSTEM.MOVE_006F.COUNT
   711 12C0 A9 00			lda #$00
   712 12C2 85 05			sta SYSTEM.MOVE_006F.COUNT+1
   713 12C4 A5 5E			lda T0W
   714 12C6 85 0C			sta SYSTEM.MOVE_006F.DEST
   715 12C8 A5 5F			lda T0W+1
   716 12CA 85 0D			sta SYSTEM.MOVE_006F.DEST+1
   717 12CC 20 A7 11			jsr SYSTEM.MOVE_006F
   718
   719 				; optimize OK (tools.inc), line = 29
   720
   721 12CF A5 5E			lda T0W
   722 12D1 85 08			sta SYSTEM.FILLCHAR_006D.A
   723 12D3 A5 5F			lda T0W+1
   724 12D5 38 E9 04			sub #$04
   725 12D8 85 09			sta SYSTEM.FILLCHAR_006D.A+1
   726 12DA AD 8B 2D			lda C
   727 12DD 85 04			sta SYSTEM.FILLCHAR_006D.VALUE
   728 12DF AD 89 2C			lda adr.S
   729 12E2 85 0C			sta SYSTEM.FILLCHAR_006D.COUNT
   730 12E4 A9 00			lda #$00
   731 12E6 85 0D			sta SYSTEM.FILLCHAR_006D.COUNT+1
   732 12E8 20 9F 11			jsr SYSTEM.FILLCHAR_006D
   733
   734 				; ------------------------------------------------------------
   735
   736 = 2C89			adr.S	= [DATAORIGIN+$003D] .array [256]
   737 12EB			.var S	= adr.S .word
   738 = 2D89			X	= DATAORIGIN+$013D
   739 = 2D8A			Y	= DATAORIGIN+$013E
   740 = 2D8B			C	= DATAORIGIN+$013F
   741
   742 = 12EC			@VarData	= S
   743 = 0103			@VarDataSize	= 259
   744
   745 12EB			@exit
   746 					.ifdef @new
   747 					lda <@VarData
   748 					sta :ztmp
   749 					lda >@VarData
   750 					ldy #@VarDataSize-1
   751 					jmp @FreeMem
   752 					els
   753 12EB 60				rts						; ret
   754 					eif
   755 = 12EC 89 2C		S
   755 				.endl
   756
   757 12EE			.local	SHOWSCORE					; PROCEDURE
   758
   759 				; optimize OK (tools.inc), line = 44
   760
   761 12EE AD 65 2C			lda PLAYER1.ISALIVE
   762 12F1 F0 19			jeq l_0107
   763 12F3 AD 61 2C			lda PLAYER1.COLOUR
   764 12F6 8D 88 2C			sta PUTCHAR_00B2.C
   765 12F9 AD 64 2C			lda PLAYER1.SCORE
   766 12FC 8D 87 2C			sta PUTCHAR_00B2.V
   767 12FF A9 00			lda #$00
   768 1301 8D 86 2C			sta PUTCHAR_00B2.Y
   769 1304 A9 1E			lda #$1E
   770 1306 8D 85 2C			sta PUTCHAR_00B2.X
   771 1309 20 3C 12			jsr PUTCHAR_00B2
   772 130C			l_0107
   773
   774 				; optimize OK (tools.inc), line = 45
   775
   776 130C AD 6D 2C			lda PLAYER2.ISALIVE
   777 130F F0 19			jeq l_011F
   778 1311 AD 69 2C			lda PLAYER2.COLOUR
   779 1314 8D 88 2C			sta PUTCHAR_00B2.C
   780 1317 AD 6C 2C			lda PLAYER2.SCORE
   781 131A 8D 87 2C			sta PUTCHAR_00B2.V
   782 131D A9 00			lda #$00
   783 131F 8D 86 2C			sta PUTCHAR_00B2.Y
   784 1322 A9 20			lda #$20
   785 1324 8D 85 2C			sta PUTCHAR_00B2.X
   786 1327 20 3C 12			jsr PUTCHAR_00B2
   787 132A			l_011F
   788
   789 				; optimize OK (tools.inc), line = 46
   790
   791 132A AD 75 2C			lda PLAYER3.ISALIVE
   792 132D F0 19			jeq l_0137
   793 132F AD 71 2C			lda PLAYER3.COLOUR
   794 1332 8D 88 2C			sta PUTCHAR_00B2.C
   795 1335 AD 74 2C			lda PLAYER3.SCORE
   796 1338 8D 87 2C			sta PUTCHAR_00B2.V
   797 133B A9 00			lda #$00
   798 133D 8D 86 2C			sta PUTCHAR_00B2.Y
   799 1340 A9 22			lda #$22
   800 1342 8D 85 2C			sta PUTCHAR_00B2.X
   801 1345 20 3C 12			jsr PUTCHAR_00B2
   802 1348			l_0137
   803
   804 				; optimize OK (tools.inc), line = 47
   805
   806 1348 AD 7D 2C			lda PLAYER4.ISALIVE
   807 134B F0 19			jeq l_014F
   808 134D AD 79 2C			lda PLAYER4.COLOUR
   809 1350 8D 88 2C			sta PUTCHAR_00B2.C
   810 1353 AD 7C 2C			lda PLAYER4.SCORE
   811 1356 8D 87 2C			sta PUTCHAR_00B2.V
   812 1359 A9 00			lda #$00
   813 135B 8D 86 2C			sta PUTCHAR_00B2.Y
   814 135E A9 24			lda #$24
   815 1360 8D 85 2C			sta PUTCHAR_00B2.X
   816 1363 20 3C 12			jsr PUTCHAR_00B2
   817 1366			l_014F
   818 1366			@exit
   819 					.ifdef @new
   820 					lda <@VarData
   821 					sta :ztmp
   822 					lda >@VarData
   823 					ldy #@VarDataSize-1
   824 					jmp @FreeMem
   825 					els
   826 1366 60				rts						; ret
   827 					eif
   828 				.endl
   829
   830 1367			.local	UPDATESCORE					; PROCEDURE
   831
   832 				; optimize OK (tools.inc), line = 54
   833
   834 1367 AD 65 2C			lda PLAYER1.ISALIVE
   835 136A F0 03			jeq l_016B
   836 136C EE 64 2C			inc PLAYER1.SCORE
   837 136F			l_016B
   838
   839 				; optimize OK (tools.inc), line = 55
   840
   841 136F AD 6D 2C			lda PLAYER2.ISALIVE
   842 1372 F0 03			jeq l_017E
   843 1374 EE 6C 2C			inc PLAYER2.SCORE
   844 1377			l_017E
   845
   846 				; optimize OK (tools.inc), line = 56
   847
   848 1377 AD 75 2C			lda PLAYER3.ISALIVE
   849 137A F0 03			jeq l_0191
   850 137C EE 74 2C			inc PLAYER3.SCORE
   851 137F			l_0191
   852
   853 				; optimize OK (tools.inc), line = 57
   854
   855 137F AD 7D 2C			lda PLAYER4.ISALIVE
   856 1382 F0 03			jeq l_01A4
   857 1384 EE 7C 2C			inc PLAYER4.SCORE
   858 1387			l_01A4
   859 1387			@exit
   860 					.ifdef @new
   861 					lda <@VarData
   862 					sta :ztmp
   863 					lda >@VarData
   864 					ldy #@VarDataSize-1
   865 					jmp @FreeMem
   866 					els
   867 1387 60				rts						; ret
   868 					eif
   869 				.endl
   870
   871 1388			.local	CHECKAVAILDIR					; PROCEDURE
   872
   873 				; optimize OK (tools.inc), line = 64
   874
   875 1388 A9 00			lda #$00
   876 138A 85 5C			sta AVAILDIR
   877
   878 				; optimize OK (tools.inc), line = 65
   879
   880 138C AC 3E 2C 84 12 AC + 	mwy PLY :bp2
   881 1396 A0 00			ldy #PLY.X-DATAORIGIN
   882 1398 B1 12			lda (:bp2),y
   883 139A 8D 7E 2C			sta CALCSCRADDR.X
   884 139D A0 01			ldy #PLY.Y-DATAORIGIN
   885 139F B1 12			lda (:bp2),y
   886 13A1 8D 7F 2C			sta CALCSCRADDR.Y
   887 13A4 20 00 12			jsr CALCSCRADDR
   888 13A7 B5 18			lda :STACKORIGIN,x
   889 13A9 85 5E			sta T0W
   890 13AB B5 28			lda :STACKORIGIN+STACKWIDTH,x
   891 13AD 85 5F			sta T0W+1
   892 13AF CA				dex
   893
   894 				; optimize OK (tools.inc), line = 67
   895
   896 13B0 A5 5E			lda T0W
   897 13B2 38 E9 28			sub #$28
   898 13B5 85 21			sta :STACKORIGIN+9
   899 13B7 A5 5F			lda T0W+1
   900 13B9 E9 00			sbc #$00
   901 13BB 85 11			sta :bp+1
   902 13BD A4 21			ldy :STACKORIGIN+9
   903 13BF B1 10			lda (:bp),y
   904 13C1 C9 20			cmp #$20
   905 13C3 D0 06			jne l_01D3
   906 13C5 A5 5C			lda AVAILDIR
   907 13C7 09 01			ora #$01
   908 13C9 85 5C			sta AVAILDIR
   909 13CB			l_01D3
   910
   911 				; optimize OK (tools.inc), line = 68
   912
   913 13CB A4 5E 84 12 A4 5F + 	mwy T0W :bp2
   914 13D3 A0 28			ldy #$28
   915 13D5 B1 12			lda (:bp2),y
   916 13D7 C9 20			cmp #$20
   917 13D9 D0 06			jne l_01F6
   918 13DB A5 5C			lda AVAILDIR
   919 13DD 09 02			ora #$02
   920 13DF 85 5C			sta AVAILDIR
   921 13E1			l_01F6
   922
   923 				; optimize OK (tools.inc), line = 69
   924
   925 13E1 A5 5E			lda T0W
   926 13E3 38 E9 01			sub #$01
   927 13E6 85 21			sta :STACKORIGIN+9
   928 13E8 A5 5F			lda T0W+1
   929 13EA E9 00			sbc #$00
   930 13EC 85 11			sta :bp+1
   931 13EE A4 21			ldy :STACKORIGIN+9
   932 13F0 B1 10			lda (:bp),y
   933 13F2 C9 20			cmp #$20
   934 13F4 D0 06			jne l_0219
   935 13F6 A5 5C			lda AVAILDIR
   936 13F8 09 04			ora #$04
   937 13FA 85 5C			sta AVAILDIR
   938 13FC			l_0219
   939
   940 				; optimize OK (tools.inc), line = 70
   941
   942 13FC A4 5E 84 12 A4 5F + 	mwy T0W :bp2
   943 1404 A0 01			ldy #$01
   944 1406 B1 12			lda (:bp2),y
   945 1408 C9 20			cmp #$20
   946 140A D0 06			jne l_023C
   947 140C A5 5C			lda AVAILDIR
   948 140E 09 08			ora #$08
   949 1410 85 5C			sta AVAILDIR
   950 1412			l_023C
   951 1412			@exit
   952 					.ifdef @new
   953 					lda <@VarData
   954 					sta :ztmp
   955 					lda >@VarData
   956 					ldy #@VarDataSize-1
   957 					jmp @FreeMem
   958 					els
   959 1412 60				rts						; ret
   960 					eif
   961 				.endl
   962
   963 1413			.local	ANIMATEOBSTACLES				; PROCEDURE
   964
   965 				; optimize FAIL (0, tools.inc), line = 79
   966
   967 1413 EE 8C 2D			inc COUNTER
   968
   969 				; optimize OK (tools.inc), line = 80
   970
   971 1416 AD 8C 2D			lda COUNTER
   972 1419 29 01			and #$01
   973 141B F0 08			jeq l_0267
   974 141D A9 54			lda #$54
   975 141F 8D 8D 2D			sta OBST
   976 1422 4C 2A 14			jmp l_0275
   977 1425			l_0267
   978 1425 A9 55			lda #$55
   979 1427 8D 8D 2D			sta OBST
   980 142A			l_0275
   981
   982 				; optimize OK (tools.inc), line = 81
   983
   984 142A A9 07			lda #$07
   985 142C 85 59			sta I0B
   986
   987 142E			l_0282
   988 				; --- ForToDoCondition
   989 142E A5 59			lda I0B
   990 1430 0A				asl @
   991 1431 A8				tay
   992 1432 B9 60 00			lda adr.OBSTACLES,y
   993 1435 85 21			sta :STACKORIGIN+9
   994 1437 B9 61 00			lda adr.OBSTACLES+1,y
   995 143A 85 11			sta :bp+1
   996 143C A4 21			ldy :STACKORIGIN+9
   997 143E AD 8D 2D			lda OBST
   998 1441 91 10			sta (:bp),y
   999 1443 C6 59			dec I0B
  1000 1445 10 E7			jpl l_0282
  1001 1447			l_0290
  1002
  1003 				; ------------------------------------------------------------
  1004
  1005 = 2D8C			COUNTER	= DATAORIGIN+$0140
  1006 = 2D8D			OBST	= DATAORIGIN+$0141
  1007 = 0000			@FORTMP_027F	= $00
  1008
  1009 = 2D8C			@VarData	= COUNTER
  1010 = 0002			@VarDataSize	= 2
  1011
  1012 1447			@exit
  1013 					.ifdef @new
  1014 					lda <@VarData
  1015 					sta :ztmp
  1016 					lda >@VarData
  1017 					ldy #@VarDataSize-1
  1018 					jmp @FreeMem
  1019 					els
  1020 1447 60				rts						; ret
  1021 					eif
  1022 				.endl
  1023
  1024 1448			.local	SAVEOBSTACLES					; PROCEDURE
  1025
  1026 				; optimize OK (tools.inc), line = 88
  1027
  1028 1448 A9 07			lda #$07
  1029 144A 85 59			sta I0B
  1030
  1031 144C			l_02AB
  1032 				; --- ForToDoCondition
  1033
  1034 				; optimize OK (tools.inc), line = 89
  1035
  1036 144C A5 59			lda I0B
  1037 144E 0A				asl @
  1038 144F A8				tay
  1039 1450 B9 61 00			lda adr.OBSTACLES+1,y
  1040 1453 C9 00			cmp #$00
  1041 1455 D0 05			bne @+
  1042 1457 B9 60 00			lda adr.OBSTACLES,y
  1043 145A C9 5E			cmp #$5E
  1044 145C			@
  1045 145C F0 29			jeq l_02CD
  1046
  1047 				; optimize OK (tools.inc), line = 90
  1048
  1049 145E B9 60 00			lda adr.OBSTACLES,y
  1050 1461 85 21			sta :STACKORIGIN+9
  1051 1463 B9 61 00			lda adr.OBSTACLES+1,y
  1052 1466 85 11			sta :bp+1
  1053 1468 A4 21			ldy :STACKORIGIN+9
  1054 146A A9 54			lda #$54
  1055 146C 91 10			sta (:bp),y
  1056
  1057 				; optimize OK (tools.inc), line = 91
  1058
  1059 146E A5 59			lda I0B
  1060 1470 0A				asl @
  1061 1471 A8				tay
  1062 1472 B9 60 00			lda adr.OBSTACLES,y
  1063 1475 38 E9 00			sub #$00
  1064 1478 85 21			sta :STACKORIGIN+9
  1065 147A B9 61 00			lda adr.OBSTACLES+1,y
  1066 147D E9 04			sbc #$04
  1067 147F 85 11			sta :bp+1
  1068 1481 A4 21			ldy :STACKORIGIN+9
  1069 1483 A9 65			lda #$65
  1070 1485 91 10			sta (:bp),y
  1071 1487			l_02CD
  1072
  1073 				; --- ForToDoEpilog
  1074 1487 C6 59			dec I0B
  1075 1489 10 C1			jpl l_02AB
  1076 148B			l_02B9
  1077
  1078 				; ------------------------------------------------------------
  1079
  1080 = 0000			@FORTMP_02A8	= $00
  1081 148B			@exit
  1082 					.ifdef @new
  1083 					lda <@VarData
  1084 					sta :ztmp
  1085 					lda >@VarData
  1086 					ldy #@VarDataSize-1
  1087 					jmp @FreeMem
  1088 					els
  1089 148B 60				rts						; ret
  1090 					eif
  1091 				.endl
  1092
  1093 148C			.local	DRAWPLAYER					; PROCEDURE
  1094
  1095 				; optimize OK (tools.inc), line = 100
  1096
  1097 148C AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1098 1496 A0 04			ldy #PLY.DIR-DATAORIGIN
  1099 1498 B1 12			lda (:bp2),y
  1100 149A C5 5B			cmp NEWDIR
  1101 149C D0 14			jne l_02FF
  1102
  1103 				; optimize OK (tools.inc), line = 101
  1104
  1105 149E A5 5B			lda NEWDIR
  1106 14A0 29 0C			and #$0C
  1107 14A2 F0 07			jeq l_0316
  1108 14A4 A9 40			lda #$40
  1109 14A6 85 58			sta T0B
  1110 14A8 4C AF 14			jmp l_0324
  1111 14AB			l_0316
  1112 14AB A9 42			lda #$42
  1113 14AD 85 58			sta T0B
  1114 14AF			l_0324
  1115 14AF 4C 22 15			jmp l_0331
  1116 14B2			l_02FF
  1117
  1118 				; optimize OK (tools.inc), line = 103
  1119
  1120 14B2 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1121 14BC A0 04			ldy #PLY.DIR-DATAORIGIN
  1122 14BE B1 12			lda (:bp2),y
  1123 14C0 29 0A			and #$0A
  1124 14C2 F0 0A			jeq l_0357
  1125 14C4 A5 5B			lda NEWDIR
  1126 14C6 29 05			and #$05
  1127 14C8 F0 04			jeq l_0357
  1128 14CA A9 7D			lda #$7D
  1129 14CC 85 58			sta T0B
  1130 14CE			l_0357
  1131
  1132 				; optimize OK (tools.inc), line = 104
  1133
  1134 14CE AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1135 14D8 A0 04			ldy #PLY.DIR-DATAORIGIN
  1136 14DA B1 12			lda (:bp2),y
  1137 14DC 29 09			and #$09
  1138 14DE F0 0A			jeq l_0384
  1139 14E0 A5 5B			lda NEWDIR
  1140 14E2 29 06			and #$06
  1141 14E4 F0 04			jeq l_0384
  1142 14E6 A9 6E			lda #$6E
  1143 14E8 85 58			sta T0B
  1144 14EA			l_0384
  1145
  1146 				; optimize OK (tools.inc), line = 105
  1147
  1148 14EA AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1149 14F4 A0 04			ldy #PLY.DIR-DATAORIGIN
  1150 14F6 B1 12			lda (:bp2),y
  1151 14F8 29 06			and #$06
  1152 14FA F0 0A			jeq l_03B1
  1153 14FC A5 5B			lda NEWDIR
  1154 14FE 29 09			and #$09
  1155 1500 F0 04			jeq l_03B1
  1156 1502 A9 6D			lda #$6D
  1157 1504 85 58			sta T0B
  1158 1506			l_03B1
  1159
  1160 				; optimize OK (tools.inc), line = 106
  1161
  1162 1506 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1163 1510 A0 04			ldy #PLY.DIR-DATAORIGIN
  1164 1512 B1 12			lda (:bp2),y
  1165 1514 29 05			and #$05
  1166 1516 F0 0A			jeq l_03DE
  1167 1518 A5 5B			lda NEWDIR
  1168 151A 29 0A			and #$0A
  1169 151C F0 04			jeq l_03DE
  1170 151E A9 70			lda #$70
  1171 1520 85 58			sta T0B
  1172 1522			l_03DE
  1173 1522			l_0331
  1174
  1175 				; optimize OK (tools.inc), line = 108
  1176
  1177 1522 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1178 152C A0 00			ldy #PLY.X-DATAORIGIN
  1179 152E B1 12			lda (:bp2),y
  1180 1530 8D 82 2C			sta PUTCHAR_00A3.X
  1181 1533 A0 01			ldy #PLY.Y-DATAORIGIN
  1182 1535 A5 58			lda T0B
  1183 1537 8D 84 2C			sta PUTCHAR_00A3.V
  1184 153A B1 12			lda (:bp2),y
  1185 153C 8D 83 2C			sta PUTCHAR_00A3.Y
  1186 153F 20 23 12			jsr PUTCHAR_00A3
  1187
  1188 				; optimize OK (tools.inc), line = 110
  1189
  1190 1542 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1191 154C A0 04			ldy #PLY.DIR-DATAORIGIN
  1192 154E A5 5B			lda NEWDIR
  1193 1550 91 12			sta (:bp2),y
  1194
  1195 				; optimize OK (tools.inc), line = 112
  1196
  1197 1552 A5 5B			lda NEWDIR
  1198 1554 8D 8E 2D			sta @CASETMP_0003
  1199 1557 C9 01			cmp #$01
  1200 1559 D0 1A			jne l_0400
  1201 155B			@
  1202
  1203 				; optimize OK (tools.inc), line = 113
  1204
  1205 155B AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1206 1565 A0 01			ldy #PLY.Y-DATAORIGIN
  1207 1567 B1 12			lda (:bp2),y
  1208 1569 38 E9 01			sub #$01
  1209 156C 91 12			sta (:bp2),y
  1210 156E A9 50			lda #$50
  1211 1570 85 58			sta T0B
  1212
  1213 1572 4C CC 15			jmp a_0003
  1214 1575			l_0400
  1215 1575 C9 02			cmp #$02
  1216 1577 D0 1A			jne l_040E
  1217 1579			@
  1218
  1219 				; optimize OK (tools.inc), line = 114
  1220
  1221 1579 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1222 1583 A0 01			ldy #PLY.Y-DATAORIGIN
  1223 1585 B1 12			lda (:bp2),y
  1224 1587 18 69 01			add #$01
  1225 158A 91 12			sta (:bp2),y
  1226 158C A9 53			lda #$53
  1227 158E 85 58			sta T0B
  1228
  1229 1590 4C CC 15			jmp a_0003
  1230 1593			l_040E
  1231 1593 C9 04			cmp #$04
  1232 1595 D0 1A			jne l_041C
  1233 1597			@
  1234
  1235 				; optimize OK (tools.inc), line = 115
  1236
  1237 1597 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1238 15A1 A0 00			ldy #PLY.X-DATAORIGIN
  1239 15A3 B1 12			lda (:bp2),y
  1240 15A5 38 E9 01			sub #$01
  1241 15A8 91 12			sta (:bp2),y
  1242 15AA A9 51			lda #$51
  1243 15AC 85 58			sta T0B
  1244
  1245 15AE 4C CC 15			jmp a_0003
  1246 15B1			l_041C
  1247 15B1 C9 08			cmp #$08
  1248 15B3 D0 17			jne l_042A
  1249 15B5			@
  1250
  1251 				; optimize OK (tools.inc), line = 116
  1252
  1253 15B5 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1254 15BF A0 00			ldy #PLY.X-DATAORIGIN
  1255 15C1 B1 12			lda (:bp2),y
  1256 15C3 18 69 01			add #$01
  1257 15C6 91 12			sta (:bp2),y
  1258 15C8 A9 52			lda #$52
  1259 15CA 85 58			sta T0B
  1260
  1261 15CC			l_042A
  1262 15CC			a_0003
  1263
  1264 				; optimize OK (tools.inc), line = 119
  1265
  1266 15CC AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1267 15D6 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1268 15D8 A5 58			lda T0B
  1269 15DA 91 12			sta (:bp2),y
  1270
  1271 				; optimize OK (tools.inc), line = 121
  1272
  1273 15DC A0 00			ldy #PLY.X-DATAORIGIN
  1274 15DE B1 12			lda (:bp2),y
  1275 15E0 8D 85 2C			sta PUTCHAR_00B2.X
  1276 15E3 A0 01			ldy #PLY.Y-DATAORIGIN
  1277 15E5 B1 12			lda (:bp2),y
  1278 15E7 8D 86 2C			sta PUTCHAR_00B2.Y
  1279 15EA A0 02			ldy #PLY.HEAD-DATAORIGIN
  1280 15EC B1 12			lda (:bp2),y
  1281 15EE 8D 87 2C			sta PUTCHAR_00B2.V
  1282 15F1 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1283 15F3 B1 12			lda (:bp2),y
  1284 15F5 8D 88 2C			sta PUTCHAR_00B2.C
  1285 15F8 20 3C 12			jsr PUTCHAR_00B2
  1286
  1287 				; ------------------------------------------------------------
  1288
  1289 = 2D8E			@CASETMP_0003	= DATAORIGIN+$0142
  1290
  1291 = 2D8E			@VarData	= @CASETMP_0003
  1292 = 0001			@VarDataSize	= 1
  1293
  1294 15FB			@exit
  1295 					.ifdef @new
  1296 					lda <@VarData
  1297 					sta :ztmp
  1298 					lda >@VarData
  1299 					ldy #@VarDataSize-1
  1300 					jmp @FreeMem
  1301 					els
  1302 15FB 60				rts						; ret
  1303 					eif
  1304 				.endl
  1305
  1306 15FC			.local	PLAYERBUSTED					; PROCEDURE
  1307
  1308 				; optimize OK (tools.inc), line = 128
  1309
  1310 15FC AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1311 1606 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1312 1608 A9 00			lda #$00
  1313 160A 91 12			sta (:bp2),y
  1314 160C C6 5A			dec ALIVE
  1315
  1316 				; optimize OK (tools.inc), line = 129
  1317
  1318 160E A0 00			ldy #PLY.X-DATAORIGIN
  1319 1610 B1 12			lda (:bp2),y
  1320 1612 8D 85 2C			sta PUTCHAR_00B2.X
  1321 1615 A0 01			ldy #PLY.Y-DATAORIGIN
  1322 1617 B1 12			lda (:bp2),y
  1323 1619 8D 86 2C			sta PUTCHAR_00B2.Y
  1324 161C A0 02			ldy #PLY.HEAD-DATAORIGIN
  1325 161E B1 12			lda (:bp2),y
  1326 1620 8D 87 2C			sta PUTCHAR_00B2.V
  1327 1623 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1328 1625 B1 12			lda (:bp2),y
  1329 1627 18 69 80			add #$80
  1330 162A 8D 88 2C			sta PUTCHAR_00B2.C
  1331 162D 20 3C 12			jsr PUTCHAR_00B2
  1332 1630			@exit
  1333 					.ifdef @new
  1334 					lda <@VarData
  1335 					sta :ztmp
  1336 					lda >@VarData
  1337 					ldy #@VarDataSize-1
  1338 					jmp @FreeMem
  1339 					els
  1340 1630 60				rts						; ret
  1341 					eif
  1342 				.endl
  1343
  1344 1631			.local	CHECKJOYSTATUS					; PROCEDURE
  1345
  1346 				; optimize OK (tools.inc), line = 136
  1347
  1348 1631 A9 02			lda #$02
  1349 1633 8D 08 FF			sta JOY
  1350 1636 A9 FF			lda #$FF
  1351 1638 8D 30 FD			sta KEYSCAN
  1352
  1353 				; optimize OK (tools.inc), line = 137
  1354
  1355 163B AD 08 FF			lda JOY
  1356 163E 49 FF			eor #$FF
  1357 1640 85 5D			sta JOYSTATUS
  1358 1642			@exit
  1359 					.ifdef @new
  1360 					lda <@VarData
  1361 					sta :ztmp
  1362 					lda >@VarData
  1363 					ldy #@VarDataSize-1
  1364 					jmp @FreeMem
  1365 					els
  1366 1642 60				rts						; ret
  1367 					eif
  1368 				.endl
  1369
  1370 1643			.local	SETPLAYER					; PROCEDURE
  1371
  1372 				; optimize OK (tools.inc), line = 144
  1373
  1374 1643 AD 8F 2D			lda P
  1375 1646 8D 3E 2C			sta PLY
  1376 1649 AD 90 2D			lda P+1
  1377 164C 8D 3F 2C			sta PLY+1
  1378
  1379 				; optimize OK (tools.inc), line = 146
  1380
  1381 164F AD 93 2D			lda DIR
  1382 1652 8D 97 2D			sta @CASETMP_0004
  1383 1655 C9 01			cmp #$01
  1384 1657 D0 07			jne l_0491
  1385 1659			@
  1386
  1387 				; optimize OK (tools.inc), line = 147
  1388
  1389 1659 A9 50			lda #$50
  1390 165B 85 58			sta T0B
  1391
  1392 165D 4C 7E 16			jmp a_0004
  1393 1660			l_0491
  1394 1660 C9 02			cmp #$02
  1395 1662 D0 07			jne l_049E
  1396 1664			@
  1397
  1398 				; optimize OK (tools.inc), line = 148
  1399
  1400 1664 A9 53			lda #$53
  1401 1666 85 58			sta T0B
  1402
  1403 1668 4C 7E 16			jmp a_0004
  1404 166B			l_049E
  1405 166B C9 04			cmp #$04
  1406 166D D0 07			jne l_04AB
  1407 166F			@
  1408
  1409 				; optimize OK (tools.inc), line = 149
  1410
  1411 166F A9 51			lda #$51
  1412 1671 85 58			sta T0B
  1413
  1414 1673 4C 7E 16			jmp a_0004
  1415 1676			l_04AB
  1416 1676 C9 08			cmp #$08
  1417 1678 D0 04			jne l_04B8
  1418 167A			@
  1419
  1420 				; optimize OK (tools.inc), line = 150
  1421
  1422 167A A9 52			lda #$52
  1423 167C 85 58			sta T0B
  1424
  1425 167E			l_04B8
  1426 167E			a_0004
  1427
  1428 				; optimize OK (tools.inc), line = 153
  1429
  1430 167E AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1431 1688 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1432 168A AD 94 2D			lda BRAIN
  1433 168D 91 12			sta (:bp2),y
  1434 168F A0 00			ldy #PLY.X-DATAORIGIN
  1435 1691 AD 91 2D			lda X
  1436 1694 91 12			sta (:bp2),y
  1437 1696 A0 01			ldy #PLY.Y-DATAORIGIN
  1438 1698 AD 92 2D			lda Y
  1439 169B 91 12			sta (:bp2),y
  1440 169D A0 04			ldy #PLY.DIR-DATAORIGIN
  1441 169F AD 93 2D			lda DIR
  1442 16A2 91 12			sta (:bp2),y
  1443
  1444 				; optimize OK (tools.inc), line = 154
  1445
  1446 16A4 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1447 16A6 A5 58			lda T0B
  1448 16A8 91 12			sta (:bp2),y
  1449 16AA A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1450 16AC AD 95 2D			lda COLOUR
  1451 16AF 91 12			sta (:bp2),y
  1452 16B1 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1453 16B3 AD 96 2D			lda ISALIVE
  1454 16B6 91 12			sta (:bp2),y
  1455
  1456 				; optimize OK (tools.inc), line = 155
  1457
  1458 16B8 AD 96 2D			lda ISALIVE
  1459 16BB F0 1C			jeq l_04FA
  1460
  1461 				; optimize FAIL (0, tools.inc), line = 156
  1462
  1463 16BD E6 5A			inc ALIVE
  1464 16BF AD 95 2D			lda COLOUR
  1465 16C2 8D 88 2C			sta PUTCHAR_00B2.C
  1466 16C5 A5 58			lda T0B
  1467 16C7 8D 87 2C			sta PUTCHAR_00B2.V
  1468 16CA AD 92 2D			lda Y
  1469 16CD 8D 86 2C			sta PUTCHAR_00B2.Y
  1470 16D0 AD 91 2D			lda X
  1471 16D3 8D 85 2C			sta PUTCHAR_00B2.X
  1472 16D6 20 3C 12			jsr PUTCHAR_00B2
  1473 16D9			l_04FA
  1474
  1475 				; ------------------------------------------------------------
  1476
  1477 = 2D8F			P	= DATAORIGIN+$0143
  1478 = 2D91			X	= DATAORIGIN+$0145
  1479 = 2D92			Y	= DATAORIGIN+$0146
  1480 = 2D93			DIR	= DATAORIGIN+$0147
  1481 = 2D94			BRAIN	= DATAORIGIN+$0148
  1482 = 2D95			COLOUR	= DATAORIGIN+$0149
  1483 = 2D96			ISALIVE	= DATAORIGIN+$014A
  1484 = 2D97			@CASETMP_0004	= DATAORIGIN+$014B
  1485
  1486 = 2D8F			@VarData	= P
  1487 = 0009			@VarDataSize	= 9
  1488
  1489 16D9			@exit
  1490 					.ifdef @new
  1491 					lda <@VarData
  1492 					sta :ztmp
  1493 					lda >@VarData
  1494 					ldy #@VarDataSize-1
  1495 					jmp @FreeMem
  1496 					els
  1497 16D9 60				rts						; ret
  1498 					eif
  1499 				.endl
  1500
  1501 16DA			.local	NEXTLEVEL					; PROCEDURE
  1502
  1503 				; optimize FAIL (0, tools.inc), line = 164
  1504
  1505 16DA EE 5C 2C			inc LEVEL
  1506 16DD AD 5C 2C			lda LEVEL
  1507 16E0 C9 08			cmp #$08
  1508 16E2 D0 05			jne l_0528
  1509 16E4 A9 05			lda #$05
  1510 16E6 8D 5C 2C			sta LEVEL
  1511 16E9			l_0528
  1512 16E9			@exit
  1513 					.ifdef @new
  1514 					lda <@VarData
  1515 					sta :ztmp
  1516 					lda >@VarData
  1517 					ldy #@VarDataSize-1
  1518 					jmp @FreeMem
  1519 					els
  1520 16E9 60				rts						; ret
  1521 					eif
  1522 				.endl
  1523
  1524 16EA			.local	STARTSCREEN					; PROCEDURE
  1525
  1526 				; optimize FAIL ('PRINTXY', tools.inc), line = 173
  1527
  1528 16EA E8				inx
  1529 16EB AD 7A 17 95 18		mva INFO :STACKORIGIN,x
  1530 16F0 AD 7B 17 95 28		mva INFO+1 :STACKORIGIN+STACKWIDTH,x
  1531 16F5 E8				inx
  1532 16F6 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1533 16FA E8				inx
  1534 16FB A9 00 95 18			mva #$00 :STACKORIGIN,x
  1535 16FF E8				inx
  1536 1700 A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1537 1704 20 6C 12			jsr PRINTXY
  1538
  1539 				; optimize OK (tools.inc), line = 174
  1540
  1541 1707 AD 61 2C			lda PLAYER1.COLOUR
  1542 170A 18 69 80			add #$80
  1543 170D 8D 88 2C			sta PUTCHAR_00B2.C
  1544 1710 AD 60 2C			lda PLAYER1.HEAD
  1545 1713 8D 87 2C			sta PUTCHAR_00B2.V
  1546 1716 AD 5F 2C			lda PLAYER1.Y
  1547 1719 8D 86 2C			sta PUTCHAR_00B2.Y
  1548 171C AD 5E 2C			lda PLAYER1.X
  1549 171F 8D 85 2C			sta PUTCHAR_00B2.X
  1550 1722 20 3C 12			jsr PUTCHAR_00B2
  1551
  1552 				; --- RepeatUntilProlog
  1553 1725			l_054B
  1554
  1555 				; optimize FAIL ('CHECKJOYSTATUS', tools.inc), line = 176
  1556
  1557 1725 20 31 16			jsr CHECKJOYSTATUS
  1558 1728 A5 5D			lda JOYSTATUS
  1559 172A C9 40			cmp #$40
  1560 172C D0 F7			jne l_054B
  1561
  1562 				; optimize OK (tools.inc), line = 178
  1563
  1564 172E A9 A0			lda #$A0
  1565 1730 85 04			sta SYSTEM.FILLCHAR_006D.VALUE
  1566 1732 AD 98 2D			lda adr.INFO
  1567 1735 85 0C			sta SYSTEM.FILLCHAR_006D.COUNT
  1568 1737 A9 00			lda #$00
  1569 1739 85 0D			sta SYSTEM.FILLCHAR_006D.COUNT+1
  1570 173B A9 02			lda #$02
  1571 173D 85 08			sta SYSTEM.FILLCHAR_006D.A
  1572 173F A9 0C			lda #$0C
  1573 1741 85 09			sta SYSTEM.FILLCHAR_006D.A+1
  1574 1743 20 9F 11			jsr SYSTEM.FILLCHAR_006D
  1575
  1576 				; optimize OK (tools.inc), line = 179
  1577
  1578 1746 A9 41			lda #$41
  1579 1748 85 04			sta SYSTEM.FILLCHAR_006D.VALUE
  1580 174A AD 98 2D			lda adr.INFO
  1581 174D 85 0C			sta SYSTEM.FILLCHAR_006D.COUNT
  1582 174F A9 00			lda #$00
  1583 1751 85 0D			sta SYSTEM.FILLCHAR_006D.COUNT+1
  1584 1753 A9 02			lda #$02
  1585 1755 85 08			sta SYSTEM.FILLCHAR_006D.A
  1586 1757 A9 08			lda #$08
  1587 1759 85 09			sta SYSTEM.FILLCHAR_006D.A+1
  1588 175B 20 9F 11			jsr SYSTEM.FILLCHAR_006D
  1589
  1590 				; optimize OK (tools.inc), line = 180
  1591
  1592 175E AD 61 2C			lda PLAYER1.COLOUR
  1593 1761 8D 88 2C			sta PUTCHAR_00B2.C
  1594 1764 AD 60 2C			lda PLAYER1.HEAD
  1595 1767 8D 87 2C			sta PUTCHAR_00B2.V
  1596 176A AD 5F 2C			lda PLAYER1.Y
  1597 176D 8D 86 2C			sta PUTCHAR_00B2.Y
  1598 1770 AD 5E 2C			lda PLAYER1.X
  1599 1773 8D 85 2C			sta PUTCHAR_00B2.X
  1600 1776 20 3C 12			jsr PUTCHAR_00B2
  1601
  1602 				; ------------------------------------------------------------
  1603
  1604 = 2D98			adr.INFO	= [DATAORIGIN+$014C] .array [256]
  1605 1779			.var INFO	= adr.INFO .word
  1606
  1607 = 177A			@VarData	= INFO
  1608 = 0100			@VarDataSize	= 256
  1609
  1610 1779			@exit
  1611 					.ifdef @new
  1612 					lda <@VarData
  1613 					sta :ztmp
  1614 					lda >@VarData
  1615 					ldy #@VarDataSize-1
  1616 					jmp @FreeMem
  1617 					els
  1618 1779 60				rts						; ret
  1619 					eif
  1620 = 177A 98 2D		INFO
  1620 				.endl
  1621
  1622 177C			.local	ENDSCREEN					; PROCEDURE
  1623
  1624 				; optimize OK (tools.inc), line = 190
  1625
  1626 177C AD 64 2C			lda PLAYER1.SCORE
  1627 177F C9 39			cmp #$39
  1628 1781 D0 20			jne l_0582
  1629 1783 E8				inx
  1630 1784 AD C1 17 95 18		mva WINNER :STACKORIGIN,x
  1631 1789 AD C2 17 95 28		mva WINNER+1 :STACKORIGIN+STACKWIDTH,x
  1632 178E E8				inx
  1633 178F A9 02 95 18			mva #$02 :STACKORIGIN,x
  1634 1793 E8				inx
  1635 1794 A9 00 95 18			mva #$00 :STACKORIGIN,x
  1636 1798 E8				inx
  1637 1799 A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1638 179D 20 6C 12			jsr PRINTXY
  1639 17A0 4C C0 17			jmp l_0592
  1640 17A3			l_0582
  1641
  1642 				; optimize FAIL ('PRINTXY', tools.inc), line = 191
  1643
  1644 17A3 E8				inx
  1645 17A4 AD C3 17 95 18		mva LOSER :STACKORIGIN,x
  1646 17A9 AD C4 17 95 28		mva LOSER+1 :STACKORIGIN+STACKWIDTH,x
  1647 17AE E8				inx
  1648 17AF A9 02 95 18			mva #$02 :STACKORIGIN,x
  1649 17B3 E8				inx
  1650 17B4 A9 00 95 18			mva #$00 :STACKORIGIN,x
  1651 17B8 E8				inx
  1652 17B9 A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1653 17BD 20 6C 12			jsr PRINTXY
  1654 17C0			l_0592
  1655
  1656 				; ------------------------------------------------------------
  1657
  1658 = 2E98			adr.WINNER	= [DATAORIGIN+$024C] .array [256]
  1659 17C0			.var WINNER	= adr.WINNER .word
  1660 = 2F98			adr.LOSER	= [DATAORIGIN+$034C] .array [256]
  1661 17C0			.var LOSER	= adr.LOSER .word
  1662
  1663 = 17C1			@VarData	= WINNER
  1664 = 0200			@VarDataSize	= 512
  1665
  1666 17C0			@exit
  1667 					.ifdef @new
  1668 					lda <@VarData
  1669 					sta :ztmp
  1670 					lda >@VarData
  1671 					ldy #@VarDataSize-1
  1672 					jmp @FreeMem
  1673 					els
  1674 17C0 60				rts						; ret
  1675 					eif
  1676 = 17C1 98 2E		WINNER
  1676 = 17C3 98 2F		LOSER
  1676 				.endl
  1677
  1678 17C5			.local	ISGAMEOVER					; FUNCTION
  1679
  1680 				; optimize OK (tools.inc), line = 198
  1681
  1682 17C5 AD 64 2C			lda PLAYER1.SCORE
  1683 17C8 C9 39			cmp #$39
  1684 17CA D0 05			jne l_05AE
  1685 17CC A9 01			lda #$01
  1686 17CE 8D 5D 2C			sta GAMEOVER
  1687 17D1			l_05AE
  1688
  1689 				; optimize OK (tools.inc), line = 199
  1690
  1691 17D1 AD 6C 2C			lda PLAYER2.SCORE
  1692 17D4 C9 39			cmp #$39
  1693 17D6 D0 05			jne l_05C7
  1694 17D8 A9 01			lda #$01
  1695 17DA 8D 5D 2C			sta GAMEOVER
  1696 17DD			l_05C7
  1697
  1698 				; optimize OK (tools.inc), line = 200
  1699
  1700 17DD AD 74 2C			lda PLAYER3.SCORE
  1701 17E0 C9 39			cmp #$39
  1702 17E2 D0 05			jne l_05E0
  1703 17E4 A9 01			lda #$01
  1704 17E6 8D 5D 2C			sta GAMEOVER
  1705 17E9			l_05E0
  1706
  1707 				; optimize OK (tools.inc), line = 201
  1708
  1709 17E9 AD 7C 2C			lda PLAYER4.SCORE
  1710 17EC C9 39			cmp #$39
  1711 17EE D0 05			jne l_05F9
  1712 17F0 A9 01			lda #$01
  1713 17F2 8D 5D 2C			sta GAMEOVER
  1714 17F5			l_05F9
  1715
  1716 				; optimize OK (tools.inc), line = 202
  1717
  1718 17F5 AD 5D 2C			lda GAMEOVER
  1719 17F8 8D 98 30			sta RESULT
  1720 17FB			@exit
  1721
  1722 				; ------------------------------------------------------------
  1723
  1724 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
  1725 				; as Pointer
  1726
  1727 17FB E8				inx
  1728 17FC AD 98 30 95 18		mva RESULT :STACKORIGIN,x
  1729
  1730 					.ifdef @new
  1731 					lda <@VarData
  1732 					sta :ztmp
  1733 					lda >@VarData
  1734 					ldy #@VarDataSize-1
  1735 					jmp @FreeMem
  1736 					eif
  1737
  1738 				; ------------------------------------------------------------
  1739
  1740 = 3098			RESULT	= DATAORIGIN+$044C
  1741
  1742 = 3098			@VarData	= RESULT
  1743 = 0001			@VarDataSize	= 1
  1744
  1745 1801 60				rts						; ret
  1746 				.endl
  1747
  1748 1802			.local	ISONELEFT					; FUNCTION
  1749
  1750 				; optimize OK (tools.inc), line = 209
  1751
  1752 1802 A0 01			ldy #1
  1753 1804 A5 5A			lda ALIVE
  1754 1806 F0 01			beq @+
  1755 1808 88				dey
  1756 1809			@
  1757 1809 84 21			sty :STACKORIGIN+9
  1758 180B A0 01			ldy #1
  1759 180D A5 5A			lda ALIVE
  1760 180F C9 FF			cmp #$FF
  1761 1811 F0 01			beq @+
  1762 1813 88				dey
  1763 1814			@
  1764 1814 98				tya
  1765 1815 05 21			ora :STACKORIGIN+9
  1766 1817 8D 99 30			sta RESULT
  1767 181A			@exit
  1768
  1769 				; ------------------------------------------------------------
  1770
  1771 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
  1772 				; as Pointer
  1773
  1774 181A E8				inx
  1775 181B AD 99 30 95 18		mva RESULT :STACKORIGIN,x
  1776
  1777 					.ifdef @new
  1778 					lda <@VarData
  1779 					sta :ztmp
  1780 					lda >@VarData
  1781 					ldy #@VarDataSize-1
  1782 					jmp @FreeMem
  1783 					eif
  1784
  1785 				; ------------------------------------------------------------
  1786
  1787 = 3099			RESULT	= DATAORIGIN+$044D
  1788
  1789 = 3099			@VarData	= RESULT
  1790 = 0001			@VarDataSize	= 1
  1791
  1792 1820 60				rts						; ret
  1793 				.endl
  1794
  1795 1821			.local	HUMAN						; PROCEDURE
  1796
  1797 				; optimize FAIL ('CHECKJOYSTATUS', ai.inc), line = 5
  1798
  1799 1821 20 31 16			jsr CHECKJOYSTATUS
  1800 1824 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1801 182E A0 04			ldy #PLY.DIR-DATAORIGIN
  1802 1830 B1 12			lda (:bp2),y
  1803 1832 85 5B			sta NEWDIR
  1804
  1805 				; optimize OK (ai.inc), line = 6
  1806
  1807 1834 A5 5D			lda JOYSTATUS
  1808 1836 8D 9A 30			sta @CASETMP_0005
  1809 1839 C9 01			cmp #$01
  1810 183B D0 19			jne l_063E
  1811 183D			@
  1812
  1813 				; optimize OK (ai.inc), line = 7
  1814
  1815 183D AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1816 1847 A0 04			ldy #PLY.DIR-DATAORIGIN
  1817 1849 B1 12			lda (:bp2),y
  1818 184B C9 02			cmp #$02
  1819 184D F0 04			jeq l_0650
  1820 184F A9 01			lda #$01
  1821 1851 85 5B			sta NEWDIR
  1822 1853			l_0650
  1823
  1824 1853 4C AA 18			jmp a_0005
  1825 1856			l_063E
  1826 1856 C9 02			cmp #$02
  1827 1858 D0 19			jne l_0660
  1828 185A			@
  1829
  1830 				; optimize OK (ai.inc), line = 8
  1831
  1832 185A AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1833 1864 A0 04			ldy #PLY.DIR-DATAORIGIN
  1834 1866 B1 12			lda (:bp2),y
  1835 1868 C9 01			cmp #$01
  1836 186A F0 04			jeq l_0672
  1837 186C A9 02			lda #$02
  1838 186E 85 5B			sta NEWDIR
  1839 1870			l_0672
  1840
  1841 1870 4C AA 18			jmp a_0005
  1842 1873			l_0660
  1843 1873 C9 04			cmp #$04
  1844 1875 D0 19			jne l_0682
  1845 1877			@
  1846
  1847 				; optimize OK (ai.inc), line = 9
  1848
  1849 1877 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1850 1881 A0 04			ldy #PLY.DIR-DATAORIGIN
  1851 1883 B1 12			lda (:bp2),y
  1852 1885 C9 08			cmp #$08
  1853 1887 F0 04			jeq l_0694
  1854 1889 A9 04			lda #$04
  1855 188B 85 5B			sta NEWDIR
  1856 188D			l_0694
  1857
  1858 188D 4C AA 18			jmp a_0005
  1859 1890			l_0682
  1860 1890 C9 08			cmp #$08
  1861 1892 D0 16			jne l_06A4
  1862 1894			@
  1863
  1864 				; optimize OK (ai.inc), line = 10
  1865
  1866 1894 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1867 189E A0 04			ldy #PLY.DIR-DATAORIGIN
  1868 18A0 B1 12			lda (:bp2),y
  1869 18A2 C9 04			cmp #$04
  1870 18A4 F0 04			jeq l_06B6
  1871 18A6 A9 08			lda #$08
  1872 18A8 85 5B			sta NEWDIR
  1873 18AA			l_06B6
  1874
  1875 18AA			l_06A4
  1876 18AA			a_0005
  1877
  1878 				; optimize OK (ai.inc), line = 13
  1879
  1880 18AA A5 5B			lda NEWDIR
  1881 18AC 25 5C			and AVAILDIR
  1882 18AE D0 12			jne l_06DD
  1883
  1884 				; optimize OK (ai.inc), line = 14
  1885
  1886 18B0 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1887 18BA A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1888 18BC A9 00			lda #$00
  1889 18BE 91 12			sta (:bp2),y
  1890 18C0 C6 5A			dec ALIVE
  1891 18C2			l_06DD
  1892
  1893 				; ------------------------------------------------------------
  1894
  1895 = 309A			@CASETMP_0005	= DATAORIGIN+$044E
  1896
  1897 = 309A			@VarData	= @CASETMP_0005
  1898 = 0001			@VarDataSize	= 1
  1899
  1900 18C2			@exit
  1901 					.ifdef @new
  1902 					lda <@VarData
  1903 					sta :ztmp
  1904 					lda >@VarData
  1905 					ldy #@VarDataSize-1
  1906 					jmp @FreeMem
  1907 					els
  1908 18C2 60				rts						; ret
  1909 					eif
  1910 				.endl
  1911
  1912 18C3			.local	AISTRAIGHT					; PROCEDURE
  1913
  1914 				; optimize OK (ai.inc), line = 22
  1915
  1916 18C3 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  1917 18CD A0 04			ldy #PLY.DIR-DATAORIGIN
  1918 18CF B1 12			lda (:bp2),y
  1919 18D1 25 5C			and AVAILDIR
  1920 18D3 F0 07			jeq l_0704
  1921 18D5 B1 12			lda (:bp2),y
  1922 18D7 85 5B			sta NEWDIR
  1923 18D9 4C 3F 19			jmp l_0714
  1924 18DC			l_0704
  1925
  1926 				; optimize OK (ai.inc), line = 24
  1927
  1928 18DC A5 5C			lda AVAILDIR
  1929 18DE C9 03			cmp #$03
  1930 18E0 D0 10			jne l_0726
  1931 18E2 A9 02			lda #$02
  1932 18E4 20 CF 11			jsr SYSTEM.RANDOM_0086
  1933 18E7 B4 18			ldy :STACKORIGIN,x
  1934 18E9 B9 57 10			lda adr.DIRECTION,y
  1935 18EC 85 5B			sta NEWDIR
  1936 18EE CA				dex
  1937 18EF 4C 0A 19			jmp l_0738
  1938 18F2			l_0726
  1939
  1940 				; optimize OK (ai.inc), line = 26
  1941
  1942 18F2 A5 5C			lda AVAILDIR
  1943 18F4 8D 9B 30			sta @CASETMP_0006
  1944 18F7 C9 01			cmp #$01
  1945 18F9 D0 07			jne l_0743
  1946 18FB			@
  1947
  1948 				; optimize OK (ai.inc), line = 27
  1949
  1950 18FB A9 01			lda #$01
  1951 18FD 85 5B			sta NEWDIR
  1952
  1953 18FF 4C 0A 19			jmp a_0006
  1954 1902			l_0743
  1955 1902 C9 02			cmp #$02
  1956 1904 D0 04			jne l_0750
  1957 1906			@
  1958
  1959 				; optimize OK (ai.inc), line = 28
  1960
  1961 1906 A9 02			lda #$02
  1962 1908 85 5B			sta NEWDIR
  1963
  1964 190A			l_0750
  1965 190A			a_0006
  1966 190A			l_0738
  1967
  1968 				; optimize OK (ai.inc), line = 31
  1969
  1970 190A A5 5C			lda AVAILDIR
  1971 190C C9 0C			cmp #$0C
  1972 190E D0 17			jne l_076C
  1973 1910 A9 02			lda #$02
  1974 1912 20 CF 11			jsr SYSTEM.RANDOM_0086
  1975 1915 B5 18			lda :STACKORIGIN,x
  1976 1917 18 69 02			add #$02
  1977 191A 95 18			sta :STACKORIGIN,x
  1978 191C B4 18			ldy :STACKORIGIN,x
  1979 191E B9 57 10			lda adr.DIRECTION,y
  1980 1921 85 5B			sta NEWDIR
  1981 1923 CA				dex
  1982 1924 4C 3F 19			jmp l_0782
  1983 1927			l_076C
  1984
  1985 				; optimize OK (ai.inc), line = 33
  1986
  1987 1927 A5 5C			lda AVAILDIR
  1988 1929 8D 9C 30			sta @CASETMP_0007
  1989 192C C9 04			cmp #$04
  1990 192E D0 07			jne l_078D
  1991 1930			@
  1992
  1993 				; optimize OK (ai.inc), line = 34
  1994
  1995 1930 A9 04			lda #$04
  1996 1932 85 5B			sta NEWDIR
  1997
  1998 1934 4C 3F 19			jmp a_0007
  1999 1937			l_078D
  2000 1937 C9 08			cmp #$08
  2001 1939 D0 04			jne l_079A
  2002 193B			@
  2003
  2004 				; optimize OK (ai.inc), line = 35
  2005
  2006 193B A9 08			lda #$08
  2007 193D 85 5B			sta NEWDIR
  2008
  2009 193F			l_079A
  2010 193F			a_0007
  2011 193F			l_0782
  2012 193F			l_0714
  2013
  2014 				; ------------------------------------------------------------
  2015
  2016 = 309B			@CASETMP_0006	= DATAORIGIN+$044F
  2017 = 309C			@CASETMP_0007	= DATAORIGIN+$0450
  2018
  2019 = 309B			@VarData	= @CASETMP_0006
  2020 = 0002			@VarDataSize	= 2
  2021
  2022 193F			@exit
  2023 					.ifdef @new
  2024 					lda <@VarData
  2025 					sta :ztmp
  2026 					lda >@VarData
  2027 					ldy #@VarDataSize-1
  2028 					jmp @FreeMem
  2029 					els
  2030 193F 60				rts						; ret
  2031 					eif
  2032 				.endl
  2033
  2034 1940			.local	AISAPPER					; PROCEDURE
  2035
  2036 				; optimize OK (ai.inc), line = 48
  2037
  2038 1940 A9 00			lda #$00
  2039 1942 8D 9D 30			sta L
  2040 1945 8D 9E 30			sta R
  2041 1948 8D 9F 30			sta U
  2042 194B 8D A0 30			sta D
  2043
  2044 				; optimize OK (ai.inc), line = 49
  2045
  2046 194E AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  2047 1958 A0 00			ldy #PLY.X-DATAORIGIN
  2048 195A B1 12			lda (:bp2),y
  2049 195C 8D 7E 2C			sta CALCSCRADDR.X
  2050 195F A0 01			ldy #PLY.Y-DATAORIGIN
  2051 1961 B1 12			lda (:bp2),y
  2052 1963 8D 7F 2C			sta CALCSCRADDR.Y
  2053 1966 20 00 12			jsr CALCSCRADDR
  2054 1969 B5 18			lda :STACKORIGIN,x
  2055 196B 85 5E			sta T0W
  2056 196D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2057 196F 85 5F			sta T0W+1
  2058 1971 CA				dex
  2059
  2060 				; optimize OK (ai.inc), line = 51
  2061
  2062 1972 A5 5C			lda AVAILDIR
  2063 1974 29 01			and #$01
  2064 1976 F0 73			jeq l_07D8
  2065
  2066 				; optimize OK (ai.inc), line = 52
  2067
  2068 1978 A9 05			lda #$05
  2069 197A 85 59			sta I0B
  2070
  2071 197C			l_07E2
  2072 				; --- ForToDoCondition
  2073 197C A5 59			lda I0B
  2074 197E C9 01			cmp #$01
  2075 1980 90 69			jcc l_07F0
  2076
  2077 				; optimize OK (ai.inc), line = 53
  2078
  2079 1982 0A				asl @
  2080 1983 A8				tay
  2081 1984 A5 5E			lda T0W
  2082 1986 38 F9 25 10			sub adr.MUL40,y
  2083 198A 85 21			sta :STACKORIGIN+9
  2084 198C A5 5F			lda T0W+1
  2085 198E F9 26 10			sbc adr.MUL40+1,y
  2086 1991 85 11			sta :bp+1
  2087 1993 A4 21			ldy :STACKORIGIN+9
  2088 1995 B1 10			lda (:bp),y
  2089 1997 C9 20			cmp #$20
  2090 1999 D0 03			jne l_080A
  2091 199B EE 9F 30			inc U
  2092 199E			l_080A
  2093
  2094 				; optimize OK (ai.inc), line = 54
  2095
  2096 199E A5 59			lda I0B
  2097 19A0 0A				asl @
  2098 19A1 A8				tay
  2099 19A2 A5 5E			lda T0W
  2100 19A4 38 F9 25 10			sub adr.MUL40,y
  2101 19A8 85 21			sta :STACKORIGIN+9
  2102 19AA A5 5F			lda T0W+1
  2103 19AC F9 26 10			sbc adr.MUL40+1,y
  2104 19AF 85 11			sta :bp+1
  2105 19B1 A5 21			lda :STACKORIGIN+9
  2106 19B3 18 69 01			add #$01
  2107 19B6 A8				tay
  2108 19B7 90 02			scc
  2109 19B9 E6 11			inc :bp+1
  2110 19BB B1 10			lda (:bp),y
  2111 19BD C9 20			cmp #$20
  2112 19BF D0 03			jne l_082F
  2113 19C1 EE 9F 30			inc U
  2114 19C4			l_082F
  2115
  2116 				; optimize OK (ai.inc), line = 55
  2117
  2118 19C4 A5 59			lda I0B
  2119 19C6 0A				asl @
  2120 19C7 A8				tay
  2121 19C8 A5 5E			lda T0W
  2122 19CA 38 F9 25 10			sub adr.MUL40,y
  2123 19CE 85 21			sta :STACKORIGIN+9
  2124 19D0 A5 5F			lda T0W+1
  2125 19D2 F9 26 10			sbc adr.MUL40+1,y
  2126 19D5 85 11			sta :bp+1
  2127 19D7 A4 21			ldy :STACKORIGIN+9
  2128 19D9 88				dey
  2129 19DA B0 02			scs
  2130 19DC C6 11			dec :bp+1
  2131 19DE B1 10			lda (:bp),y
  2132 19E0 C9 20			cmp #$20
  2133 19E2 D0 03			jne l_0854
  2134 19E4 EE 9F 30			inc U
  2135 19E7			l_0854
  2136
  2137 				; --- ForToDoEpilog
  2138 19E7 C6 59			dec I0B
  2139 19E9 10 91			jpl l_07E2
  2140 19EB			l_07F0
  2141 19EB			l_07D8
  2142
  2143 				; optimize OK (ai.inc), line = 59
  2144
  2145 19EB A5 5C			lda AVAILDIR
  2146 19ED 29 02			and #$02
  2147 19EF F0 73			jeq l_0878
  2148
  2149 				; optimize OK (ai.inc), line = 60
  2150
  2151 19F1 A9 05			lda #$05
  2152 19F3 85 59			sta I0B
  2153
  2154 19F5			l_0882
  2155 				; --- ForToDoCondition
  2156 19F5 A5 59			lda I0B
  2157 19F7 C9 01			cmp #$01
  2158 19F9 90 69			jcc l_0890
  2159
  2160 				; optimize OK (ai.inc), line = 61
  2161
  2162 19FB 0A				asl @
  2163 19FC A8				tay
  2164 19FD A5 5E			lda T0W
  2165 19FF 18 79 25 10			add adr.MUL40,y
  2166 1A03 85 21			sta :STACKORIGIN+9
  2167 1A05 A5 5F			lda T0W+1
  2168 1A07 79 26 10			adc adr.MUL40+1,y
  2169 1A0A 85 11			sta :bp+1
  2170 1A0C A4 21			ldy :STACKORIGIN+9
  2171 1A0E B1 10			lda (:bp),y
  2172 1A10 C9 20			cmp #$20
  2173 1A12 D0 03			jne l_08AA
  2174 1A14 EE A0 30			inc D
  2175 1A17			l_08AA
  2176
  2177 				; optimize OK (ai.inc), line = 62
  2178
  2179 1A17 A5 59			lda I0B
  2180 1A19 0A				asl @
  2181 1A1A A8				tay
  2182 1A1B A5 5E			lda T0W
  2183 1A1D 18 79 25 10			add adr.MUL40,y
  2184 1A21 85 21			sta :STACKORIGIN+9
  2185 1A23 A5 5F			lda T0W+1
  2186 1A25 79 26 10			adc adr.MUL40+1,y
  2187 1A28 85 11			sta :bp+1
  2188 1A2A A5 21			lda :STACKORIGIN+9
  2189 1A2C 18 69 01			add #$01
  2190 1A2F A8				tay
  2191 1A30 90 02			scc
  2192 1A32 E6 11			inc :bp+1
  2193 1A34 B1 10			lda (:bp),y
  2194 1A36 C9 20			cmp #$20
  2195 1A38 D0 03			jne l_08CF
  2196 1A3A EE A0 30			inc D
  2197 1A3D			l_08CF
  2198
  2199 				; optimize OK (ai.inc), line = 63
  2200
  2201 1A3D A5 59			lda I0B
  2202 1A3F 0A				asl @
  2203 1A40 A8				tay
  2204 1A41 A5 5E			lda T0W
  2205 1A43 18 79 25 10			add adr.MUL40,y
  2206 1A47 85 21			sta :STACKORIGIN+9
  2207 1A49 A5 5F			lda T0W+1
  2208 1A4B 79 26 10			adc adr.MUL40+1,y
  2209 1A4E 85 11			sta :bp+1
  2210 1A50 A4 21			ldy :STACKORIGIN+9
  2211 1A52 88				dey
  2212 1A53 B0 02			scs
  2213 1A55 C6 11			dec :bp+1
  2214 1A57 B1 10			lda (:bp),y
  2215 1A59 C9 20			cmp #$20
  2216 1A5B D0 03			jne l_08F4
  2217 1A5D EE A0 30			inc D
  2218 1A60			l_08F4
  2219
  2220 				; --- ForToDoEpilog
  2221 1A60 C6 59			dec I0B
  2222 1A62 10 91			jpl l_0882
  2223 1A64			l_0890
  2224 1A64			l_0878
  2225
  2226 				; optimize OK (ai.inc), line = 67
  2227
  2228 1A64 A5 5C			lda AVAILDIR
  2229 1A66 29 04			and #$04
  2230 1A68 F0 5F			jeq l_0918
  2231
  2232 				; optimize OK (ai.inc), line = 68
  2233
  2234 1A6A A9 05			lda #$05
  2235 1A6C 85 59			sta I0B
  2236
  2237 1A6E			l_0922
  2238 				; --- ForToDoCondition
  2239 1A6E A5 59			lda I0B
  2240 1A70 C9 01			cmp #$01
  2241 1A72 90 55			jcc l_0930
  2242
  2243 				; optimize OK (ai.inc), line = 69
  2244
  2245 1A74 A5 5E			lda T0W
  2246 1A76 38 E5 59			sub I0B
  2247 1A79 A8				tay
  2248 1A7A A5 5F			lda T0W+1
  2249 1A7C E9 00			sbc #$00
  2250 1A7E 85 11			sta :bp+1
  2251 1A80 B1 10			lda (:bp),y
  2252 1A82 C9 20			cmp #$20
  2253 1A84 D0 03			jne l_0948
  2254 1A86 EE 9D 30			inc L
  2255 1A89			l_0948
  2256
  2257 				; optimize OK (ai.inc), line = 70
  2258
  2259 1A89 A5 5E			lda T0W
  2260 1A8B 38 E5 59			sub I0B
  2261 1A8E A8				tay
  2262 1A8F A5 5F			lda T0W+1
  2263 1A91 E9 00			sbc #$00
  2264 1A93 85 11			sta :bp+1
  2265 1A95 98				tya
  2266 1A96 18 69 28			add #$28
  2267 1A99 A8				tay
  2268 1A9A 90 02			scc
  2269 1A9C E6 11			inc :bp+1
  2270 1A9E B1 10			lda (:bp),y
  2271 1AA0 C9 20			cmp #$20
  2272 1AA2 D0 03			jne l_096B
  2273 1AA4 EE 9D 30			inc L
  2274 1AA7			l_096B
  2275
  2276 				; optimize OK (ai.inc), line = 71
  2277
  2278 1AA7 A5 5E			lda T0W
  2279 1AA9 38 E5 59			sub I0B
  2280 1AAC A8				tay
  2281 1AAD A5 5F			lda T0W+1
  2282 1AAF E9 00			sbc #$00
  2283 1AB1 85 11			sta :bp+1
  2284 1AB3 98				tya
  2285 1AB4 38 E9 28			sub #$28
  2286 1AB7 A8				tay
  2287 1AB8 B0 02			scs
  2288 1ABA C6 11			dec :bp+1
  2289 1ABC B1 10			lda (:bp),y
  2290 1ABE C9 20			cmp #$20
  2291 1AC0 D0 03			jne l_098E
  2292 1AC2 EE 9D 30			inc L
  2293 1AC5			l_098E
  2294
  2295 				; --- ForToDoEpilog
  2296 1AC5 C6 59			dec I0B
  2297 1AC7 10 A5			jpl l_0922
  2298 1AC9			l_0930
  2299 1AC9			l_0918
  2300
  2301 				; optimize OK (ai.inc), line = 75
  2302
  2303 1AC9 A5 5C			lda AVAILDIR
  2304 1ACB 29 08			and #$08
  2305 1ACD F0 5D			jeq l_09B2
  2306
  2307 				; optimize OK (ai.inc), line = 76
  2308
  2309 1ACF A9 05			lda #$05
  2310 1AD1 85 59			sta I0B
  2311
  2312 1AD3			l_09BC
  2313 				; --- ForToDoCondition
  2314 1AD3 A5 59			lda I0B
  2315 1AD5 C9 01			cmp #$01
  2316 1AD7 90 53			jcc l_09CA
  2317
  2318 				; optimize OK (ai.inc), line = 77
  2319
  2320 1AD9 A4 5E 84 12 A4 5F + 	mwy T0W :bp2
  2321 1AE1 A4 59			ldy I0B
  2322 1AE3 B1 12			lda (:bp2),y
  2323 1AE5 C9 20			cmp #$20
  2324 1AE7 D0 03			jne l_09E2
  2325 1AE9 EE 9E 30			inc R
  2326 1AEC			l_09E2
  2327
  2328 				; optimize OK (ai.inc), line = 78
  2329
  2330 1AEC A5 5E			lda T0W
  2331 1AEE 18 65 59			add I0B
  2332 1AF1 A8				tay
  2333 1AF2 A5 5F			lda T0W+1
  2334 1AF4 69 00			adc #$00
  2335 1AF6 85 11			sta :bp+1
  2336 1AF8 98				tya
  2337 1AF9 18 69 28			add #$28
  2338 1AFC A8				tay
  2339 1AFD 90 02			scc
  2340 1AFF E6 11			inc :bp+1
  2341 1B01 B1 10			lda (:bp),y
  2342 1B03 C9 20			cmp #$20
  2343 1B05 D0 03			jne l_0A05
  2344 1B07 EE 9E 30			inc R
  2345 1B0A			l_0A05
  2346
  2347 				; optimize OK (ai.inc), line = 79
  2348
  2349 1B0A A5 5E			lda T0W
  2350 1B0C 18 65 59			add I0B
  2351 1B0F A8				tay
  2352 1B10 A5 5F			lda T0W+1
  2353 1B12 69 00			adc #$00
  2354 1B14 85 11			sta :bp+1
  2355 1B16 98				tya
  2356 1B17 38 E9 28			sub #$28
  2357 1B1A A8				tay
  2358 1B1B B0 02			scs
  2359 1B1D C6 11			dec :bp+1
  2360 1B1F B1 10			lda (:bp),y
  2361 1B21 C9 20			cmp #$20
  2362 1B23 D0 03			jne l_0A28
  2363 1B25 EE 9E 30			inc R
  2364 1B28			l_0A28
  2365
  2366 				; --- ForToDoEpilog
  2367 1B28 C6 59			dec I0B
  2368 1B2A 10 A7			jpl l_09BC
  2369 1B2C			l_09CA
  2370 1B2C			l_09B2
  2371
  2372 				; optimize OK (ai.inc), line = 83
  2373
  2374 1B2C AD A0 30			lda D
  2375 1B2F 85 58			sta T0B
  2376
  2377 				; optimize OK (ai.inc), line = 84
  2378
  2379 1B31 CD 9F 30			cmp U
  2380 1B34 B0 05			jcs l_0A50
  2381 1B36 AD 9F 30			lda U
  2382 1B39 85 58			sta T0B
  2383 1B3B			l_0A50
  2384
  2385 				; optimize OK (ai.inc), line = 85
  2386
  2387 1B3B A5 58			lda T0B
  2388 1B3D CD 9D 30			cmp L
  2389 1B40 B0 05			jcs l_0A6D
  2390 1B42 AD 9D 30			lda L
  2391 1B45 85 58			sta T0B
  2392 1B47			l_0A6D
  2393
  2394 				; optimize OK (ai.inc), line = 86
  2395
  2396 1B47 A5 58			lda T0B
  2397 1B49 CD 9E 30			cmp R
  2398 1B4C B0 05			jcs l_0A8A
  2399 1B4E AD 9E 30			lda R
  2400 1B51 85 58			sta T0B
  2401 1B53			l_0A8A
  2402
  2403 				; optimize OK (ai.inc), line = 88
  2404
  2405 1B53 A5 58			lda T0B
  2406 1B55 CD A0 30			cmp D
  2407 1B58 D0 04			jne l_0AA7
  2408 1B5A A9 02			lda #$02
  2409 1B5C 85 58			sta T0B
  2410 1B5E			l_0AA7
  2411
  2412 				; optimize OK (ai.inc), line = 89
  2413
  2414 1B5E A5 58			lda T0B
  2415 1B60 CD 9F 30			cmp U
  2416 1B63 D0 04			jne l_0AC2
  2417 1B65 A9 01			lda #$01
  2418 1B67 85 58			sta T0B
  2419 1B69			l_0AC2
  2420
  2421 				; optimize OK (ai.inc), line = 90
  2422
  2423 1B69 A5 58			lda T0B
  2424 1B6B CD 9D 30			cmp L
  2425 1B6E D0 04			jne l_0ADD
  2426 1B70 A9 04			lda #$04
  2427 1B72 85 58			sta T0B
  2428 1B74			l_0ADD
  2429
  2430 				; optimize OK (ai.inc), line = 91
  2431
  2432 1B74 A5 58			lda T0B
  2433 1B76 CD 9E 30			cmp R
  2434 1B79 D0 04			jne l_0AF8
  2435 1B7B A9 08			lda #$08
  2436 1B7D 85 58			sta T0B
  2437 1B7F			l_0AF8
  2438
  2439 				; optimize OK (ai.inc), line = 93
  2440
  2441 1B7F A5 5C			lda AVAILDIR
  2442 1B81 25 58			and T0B
  2443 1B83 F0 07			jeq l_0B17
  2444 1B85 A5 58			lda T0B
  2445 1B87 85 5B			sta NEWDIR
  2446 1B89 4C 8F 1B			jmp l_0B27
  2447 1B8C			l_0B17
  2448
  2449 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 94
  2450
  2451 1B8C 20 C3 18			jsr AISTRAIGHT
  2452 1B8F			l_0B27
  2453
  2454 				; ------------------------------------------------------------
  2455
  2456 = 309D			L	= DATAORIGIN+$0451
  2457 = 309E			R	= DATAORIGIN+$0452
  2458 = 309F			U	= DATAORIGIN+$0453
  2459 = 30A0			D	= DATAORIGIN+$0454
  2460 = 0001			@FORTMP_07DF	= $01
  2461 = 0001			@FORTMP_087F	= $01
  2462 = 0001			@FORTMP_091F	= $01
  2463 = 0001			@FORTMP_09B9	= $01
  2464
  2465 = 309D			@VarData	= L
  2466 = 0004			@VarDataSize	= 4
  2467
  2468 1B8F			@exit
  2469 					.ifdef @new
  2470 					lda <@VarData
  2471 					sta :ztmp
  2472 					lda >@VarData
  2473 					ldy #@VarDataSize-1
  2474 					jmp @FreeMem
  2475 					els
  2476 1B8F 60				rts						; ret
  2477 					eif
  2478 				.endl
  2479
  2480 1B90			.local	AIBULLY						; PROCEDURE
  2481
  2482 				; optimize OK (ai.inc), line = 101
  2483
  2484 1B90 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  2485 1B9A A0 04			ldy #PLY.DIR-DATAORIGIN
  2486 1B9C B1 12			lda (:bp2),y
  2487 1B9E 85 58			sta T0B
  2488
  2489 				; optimize OK (ai.inc), line = 103
  2490
  2491 1BA0 AD 65 2C			lda PLAYER1.ISALIVE
  2492 1BA3 0D 6D 2C			ora PLAYER2.ISALIVE
  2493 1BA6 D0 03 4C 4D 1C		jeq l_0B44
  2494
  2495 				; optimize OK (ai.inc), line = 105
  2496
  2497 1BAB AD 65 2C			lda PLAYER1.ISALIVE
  2498 1BAE F0 0F			jeq l_0B51
  2499 1BB0 AD 44 2C			lda PLAYER1
  2500 1BB3 8D 40 2C			sta TMPPLY
  2501 1BB6 AD 45 2C			lda PLAYER1+1
  2502 1BB9 8D 41 2C			sta TMPPLY+1
  2503 1BBC 4C CB 1B			jmp l_0B60
  2504 1BBF			l_0B51
  2505 1BBF AD 46 2C			lda PLAYER2
  2506 1BC2 8D 40 2C			sta TMPPLY
  2507 1BC5 AD 47 2C			lda PLAYER2+1
  2508 1BC8 8D 41 2C			sta TMPPLY+1
  2509 1BCB			l_0B60
  2510
  2511 				; optimize OK (ai.inc), line = 107
  2512
  2513 1BCB AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  2514 1BD5 A0 01			ldy #PLY.Y-DATAORIGIN
  2515 1BD7 B1 12			lda (:bp2),y
  2516 1BD9 85 21			sta :STACKORIGIN+9
  2517 1BDB AC 40 2C 84 12 AC + 	mwy TMPPLY :bp2
  2518 1BE5 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  2519 1BE7 B1 12			lda (:bp2),y
  2520 1BE9 C5 21			cmp :STACKORIGIN+9
  2521 1BEB B0 07			jcs l_0B79
  2522 1BED A9 01			lda #$01
  2523 1BEF 85 58			sta T0B
  2524 1BF1 4C F8 1B			jmp l_0B87
  2525 1BF4			l_0B79
  2526 1BF4 A9 02			lda #$02
  2527 1BF6 85 58			sta T0B
  2528 1BF8			l_0B87
  2529
  2530 				; optimize OK (ai.inc), line = 108
  2531
  2532 1BF8 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  2533 1C02 A0 01			ldy #PLY.Y-DATAORIGIN
  2534 1C04 B1 12			lda (:bp2),y
  2535 1C06 85 21			sta :STACKORIGIN+9
  2536 1C08 AC 40 2C 84 12 AC + 	mwy TMPPLY :bp2
  2537 1C12 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  2538 1C14 B1 12			lda (:bp2),y
  2539 1C16 C5 21			cmp :STACKORIGIN+9
  2540 1C18 F0 06			jeq l_0BB1x
  2541 1C1A A5 5C			lda AVAILDIR
  2542 1C1C 25 58			and T0B
  2543 1C1E D0 2D			jne l_0BB1
  2544 1C20			l_0BB1x
  2545
  2546 				; optimize OK (ai.inc), line = 109
  2547
  2548 1C20 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  2549 1C2A A0 00			ldy #PLY.X-DATAORIGIN
  2550 1C2C B1 12			lda (:bp2),y
  2551 1C2E 85 21			sta :STACKORIGIN+9
  2552 1C30 AC 40 2C 84 12 AC + 	mwy TMPPLY :bp2
  2553 1C3A A0 00			ldy #TMPPLY.X-DATAORIGIN
  2554 1C3C B1 12			lda (:bp2),y
  2555 1C3E C5 21			cmp :STACKORIGIN+9
  2556 1C40 B0 07			jcs l_0BC6
  2557 1C42 A9 04			lda #$04
  2558 1C44 85 58			sta T0B
  2559 1C46 4C 4D 1C			jmp l_0BD4
  2560 1C49			l_0BC6
  2561 1C49 A9 08			lda #$08
  2562 1C4B 85 58			sta T0B
  2563 1C4D			l_0BD4
  2564 1C4D			l_0BB1
  2565 1C4D			l_0B44
  2566
  2567 				; optimize OK (ai.inc), line = 113
  2568
  2569 1C4D A5 5C			lda AVAILDIR
  2570 1C4F 25 58			and T0B
  2571 1C51 F0 07			jeq l_0BF4
  2572 1C53 A5 58			lda T0B
  2573 1C55 85 5B			sta NEWDIR
  2574 1C57 4C 5D 1C			jmp l_0C04
  2575 1C5A			l_0BF4
  2576
  2577 				; optimize FAIL ('AISAPPER', ai.inc), line = 114
  2578
  2579 1C5A 20 40 19			jsr AISAPPER
  2580 1C5D			l_0C04
  2581 1C5D			@exit
  2582 					.ifdef @new
  2583 					lda <@VarData
  2584 					sta :ztmp
  2585 					lda >@VarData
  2586 					ldy #@VarDataSize-1
  2587 					jmp @FreeMem
  2588 					els
  2589 1C5D 60				rts						; ret
  2590 					eif
  2591 				.endl
  2592
  2593 1C5E			.local	AIMIRROR					; PROCEDURE
  2594
  2595 				; optimize OK (ai.inc), line = 122
  2596
  2597 1C5E AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  2598 1C68 A0 04			ldy #PLY.DIR-DATAORIGIN
  2599 1C6A B1 12			lda (:bp2),y
  2600 1C6C 85 58			sta T0B
  2601
  2602 				; optimize OK (ai.inc), line = 124
  2603
  2604 1C6E AD 65 2C			lda PLAYER1.ISALIVE
  2605 1C71 F0 2F			jeq l_0C1B
  2606
  2607 				; optimize OK (ai.inc), line = 125
  2608
  2609 1C73 AD 62 2C			lda PLAYER1.DIR
  2610 1C76 8D A1 30			sta @CASETMP_0008
  2611 1C79 C9 01			cmp #$01
  2612 1C7B D0 07			jne l_0C27
  2613 1C7D			@
  2614
  2615 				; optimize OK (ai.inc), line = 126
  2616
  2617 1C7D A9 02			lda #$02
  2618 1C7F 85 58			sta T0B
  2619
  2620 1C81 4C A2 1C			jmp a_0008
  2621 1C84			l_0C27
  2622 1C84 C9 02			cmp #$02
  2623 1C86 D0 07			jne l_0C34
  2624 1C88			@
  2625
  2626 				; optimize OK (ai.inc), line = 127
  2627
  2628 1C88 A9 01			lda #$01
  2629 1C8A 85 58			sta T0B
  2630
  2631 1C8C 4C A2 1C			jmp a_0008
  2632 1C8F			l_0C34
  2633 1C8F C9 04			cmp #$04
  2634 1C91 D0 07			jne l_0C41
  2635 1C93			@
  2636
  2637 				; optimize OK (ai.inc), line = 128
  2638
  2639 1C93 A9 08			lda #$08
  2640 1C95 85 58			sta T0B
  2641
  2642 1C97 4C A2 1C			jmp a_0008
  2643 1C9A			l_0C41
  2644 1C9A C9 08			cmp #$08
  2645 1C9C D0 04			jne l_0C4E
  2646 1C9E			@
  2647
  2648 				; optimize OK (ai.inc), line = 129
  2649
  2650 1C9E A9 04			lda #$04
  2651 1CA0 85 58			sta T0B
  2652
  2653 1CA2			l_0C4E
  2654 1CA2			a_0008
  2655 1CA2			l_0C1B
  2656
  2657 				; optimize OK (ai.inc), line = 133
  2658
  2659 1CA2 A5 5C			lda AVAILDIR
  2660 1CA4 25 58			and T0B
  2661 1CA6 F0 07			jeq l_0C74
  2662 1CA8 A5 58			lda T0B
  2663 1CAA 85 5B			sta NEWDIR
  2664 1CAC 4C B2 1C			jmp l_0C84
  2665 1CAF			l_0C74
  2666
  2667 				; optimize FAIL ('AISAPPER', ai.inc), line = 134
  2668
  2669 1CAF 20 40 19			jsr AISAPPER
  2670 1CB2			l_0C84
  2671
  2672 				; ------------------------------------------------------------
  2673
  2674 = 30A1			@CASETMP_0008	= DATAORIGIN+$0455
  2675
  2676 = 30A1			@VarData	= @CASETMP_0008
  2677 = 0001			@VarDataSize	= 1
  2678
  2679 1CB2			@exit
  2680 					.ifdef @new
  2681 					lda <@VarData
  2682 					sta :ztmp
  2683 					lda >@VarData
  2684 					ldy #@VarDataSize-1
  2685 					jmp @FreeMem
  2686 					els
  2687 1CB2 60				rts						; ret
  2688 					eif
  2689 				.endl
  2690
  2691 1CB3			.local	SETLEVEL00					; PROCEDURE
  2692
  2693 				; optimize OK (levels.inc), line = 5
  2694
  2695 1CB3 A9 01			lda #$01
  2696 1CB5 8D 96 2D			sta SETPLAYER.ISALIVE
  2697 1CB8 A9 62			lda #$62
  2698 1CBA 8D 95 2D			sta SETPLAYER.COLOUR
  2699 1CBD A9 00			lda #$00
  2700 1CBF 8D 94 2D			sta SETPLAYER.BRAIN
  2701 1CC2 A9 08			lda #$08
  2702 1CC4 8D 93 2D			sta SETPLAYER.DIR
  2703 1CC7 A9 0C			lda #$0C
  2704 1CC9 8D 92 2D			sta SETPLAYER.Y
  2705 1CCC A9 0A			lda #$0A
  2706 1CCE 8D 91 2D			sta SETPLAYER.X
  2707 1CD1 AD 44 2C			lda PLAYER1
  2708 1CD4 8D 8F 2D			sta SETPLAYER.P
  2709 1CD7 AD 45 2C			lda PLAYER1+1
  2710 1CDA 8D 90 2D			sta SETPLAYER.P+1
  2711 1CDD 20 43 16			jsr SETPLAYER
  2712
  2713 				; optimize OK (levels.inc), line = 6
  2714
  2715 1CE0 A9 01			lda #$01
  2716 1CE2 8D 96 2D			sta SETPLAYER.ISALIVE
  2717 1CE5 A9 5D			lda #$5D
  2718 1CE7 8D 95 2D			sta SETPLAYER.COLOUR
  2719 1CEA A9 01			lda #$01
  2720 1CEC 8D 94 2D			sta SETPLAYER.BRAIN
  2721 1CEF A9 04			lda #$04
  2722 1CF1 8D 93 2D			sta SETPLAYER.DIR
  2723 1CF4 A9 0C			lda #$0C
  2724 1CF6 8D 92 2D			sta SETPLAYER.Y
  2725 1CF9 A9 1E			lda #$1E
  2726 1CFB 8D 91 2D			sta SETPLAYER.X
  2727 1CFE AD 46 2C			lda PLAYER2
  2728 1D01 8D 8F 2D			sta SETPLAYER.P
  2729 1D04 AD 47 2C			lda PLAYER2+1
  2730 1D07 8D 90 2D			sta SETPLAYER.P+1
  2731 1D0A 20 43 16			jsr SETPLAYER
  2732
  2733 				; optimize FAIL (1, levels.inc), line = 8
  2734
  2735 1D0D E8				inx
  2736 1D0E A9 00 95 18			mva #$00 :STACKORIGIN,x
  2737 1D12 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2738 1D14 A9 06			lda #$06
  2739 1D16 8D 7F 2C			sta CALCSCRADDR.Y
  2740 1D19 A9 0A			lda #$0A
  2741 1D1B 8D 7E 2C			sta CALCSCRADDR.X
  2742 1D1E 20 00 12			jsr CALCSCRADDR
  2743 1D21 B4 17			ldy :STACKORIGIN-1,x
  2744 1D23 B5 18			lda :STACKORIGIN,x
  2745 1D25 99 60 00			sta adr.OBSTACLES,y
  2746 1D28 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2747 1D2A 99 61 00			sta adr.OBSTACLES+1,y
  2748 1D2D CA				dex
  2749 1D2E A9 02 95 18			mva #$02 :STACKORIGIN,x
  2750 1D32 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2751 1D36 A9 06			lda #$06
  2752 1D38 8D 7F 2C			sta CALCSCRADDR.Y
  2753 1D3B A9 1E			lda #$1E
  2754 1D3D 8D 7E 2C			sta CALCSCRADDR.X
  2755 1D40 20 00 12			jsr CALCSCRADDR
  2756 1D43 B4 17			ldy :STACKORIGIN-1,x
  2757 1D45 B5 18			lda :STACKORIGIN,x
  2758 1D47 99 60 00			sta adr.OBSTACLES,y
  2759 1D4A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2760 1D4C 99 61 00			sta adr.OBSTACLES+1,y
  2761 1D4F CA				dex
  2762
  2763 				; optimize FAIL (1, levels.inc), line = 9
  2764
  2765 1D50 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2766 1D54 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2767 1D58 A9 12			lda #$12
  2768 1D5A 8D 7F 2C			sta CALCSCRADDR.Y
  2769 1D5D A9 0A			lda #$0A
  2770 1D5F 8D 7E 2C			sta CALCSCRADDR.X
  2771 1D62 20 00 12			jsr CALCSCRADDR
  2772 1D65 B4 17			ldy :STACKORIGIN-1,x
  2773 1D67 B5 18			lda :STACKORIGIN,x
  2774 1D69 99 60 00			sta adr.OBSTACLES,y
  2775 1D6C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2776 1D6E 99 61 00			sta adr.OBSTACLES+1,y
  2777 1D71 CA				dex
  2778 1D72 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2779 1D76 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2780 1D7A A9 12			lda #$12
  2781 1D7C 8D 7F 2C			sta CALCSCRADDR.Y
  2782 1D7F A9 1E			lda #$1E
  2783 1D81 8D 7E 2C			sta CALCSCRADDR.X
  2784 1D84 20 00 12			jsr CALCSCRADDR
  2785 1D87 B4 17			ldy :STACKORIGIN-1,x
  2786 1D89 B5 18			lda :STACKORIGIN,x
  2787 1D8B 99 60 00			sta adr.OBSTACLES,y
  2788 1D8E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2789 1D90 99 61 00			sta adr.OBSTACLES+1,y
  2790 1D93 CA				dex
  2791
  2792 				; optimize FAIL (1, levels.inc), line = 10
  2793
  2794 1D94 A9 08 95 18			mva #$08 :STACKORIGIN,x
  2795 1D98 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2796 1D9C A9 02			lda #$02
  2797 1D9E 8D 7F 2C			sta CALCSCRADDR.Y
  2798 1DA1 A9 14			lda #$14
  2799 1DA3 8D 7E 2C			sta CALCSCRADDR.X
  2800 1DA6 20 00 12			jsr CALCSCRADDR
  2801 1DA9 B4 17			ldy :STACKORIGIN-1,x
  2802 1DAB B5 18			lda :STACKORIGIN,x
  2803 1DAD 99 60 00			sta adr.OBSTACLES,y
  2804 1DB0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2805 1DB2 99 61 00			sta adr.OBSTACLES+1,y
  2806 1DB5 CA				dex
  2807 1DB6 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2808 1DBA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2809 1DBE A9 16			lda #$16
  2810 1DC0 8D 7F 2C			sta CALCSCRADDR.Y
  2811 1DC3 A9 14			lda #$14
  2812 1DC5 8D 7E 2C			sta CALCSCRADDR.X
  2813 1DC8 20 00 12			jsr CALCSCRADDR
  2814 1DCB B4 17			ldy :STACKORIGIN-1,x
  2815 1DCD B5 18			lda :STACKORIGIN,x
  2816 1DCF 99 60 00			sta adr.OBSTACLES,y
  2817 1DD2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2818 1DD4 99 61 00			sta adr.OBSTACLES+1,y
  2819 1DD7 CA				dex
  2820 1DD8 CA				dex
  2821 1DD9			@exit
  2822 					.ifdef @new
  2823 					lda <@VarData
  2824 					sta :ztmp
  2825 					lda >@VarData
  2826 					ldy #@VarDataSize-1
  2827 					jmp @FreeMem
  2828 					els
  2829 1DD9 60				rts						; ret
  2830 					eif
  2831 				.endl
  2832
  2833 1DDA			.local	SETLEVEL01					; PROCEDURE
  2834
  2835 				; optimize OK (levels.inc), line = 17
  2836
  2837 1DDA A9 01			lda #$01
  2838 1DDC 8D 96 2D			sta SETPLAYER.ISALIVE
  2839 1DDF A9 62			lda #$62
  2840 1DE1 8D 95 2D			sta SETPLAYER.COLOUR
  2841 1DE4 A9 00			lda #$00
  2842 1DE6 8D 94 2D			sta SETPLAYER.BRAIN
  2843 1DE9 A9 08			lda #$08
  2844 1DEB 8D 93 2D			sta SETPLAYER.DIR
  2845 1DEE A9 0C			lda #$0C
  2846 1DF0 8D 92 2D			sta SETPLAYER.Y
  2847 1DF3 A9 0A			lda #$0A
  2848 1DF5 8D 91 2D			sta SETPLAYER.X
  2849 1DF8 AD 44 2C			lda PLAYER1
  2850 1DFB 8D 8F 2D			sta SETPLAYER.P
  2851 1DFE AD 45 2C			lda PLAYER1+1
  2852 1E01 8D 90 2D			sta SETPLAYER.P+1
  2853 1E04 20 43 16			jsr SETPLAYER
  2854
  2855 				; optimize OK (levels.inc), line = 18
  2856
  2857 1E07 A9 01			lda #$01
  2858 1E09 8D 96 2D			sta SETPLAYER.ISALIVE
  2859 1E0C A9 5D			lda #$5D
  2860 1E0E 8D 95 2D			sta SETPLAYER.COLOUR
  2861 1E11 A9 01			lda #$01
  2862 1E13 8D 94 2D			sta SETPLAYER.BRAIN
  2863 1E16 A9 04			lda #$04
  2864 1E18 8D 93 2D			sta SETPLAYER.DIR
  2865 1E1B A9 0C			lda #$0C
  2866 1E1D 8D 92 2D			sta SETPLAYER.Y
  2867 1E20 A9 1E			lda #$1E
  2868 1E22 8D 91 2D			sta SETPLAYER.X
  2869 1E25 AD 46 2C			lda PLAYER2
  2870 1E28 8D 8F 2D			sta SETPLAYER.P
  2871 1E2B AD 47 2C			lda PLAYER2+1
  2872 1E2E 8D 90 2D			sta SETPLAYER.P+1
  2873 1E31 20 43 16			jsr SETPLAYER
  2874
  2875 				; optimize FAIL (1, levels.inc), line = 20
  2876
  2877 1E34 E8				inx
  2878 1E35 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2879 1E39 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2880 1E3B A9 06			lda #$06
  2881 1E3D 8D 7F 2C			sta CALCSCRADDR.Y
  2882 1E40 A9 0A			lda #$0A
  2883 1E42 8D 7E 2C			sta CALCSCRADDR.X
  2884 1E45 20 00 12			jsr CALCSCRADDR
  2885 1E48 B4 17			ldy :STACKORIGIN-1,x
  2886 1E4A B5 18			lda :STACKORIGIN,x
  2887 1E4C 99 60 00			sta adr.OBSTACLES,y
  2888 1E4F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2889 1E51 99 61 00			sta adr.OBSTACLES+1,y
  2890 1E54 CA				dex
  2891 1E55 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2892 1E59 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2893 1E5D A9 06			lda #$06
  2894 1E5F 8D 7F 2C			sta CALCSCRADDR.Y
  2895 1E62 A9 1E			lda #$1E
  2896 1E64 8D 7E 2C			sta CALCSCRADDR.X
  2897 1E67 20 00 12			jsr CALCSCRADDR
  2898 1E6A B4 17			ldy :STACKORIGIN-1,x
  2899 1E6C B5 18			lda :STACKORIGIN,x
  2900 1E6E 99 60 00			sta adr.OBSTACLES,y
  2901 1E71 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2902 1E73 99 61 00			sta adr.OBSTACLES+1,y
  2903 1E76 CA				dex
  2904
  2905 				; optimize FAIL (1, levels.inc), line = 21
  2906
  2907 1E77 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2908 1E7B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2909 1E7F A9 12			lda #$12
  2910 1E81 8D 7F 2C			sta CALCSCRADDR.Y
  2911 1E84 A9 0A			lda #$0A
  2912 1E86 8D 7E 2C			sta CALCSCRADDR.X
  2913 1E89 20 00 12			jsr CALCSCRADDR
  2914 1E8C B4 17			ldy :STACKORIGIN-1,x
  2915 1E8E B5 18			lda :STACKORIGIN,x
  2916 1E90 99 60 00			sta adr.OBSTACLES,y
  2917 1E93 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2918 1E95 99 61 00			sta adr.OBSTACLES+1,y
  2919 1E98 CA				dex
  2920 1E99 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2921 1E9D A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2922 1EA1 A9 12			lda #$12
  2923 1EA3 8D 7F 2C			sta CALCSCRADDR.Y
  2924 1EA6 A9 1E			lda #$1E
  2925 1EA8 8D 7E 2C			sta CALCSCRADDR.X
  2926 1EAB 20 00 12			jsr CALCSCRADDR
  2927 1EAE B4 17			ldy :STACKORIGIN-1,x
  2928 1EB0 B5 18			lda :STACKORIGIN,x
  2929 1EB2 99 60 00			sta adr.OBSTACLES,y
  2930 1EB5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2931 1EB7 99 61 00			sta adr.OBSTACLES+1,y
  2932 1EBA CA				dex
  2933
  2934 				; optimize FAIL (1, levels.inc), line = 22
  2935
  2936 1EBB A9 08 95 18			mva #$08 :STACKORIGIN,x
  2937 1EBF A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2938 1EC3 A9 02			lda #$02
  2939 1EC5 8D 7F 2C			sta CALCSCRADDR.Y
  2940 1EC8 A9 14			lda #$14
  2941 1ECA 8D 7E 2C			sta CALCSCRADDR.X
  2942 1ECD 20 00 12			jsr CALCSCRADDR
  2943 1ED0 B4 17			ldy :STACKORIGIN-1,x
  2944 1ED2 B5 18			lda :STACKORIGIN,x
  2945 1ED4 99 60 00			sta adr.OBSTACLES,y
  2946 1ED7 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2947 1ED9 99 61 00			sta adr.OBSTACLES+1,y
  2948 1EDC CA				dex
  2949 1EDD A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2950 1EE1 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2951 1EE5 A9 16			lda #$16
  2952 1EE7 8D 7F 2C			sta CALCSCRADDR.Y
  2953 1EEA A9 14			lda #$14
  2954 1EEC 8D 7E 2C			sta CALCSCRADDR.X
  2955 1EEF 20 00 12			jsr CALCSCRADDR
  2956 1EF2 B4 17			ldy :STACKORIGIN-1,x
  2957 1EF4 B5 18			lda :STACKORIGIN,x
  2958 1EF6 99 60 00			sta adr.OBSTACLES,y
  2959 1EF9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2960 1EFB 99 61 00			sta adr.OBSTACLES+1,y
  2961 1EFE CA				dex
  2962 1EFF CA				dex
  2963 1F00			@exit
  2964 					.ifdef @new
  2965 					lda <@VarData
  2966 					sta :ztmp
  2967 					lda >@VarData
  2968 					ldy #@VarDataSize-1
  2969 					jmp @FreeMem
  2970 					els
  2971 1F00 60				rts						; ret
  2972 					eif
  2973 				.endl
  2974
  2975 1F01			.local	SETLEVEL02					; PROCEDURE
  2976
  2977 				; optimize OK (levels.inc), line = 29
  2978
  2979 1F01 A9 01			lda #$01
  2980 1F03 8D 96 2D			sta SETPLAYER.ISALIVE
  2981 1F06 A9 62			lda #$62
  2982 1F08 8D 95 2D			sta SETPLAYER.COLOUR
  2983 1F0B A9 00			lda #$00
  2984 1F0D 8D 94 2D			sta SETPLAYER.BRAIN
  2985 1F10 A9 08			lda #$08
  2986 1F12 8D 93 2D			sta SETPLAYER.DIR
  2987 1F15 A9 0C			lda #$0C
  2988 1F17 8D 92 2D			sta SETPLAYER.Y
  2989 1F1A A9 0A			lda #$0A
  2990 1F1C 8D 91 2D			sta SETPLAYER.X
  2991 1F1F AD 44 2C			lda PLAYER1
  2992 1F22 8D 8F 2D			sta SETPLAYER.P
  2993 1F25 AD 45 2C			lda PLAYER1+1
  2994 1F28 8D 90 2D			sta SETPLAYER.P+1
  2995 1F2B 20 43 16			jsr SETPLAYER
  2996
  2997 				; optimize OK (levels.inc), line = 30
  2998
  2999 1F2E A9 01			lda #$01
  3000 1F30 8D 96 2D			sta SETPLAYER.ISALIVE
  3001 1F33 A9 5D			lda #$5D
  3002 1F35 8D 95 2D			sta SETPLAYER.COLOUR
  3003 1F38 A9 03			lda #$03
  3004 1F3A 8D 94 2D			sta SETPLAYER.BRAIN
  3005 1F3D A9 04			lda #$04
  3006 1F3F 8D 93 2D			sta SETPLAYER.DIR
  3007 1F42 A9 0C			lda #$0C
  3008 1F44 8D 92 2D			sta SETPLAYER.Y
  3009 1F47 A9 1E			lda #$1E
  3010 1F49 8D 91 2D			sta SETPLAYER.X
  3011 1F4C AD 46 2C			lda PLAYER2
  3012 1F4F 8D 8F 2D			sta SETPLAYER.P
  3013 1F52 AD 47 2C			lda PLAYER2+1
  3014 1F55 8D 90 2D			sta SETPLAYER.P+1
  3015 1F58 20 43 16			jsr SETPLAYER
  3016
  3017 				; optimize FAIL (1, levels.inc), line = 32
  3018
  3019 1F5B E8				inx
  3020 1F5C A9 00 95 18			mva #$00 :STACKORIGIN,x
  3021 1F60 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3022 1F62 A9 06			lda #$06
  3023 1F64 8D 7F 2C			sta CALCSCRADDR.Y
  3024 1F67 A9 0A			lda #$0A
  3025 1F69 8D 7E 2C			sta CALCSCRADDR.X
  3026 1F6C 20 00 12			jsr CALCSCRADDR
  3027 1F6F B4 17			ldy :STACKORIGIN-1,x
  3028 1F71 B5 18			lda :STACKORIGIN,x
  3029 1F73 99 60 00			sta adr.OBSTACLES,y
  3030 1F76 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3031 1F78 99 61 00			sta adr.OBSTACLES+1,y
  3032 1F7B CA				dex
  3033 1F7C A9 02 95 18			mva #$02 :STACKORIGIN,x
  3034 1F80 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3035 1F84 A9 06			lda #$06
  3036 1F86 8D 7F 2C			sta CALCSCRADDR.Y
  3037 1F89 A9 1E			lda #$1E
  3038 1F8B 8D 7E 2C			sta CALCSCRADDR.X
  3039 1F8E 20 00 12			jsr CALCSCRADDR
  3040 1F91 B4 17			ldy :STACKORIGIN-1,x
  3041 1F93 B5 18			lda :STACKORIGIN,x
  3042 1F95 99 60 00			sta adr.OBSTACLES,y
  3043 1F98 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3044 1F9A 99 61 00			sta adr.OBSTACLES+1,y
  3045 1F9D CA				dex
  3046
  3047 				; optimize FAIL (1, levels.inc), line = 33
  3048
  3049 1F9E A9 04 95 18			mva #$04 :STACKORIGIN,x
  3050 1FA2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3051 1FA6 A9 12			lda #$12
  3052 1FA8 8D 7F 2C			sta CALCSCRADDR.Y
  3053 1FAB A9 0A			lda #$0A
  3054 1FAD 8D 7E 2C			sta CALCSCRADDR.X
  3055 1FB0 20 00 12			jsr CALCSCRADDR
  3056 1FB3 B4 17			ldy :STACKORIGIN-1,x
  3057 1FB5 B5 18			lda :STACKORIGIN,x
  3058 1FB7 99 60 00			sta adr.OBSTACLES,y
  3059 1FBA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3060 1FBC 99 61 00			sta adr.OBSTACLES+1,y
  3061 1FBF CA				dex
  3062 1FC0 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3063 1FC4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3064 1FC8 A9 12			lda #$12
  3065 1FCA 8D 7F 2C			sta CALCSCRADDR.Y
  3066 1FCD A9 1E			lda #$1E
  3067 1FCF 8D 7E 2C			sta CALCSCRADDR.X
  3068 1FD2 20 00 12			jsr CALCSCRADDR
  3069 1FD5 B4 17			ldy :STACKORIGIN-1,x
  3070 1FD7 B5 18			lda :STACKORIGIN,x
  3071 1FD9 99 60 00			sta adr.OBSTACLES,y
  3072 1FDC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3073 1FDE 99 61 00			sta adr.OBSTACLES+1,y
  3074 1FE1 CA				dex
  3075
  3076 				; optimize FAIL (1, levels.inc), line = 34
  3077
  3078 1FE2 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3079 1FE6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3080 1FEA A9 02			lda #$02
  3081 1FEC 8D 7F 2C			sta CALCSCRADDR.Y
  3082 1FEF A9 14			lda #$14
  3083 1FF1 8D 7E 2C			sta CALCSCRADDR.X
  3084 1FF4 20 00 12			jsr CALCSCRADDR
  3085 1FF7 B4 17			ldy :STACKORIGIN-1,x
  3086 1FF9 B5 18			lda :STACKORIGIN,x
  3087 1FFB 99 60 00			sta adr.OBSTACLES,y
  3088 1FFE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3089 2000 99 61 00			sta adr.OBSTACLES+1,y
  3090 2003 CA				dex
  3091 2004 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3092 2008 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3093 200C A9 16			lda #$16
  3094 200E 8D 7F 2C			sta CALCSCRADDR.Y
  3095 2011 A9 14			lda #$14
  3096 2013 8D 7E 2C			sta CALCSCRADDR.X
  3097 2016 20 00 12			jsr CALCSCRADDR
  3098 2019 B4 17			ldy :STACKORIGIN-1,x
  3099 201B B5 18			lda :STACKORIGIN,x
  3100 201D 99 60 00			sta adr.OBSTACLES,y
  3101 2020 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3102 2022 99 61 00			sta adr.OBSTACLES+1,y
  3103 2025 CA				dex
  3104 2026 CA				dex
  3105 2027			@exit
  3106 					.ifdef @new
  3107 					lda <@VarData
  3108 					sta :ztmp
  3109 					lda >@VarData
  3110 					ldy #@VarDataSize-1
  3111 					jmp @FreeMem
  3112 					els
  3113 2027 60				rts						; ret
  3114 					eif
  3115 				.endl
  3116
  3117 2028			.local	SETLEVEL03					; PROCEDURE
  3118
  3119 				; optimize OK (levels.inc), line = 41
  3120
  3121 2028 A9 01			lda #$01
  3122 202A 8D 96 2D			sta SETPLAYER.ISALIVE
  3123 202D A9 62			lda #$62
  3124 202F 8D 95 2D			sta SETPLAYER.COLOUR
  3125 2032 A9 00			lda #$00
  3126 2034 8D 94 2D			sta SETPLAYER.BRAIN
  3127 2037 A9 08			lda #$08
  3128 2039 8D 93 2D			sta SETPLAYER.DIR
  3129 203C A9 0C			lda #$0C
  3130 203E 8D 92 2D			sta SETPLAYER.Y
  3131 2041 A9 0A			lda #$0A
  3132 2043 8D 91 2D			sta SETPLAYER.X
  3133 2046 AD 44 2C			lda PLAYER1
  3134 2049 8D 8F 2D			sta SETPLAYER.P
  3135 204C AD 45 2C			lda PLAYER1+1
  3136 204F 8D 90 2D			sta SETPLAYER.P+1
  3137 2052 20 43 16			jsr SETPLAYER
  3138
  3139 				; optimize OK (levels.inc), line = 42
  3140
  3141 2055 A9 01			lda #$01
  3142 2057 8D 96 2D			sta SETPLAYER.ISALIVE
  3143 205A A9 5D			lda #$5D
  3144 205C 8D 95 2D			sta SETPLAYER.COLOUR
  3145 205F A9 02			lda #$02
  3146 2061 8D 94 2D			sta SETPLAYER.BRAIN
  3147 2064 A9 04			lda #$04
  3148 2066 8D 93 2D			sta SETPLAYER.DIR
  3149 2069 A9 0C			lda #$0C
  3150 206B 8D 92 2D			sta SETPLAYER.Y
  3151 206E A9 1E			lda #$1E
  3152 2070 8D 91 2D			sta SETPLAYER.X
  3153 2073 AD 46 2C			lda PLAYER2
  3154 2076 8D 8F 2D			sta SETPLAYER.P
  3155 2079 AD 47 2C			lda PLAYER2+1
  3156 207C 8D 90 2D			sta SETPLAYER.P+1
  3157 207F 20 43 16			jsr SETPLAYER
  3158
  3159 				; optimize FAIL (1, levels.inc), line = 44
  3160
  3161 2082 E8				inx
  3162 2083 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3163 2087 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3164 2089 A9 06			lda #$06
  3165 208B 8D 7F 2C			sta CALCSCRADDR.Y
  3166 208E A9 0A			lda #$0A
  3167 2090 8D 7E 2C			sta CALCSCRADDR.X
  3168 2093 20 00 12			jsr CALCSCRADDR
  3169 2096 B4 17			ldy :STACKORIGIN-1,x
  3170 2098 B5 18			lda :STACKORIGIN,x
  3171 209A 99 60 00			sta adr.OBSTACLES,y
  3172 209D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3173 209F 99 61 00			sta adr.OBSTACLES+1,y
  3174 20A2 CA				dex
  3175 20A3 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3176 20A7 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3177 20AB A9 06			lda #$06
  3178 20AD 8D 7F 2C			sta CALCSCRADDR.Y
  3179 20B0 A9 1E			lda #$1E
  3180 20B2 8D 7E 2C			sta CALCSCRADDR.X
  3181 20B5 20 00 12			jsr CALCSCRADDR
  3182 20B8 B4 17			ldy :STACKORIGIN-1,x
  3183 20BA B5 18			lda :STACKORIGIN,x
  3184 20BC 99 60 00			sta adr.OBSTACLES,y
  3185 20BF B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3186 20C1 99 61 00			sta adr.OBSTACLES+1,y
  3187 20C4 CA				dex
  3188
  3189 				; optimize FAIL (1, levels.inc), line = 45
  3190
  3191 20C5 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3192 20C9 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3193 20CD A9 12			lda #$12
  3194 20CF 8D 7F 2C			sta CALCSCRADDR.Y
  3195 20D2 A9 0A			lda #$0A
  3196 20D4 8D 7E 2C			sta CALCSCRADDR.X
  3197 20D7 20 00 12			jsr CALCSCRADDR
  3198 20DA B4 17			ldy :STACKORIGIN-1,x
  3199 20DC B5 18			lda :STACKORIGIN,x
  3200 20DE 99 60 00			sta adr.OBSTACLES,y
  3201 20E1 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3202 20E3 99 61 00			sta adr.OBSTACLES+1,y
  3203 20E6 CA				dex
  3204 20E7 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3205 20EB A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3206 20EF A9 12			lda #$12
  3207 20F1 8D 7F 2C			sta CALCSCRADDR.Y
  3208 20F4 A9 1E			lda #$1E
  3209 20F6 8D 7E 2C			sta CALCSCRADDR.X
  3210 20F9 20 00 12			jsr CALCSCRADDR
  3211 20FC B4 17			ldy :STACKORIGIN-1,x
  3212 20FE B5 18			lda :STACKORIGIN,x
  3213 2100 99 60 00			sta adr.OBSTACLES,y
  3214 2103 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3215 2105 99 61 00			sta adr.OBSTACLES+1,y
  3216 2108 CA				dex
  3217
  3218 				; optimize FAIL (1, levels.inc), line = 46
  3219
  3220 2109 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3221 210D A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3222 2111 A9 0C			lda #$0C
  3223 2113 8D 7F 2C			sta CALCSCRADDR.Y
  3224 2116 A9 01			lda #$01
  3225 2118 8D 7E 2C			sta CALCSCRADDR.X
  3226 211B 20 00 12			jsr CALCSCRADDR
  3227 211E B4 17			ldy :STACKORIGIN-1,x
  3228 2120 B5 18			lda :STACKORIGIN,x
  3229 2122 99 60 00			sta adr.OBSTACLES,y
  3230 2125 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3231 2127 99 61 00			sta adr.OBSTACLES+1,y
  3232 212A CA				dex
  3233 212B A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3234 212F A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3235 2133 A9 02			lda #$02
  3236 2135 8D 7F 2C			sta CALCSCRADDR.Y
  3237 2138 A9 14			lda #$14
  3238 213A 8D 7E 2C			sta CALCSCRADDR.X
  3239 213D 20 00 12			jsr CALCSCRADDR
  3240 2140 B4 17			ldy :STACKORIGIN-1,x
  3241 2142 B5 18			lda :STACKORIGIN,x
  3242 2144 99 60 00			sta adr.OBSTACLES,y
  3243 2147 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3244 2149 99 61 00			sta adr.OBSTACLES+1,y
  3245 214C CA				dex
  3246
  3247 				; optimize FAIL (1, levels.inc), line = 47
  3248
  3249 214D A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3250 2151 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3251 2155 A9 16			lda #$16
  3252 2157 8D 7F 2C			sta CALCSCRADDR.Y
  3253 215A A9 14			lda #$14
  3254 215C 8D 7E 2C			sta CALCSCRADDR.X
  3255 215F 20 00 12			jsr CALCSCRADDR
  3256 2162 B4 17			ldy :STACKORIGIN-1,x
  3257 2164 B5 18			lda :STACKORIGIN,x
  3258 2166 99 60 00			sta adr.OBSTACLES,y
  3259 2169 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3260 216B 99 61 00			sta adr.OBSTACLES+1,y
  3261 216E CA				dex
  3262 216F CA				dex
  3263 2170			@exit
  3264 					.ifdef @new
  3265 					lda <@VarData
  3266 					sta :ztmp
  3267 					lda >@VarData
  3268 					ldy #@VarDataSize-1
  3269 					jmp @FreeMem
  3270 					els
  3271 2170 60				rts						; ret
  3272 					eif
  3273 				.endl
  3274
  3275 2171			.local	SETLEVEL04					; PROCEDURE
  3276
  3277 				; optimize OK (levels.inc), line = 54
  3278
  3279 2171 A9 01			lda #$01
  3280 2173 8D 96 2D			sta SETPLAYER.ISALIVE
  3281 2176 A9 62			lda #$62
  3282 2178 8D 95 2D			sta SETPLAYER.COLOUR
  3283 217B A9 00			lda #$00
  3284 217D 8D 94 2D			sta SETPLAYER.BRAIN
  3285 2180 A9 04			lda #$04
  3286 2182 8D 93 2D			sta SETPLAYER.DIR
  3287 2185 A9 0C			lda #$0C
  3288 2187 8D 92 2D			sta SETPLAYER.Y
  3289 218A A9 12			lda #$12
  3290 218C 8D 91 2D			sta SETPLAYER.X
  3291 218F AD 44 2C			lda PLAYER1
  3292 2192 8D 8F 2D			sta SETPLAYER.P
  3293 2195 AD 45 2C			lda PLAYER1+1
  3294 2198 8D 90 2D			sta SETPLAYER.P+1
  3295 219B 20 43 16			jsr SETPLAYER
  3296
  3297 				; optimize OK (levels.inc), line = 55
  3298
  3299 219E A9 01			lda #$01
  3300 21A0 8D 96 2D			sta SETPLAYER.ISALIVE
  3301 21A3 A9 5D			lda #$5D
  3302 21A5 8D 95 2D			sta SETPLAYER.COLOUR
  3303 21A8 A9 04			lda #$04
  3304 21AA 8D 94 2D			sta SETPLAYER.BRAIN
  3305 21AD A9 08			lda #$08
  3306 21AF 8D 93 2D			sta SETPLAYER.DIR
  3307 21B2 A9 0C			lda #$0C
  3308 21B4 8D 92 2D			sta SETPLAYER.Y
  3309 21B7 A9 16			lda #$16
  3310 21B9 8D 91 2D			sta SETPLAYER.X
  3311 21BC AD 46 2C			lda PLAYER2
  3312 21BF 8D 8F 2D			sta SETPLAYER.P
  3313 21C2 AD 47 2C			lda PLAYER2+1
  3314 21C5 8D 90 2D			sta SETPLAYER.P+1
  3315 21C8 20 43 16			jsr SETPLAYER
  3316
  3317 				; optimize FAIL (1, levels.inc), line = 57
  3318
  3319 21CB E8				inx
  3320 21CC A9 00 95 18			mva #$00 :STACKORIGIN,x
  3321 21D0 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3322 21D2 A9 06			lda #$06
  3323 21D4 8D 7F 2C			sta CALCSCRADDR.Y
  3324 21D7 A9 0A			lda #$0A
  3325 21D9 8D 7E 2C			sta CALCSCRADDR.X
  3326 21DC 20 00 12			jsr CALCSCRADDR
  3327 21DF B4 17			ldy :STACKORIGIN-1,x
  3328 21E1 B5 18			lda :STACKORIGIN,x
  3329 21E3 99 60 00			sta adr.OBSTACLES,y
  3330 21E6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3331 21E8 99 61 00			sta adr.OBSTACLES+1,y
  3332 21EB CA				dex
  3333 21EC A9 02 95 18			mva #$02 :STACKORIGIN,x
  3334 21F0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3335 21F4 A9 06			lda #$06
  3336 21F6 8D 7F 2C			sta CALCSCRADDR.Y
  3337 21F9 A9 1E			lda #$1E
  3338 21FB 8D 7E 2C			sta CALCSCRADDR.X
  3339 21FE 20 00 12			jsr CALCSCRADDR
  3340 2201 B4 17			ldy :STACKORIGIN-1,x
  3341 2203 B5 18			lda :STACKORIGIN,x
  3342 2205 99 60 00			sta adr.OBSTACLES,y
  3343 2208 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3344 220A 99 61 00			sta adr.OBSTACLES+1,y
  3345 220D CA				dex
  3346
  3347 				; optimize FAIL (1, levels.inc), line = 58
  3348
  3349 220E A9 04 95 18			mva #$04 :STACKORIGIN,x
  3350 2212 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3351 2216 A9 12			lda #$12
  3352 2218 8D 7F 2C			sta CALCSCRADDR.Y
  3353 221B A9 0A			lda #$0A
  3354 221D 8D 7E 2C			sta CALCSCRADDR.X
  3355 2220 20 00 12			jsr CALCSCRADDR
  3356 2223 B4 17			ldy :STACKORIGIN-1,x
  3357 2225 B5 18			lda :STACKORIGIN,x
  3358 2227 99 60 00			sta adr.OBSTACLES,y
  3359 222A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3360 222C 99 61 00			sta adr.OBSTACLES+1,y
  3361 222F CA				dex
  3362 2230 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3363 2234 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3364 2238 A9 12			lda #$12
  3365 223A 8D 7F 2C			sta CALCSCRADDR.Y
  3366 223D A9 1E			lda #$1E
  3367 223F 8D 7E 2C			sta CALCSCRADDR.X
  3368 2242 20 00 12			jsr CALCSCRADDR
  3369 2245 B4 17			ldy :STACKORIGIN-1,x
  3370 2247 B5 18			lda :STACKORIGIN,x
  3371 2249 99 60 00			sta adr.OBSTACLES,y
  3372 224C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3373 224E 99 61 00			sta adr.OBSTACLES+1,y
  3374 2251 CA				dex
  3375
  3376 				; optimize FAIL (1, levels.inc), line = 59
  3377
  3378 2252 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3379 2256 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3380 225A A9 0C			lda #$0C
  3381 225C 8D 7F 2C			sta CALCSCRADDR.Y
  3382 225F A9 01			lda #$01
  3383 2261 8D 7E 2C			sta CALCSCRADDR.X
  3384 2264 20 00 12			jsr CALCSCRADDR
  3385 2267 B4 17			ldy :STACKORIGIN-1,x
  3386 2269 B5 18			lda :STACKORIGIN,x
  3387 226B 99 60 00			sta adr.OBSTACLES,y
  3388 226E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3389 2270 99 61 00			sta adr.OBSTACLES+1,y
  3390 2273 CA				dex
  3391 2274 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3392 2278 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3393 227C A9 02			lda #$02
  3394 227E 8D 7F 2C			sta CALCSCRADDR.Y
  3395 2281 A9 14			lda #$14
  3396 2283 8D 7E 2C			sta CALCSCRADDR.X
  3397 2286 20 00 12			jsr CALCSCRADDR
  3398 2289 B4 17			ldy :STACKORIGIN-1,x
  3399 228B B5 18			lda :STACKORIGIN,x
  3400 228D 99 60 00			sta adr.OBSTACLES,y
  3401 2290 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3402 2292 99 61 00			sta adr.OBSTACLES+1,y
  3403 2295 CA				dex
  3404
  3405 				; optimize FAIL (1, levels.inc), line = 60
  3406
  3407 2296 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3408 229A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3409 229E A9 16			lda #$16
  3410 22A0 8D 7F 2C			sta CALCSCRADDR.Y
  3411 22A3 A9 14			lda #$14
  3412 22A5 8D 7E 2C			sta CALCSCRADDR.X
  3413 22A8 20 00 12			jsr CALCSCRADDR
  3414 22AB B4 17			ldy :STACKORIGIN-1,x
  3415 22AD B5 18			lda :STACKORIGIN,x
  3416 22AF 99 60 00			sta adr.OBSTACLES,y
  3417 22B2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3418 22B4 99 61 00			sta adr.OBSTACLES+1,y
  3419 22B7 CA				dex
  3420 22B8 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3421 22BC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3422 22C0 A9 0C			lda #$0C
  3423 22C2 8D 7F 2C			sta CALCSCRADDR.Y
  3424 22C5 A9 14			lda #$14
  3425 22C7 8D 7E 2C			sta CALCSCRADDR.X
  3426 22CA 20 00 12			jsr CALCSCRADDR
  3427 22CD B4 17			ldy :STACKORIGIN-1,x
  3428 22CF B5 18			lda :STACKORIGIN,x
  3429 22D1 99 60 00			sta adr.OBSTACLES,y
  3430 22D4 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3431 22D6 99 61 00			sta adr.OBSTACLES+1,y
  3432 22D9 CA				dex
  3433 22DA CA				dex
  3434 22DB			@exit
  3435 					.ifdef @new
  3436 					lda <@VarData
  3437 					sta :ztmp
  3438 					lda >@VarData
  3439 					ldy #@VarDataSize-1
  3440 					jmp @FreeMem
  3441 					els
  3442 22DB 60				rts						; ret
  3443 					eif
  3444 				.endl
  3445
  3446 22DC			.local	SETLEVEL05					; PROCEDURE
  3447
  3448 				; optimize OK (levels.inc), line = 67
  3449
  3450 22DC A9 01			lda #$01
  3451 22DE 8D 96 2D			sta SETPLAYER.ISALIVE
  3452 22E1 A9 62			lda #$62
  3453 22E3 8D 95 2D			sta SETPLAYER.COLOUR
  3454 22E6 A9 00			lda #$00
  3455 22E8 8D 94 2D			sta SETPLAYER.BRAIN
  3456 22EB A9 08			lda #$08
  3457 22ED 8D 93 2D			sta SETPLAYER.DIR
  3458 22F0 A9 0C			lda #$0C
  3459 22F2 8D 92 2D			sta SETPLAYER.Y
  3460 22F5 A9 0A			lda #$0A
  3461 22F7 8D 91 2D			sta SETPLAYER.X
  3462 22FA AD 44 2C			lda PLAYER1
  3463 22FD 8D 8F 2D			sta SETPLAYER.P
  3464 2300 AD 45 2C			lda PLAYER1+1
  3465 2303 8D 90 2D			sta SETPLAYER.P+1
  3466 2306 20 43 16			jsr SETPLAYER
  3467
  3468 				; optimize OK (levels.inc), line = 68
  3469
  3470 2309 A9 01			lda #$01
  3471 230B 8D 96 2D			sta SETPLAYER.ISALIVE
  3472 230E A9 5D			lda #$5D
  3473 2310 8D 95 2D			sta SETPLAYER.COLOUR
  3474 2313 A9 04			lda #$04
  3475 2315 8D 94 2D			sta SETPLAYER.BRAIN
  3476 2318 8D 93 2D			sta SETPLAYER.DIR
  3477 231B A9 0C			lda #$0C
  3478 231D 8D 92 2D			sta SETPLAYER.Y
  3479 2320 A9 1E			lda #$1E
  3480 2322 8D 91 2D			sta SETPLAYER.X
  3481 2325 AD 46 2C			lda PLAYER2
  3482 2328 8D 8F 2D			sta SETPLAYER.P
  3483 232B AD 47 2C			lda PLAYER2+1
  3484 232E 8D 90 2D			sta SETPLAYER.P+1
  3485 2331 20 43 16			jsr SETPLAYER
  3486
  3487 				; optimize OK (levels.inc), line = 69
  3488
  3489 2334 A9 01			lda #$01
  3490 2336 8D 96 2D			sta SETPLAYER.ISALIVE
  3491 2339 A9 71			lda #$71
  3492 233B 8D 95 2D			sta SETPLAYER.COLOUR
  3493 233E A9 03			lda #$03
  3494 2340 8D 94 2D			sta SETPLAYER.BRAIN
  3495 2343 A9 02			lda #$02
  3496 2345 8D 93 2D			sta SETPLAYER.DIR
  3497 2348 A9 04			lda #$04
  3498 234A 8D 92 2D			sta SETPLAYER.Y
  3499 234D A9 14			lda #$14
  3500 234F 8D 91 2D			sta SETPLAYER.X
  3501 2352 AD 48 2C			lda PLAYER3
  3502 2355 8D 8F 2D			sta SETPLAYER.P
  3503 2358 AD 49 2C			lda PLAYER3+1
  3504 235B 8D 90 2D			sta SETPLAYER.P+1
  3505 235E 20 43 16			jsr SETPLAYER
  3506
  3507 				; optimize OK (levels.inc), line = 70
  3508
  3509 2361 A9 01			lda #$01
  3510 2363 8D 96 2D			sta SETPLAYER.ISALIVE
  3511 2366 A9 55			lda #$55
  3512 2368 8D 95 2D			sta SETPLAYER.COLOUR
  3513 236B A9 02			lda #$02
  3514 236D 8D 94 2D			sta SETPLAYER.BRAIN
  3515 2370 A9 01			lda #$01
  3516 2372 8D 93 2D			sta SETPLAYER.DIR
  3517 2375 A9 12			lda #$12
  3518 2377 8D 92 2D			sta SETPLAYER.Y
  3519 237A A9 14			lda #$14
  3520 237C 8D 91 2D			sta SETPLAYER.X
  3521 237F AD 4A 2C			lda PLAYER4
  3522 2382 8D 8F 2D			sta SETPLAYER.P
  3523 2385 AD 4B 2C			lda PLAYER4+1
  3524 2388 8D 90 2D			sta SETPLAYER.P+1
  3525 238B 20 43 16			jsr SETPLAYER
  3526
  3527 				; optimize FAIL (1, levels.inc), line = 72
  3528
  3529 238E E8				inx
  3530 238F A9 00 95 18			mva #$00 :STACKORIGIN,x
  3531 2393 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3532 2395 A9 06			lda #$06
  3533 2397 8D 7F 2C			sta CALCSCRADDR.Y
  3534 239A A9 0A			lda #$0A
  3535 239C 8D 7E 2C			sta CALCSCRADDR.X
  3536 239F 20 00 12			jsr CALCSCRADDR
  3537 23A2 B4 17			ldy :STACKORIGIN-1,x
  3538 23A4 B5 18			lda :STACKORIGIN,x
  3539 23A6 99 60 00			sta adr.OBSTACLES,y
  3540 23A9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3541 23AB 99 61 00			sta adr.OBSTACLES+1,y
  3542 23AE CA				dex
  3543 23AF A9 02 95 18			mva #$02 :STACKORIGIN,x
  3544 23B3 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3545 23B7 A9 06			lda #$06
  3546 23B9 8D 7F 2C			sta CALCSCRADDR.Y
  3547 23BC A9 1E			lda #$1E
  3548 23BE 8D 7E 2C			sta CALCSCRADDR.X
  3549 23C1 20 00 12			jsr CALCSCRADDR
  3550 23C4 B4 17			ldy :STACKORIGIN-1,x
  3551 23C6 B5 18			lda :STACKORIGIN,x
  3552 23C8 99 60 00			sta adr.OBSTACLES,y
  3553 23CB B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3554 23CD 99 61 00			sta adr.OBSTACLES+1,y
  3555 23D0 CA				dex
  3556
  3557 				; optimize FAIL (1, levels.inc), line = 73
  3558
  3559 23D1 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3560 23D5 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3561 23D9 A9 12			lda #$12
  3562 23DB 8D 7F 2C			sta CALCSCRADDR.Y
  3563 23DE A9 0A			lda #$0A
  3564 23E0 8D 7E 2C			sta CALCSCRADDR.X
  3565 23E3 20 00 12			jsr CALCSCRADDR
  3566 23E6 B4 17			ldy :STACKORIGIN-1,x
  3567 23E8 B5 18			lda :STACKORIGIN,x
  3568 23EA 99 60 00			sta adr.OBSTACLES,y
  3569 23ED B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3570 23EF 99 61 00			sta adr.OBSTACLES+1,y
  3571 23F2 CA				dex
  3572 23F3 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3573 23F7 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3574 23FB A9 12			lda #$12
  3575 23FD 8D 7F 2C			sta CALCSCRADDR.Y
  3576 2400 A9 1E			lda #$1E
  3577 2402 8D 7E 2C			sta CALCSCRADDR.X
  3578 2405 20 00 12			jsr CALCSCRADDR
  3579 2408 B4 17			ldy :STACKORIGIN-1,x
  3580 240A B5 18			lda :STACKORIGIN,x
  3581 240C 99 60 00			sta adr.OBSTACLES,y
  3582 240F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3583 2411 99 61 00			sta adr.OBSTACLES+1,y
  3584 2414 CA				dex
  3585
  3586 				; optimize FAIL (1, levels.inc), line = 74
  3587
  3588 2415 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3589 2419 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3590 241D A9 0C			lda #$0C
  3591 241F 8D 7F 2C			sta CALCSCRADDR.Y
  3592 2422 A9 01			lda #$01
  3593 2424 8D 7E 2C			sta CALCSCRADDR.X
  3594 2427 20 00 12			jsr CALCSCRADDR
  3595 242A B4 17			ldy :STACKORIGIN-1,x
  3596 242C B5 18			lda :STACKORIGIN,x
  3597 242E 99 60 00			sta adr.OBSTACLES,y
  3598 2431 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3599 2433 99 61 00			sta adr.OBSTACLES+1,y
  3600 2436 CA				dex
  3601 2437 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3602 243B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3603 243F A9 02			lda #$02
  3604 2441 8D 7F 2C			sta CALCSCRADDR.Y
  3605 2444 A9 14			lda #$14
  3606 2446 8D 7E 2C			sta CALCSCRADDR.X
  3607 2449 20 00 12			jsr CALCSCRADDR
  3608 244C B4 17			ldy :STACKORIGIN-1,x
  3609 244E B5 18			lda :STACKORIGIN,x
  3610 2450 99 60 00			sta adr.OBSTACLES,y
  3611 2453 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3612 2455 99 61 00			sta adr.OBSTACLES+1,y
  3613 2458 CA				dex
  3614
  3615 				; optimize FAIL (1, levels.inc), line = 75
  3616
  3617 2459 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3618 245D A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3619 2461 A9 16			lda #$16
  3620 2463 8D 7F 2C			sta CALCSCRADDR.Y
  3621 2466 A9 14			lda #$14
  3622 2468 8D 7E 2C			sta CALCSCRADDR.X
  3623 246B 20 00 12			jsr CALCSCRADDR
  3624 246E B4 17			ldy :STACKORIGIN-1,x
  3625 2470 B5 18			lda :STACKORIGIN,x
  3626 2472 99 60 00			sta adr.OBSTACLES,y
  3627 2475 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3628 2477 99 61 00			sta adr.OBSTACLES+1,y
  3629 247A CA				dex
  3630 247B CA				dex
  3631 247C			@exit
  3632 					.ifdef @new
  3633 					lda <@VarData
  3634 					sta :ztmp
  3635 					lda >@VarData
  3636 					ldy #@VarDataSize-1
  3637 					jmp @FreeMem
  3638 					els
  3639 247C 60				rts						; ret
  3640 					eif
  3641 				.endl
  3642
  3643 247D			.local	SETLEVEL06					; PROCEDURE
  3644
  3645 				; optimize OK (levels.inc), line = 82
  3646
  3647 247D A9 01			lda #$01
  3648 247F 8D 96 2D			sta SETPLAYER.ISALIVE
  3649 2482 A9 62			lda #$62
  3650 2484 8D 95 2D			sta SETPLAYER.COLOUR
  3651 2487 A9 00			lda #$00
  3652 2489 8D 94 2D			sta SETPLAYER.BRAIN
  3653 248C A9 04			lda #$04
  3654 248E 8D 93 2D			sta SETPLAYER.DIR
  3655 2491 A9 0C			lda #$0C
  3656 2493 8D 92 2D			sta SETPLAYER.Y
  3657 2496 A9 12			lda #$12
  3658 2498 8D 91 2D			sta SETPLAYER.X
  3659 249B AD 44 2C			lda PLAYER1
  3660 249E 8D 8F 2D			sta SETPLAYER.P
  3661 24A1 AD 45 2C			lda PLAYER1+1
  3662 24A4 8D 90 2D			sta SETPLAYER.P+1
  3663 24A7 20 43 16			jsr SETPLAYER
  3664
  3665 				; optimize OK (levels.inc), line = 83
  3666
  3667 24AA A9 01			lda #$01
  3668 24AC 8D 96 2D			sta SETPLAYER.ISALIVE
  3669 24AF A9 5D			lda #$5D
  3670 24B1 8D 95 2D			sta SETPLAYER.COLOUR
  3671 24B4 A9 02			lda #$02
  3672 24B6 8D 94 2D			sta SETPLAYER.BRAIN
  3673 24B9 A9 08			lda #$08
  3674 24BB 8D 93 2D			sta SETPLAYER.DIR
  3675 24BE A9 0C			lda #$0C
  3676 24C0 8D 92 2D			sta SETPLAYER.Y
  3677 24C3 A9 16			lda #$16
  3678 24C5 8D 91 2D			sta SETPLAYER.X
  3679 24C8 AD 46 2C			lda PLAYER2
  3680 24CB 8D 8F 2D			sta SETPLAYER.P
  3681 24CE AD 47 2C			lda PLAYER2+1
  3682 24D1 8D 90 2D			sta SETPLAYER.P+1
  3683 24D4 20 43 16			jsr SETPLAYER
  3684
  3685 				; optimize OK (levels.inc), line = 84
  3686
  3687 24D7 A9 01			lda #$01
  3688 24D9 8D 96 2D			sta SETPLAYER.ISALIVE
  3689 24DC A9 71			lda #$71
  3690 24DE 8D 95 2D			sta SETPLAYER.COLOUR
  3691 24E1 A9 02			lda #$02
  3692 24E3 8D 94 2D			sta SETPLAYER.BRAIN
  3693 24E6 8D 93 2D			sta SETPLAYER.DIR
  3694 24E9 A9 06			lda #$06
  3695 24EB 8D 92 2D			sta SETPLAYER.Y
  3696 24EE 8D 91 2D			sta SETPLAYER.X
  3697 24F1 AD 48 2C			lda PLAYER3
  3698 24F4 8D 8F 2D			sta SETPLAYER.P
  3699 24F7 AD 49 2C			lda PLAYER3+1
  3700 24FA 8D 90 2D			sta SETPLAYER.P+1
  3701 24FD 20 43 16			jsr SETPLAYER
  3702
  3703 				; optimize OK (levels.inc), line = 85
  3704
  3705 2500 A9 01			lda #$01
  3706 2502 8D 96 2D			sta SETPLAYER.ISALIVE
  3707 2505 A9 55			lda #$55
  3708 2507 8D 95 2D			sta SETPLAYER.COLOUR
  3709 250A A9 03			lda #$03
  3710 250C 8D 94 2D			sta SETPLAYER.BRAIN
  3711 250F A9 08			lda #$08
  3712 2511 8D 93 2D			sta SETPLAYER.DIR
  3713 2514 A9 12			lda #$12
  3714 2516 8D 92 2D			sta SETPLAYER.Y
  3715 2519 A9 24			lda #$24
  3716 251B 8D 91 2D			sta SETPLAYER.X
  3717 251E AD 4A 2C			lda PLAYER4
  3718 2521 8D 8F 2D			sta SETPLAYER.P
  3719 2524 AD 4B 2C			lda PLAYER4+1
  3720 2527 8D 90 2D			sta SETPLAYER.P+1
  3721 252A 20 43 16			jsr SETPLAYER
  3722
  3723 				; optimize FAIL (1, levels.inc), line = 87
  3724
  3725 252D E8				inx
  3726 252E A9 00 95 18			mva #$00 :STACKORIGIN,x
  3727 2532 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3728 2534 A9 06			lda #$06
  3729 2536 8D 7F 2C			sta CALCSCRADDR.Y
  3730 2539 A9 0A			lda #$0A
  3731 253B 8D 7E 2C			sta CALCSCRADDR.X
  3732 253E 20 00 12			jsr CALCSCRADDR
  3733 2541 B4 17			ldy :STACKORIGIN-1,x
  3734 2543 B5 18			lda :STACKORIGIN,x
  3735 2545 99 60 00			sta adr.OBSTACLES,y
  3736 2548 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3737 254A 99 61 00			sta adr.OBSTACLES+1,y
  3738 254D CA				dex
  3739 254E A9 02 95 18			mva #$02 :STACKORIGIN,x
  3740 2552 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3741 2556 A9 06			lda #$06
  3742 2558 8D 7F 2C			sta CALCSCRADDR.Y
  3743 255B A9 1E			lda #$1E
  3744 255D 8D 7E 2C			sta CALCSCRADDR.X
  3745 2560 20 00 12			jsr CALCSCRADDR
  3746 2563 B4 17			ldy :STACKORIGIN-1,x
  3747 2565 B5 18			lda :STACKORIGIN,x
  3748 2567 99 60 00			sta adr.OBSTACLES,y
  3749 256A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3750 256C 99 61 00			sta adr.OBSTACLES+1,y
  3751 256F CA				dex
  3752
  3753 				; optimize FAIL (1, levels.inc), line = 88
  3754
  3755 2570 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3756 2574 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3757 2578 A9 12			lda #$12
  3758 257A 8D 7F 2C			sta CALCSCRADDR.Y
  3759 257D A9 0A			lda #$0A
  3760 257F 8D 7E 2C			sta CALCSCRADDR.X
  3761 2582 20 00 12			jsr CALCSCRADDR
  3762 2585 B4 17			ldy :STACKORIGIN-1,x
  3763 2587 B5 18			lda :STACKORIGIN,x
  3764 2589 99 60 00			sta adr.OBSTACLES,y
  3765 258C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3766 258E 99 61 00			sta adr.OBSTACLES+1,y
  3767 2591 CA				dex
  3768 2592 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3769 2596 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3770 259A A9 12			lda #$12
  3771 259C 8D 7F 2C			sta CALCSCRADDR.Y
  3772 259F A9 1E			lda #$1E
  3773 25A1 8D 7E 2C			sta CALCSCRADDR.X
  3774 25A4 20 00 12			jsr CALCSCRADDR
  3775 25A7 B4 17			ldy :STACKORIGIN-1,x
  3776 25A9 B5 18			lda :STACKORIGIN,x
  3777 25AB 99 60 00			sta adr.OBSTACLES,y
  3778 25AE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3779 25B0 99 61 00			sta adr.OBSTACLES+1,y
  3780 25B3 CA				dex
  3781
  3782 				; optimize FAIL (1, levels.inc), line = 89
  3783
  3784 25B4 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3785 25B8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3786 25BC A9 0C			lda #$0C
  3787 25BE 8D 7F 2C			sta CALCSCRADDR.Y
  3788 25C1 A9 01			lda #$01
  3789 25C3 8D 7E 2C			sta CALCSCRADDR.X
  3790 25C6 20 00 12			jsr CALCSCRADDR
  3791 25C9 B4 17			ldy :STACKORIGIN-1,x
  3792 25CB B5 18			lda :STACKORIGIN,x
  3793 25CD 99 60 00			sta adr.OBSTACLES,y
  3794 25D0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3795 25D2 99 61 00			sta adr.OBSTACLES+1,y
  3796 25D5 CA				dex
  3797 25D6 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3798 25DA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3799 25DE A9 02			lda #$02
  3800 25E0 8D 7F 2C			sta CALCSCRADDR.Y
  3801 25E3 A9 14			lda #$14
  3802 25E5 8D 7E 2C			sta CALCSCRADDR.X
  3803 25E8 20 00 12			jsr CALCSCRADDR
  3804 25EB B4 17			ldy :STACKORIGIN-1,x
  3805 25ED B5 18			lda :STACKORIGIN,x
  3806 25EF 99 60 00			sta adr.OBSTACLES,y
  3807 25F2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3808 25F4 99 61 00			sta adr.OBSTACLES+1,y
  3809 25F7 CA				dex
  3810
  3811 				; optimize FAIL (1, levels.inc), line = 90
  3812
  3813 25F8 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3814 25FC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3815 2600 A9 16			lda #$16
  3816 2602 8D 7F 2C			sta CALCSCRADDR.Y
  3817 2605 A9 14			lda #$14
  3818 2607 8D 7E 2C			sta CALCSCRADDR.X
  3819 260A 20 00 12			jsr CALCSCRADDR
  3820 260D B4 17			ldy :STACKORIGIN-1,x
  3821 260F B5 18			lda :STACKORIGIN,x
  3822 2611 99 60 00			sta adr.OBSTACLES,y
  3823 2614 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3824 2616 99 61 00			sta adr.OBSTACLES+1,y
  3825 2619 CA				dex
  3826 261A A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3827 261E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3828 2622 A9 0C			lda #$0C
  3829 2624 8D 7F 2C			sta CALCSCRADDR.Y
  3830 2627 A9 14			lda #$14
  3831 2629 8D 7E 2C			sta CALCSCRADDR.X
  3832 262C 20 00 12			jsr CALCSCRADDR
  3833 262F B4 17			ldy :STACKORIGIN-1,x
  3834 2631 B5 18			lda :STACKORIGIN,x
  3835 2633 99 60 00			sta adr.OBSTACLES,y
  3836 2636 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3837 2638 99 61 00			sta adr.OBSTACLES+1,y
  3838 263B CA				dex
  3839 263C CA				dex
  3840 263D			@exit
  3841 					.ifdef @new
  3842 					lda <@VarData
  3843 					sta :ztmp
  3844 					lda >@VarData
  3845 					ldy #@VarDataSize-1
  3846 					jmp @FreeMem
  3847 					els
  3848 263D 60				rts						; ret
  3849 					eif
  3850 				.endl
  3851
  3852 263E			.local	SETLEVEL07					; PROCEDURE
  3853
  3854 				; optimize OK (levels.inc), line = 97
  3855
  3856 263E A9 01			lda #$01
  3857 2640 8D 96 2D			sta SETPLAYER.ISALIVE
  3858 2643 A9 62			lda #$62
  3859 2645 8D 95 2D			sta SETPLAYER.COLOUR
  3860 2648 A9 00			lda #$00
  3861 264A 8D 94 2D			sta SETPLAYER.BRAIN
  3862 264D A9 04			lda #$04
  3863 264F 8D 93 2D			sta SETPLAYER.DIR
  3864 2652 A9 0C			lda #$0C
  3865 2654 8D 92 2D			sta SETPLAYER.Y
  3866 2657 A9 12			lda #$12
  3867 2659 8D 91 2D			sta SETPLAYER.X
  3868 265C AD 44 2C			lda PLAYER1
  3869 265F 8D 8F 2D			sta SETPLAYER.P
  3870 2662 AD 45 2C			lda PLAYER1+1
  3871 2665 8D 90 2D			sta SETPLAYER.P+1
  3872 2668 20 43 16			jsr SETPLAYER
  3873
  3874 				; optimize OK (levels.inc), line = 98
  3875
  3876 266B A9 01			lda #$01
  3877 266D 8D 96 2D			sta SETPLAYER.ISALIVE
  3878 2670 A9 5D			lda #$5D
  3879 2672 8D 95 2D			sta SETPLAYER.COLOUR
  3880 2675 A9 03			lda #$03
  3881 2677 8D 94 2D			sta SETPLAYER.BRAIN
  3882 267A A9 08			lda #$08
  3883 267C 8D 93 2D			sta SETPLAYER.DIR
  3884 267F A9 17			lda #$17
  3885 2681 8D 92 2D			sta SETPLAYER.Y
  3886 2684 A9 01			lda #$01
  3887 2686 8D 91 2D			sta SETPLAYER.X
  3888 2689 AD 46 2C			lda PLAYER2
  3889 268C 8D 8F 2D			sta SETPLAYER.P
  3890 268F AD 47 2C			lda PLAYER2+1
  3891 2692 8D 90 2D			sta SETPLAYER.P+1
  3892 2695 20 43 16			jsr SETPLAYER
  3893
  3894 				; optimize OK (levels.inc), line = 99
  3895
  3896 2698 A9 01			lda #$01
  3897 269A 8D 96 2D			sta SETPLAYER.ISALIVE
  3898 269D A9 71			lda #$71
  3899 269F 8D 95 2D			sta SETPLAYER.COLOUR
  3900 26A2 A9 03			lda #$03
  3901 26A4 8D 94 2D			sta SETPLAYER.BRAIN
  3902 26A7 A9 02			lda #$02
  3903 26A9 8D 93 2D			sta SETPLAYER.DIR
  3904 26AC A9 04			lda #$04
  3905 26AE 8D 92 2D			sta SETPLAYER.Y
  3906 26B1 A9 1E			lda #$1E
  3907 26B3 8D 91 2D			sta SETPLAYER.X
  3908 26B6 AD 48 2C			lda PLAYER3
  3909 26B9 8D 8F 2D			sta SETPLAYER.P
  3910 26BC AD 49 2C			lda PLAYER3+1
  3911 26BF 8D 90 2D			sta SETPLAYER.P+1
  3912 26C2 20 43 16			jsr SETPLAYER
  3913
  3914 				; optimize OK (levels.inc), line = 100
  3915
  3916 26C5 A9 01			lda #$01
  3917 26C7 8D 96 2D			sta SETPLAYER.ISALIVE
  3918 26CA A9 55			lda #$55
  3919 26CC 8D 95 2D			sta SETPLAYER.COLOUR
  3920 26CF A9 02			lda #$02
  3921 26D1 8D 94 2D			sta SETPLAYER.BRAIN
  3922 26D4 A9 01			lda #$01
  3923 26D6 8D 93 2D			sta SETPLAYER.DIR
  3924 26D9 A9 15			lda #$15
  3925 26DB 8D 92 2D			sta SETPLAYER.Y
  3926 26DE A9 24			lda #$24
  3927 26E0 8D 91 2D			sta SETPLAYER.X
  3928 26E3 AD 4A 2C			lda PLAYER4
  3929 26E6 8D 8F 2D			sta SETPLAYER.P
  3930 26E9 AD 4B 2C			lda PLAYER4+1
  3931 26EC 8D 90 2D			sta SETPLAYER.P+1
  3932 26EF 20 43 16			jsr SETPLAYER
  3933
  3934 				; optimize FAIL (1, levels.inc), line = 102
  3935
  3936 26F2 E8				inx
  3937 26F3 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3938 26F7 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3939 26F9 A9 06			lda #$06
  3940 26FB 8D 7F 2C			sta CALCSCRADDR.Y
  3941 26FE A9 0A			lda #$0A
  3942 2700 8D 7E 2C			sta CALCSCRADDR.X
  3943 2703 20 00 12			jsr CALCSCRADDR
  3944 2706 B4 17			ldy :STACKORIGIN-1,x
  3945 2708 B5 18			lda :STACKORIGIN,x
  3946 270A 99 60 00			sta adr.OBSTACLES,y
  3947 270D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3948 270F 99 61 00			sta adr.OBSTACLES+1,y
  3949 2712 CA				dex
  3950 2713 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3951 2717 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3952 271B A9 06			lda #$06
  3953 271D 8D 7F 2C			sta CALCSCRADDR.Y
  3954 2720 A9 1E			lda #$1E
  3955 2722 8D 7E 2C			sta CALCSCRADDR.X
  3956 2725 20 00 12			jsr CALCSCRADDR
  3957 2728 B4 17			ldy :STACKORIGIN-1,x
  3958 272A B5 18			lda :STACKORIGIN,x
  3959 272C 99 60 00			sta adr.OBSTACLES,y
  3960 272F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3961 2731 99 61 00			sta adr.OBSTACLES+1,y
  3962 2734 CA				dex
  3963
  3964 				; optimize FAIL (1, levels.inc), line = 103
  3965
  3966 2735 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3967 2739 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3968 273D A9 12			lda #$12
  3969 273F 8D 7F 2C			sta CALCSCRADDR.Y
  3970 2742 A9 0A			lda #$0A
  3971 2744 8D 7E 2C			sta CALCSCRADDR.X
  3972 2747 20 00 12			jsr CALCSCRADDR
  3973 274A B4 17			ldy :STACKORIGIN-1,x
  3974 274C B5 18			lda :STACKORIGIN,x
  3975 274E 99 60 00			sta adr.OBSTACLES,y
  3976 2751 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3977 2753 99 61 00			sta adr.OBSTACLES+1,y
  3978 2756 CA				dex
  3979 2757 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3980 275B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3981 275F A9 12			lda #$12
  3982 2761 8D 7F 2C			sta CALCSCRADDR.Y
  3983 2764 A9 1E			lda #$1E
  3984 2766 8D 7E 2C			sta CALCSCRADDR.X
  3985 2769 20 00 12			jsr CALCSCRADDR
  3986 276C B4 17			ldy :STACKORIGIN-1,x
  3987 276E B5 18			lda :STACKORIGIN,x
  3988 2770 99 60 00			sta adr.OBSTACLES,y
  3989 2773 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3990 2775 99 61 00			sta adr.OBSTACLES+1,y
  3991 2778 CA				dex
  3992
  3993 				; optimize FAIL (1, levels.inc), line = 104
  3994
  3995 2779 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3996 277D A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3997 2781 A9 0C			lda #$0C
  3998 2783 8D 7F 2C			sta CALCSCRADDR.Y
  3999 2786 A9 01			lda #$01
  4000 2788 8D 7E 2C			sta CALCSCRADDR.X
  4001 278B 20 00 12			jsr CALCSCRADDR
  4002 278E B4 17			ldy :STACKORIGIN-1,x
  4003 2790 B5 18			lda :STACKORIGIN,x
  4004 2792 99 60 00			sta adr.OBSTACLES,y
  4005 2795 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4006 2797 99 61 00			sta adr.OBSTACLES+1,y
  4007 279A CA				dex
  4008 279B A9 0A 95 18			mva #$0A :STACKORIGIN,x
  4009 279F A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4010 27A3 A9 02			lda #$02
  4011 27A5 8D 7F 2C			sta CALCSCRADDR.Y
  4012 27A8 A9 14			lda #$14
  4013 27AA 8D 7E 2C			sta CALCSCRADDR.X
  4014 27AD 20 00 12			jsr CALCSCRADDR
  4015 27B0 B4 17			ldy :STACKORIGIN-1,x
  4016 27B2 B5 18			lda :STACKORIGIN,x
  4017 27B4 99 60 00			sta adr.OBSTACLES,y
  4018 27B7 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4019 27B9 99 61 00			sta adr.OBSTACLES+1,y
  4020 27BC CA				dex
  4021
  4022 				; optimize FAIL (1, levels.inc), line = 105
  4023
  4024 27BD A9 0C 95 18			mva #$0C :STACKORIGIN,x
  4025 27C1 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4026 27C5 A9 16			lda #$16
  4027 27C7 8D 7F 2C			sta CALCSCRADDR.Y
  4028 27CA A9 14			lda #$14
  4029 27CC 8D 7E 2C			sta CALCSCRADDR.X
  4030 27CF 20 00 12			jsr CALCSCRADDR
  4031 27D2 B4 17			ldy :STACKORIGIN-1,x
  4032 27D4 B5 18			lda :STACKORIGIN,x
  4033 27D6 99 60 00			sta adr.OBSTACLES,y
  4034 27D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4035 27DB 99 61 00			sta adr.OBSTACLES+1,y
  4036 27DE CA				dex
  4037 27DF A9 0E 95 18			mva #$0E :STACKORIGIN,x
  4038 27E3 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4039 27E7 A9 0C			lda #$0C
  4040 27E9 8D 7F 2C			sta CALCSCRADDR.Y
  4041 27EC A9 14			lda #$14
  4042 27EE 8D 7E 2C			sta CALCSCRADDR.X
  4043 27F1 20 00 12			jsr CALCSCRADDR
  4044 27F4 B4 17			ldy :STACKORIGIN-1,x
  4045 27F6 B5 18			lda :STACKORIGIN,x
  4046 27F8 99 60 00			sta adr.OBSTACLES,y
  4047 27FB B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4048 27FD 99 61 00			sta adr.OBSTACLES+1,y
  4049 2800 CA				dex
  4050 2801 CA				dex
  4051 2802			@exit
  4052 					.ifdef @new
  4053 					lda <@VarData
  4054 					sta :ztmp
  4055 					lda >@VarData
  4056 					ldy #@VarDataSize-1
  4057 					jmp @FreeMem
  4058 					els
  4059 2802 60				rts						; ret
  4060 					eif
  4061 				.endl
  4062
  4063 2803			.local	SETLEVEL08					; PROCEDURE
  4064
  4065 				; optimize OK (levels.inc), line = 112
  4066
  4067 2803 A9 01			lda #$01
  4068 2805 8D 96 2D			sta SETPLAYER.ISALIVE
  4069 2808 A9 62			lda #$62
  4070 280A 8D 95 2D			sta SETPLAYER.COLOUR
  4071 280D A9 00			lda #$00
  4072 280F 8D 94 2D			sta SETPLAYER.BRAIN
  4073 2812 A9 08			lda #$08
  4074 2814 8D 93 2D			sta SETPLAYER.DIR
  4075 2817 A9 17			lda #$17
  4076 2819 8D 92 2D			sta SETPLAYER.Y
  4077 281C A9 01			lda #$01
  4078 281E 8D 91 2D			sta SETPLAYER.X
  4079 2821 AD 44 2C			lda PLAYER1
  4080 2824 8D 8F 2D			sta SETPLAYER.P
  4081 2827 AD 45 2C			lda PLAYER1+1
  4082 282A 8D 90 2D			sta SETPLAYER.P+1
  4083 282D 20 43 16			jsr SETPLAYER
  4084
  4085 				; optimize OK (levels.inc), line = 113
  4086
  4087 2830 A9 01			lda #$01
  4088 2832 8D 96 2D			sta SETPLAYER.ISALIVE
  4089 2835 A9 5D			lda #$5D
  4090 2837 8D 95 2D			sta SETPLAYER.COLOUR
  4091 283A A9 03			lda #$03
  4092 283C 8D 94 2D			sta SETPLAYER.BRAIN
  4093 283F A9 04			lda #$04
  4094 2841 8D 93 2D			sta SETPLAYER.DIR
  4095 2844 A9 17			lda #$17
  4096 2846 8D 92 2D			sta SETPLAYER.Y
  4097 2849 A9 26			lda #$26
  4098 284B 8D 91 2D			sta SETPLAYER.X
  4099 284E AD 46 2C			lda PLAYER2
  4100 2851 8D 8F 2D			sta SETPLAYER.P
  4101 2854 AD 47 2C			lda PLAYER2+1
  4102 2857 8D 90 2D			sta SETPLAYER.P+1
  4103 285A 20 43 16			jsr SETPLAYER
  4104
  4105 				; optimize OK (levels.inc), line = 114
  4106
  4107 285D A9 01			lda #$01
  4108 285F 8D 96 2D			sta SETPLAYER.ISALIVE
  4109 2862 A9 71			lda #$71
  4110 2864 8D 95 2D			sta SETPLAYER.COLOUR
  4111 2867 A9 02			lda #$02
  4112 2869 8D 94 2D			sta SETPLAYER.BRAIN
  4113 286C 8D 93 2D			sta SETPLAYER.DIR
  4114 286F A9 01			lda #$01
  4115 2871 8D 92 2D			sta SETPLAYER.Y
  4116 2874 A9 0A			lda #$0A
  4117 2876 8D 91 2D			sta SETPLAYER.X
  4118 2879 AD 48 2C			lda PLAYER3
  4119 287C 8D 8F 2D			sta SETPLAYER.P
  4120 287F AD 49 2C			lda PLAYER3+1
  4121 2882 8D 90 2D			sta SETPLAYER.P+1
  4122 2885 20 43 16			jsr SETPLAYER
  4123
  4124 				; optimize OK (levels.inc), line = 115
  4125
  4126 2888 A9 01			lda #$01
  4127 288A 8D 96 2D			sta SETPLAYER.ISALIVE
  4128 288D A9 55			lda #$55
  4129 288F 8D 95 2D			sta SETPLAYER.COLOUR
  4130 2892 A9 04			lda #$04
  4131 2894 8D 94 2D			sta SETPLAYER.BRAIN
  4132 2897 8D 93 2D			sta SETPLAYER.DIR
  4133 289A A9 01			lda #$01
  4134 289C 8D 92 2D			sta SETPLAYER.Y
  4135 289F A9 26			lda #$26
  4136 28A1 8D 91 2D			sta SETPLAYER.X
  4137 28A4 AD 4A 2C			lda PLAYER4
  4138 28A7 8D 8F 2D			sta SETPLAYER.P
  4139 28AA AD 4B 2C			lda PLAYER4+1
  4140 28AD 8D 90 2D			sta SETPLAYER.P+1
  4141 28B0 20 43 16			jsr SETPLAYER
  4142
  4143 				; optimize FAIL (1, levels.inc), line = 117
  4144
  4145 28B3 E8				inx
  4146 28B4 A9 00 95 18			mva #$00 :STACKORIGIN,x
  4147 28B8 95 28			sta :STACKORIGIN+STACKWIDTH,x
  4148 28BA A9 06			lda #$06
  4149 28BC 8D 7F 2C			sta CALCSCRADDR.Y
  4150 28BF A9 0A			lda #$0A
  4151 28C1 8D 7E 2C			sta CALCSCRADDR.X
  4152 28C4 20 00 12			jsr CALCSCRADDR
  4153 28C7 B4 17			ldy :STACKORIGIN-1,x
  4154 28C9 B5 18			lda :STACKORIGIN,x
  4155 28CB 99 60 00			sta adr.OBSTACLES,y
  4156 28CE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4157 28D0 99 61 00			sta adr.OBSTACLES+1,y
  4158 28D3 CA				dex
  4159 28D4 A9 02 95 18			mva #$02 :STACKORIGIN,x
  4160 28D8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4161 28DC A9 06			lda #$06
  4162 28DE 8D 7F 2C			sta CALCSCRADDR.Y
  4163 28E1 A9 1E			lda #$1E
  4164 28E3 8D 7E 2C			sta CALCSCRADDR.X
  4165 28E6 20 00 12			jsr CALCSCRADDR
  4166 28E9 B4 17			ldy :STACKORIGIN-1,x
  4167 28EB B5 18			lda :STACKORIGIN,x
  4168 28ED 99 60 00			sta adr.OBSTACLES,y
  4169 28F0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4170 28F2 99 61 00			sta adr.OBSTACLES+1,y
  4171 28F5 CA				dex
  4172
  4173 				; optimize FAIL (1, levels.inc), line = 118
  4174
  4175 28F6 A9 04 95 18			mva #$04 :STACKORIGIN,x
  4176 28FA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4177 28FE A9 12			lda #$12
  4178 2900 8D 7F 2C			sta CALCSCRADDR.Y
  4179 2903 A9 0A			lda #$0A
  4180 2905 8D 7E 2C			sta CALCSCRADDR.X
  4181 2908 20 00 12			jsr CALCSCRADDR
  4182 290B B4 17			ldy :STACKORIGIN-1,x
  4183 290D B5 18			lda :STACKORIGIN,x
  4184 290F 99 60 00			sta adr.OBSTACLES,y
  4185 2912 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4186 2914 99 61 00			sta adr.OBSTACLES+1,y
  4187 2917 CA				dex
  4188 2918 A9 06 95 18			mva #$06 :STACKORIGIN,x
  4189 291C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4190 2920 A9 12			lda #$12
  4191 2922 8D 7F 2C			sta CALCSCRADDR.Y
  4192 2925 A9 1E			lda #$1E
  4193 2927 8D 7E 2C			sta CALCSCRADDR.X
  4194 292A 20 00 12			jsr CALCSCRADDR
  4195 292D B4 17			ldy :STACKORIGIN-1,x
  4196 292F B5 18			lda :STACKORIGIN,x
  4197 2931 99 60 00			sta adr.OBSTACLES,y
  4198 2934 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4199 2936 99 61 00			sta adr.OBSTACLES+1,y
  4200 2939 CA				dex
  4201
  4202 				; optimize FAIL (1, levels.inc), line = 119
  4203
  4204 293A A9 08 95 18			mva #$08 :STACKORIGIN,x
  4205 293E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4206 2942 A9 0C			lda #$0C
  4207 2944 8D 7F 2C			sta CALCSCRADDR.Y
  4208 2947 A9 01			lda #$01
  4209 2949 8D 7E 2C			sta CALCSCRADDR.X
  4210 294C 20 00 12			jsr CALCSCRADDR
  4211 294F B4 17			ldy :STACKORIGIN-1,x
  4212 2951 B5 18			lda :STACKORIGIN,x
  4213 2953 99 60 00			sta adr.OBSTACLES,y
  4214 2956 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4215 2958 99 61 00			sta adr.OBSTACLES+1,y
  4216 295B CA				dex
  4217 295C A9 0A 95 18			mva #$0A :STACKORIGIN,x
  4218 2960 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4219 2964 A9 02			lda #$02
  4220 2966 8D 7F 2C			sta CALCSCRADDR.Y
  4221 2969 A9 14			lda #$14
  4222 296B 8D 7E 2C			sta CALCSCRADDR.X
  4223 296E 20 00 12			jsr CALCSCRADDR
  4224 2971 B4 17			ldy :STACKORIGIN-1,x
  4225 2973 B5 18			lda :STACKORIGIN,x
  4226 2975 99 60 00			sta adr.OBSTACLES,y
  4227 2978 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4228 297A 99 61 00			sta adr.OBSTACLES+1,y
  4229 297D CA				dex
  4230
  4231 				; optimize FAIL (1, levels.inc), line = 120
  4232
  4233 297E A9 0C 95 18			mva #$0C :STACKORIGIN,x
  4234 2982 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4235 2986 A9 16			lda #$16
  4236 2988 8D 7F 2C			sta CALCSCRADDR.Y
  4237 298B A9 14			lda #$14
  4238 298D 8D 7E 2C			sta CALCSCRADDR.X
  4239 2990 20 00 12			jsr CALCSCRADDR
  4240 2993 B4 17			ldy :STACKORIGIN-1,x
  4241 2995 B5 18			lda :STACKORIGIN,x
  4242 2997 99 60 00			sta adr.OBSTACLES,y
  4243 299A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4244 299C 99 61 00			sta adr.OBSTACLES+1,y
  4245 299F CA				dex
  4246 29A0 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  4247 29A4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4248 29A8 A9 0C			lda #$0C
  4249 29AA 8D 7F 2C			sta CALCSCRADDR.Y
  4250 29AD A9 14			lda #$14
  4251 29AF 8D 7E 2C			sta CALCSCRADDR.X
  4252 29B2 20 00 12			jsr CALCSCRADDR
  4253 29B5 B4 17			ldy :STACKORIGIN-1,x
  4254 29B7 B5 18			lda :STACKORIGIN,x
  4255 29B9 99 60 00			sta adr.OBSTACLES,y
  4256 29BC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4257 29BE 99 61 00			sta adr.OBSTACLES+1,y
  4258 29C1 CA				dex
  4259 29C2 CA				dex
  4260 29C3			@exit
  4261 					.ifdef @new
  4262 					lda <@VarData
  4263 					sta :ztmp
  4264 					lda >@VarData
  4265 					ldy #@VarDataSize-1
  4266 					jmp @FreeMem
  4267 					els
  4268 29C3 60				rts						; ret
  4269 					eif
  4270 				.endl
  4271
  4272 29C4			.local	INITPLAYFIELD					; PROCEDURE
  4273
  4274 				; optimize OK (init.inc), line = 5
  4275
  4276 29C4 A9 1F			lda #$1F
  4277 29C6 8D 15 FF			sta BACKGROUND
  4278 29C9 A9 00			lda #$00
  4279 29CB 8D 19 FF			sta BOREDER
  4280
  4281 				; optimize OK (init.inc), line = 6
  4282
  4283 29CE A9 20			lda #$20
  4284 29D0 85 04			sta SYSTEM.FILLCHAR_006D.VALUE
  4285 29D2 A9 C0			lda #$C0
  4286 29D4 85 0C			sta SYSTEM.FILLCHAR_006D.COUNT
  4287 29D6 A9 03			lda #$03
  4288 29D8 85 0D			sta SYSTEM.FILLCHAR_006D.COUNT+1
  4289 29DA A9 00			lda #$00
  4290 29DC 85 08			sta SYSTEM.FILLCHAR_006D.A
  4291 29DE A9 0C			lda #$0C
  4292 29E0 85 09			sta SYSTEM.FILLCHAR_006D.A+1
  4293 29E2 20 9F 11			jsr SYSTEM.FILLCHAR_006D
  4294
  4295 				; optimize OK (init.inc), line = 8
  4296
  4297 29E5 A9 27			lda #$27
  4298 29E7 85 58			sta T0B
  4299
  4300 29E9			l_0F6C
  4301 				; --- ForToDoCondition
  4302
  4303 				; optimize OK (init.inc), line = 9
  4304
  4305 29E9 A4 58			ldy T0B
  4306 29EB A9 A0			lda #$A0
  4307 29ED 99 00 0C			sta $0C00,y
  4308
  4309 				; optimize OK (init.inc), line = 10
  4310
  4311 29F0 99 C0 0F			sta $0FC0,y
  4312
  4313 				; optimize OK (init.inc), line = 11
  4314
  4315 29F3 A9 41			lda #$41
  4316 29F5 99 00 08			sta $0800,y
  4317
  4318 				; optimize OK (init.inc), line = 12
  4319
  4320 29F8 99 C0 0B			sta $0BC0,y
  4321
  4322 				; --- ForToDoEpilog
  4323 29FB C6 58			dec T0B
  4324 29FD 10 EA			jpl l_0F6C
  4325 29FF			l_0F7A
  4326
  4327 				; optimize OK (init.inc), line = 15
  4328
  4329 29FF A9 18			lda #$18
  4330 2A01 85 58			sta T0B
  4331
  4332 2A03			l_0FAC
  4333 				; --- ForToDoCondition
  4334 2A03 A5 58			lda T0B
  4335 2A05 C9 01			cmp #$01
  4336 2A07 90 3A			jcc l_0FBA
  4337
  4338 				; optimize OK (init.inc), line = 16
  4339
  4340 2A09 0A				asl @
  4341 2A0A A8				tay
  4342 2A0B A9 FF			lda #$FF
  4343 2A0D 18 79 25 10			add adr.MUL40,y
  4344 2A11 85 12			sta :bp2
  4345 2A13 A9 0B			lda #$0B
  4346 2A15 79 26 10			adc adr.MUL40+1,y
  4347 2A18 85 13			sta :bp2+1
  4348 2A1A A0 00			ldy #$00
  4349 2A1C A9 A0			lda #$A0
  4350 2A1E 91 12			sta (:bp2),y
  4351 2A20 C8				iny
  4352 2A21 91 12			sta (:bp2),y
  4353
  4354 				; optimize OK (init.inc), line = 17
  4355
  4356 2A23 A5 58			lda T0B
  4357 2A25 0A				asl @
  4358 2A26 A8				tay
  4359 2A27 A9 FF			lda #$FF
  4360 2A29 18 79 25 10			add adr.MUL40,y
  4361 2A2D 85 12			sta :bp2
  4362 2A2F A9 07			lda #$07
  4363 2A31 79 26 10			adc adr.MUL40+1,y
  4364 2A34 85 13			sta :bp2+1
  4365 2A36 A0 00			ldy #$00
  4366 2A38 A9 41			lda #$41
  4367 2A3A 91 12			sta (:bp2),y
  4368 2A3C C8				iny
  4369 2A3D 91 12			sta (:bp2),y
  4370
  4371 				; --- ForToDoEpilog
  4372 2A3F C6 58			dec T0B
  4373 2A41 10 C0			jpl l_0FAC
  4374 2A43			l_0FBA
  4375
  4376 				; optimize OK (init.inc), line = 20
  4377
  4378 2A43 A9 07			lda #$07
  4379 2A45 85 59			sta I0B
  4380
  4381 2A47			l_0FDE
  4382 				; --- ForToDoCondition
  4383 2A47 A5 59			lda I0B
  4384 2A49 0A				asl @
  4385 2A4A A8				tay
  4386 2A4B A9 5E			lda #$5E
  4387 2A4D 99 60 00			sta adr.OBSTACLES,y
  4388 2A50 A9 00			lda #$00
  4389 2A52 99 61 00			sta adr.OBSTACLES+1,y
  4390
  4391 				; --- ForToDoEpilog
  4392 2A55 C6 59			dec I0B
  4393 2A57 10 EE			jpl l_0FDE
  4394 2A59			l_0FEC
  4395
  4396 				; ------------------------------------------------------------
  4397
  4398 = 0000			@FORTMP_0F69	= $00
  4399 = 0001			@FORTMP_0FA9	= $01
  4400 = 0000			@FORTMP_0FDB	= $00
  4401 2A59			@exit
  4402 					.ifdef @new
  4403 					lda <@VarData
  4404 					sta :ztmp
  4405 					lda >@VarData
  4406 					ldy #@VarDataSize-1
  4407 					jmp @FreeMem
  4408 					els
  4409 2A59 60				rts						; ret
  4410 					eif
  4411 				.endl
  4412
  4413 2A5A			.local	INITPLAYERS					; PROCEDURE
  4414
  4415 				; optimize OK (init.inc), line = 27
  4416
  4417 2A5A A9 FF			lda #$FF
  4418 2A5C 85 5A			sta ALIVE
  4419
  4420 				; optimize OK (init.inc), line = 28
  4421
  4422 2A5E A9 00			lda #$00
  4423 2A60 8D 65 2C			sta PLAYER1.ISALIVE
  4424 2A63 8D 6D 2C			sta PLAYER2.ISALIVE
  4425
  4426 				; optimize OK (init.inc), line = 29
  4427
  4428 2A66 8D 75 2C			sta PLAYER3.ISALIVE
  4429 2A69 8D 7D 2C			sta PLAYER4.ISALIVE
  4430 2A6C			@exit
  4431 					.ifdef @new
  4432 					lda <@VarData
  4433 					sta :ztmp
  4434 					lda >@VarData
  4435 					ldy #@VarDataSize-1
  4436 					jmp @FreeMem
  4437 					els
  4438 2A6C 60				rts						; ret
  4439 					eif
  4440 				.endl
  4441
  4442 2A6D			.local	INITSCORE					; PROCEDURE
  4443
  4444 				; optimize OK (init.inc), line = 36
  4445
  4446 2A6D A9 30			lda #$30
  4447 2A6F 8D 64 2C			sta PLAYER1.SCORE
  4448 2A72 8D 6C 2C			sta PLAYER2.SCORE
  4449
  4450 				; optimize OK (init.inc), line = 37
  4451
  4452 2A75 8D 74 2C			sta PLAYER3.SCORE
  4453 2A78 8D 7C 2C			sta PLAYER4.SCORE
  4454 2A7B			@exit
  4455 					.ifdef @new
  4456 					lda <@VarData
  4457 					sta :ztmp
  4458 					lda >@VarData
  4459 					ldy #@VarDataSize-1
  4460 					jmp @FreeMem
  4461 					els
  4462 2A7B 60				rts						; ret
  4463 					eif
  4464 				.endl
  4465
  4466 2A7C			.local	INITARENA					; PROCEDURE
  4467
  4468 				; optimize FAIL ('INITPLAYFIELD', init.inc), line = 44
  4469
  4470 2A7C 20 C4 29			jsr INITPLAYFIELD
  4471 2A7F 20 5A 2A			jsr INITPLAYERS
  4472
  4473 				; optimize OK (init.inc), line = 46
  4474
  4475 2A82 AD 5C 2C			lda LEVEL
  4476 2A85 8D A2 30			sta @CASETMP_0009
  4477 2A88 C9 00			cmp #$00
  4478 2A8A D0 06			jne l_1035
  4479 2A8C			@
  4480
  4481 				; optimize FAIL ('SETLEVEL00', init.inc), line = 47
  4482
  4483 2A8C 20 B3 1C			jsr SETLEVEL00
  4484 2A8F 4C DF 2A			jmp a_0009
  4485 2A92			l_1035
  4486 2A92 C9 01			cmp #$01
  4487 2A94 D0 06			jne l_103F
  4488 2A96			@
  4489
  4490 				; optimize FAIL ('SETLEVEL01', init.inc), line = 48
  4491
  4492 2A96 20 DA 1D			jsr SETLEVEL01
  4493 2A99 4C DF 2A			jmp a_0009
  4494 2A9C			l_103F
  4495 2A9C C9 02			cmp #$02
  4496 2A9E D0 06			jne l_1049
  4497 2AA0			@
  4498
  4499 				; optimize FAIL ('SETLEVEL02', init.inc), line = 49
  4500
  4501 2AA0 20 01 1F			jsr SETLEVEL02
  4502 2AA3 4C DF 2A			jmp a_0009
  4503 2AA6			l_1049
  4504 2AA6 C9 03			cmp #$03
  4505 2AA8 D0 06			jne l_1053
  4506 2AAA			@
  4507
  4508 				; optimize FAIL ('SETLEVEL03', init.inc), line = 50
  4509
  4510 2AAA 20 28 20			jsr SETLEVEL03
  4511 2AAD 4C DF 2A			jmp a_0009
  4512 2AB0			l_1053
  4513 2AB0 C9 04			cmp #$04
  4514 2AB2 D0 06			jne l_105D
  4515 2AB4			@
  4516
  4517 				; optimize FAIL ('SETLEVEL04', init.inc), line = 51
  4518
  4519 2AB4 20 71 21			jsr SETLEVEL04
  4520 2AB7 4C DF 2A			jmp a_0009
  4521 2ABA			l_105D
  4522 2ABA C9 05			cmp #$05
  4523 2ABC D0 06			jne l_1067
  4524 2ABE			@
  4525
  4526 				; optimize FAIL ('SETLEVEL05', init.inc), line = 52
  4527
  4528 2ABE 20 DC 22			jsr SETLEVEL05
  4529 2AC1 4C DF 2A			jmp a_0009
  4530 2AC4			l_1067
  4531 2AC4 C9 06			cmp #$06
  4532 2AC6 D0 06			jne l_1071
  4533 2AC8			@
  4534
  4535 				; optimize FAIL ('SETLEVEL06', init.inc), line = 53
  4536
  4537 2AC8 20 7D 24			jsr SETLEVEL06
  4538 2ACB 4C DF 2A			jmp a_0009
  4539 2ACE			l_1071
  4540 2ACE C9 07			cmp #$07
  4541 2AD0 D0 06			jne l_107B
  4542 2AD2			@
  4543
  4544 				; optimize FAIL ('SETLEVEL07', init.inc), line = 54
  4545
  4546 2AD2 20 3E 26			jsr SETLEVEL07
  4547 2AD5 4C DF 2A			jmp a_0009
  4548 2AD8			l_107B
  4549 2AD8 C9 08			cmp #$08
  4550 2ADA D0 03			jne l_1085
  4551 2ADC			@
  4552
  4553 				; optimize FAIL ('SETLEVEL08', init.inc), line = 55
  4554
  4555 2ADC 20 03 28			jsr SETLEVEL08
  4556 2ADF			l_1085
  4557 2ADF			a_0009
  4558
  4559 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 58
  4560
  4561 2ADF 20 48 14			jsr SAVEOBSTACLES
  4562 2AE2 20 13 14			jsr ANIMATEOBSTACLES
  4563 2AE5 20 EE 12			jsr SHOWSCORE
  4564
  4565 				; ------------------------------------------------------------
  4566
  4567 = 30A2			@CASETMP_0009	= DATAORIGIN+$0456
  4568
  4569 = 30A2			@VarData	= @CASETMP_0009
  4570 = 0001			@VarDataSize	= 1
  4571
  4572 2AE8			@exit
  4573 					.ifdef @new
  4574 					lda <@VarData
  4575 					sta :ztmp
  4576 					lda >@VarData
  4577 					ldy #@VarDataSize-1
  4578 					jmp @FreeMem
  4579 					els
  4580 2AE8 60				rts						; ret
  4581 					eif
  4582 				.endl
  4583
  4584 2AE9			.local	INITFONTS					; PROCEDURE
  4585
  4586 				; optimize OK (init.inc), line = 73
  4587
  4588 2AE9 A9 00			lda #$00
  4589 2AEB 85 04			sta SYSTEM.MOVE_006E.COUNT
  4590 2AED A9 04			lda #$04
  4591 2AEF 85 05			sta SYSTEM.MOVE_006E.COUNT+1
  4592 2AF1 A9 00			lda #$00
  4593 2AF3 85 0C			sta SYSTEM.MOVE_006E.DEST
  4594 2AF5 A9 60			lda #$60
  4595 2AF7 85 0D			sta SYSTEM.MOVE_006E.DEST+1
  4596 2AF9 A9 00			lda #$00
  4597 2AFB 85 08			sta SYSTEM.MOVE_006E.SOURCE
  4598 2AFD A9 D0			lda #$D0
  4599 2AFF 85 09			sta SYSTEM.MOVE_006E.SOURCE+1
  4600 2B01 20 A3 11			jsr SYSTEM.MOVE_006E
  4601
  4602 				; optimize OK (init.inc), line = 74
  4603
  4604 2B04 AD 31 2B			lda FONTS
  4605 2B07 85 12			sta :bp2
  4606 2B09 AD 32 2B			lda FONTS+1
  4607 2B0C 85 13			sta :bp2+1
  4608 2B0E A0 2F			ldy #$2F
  4609 2B10 B1 12 99 80 62 88 + 	mva:rpl (:bp2),y $6280,y-
  4610
  4611 				; optimize OK (init.inc), line = 77
  4612
  4613 2B18 AD 12 FF			lda RAMROMSEL
  4614 2B1B 29 FB			and #$FB
  4615 2B1D 8D 12 FF			sta RAMROMSEL
  4616
  4617 				; optimize OK (init.inc), line = 80
  4618
  4619 2B20 AD 13 FF			lda CHBAS
  4620 2B23 29 03			and #$03
  4621 2B25 85 21			sta :STACKORIGIN+9
  4622 2B27 A9 18			lda #$18
  4623 2B29 0A				asl @
  4624 2B2A 0A				asl @
  4625 2B2B 05 21			ora :STACKORIGIN+9
  4626 2B2D 8D 13 FF			sta CHBAS
  4627
  4628 				; ------------------------------------------------------------
  4629
  4630 = 30A3			adr.FONTS	= [DATAORIGIN+$0457] .array [48]
  4631 2B30			.var FONTS	= adr.FONTS .word
  4632
  4633 = 2B31			@VarData	= FONTS
  4634 = 0030			@VarDataSize	= 48
  4635
  4636 2B30			@exit
  4637 					.ifdef @new
  4638 					lda <@VarData
  4639 					sta :ztmp
  4640 					lda >@VarData
  4641 					ldy #@VarDataSize-1
  4642 					jmp @FreeMem
  4643 					els
  4644 2B30 60				rts						; ret
  4645 					eif
  4646 = 2B31 A3 30		FONTS
  4646 				.endl
  4647
  4648 2B33			.local	PLAYERMOVE					; PROCEDURE
  4649
  4650 				; optimize OK (main.pas), line = 15
  4651
  4652 2B33 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  4653 2B3D A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4654 2B3F B1 12			lda (:bp2),y
  4655 2B41 F0 50			jeq l_10CF
  4656
  4657 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 17
  4658
  4659 2B43 20 88 13			jsr CHECKAVAILDIR
  4660
  4661 				; optimize OK (main.pas), line = 18
  4662
  4663 2B46 A5 5C			lda AVAILDIR
  4664 2B48 D0 06			jne l_10E3
  4665
  4666 				; optimize FAIL ('PLAYERBUSTED', main.pas), line = 19
  4667
  4668 2B4A 20 FC 15			jsr PLAYERBUSTED
  4669 2B4D 4C 93 2B			jmp l_10EE
  4670 2B50			l_10E3
  4671
  4672 				; optimize OK (main.pas), line = 21
  4673
  4674 2B50 AC 3E 2C 84 12 AC + 	mwy PLY :bp2
  4675 2B5A A0 05			ldy #PLY.BRAIN-DATAORIGIN
  4676 2B5C B1 12			lda (:bp2),y
  4677 2B5E 8D D3 30			sta @CASETMP_000A
  4678 2B61 C9 00			cmp #$00
  4679 2B63 D0 06			jne l_10F9
  4680 2B65			@
  4681
  4682 				; optimize FAIL ('HUMAN', main.pas), line = 22
  4683
  4684 2B65 20 21 18			jsr HUMAN
  4685 2B68 4C 90 2B			jmp a_000A
  4686 2B6B			l_10F9
  4687 2B6B C9 01			cmp #$01
  4688 2B6D D0 06			jne l_1103
  4689 2B6F			@
  4690
  4691 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 23
  4692
  4693 2B6F 20 C3 18			jsr AISTRAIGHT
  4694 2B72 4C 90 2B			jmp a_000A
  4695 2B75			l_1103
  4696 2B75 C9 02			cmp #$02
  4697 2B77 D0 06			jne l_110D
  4698 2B79			@
  4699
  4700 				; optimize FAIL ('AISAPPER', main.pas), line = 24
  4701
  4702 2B79 20 40 19			jsr AISAPPER
  4703 2B7C 4C 90 2B			jmp a_000A
  4704 2B7F			l_110D
  4705 2B7F C9 03			cmp #$03
  4706 2B81 D0 06			jne l_1117
  4707 2B83			@
  4708
  4709 				; optimize FAIL ('AIBULLY', main.pas), line = 25
  4710
  4711 2B83 20 90 1B			jsr AIBULLY
  4712 2B86 4C 90 2B			jmp a_000A
  4713 2B89			l_1117
  4714 2B89 C9 04			cmp #$04
  4715 2B8B D0 03			jne l_1121
  4716 2B8D			@
  4717
  4718 				; optimize FAIL ('AIMIRROR', main.pas), line = 26
  4719
  4720 2B8D 20 5E 1C			jsr AIMIRROR
  4721 2B90			l_1121
  4722 2B90			a_000A
  4723
  4724 				; optimize FAIL ('DRAWPLAYER', main.pas), line = 29
  4725
  4726 2B90 20 8C 14			jsr DRAWPLAYER
  4727 2B93			l_10EE
  4728 2B93			l_10CF
  4729
  4730 				; ------------------------------------------------------------
  4731
  4732 = 30D3			@CASETMP_000A	= DATAORIGIN+$0487
  4733
  4734 = 30D3			@VarData	= @CASETMP_000A
  4735 = 0001			@VarDataSize	= 1
  4736
  4737 2B93			@exit
  4738 					.ifdef @new
  4739 					lda <@VarData
  4740 					sta :ztmp
  4741 					lda >@VarData
  4742 					ldy #@VarDataSize-1
  4743 					jmp @FreeMem
  4744 					els
  4745 2B93 60				rts						; ret
  4746 					eif
  4747 				.endl
  4748
  4749 2B94			.local	MAINLOOP					; PROCEDURE
  4750
  4751 				; optimize FAIL ('INITARENA', main.pas), line = 39
  4752
  4753 2B94 20 7C 2A			jsr INITARENA
  4754 2B97 20 EA 16			jsr STARTSCREEN
  4755
  4756 				; --- RepeatUntilProlog
  4757 2B9A			l_1135
  4758
  4759 				; optimize FAIL ('SYSTEM.PAUSE_0084', main.pas), line = 42
  4760
  4761 2B9A 20 AB 11			jsr SYSTEM.PAUSE_0084
  4762 2B9D AD 44 2C			lda PLAYER1
  4763 2BA0 8D 3E 2C			sta PLY
  4764 2BA3 AD 45 2C			lda PLAYER1+1
  4765 2BA6 8D 3F 2C			sta PLY+1
  4766 2BA9 20 33 2B			jsr PLAYERMOVE
  4767
  4768 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 44
  4769
  4770 2BAC 20 13 14			jsr ANIMATEOBSTACLES
  4771
  4772 				; optimize OK (main.pas), line = 46
  4773
  4774 2BAF A9 02			lda #$02
  4775 2BB1 8D 58 2C			sta SYSTEM.PAUSE_0085.N
  4776 2BB4 A9 00			lda #$00
  4777 2BB6 8D 59 2C			sta SYSTEM.PAUSE_0085.N+1
  4778 2BB9 20 B2 11			jsr SYSTEM.PAUSE_0085
  4779
  4780 				; optimize OK (main.pas), line = 47
  4781
  4782 2BBC AD 46 2C			lda PLAYER2
  4783 2BBF 8D 3E 2C			sta PLY
  4784 2BC2 AD 47 2C			lda PLAYER2+1
  4785 2BC5 8D 3F 2C			sta PLY+1
  4786 2BC8 20 33 2B			jsr PLAYERMOVE
  4787
  4788 				; optimize OK (main.pas), line = 48
  4789
  4790 2BCB AD 48 2C			lda PLAYER3
  4791 2BCE 8D 3E 2C			sta PLY
  4792 2BD1 AD 49 2C			lda PLAYER3+1
  4793 2BD4 8D 3F 2C			sta PLY+1
  4794 2BD7 20 33 2B			jsr PLAYERMOVE
  4795
  4796 				; optimize OK (main.pas), line = 49
  4797
  4798 2BDA AD 4A 2C			lda PLAYER4
  4799 2BDD 8D 3E 2C			sta PLY
  4800 2BE0 AD 4B 2C			lda PLAYER4+1
  4801 2BE3 8D 3F 2C			sta PLY+1
  4802 2BE6 20 33 2B			jsr PLAYERMOVE
  4803
  4804 				; optimize FAIL ('ISONELEFT', main.pas), line = 50
  4805
  4806 2BE9 20 02 18			jsr ISONELEFT
  4807 2BEC CA				dex
  4808 2BED B5 19			lda :STACKORIGIN+1,x
  4809 2BEF F0 A9			jeq l_1135
  4810
  4811 				; optimize FAIL ('UPDATESCORE', main.pas), line = 52
  4812
  4813 2BF1 20 67 13			jsr UPDATESCORE
  4814 2BF4 A9 64			lda #$64
  4815 2BF6 8D 58 2C			sta SYSTEM.PAUSE_0085.N
  4816 2BF9 A9 00			lda #$00
  4817 2BFB 8D 59 2C			sta SYSTEM.PAUSE_0085.N+1
  4818 2BFE 20 B2 11			jsr SYSTEM.PAUSE_0085
  4819 2C01 20 DA 16			jsr NEXTLEVEL
  4820 2C04			@exit
  4821 					.ifdef @new
  4822 					lda <@VarData
  4823 					sta :ztmp
  4824 					lda >@VarData
  4825 					ldy #@VarDataSize-1
  4826 					jmp @FreeMem
  4827 					els
  4828 2C04 60				rts						; ret
  4829 					eif
  4830 				.endl
  4831 2C05			l_001E
  4832
  4833 				; optimize FAIL ('INITFONTS', main.pas), line = 58
  4834
  4835 2C05 20 E9 2A			jsr INITFONTS
  4836
  4837 				; --- RepeatUntilProlog
  4838 2C08			l_115D
  4839
  4840 				; optimize FAIL ('INITSCORE', main.pas), line = 61
  4841
  4842 2C08 20 6D 2A			jsr INITSCORE
  4843 2C0B A9 00			lda #$00
  4844 2C0D 8D 5D 2C			sta GAMEOVER
  4845 2C10 A9 01			lda #$01
  4846 2C12 8D 5C 2C			sta LEVEL
  4847
  4848 				; --- RepeatUntilProlog
  4849 2C15			l_1167
  4850
  4851 				; optimize FAIL ('MAINLOOP', main.pas), line = 63
  4852
  4853 2C15 20 94 2B			jsr MAINLOOP
  4854 2C18 20 C5 17			jsr ISGAMEOVER
  4855 2C1B CA				dex
  4856 2C1C B5 19			lda :STACKORIGIN+1,x
  4857 2C1E F0 F5			jeq l_1167
  4858
  4859 				; optimize FAIL ('SHOWSCORE', main.pas), line = 65
  4860
  4861 2C20 20 EE 12			jsr SHOWSCORE
  4862 2C23 20 7C 17			jsr ENDSCREEN
  4863 2C26 A9 C8			lda #$C8
  4864 2C28 8D 58 2C			sta SYSTEM.PAUSE_0085.N
  4865 2C2B A9 00			lda #$00
  4866 2C2D 8D 59 2C			sta SYSTEM.PAUSE_0085.N+1
  4867 2C30 20 B2 11			jsr SYSTEM.PAUSE_0085
  4868
  4869 				; optimize OK (main.pas), line = 66
  4870
  4871 2C33 4C 08 2C			jmp l_115D
  4872
  4873 				; ------------------------------------------------------------
  4874
  4875 = 0800			ATTRIBUTE_ADDR	= $0800
  4876 = 0C00			SCREEN_ADDR	= $0C00
  4877 = 0400			OFFSET	= $0400
  4878 = 001F			BACKGROUND_COLOUR	= $1F
  4879 = 0000			BOREDER_COLOUR	= $00
  4880 = 0007			OBST_QUANTITY	= $07
  4881 = 0009			VICTORIES	= $09
  4882 = 005E			TRASH	= $5E
  4883 = 0005			LOOK_AHEAD	= $05
  4884 = 0020			EMPTY	= $20
  4885 = 00A0			WALL	= $A0
  4886 = 0041			WALL_COLOUR	= $41
  4887 = 0030			ZERO	= $30
  4888 = 0054			OBSTACLE_1	= $54
  4889 = 0055			OBSTACLE_2	= $55
  4890 = 0065			OBST_COLOUR	= $65
  4891 = 0050			PLY_HEAD_UP	= $50
  4892 = 0051			PLY_HEAD_LEFT	= $51
  4893 = 0052			PLY_HEAD_RIGHT	= $52
  4894 = 0053			PLY_HEAD_DOWN	= $53
  4895 = 002A			PLY_CRASH	= $2A
  4896 = 0057			PLY_BUSTED	= $57
  4897 = 0042			PLY_TAIL_UD	= $42
  4898 = 0040			PLY_TAIL_LR	= $40
  4899 = 007D			PLY_TAIL_RD	= $7D
  4900 = 006E			PLY_TAIL_RU	= $6E
  4901 = 006D			PLY_TAIL_LD	= $6D
  4902 = 0070			PLY_TAIL_LU	= $70
  4903 = 0062			PLY1_COLOUR	= $62
  4904 = 005D			PLY2_COLOUR	= $5D
  4905 = 0071			PLY3_COLOUR	= $71
  4906 = 0055			PLY4_COLOUR	= $55
  4907 = 0000			PLY_CTRL	= $00
  4908 = 0001			AI_STRAIGHT	= $01
  4909 = 0002			AI_SAPPER	= $02
  4910 = 0003			AI_BULLY	= $03
  4911 = 0004			AI_MIRROR	= $04
  4912 = 0001			JOY_UP	= $01
  4913 = 0002			JOY_DOWN	= $02
  4914 = 0004			JOY_LEFT	= $04
  4915 = 0008			JOY_RIGHT	= $08
  4916 = 0040			JOY_FIRE	= $40
  4917 = 0002			JOY_SELECT_1	= $02
  4918 = 0004			JOY_SELECT_2	= $04
  4919 = 1025			adr.MUL40	= CODEORIGIN+$0017
  4920 2C36			.var MUL40	= adr.MUL40 .word
  4921 = 1057			adr.DIRECTION	= CODEORIGIN+$0049
  4922 2C36			.var DIRECTION	= adr.DIRECTION .word
  4923 = FD30			KEYSCAN	= $FD30
  4924 = FF08			JOY	= $FF08
  4925 = FF12			RAMROMSEL	= $FF12
  4926 = FF13			CHBAS	= $FF13
  4927 = FF15			BACKGROUND	= $FF15
  4928 = FF19			BOREDER	= $FF19
  4929 = 0058			T0B	= $58
  4930 = 0059			I0B	= $59
  4931 = 005A			ALIVE	= $5A
  4932 = 005B			NEWDIR	= $5B
  4933 = 005C			AVAILDIR	= $5C
  4934 = 005D			JOYSTATUS	= $5D
  4935 = 005E			T0W	= $5E
  4936 = 0070			adr.PLY	= $70
  4937 2C36			.var PLY	= adr.PLY .word
  4938 = 2C4C			PLY.X	= DATAORIGIN+$0000
  4939 = 2C4D			PLY.Y	= DATAORIGIN+$0001
  4940 = 2C4E			PLY.HEAD	= DATAORIGIN+$0002
  4941 = 2C4F			PLY.COLOUR	= DATAORIGIN+$0003
  4942 = 2C50			PLY.DIR	= DATAORIGIN+$0004
  4943 = 2C51			PLY.BRAIN	= DATAORIGIN+$0005
  4944 = 2C52			PLY.SCORE	= DATAORIGIN+$0006
  4945 = 2C53			PLY.ISALIVE	= DATAORIGIN+$0007
  4946 = 0072			adr.TMPPLY	= $72
  4947 2C36			.var TMPPLY	= adr.TMPPLY .word
  4948 = 2C4C			TMPPLY.X	= DATAORIGIN+$0000
  4949 = 2C4D			TMPPLY.Y	= DATAORIGIN+$0001
  4950 = 2C4E			TMPPLY.HEAD	= DATAORIGIN+$0002
  4951 = 2C4F			TMPPLY.COLOUR	= DATAORIGIN+$0003
  4952 = 2C50			TMPPLY.DIR	= DATAORIGIN+$0004
  4953 = 2C51			TMPPLY.BRAIN	= DATAORIGIN+$0005
  4954 = 2C52			TMPPLY.SCORE	= DATAORIGIN+$0006
  4955 = 2C53			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  4956 = 0060			adr.OBSTACLES	= $60
  4957 2C36			.var OBSTACLES	= adr.OBSTACLES .word
  4958 = 2C5C			LEVEL	= DATAORIGIN+$0010
  4959 = 2C5D			GAMEOVER	= DATAORIGIN+$0011
  4960 = 2C5E			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  4961 2C36			.var PLAYER1	= adr.PLAYER1 .word
  4962 = 2C5E			PLAYER1.X	= DATAORIGIN+$0012
  4963 = 2C5F			PLAYER1.Y	= DATAORIGIN+$0013
  4964 = 2C60			PLAYER1.HEAD	= DATAORIGIN+$0014
  4965 = 2C61			PLAYER1.COLOUR	= DATAORIGIN+$0015
  4966 = 2C62			PLAYER1.DIR	= DATAORIGIN+$0016
  4967 = 2C63			PLAYER1.BRAIN	= DATAORIGIN+$0017
  4968 = 2C64			PLAYER1.SCORE	= DATAORIGIN+$0018
  4969 = 2C65			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  4970 = 2C66			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  4971 2C36			.var PLAYER2	= adr.PLAYER2 .word
  4972 = 2C66			PLAYER2.X	= DATAORIGIN+$001A
  4973 = 2C67			PLAYER2.Y	= DATAORIGIN+$001B
  4974 = 2C68			PLAYER2.HEAD	= DATAORIGIN+$001C
  4975 = 2C69			PLAYER2.COLOUR	= DATAORIGIN+$001D
  4976 = 2C6A			PLAYER2.DIR	= DATAORIGIN+$001E
  4977 = 2C6B			PLAYER2.BRAIN	= DATAORIGIN+$001F
  4978 = 2C6C			PLAYER2.SCORE	= DATAORIGIN+$0020
  4979 = 2C6D			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  4980 = 2C6E			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  4981 2C36			.var PLAYER3	= adr.PLAYER3 .word
  4982 = 2C6E			PLAYER3.X	= DATAORIGIN+$0022
  4983 = 2C6F			PLAYER3.Y	= DATAORIGIN+$0023
  4984 = 2C70			PLAYER3.HEAD	= DATAORIGIN+$0024
  4985 = 2C71			PLAYER3.COLOUR	= DATAORIGIN+$0025
  4986 = 2C72			PLAYER3.DIR	= DATAORIGIN+$0026
  4987 = 2C73			PLAYER3.BRAIN	= DATAORIGIN+$0027
  4988 = 2C74			PLAYER3.SCORE	= DATAORIGIN+$0028
  4989 = 2C75			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  4990 = 2C76			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  4991 2C36			.var PLAYER4	= adr.PLAYER4 .word
  4992 = 2C76			PLAYER4.X	= DATAORIGIN+$002A
  4993 = 2C77			PLAYER4.Y	= DATAORIGIN+$002B
  4994 = 2C78			PLAYER4.HEAD	= DATAORIGIN+$002C
  4995 = 2C79			PLAYER4.COLOUR	= DATAORIGIN+$002D
  4996 = 2C7A			PLAYER4.DIR	= DATAORIGIN+$002E
  4997 = 2C7B			PLAYER4.BRAIN	= DATAORIGIN+$002F
  4998 = 2C7C			PLAYER4.SCORE	= DATAORIGIN+$0030
  4999 = 2C7D			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  5000 2C36			@exit
  5001
  5002 2C36 A2 00		@halt	ldx #$00
  5003 2C38 9A				txs
  5004
  5005 2C39 60				rts
  5006
  5007 				; ------------------------------------------------------------
  5008
  5009 				; ------------------------------------------------------------
  5010
  5011 2C3A			.local	@DEFINES
  5012 2C3A			C4P
  5013 				.endl
  5014
  5015 2C3A			.local	@RESOURCE
  5016 				.endl
  5017
  5018 = 2C3A 25 10		MUL40
  5018 = 2C3C 57 10		DIRECTION
  5018 = 2C3E 70 00		PLY
  5018 = 2C40 72 00		TMPPLY
  5018 = 2C42 60 00		OBSTACLES
  5018 = 2C44 5E 2C		PLAYER1
  5018 = 2C46 66 2C		PLAYER2
  5018 = 2C48 6E 2C		PLAYER3
  5018 = 2C4A 76 2C		PLAYER4
  5018 				.endl							; MAIN
  5019
  5020 				; ------------------------------------------------------------
  5021 				; ------------------------------------------------------------
  5022
  5023 				.macro	UNITINITIALIZATION
  5024 				
  5025 					.ifdef MAIN.SYSTEM.@UnitInit
  5026 					jsr MAIN.SYSTEM.@UnitInit
  5027 					eif
  5028 				.endm
  5029
  5030 				; ------------------------------------------------------------
  5031
  5032 					ift .SIZEOF(MAIN.SYSTEM) > 0
  5033 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  5033 				SYSTEM: $1155..$11FF
  5034 					eif
  5035
  5036 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  5036 				CODE: $100E..$2C39
  5037
  5038 				; ------------------------------------------------------------
  5039
  5040 2C4C				.align $04
  5041
  5042 2C4C			DATAORIGIN
  5043 2C4C 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5044 2C64 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5045 2C7C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5046 2C94 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5047 2CAC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5048 2CC4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5049 2CDC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5050 2CF4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5051 2D0C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5052 2D24 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5053 2D3C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5054 2D54 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5055 2D6C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5056 2D84 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $05 $06 $09 $12
  5057 2D9C 05 21 00 00 00 00 + .by  $05 $21 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5058 2DB4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5059 2DCC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5060 2DE4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5061 2DFC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5062 2E14 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5063 2E2C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5064 2E44 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5065 2E5C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5066 2E74 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5067 2E8C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $06 $17 $09 $0E  $05 $12 $21 $00 $00 $00 $00 $00
  5068 2EA4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5069 2EBC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5070 2ED4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5071 2EEC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5072 2F04 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5073 2F1C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5074 2F34 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5075 2F4C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5076 2F64 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5077 2F7C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5078 2F94 00 00 00 00 06 0C + .by  $00 $00 $00 $00 $06 $0C $0F $13  $05 $12 $21 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5079 2FAC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5080 2FC4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5081 2FDC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5082 2FF4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5083 300C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5084 3024 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5085 303C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5086 3054 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5087 306C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5088 3084 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5089 309C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $18  $18 $24 $24 $24 $3C $66 $5A $00  $03 $3E $C5 $C5 $3E $03 $00 $00
  5090 30B4 C0 7C A3 A3 7C C0 + .by  $C0 $7C $A3 $A3 $7C $C0 $00 $5A  $66 $3C $24 $24 $24 $18 $18 $00  $3C $6E $62 $46 $76 $3C $00 $00
  5091 30CC 3C 76 46 62 6E 3C	.by  $3C $76 $46 $62 $6E $3C
  5092
  5093 = 0486			VARINITSIZE	= *-DATAORIGIN
  5094 = 0488			VARDATASIZE	= 1160
  5095
  5096 = 30D4			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  5097
  5098 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  5098 				DATA: $2C4C..$30D4
  5099
  5100 				; ------------------------------------------------------------
  5101
  5102 				.macro	STATICDATA
  5103 				.by  $05 $06 $09 $12 $05 $21 $00 $06  $17 $09 $0E $05 $12 $21 $00 $06  $0C $0F $13 $05 $12 $21 $00 $00
  5104 				.by  $00 $28 $00 $50 $00 $78 $00 $A0  $00 $C8 $00 $F0 $00 $18 $01 $40  $01 $68 $01 $90 $01 $B8 $01 $E0
  5105 				.by  $01 $08 $02 $30 $02 $58 $02 $80  $02 $A8 $02 $D0 $02 $F8 $02 $20  $03 $48 $03 $70 $03 $98 $03 $C0
  5106 				.by  $03 $01 $02 $04 $08
  5107 				.endm
  5108
  5109 					end
