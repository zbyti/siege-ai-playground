mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E D7 1C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0044			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 1CF2			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 BC			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 36 1C E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 36 85 02 A9 1D + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 78 1C			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D F7 1C		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD F7 1C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 1CF7			RESULT	= DATAORIGIN+$000B
   182
   183 = 1CF7			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD F8 1C		loop  lda n
   307 1126 0D F9 1C		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD F8 1C D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 1CF8			N	= DATAORIGIN+$000C
   321
   322 = 1CF8			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D FA 1C			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD FA 1C		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C FB 1C		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD FB 1C 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 1CFA			RANGE	= DATAORIGIN+$000E
   383 = 1CFB			RESULT	= DATAORIGIN+$000F
   384
   385 = 1CFA			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 1CEC			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 1CEE			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 1CF0			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 1CF1			FILEMODE	= DATAORIGIN+$0005
   450 = 1CF2			GRAPHMODE	= DATAORIGIN+$0006
   451 = 1CF3			IORESULT	= DATAORIGIN+$0007
   452 = 1CF4			EOLN	= DATAORIGIN+$0008
   453 = 1CF5			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD 1E 1D			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D 1D 1D			add X
   466 117D 85 5D			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5E			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5D			ldy T0W
   475 118A AD 20 1D			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5E			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD 1F 1D			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 1D1D			X	= DATAORIGIN+$0031
   486 = 1D1E			Y	= DATAORIGIN+$0032
   487 = 1D1F			V	= DATAORIGIN+$0033
   488 = 1D20			C	= DATAORIGIN+$0034
   489
   490 = 1D1D			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 00 1D			lda PLAYER1.COLOUR
   510 119F 8D 20 1D			sta PUTCHAR.C
   511 11A2 AD 03 1D			lda PLAYER1.SCORE
   512 11A5 8D 1F 1D			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D 1E 1D			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D 1D 1D			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD 08 1D			lda PLAYER2.COLOUR
   522 11B8 8D 20 1D			sta PUTCHAR.C
   523 11BB AD 0B 1D			lda PLAYER2.SCORE
   524 11BE 8D 1F 1D			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D 1E 1D			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D 1D 1D			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD 10 1D			lda PLAYER3.COLOUR
   534 11D1 8D 20 1D			sta PUTCHAR.C
   535 11D4 AD 13 1D			lda PLAYER3.SCORE
   536 11D7 8D 1F 1D			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D 1E 1D			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D 1D 1D			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD 18 1D			lda PLAYER4.COLOUR
   546 11EA 8D 20 1D			sta PUTCHAR.C
   547 11ED AD 1B 1D			lda PLAYER4.SCORE
   548 11F0 8D 1F 1D			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D 1E 1D			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D 1D 1D			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5C			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AC DE 1C 84 12 AC + 	mwy PLY :bp2
   576 120F A0 01			ldy #PLY.Y-DATAORIGIN
   577 1211 B1 12			lda (:bp2),y
   578 1213 0A				asl @
   579 1214 A8				tay
   580 1215 A9 00			lda #$00
   581 1217 18 79 0E 10			add adr.MUL40,y
   582 121B 85 21			sta :STACKORIGIN+9
   583 121D A9 0C			lda #$0C
   584 121F 79 0F 10			adc adr.MUL40+1,y
   585 1222 85 31			sta :STACKORIGIN+STACKWIDTH+9
   586 1224 A0 00			ldy #PLY.X-DATAORIGIN
   587 1226 A5 21			lda :STACKORIGIN+9
   588 1228 18 71 12			add (:bp2),y
   589 122B 85 5D			sta T0W
   590 122D A5 31			lda :STACKORIGIN+STACKWIDTH+9
   591 122F 69 00			adc #$00
   592 1231 85 5E			sta T0W+1
   593
   594 				; optimize OK (tools.inc), line = 26
   595
   596 1233 A5 5D			lda T0W
   597 1235 38 E9 28			sub #$28
   598 1238 85 21			sta :STACKORIGIN+9
   599 123A A5 5E			lda T0W+1
   600 123C E9 00			sbc #$00
   601 123E 85 11			sta :bp+1
   602 1240 A4 21			ldy :STACKORIGIN+9
   603 1242 B1 10			lda (:bp),y
   604 1244 C9 20			cmp #$20
   605 1246 D0 06			jne l_00EE
   606 1248 A5 5C			lda AVAILDIR
   607 124A 09 01			ora #$01
   608 124C 85 5C			sta AVAILDIR
   609 124E			l_00EE
   610
   611 				; optimize OK (tools.inc), line = 27
   612
   613 124E A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   614 1256 A0 28			ldy #$28
   615 1258 B1 12			lda (:bp2),y
   616 125A C9 20			cmp #$20
   617 125C D0 06			jne l_0111
   618 125E A5 5C			lda AVAILDIR
   619 1260 09 02			ora #$02
   620 1262 85 5C			sta AVAILDIR
   621 1264			l_0111
   622
   623 				; optimize OK (tools.inc), line = 28
   624
   625 1264 A5 5D			lda T0W
   626 1266 38 E9 01			sub #$01
   627 1269 85 21			sta :STACKORIGIN+9
   628 126B A5 5E			lda T0W+1
   629 126D E9 00			sbc #$00
   630 126F 85 11			sta :bp+1
   631 1271 A4 21			ldy :STACKORIGIN+9
   632 1273 B1 10			lda (:bp),y
   633 1275 C9 20			cmp #$20
   634 1277 D0 06			jne l_0134
   635 1279 A5 5C			lda AVAILDIR
   636 127B 09 04			ora #$04
   637 127D 85 5C			sta AVAILDIR
   638 127F			l_0134
   639
   640 				; optimize OK (tools.inc), line = 29
   641
   642 127F A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   643 1287 A0 01			ldy #$01
   644 1289 B1 12			lda (:bp2),y
   645 128B C9 20			cmp #$20
   646 128D D0 06			jne l_0157
   647 128F A5 5C			lda AVAILDIR
   648 1291 09 08			ora #$08
   649 1293 85 5C			sta AVAILDIR
   650 1295			l_0157
   651 1295			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 1295 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 1296			.local	ANIMATEOBSTACLES				; PROCEDURE
   664
   665 				; optimize FAIL (0, tools.inc), line = 38
   666
   667 1296 EE 21 1D			inc COUNTER
   668
   669 				; optimize OK (tools.inc), line = 39
   670
   671 1299 AD 21 1D			lda COUNTER
   672 129C 29 01			and #$01
   673 129E F0 08			jeq l_0182
   674 12A0 A9 56			lda #$56
   675 12A2 8D 22 1D			sta OBST
   676 12A5 4C AD 12			jmp l_0190
   677 12A8			l_0182
   678 12A8 A9 5B			lda #$5B
   679 12AA 8D 22 1D			sta OBST
   680 12AD			l_0190
   681
   682 				; optimize OK (tools.inc), line = 40
   683
   684 12AD AD 22 1D			lda OBST
   685 12B0 8D FA 0C			sta $0CFA
   686
   687 				; optimize OK (tools.inc), line = 41
   688
   689 12B3 8D 0E 0D			sta $0D0E
   690
   691 				; optimize OK (tools.inc), line = 42
   692
   693 12B6 8D DA 0E			sta $0EDA
   694
   695 				; optimize OK (tools.inc), line = 43
   696
   697 12B9 8D EE 0E			sta $0EEE
   698
   699 				; optimize OK (tools.inc), line = 44
   700
   701 12BC 8D E1 0D			sta $0DE1
   702
   703 				; optimize OK (tools.inc), line = 45
   704
   705 12BF 8D 64 0C			sta $0C64
   706
   707 				; optimize OK (tools.inc), line = 46
   708
   709 12C2 8D 84 0F			sta $0F84
   710
   711 				; optimize OK (tools.inc), line = 47
   712
   713 12C5 8D F4 0D			sta $0DF4
   714
   715 				; ------------------------------------------------------------
   716
   717 = 1D21			COUNTER	= DATAORIGIN+$0035
   718 = 1D22			OBST	= DATAORIGIN+$0036
   719
   720 = 1D21			@VarData	= COUNTER
   721 = 0002			@VarDataSize	= 2
   722
   723 12C8			@exit
   724 					.ifdef @new
   725 					lda <@VarData
   726 					sta :ztmp
   727 					lda >@VarData
   728 					ldy #@VarDataSize-1
   729 					jmp @FreeMem
   730 					els
   731 12C8 60				rts						; ret
   732 					eif
   733 				.endl
   734
   735 12C9			.local	DRAWTAIL					; PROCEDURE
   736
   737 				; optimize OK (tools.inc), line = 54
   738
   739 12C9 AC DE 1C 84 12 AC + 	mwy PLY :bp2
   740 12D3 A0 04			ldy #PLY.DIR-DATAORIGIN
   741 12D5 B1 12			lda (:bp2),y
   742 12D7 C5 5B			cmp NEWDIR
   743 12D9 D0 14			jne l_01D4
   744
   745 				; optimize OK (tools.inc), line = 55
   746
   747 12DB A5 5B			lda NEWDIR
   748 12DD 29 0C			and #$0C
   749 12DF F0 07			jeq l_01EB
   750 12E1 A9 40			lda #$40
   751 12E3 85 58			sta T0B
   752 12E5 4C EC 12			jmp l_01F9
   753 12E8			l_01EB
   754 12E8 A9 42			lda #$42
   755 12EA 85 58			sta T0B
   756 12EC			l_01F9
   757 12EC 4C 5F 13			jmp l_0206
   758 12EF			l_01D4
   759
   760 				; optimize OK (tools.inc), line = 57
   761
   762 12EF AC DE 1C 84 12 AC + 	mwy PLY :bp2
   763 12F9 A0 04			ldy #PLY.DIR-DATAORIGIN
   764 12FB B1 12			lda (:bp2),y
   765 12FD 29 0A			and #$0A
   766 12FF F0 0A			jeq l_022C
   767 1301 A5 5B			lda NEWDIR
   768 1303 29 05			and #$05
   769 1305 F0 04			jeq l_022C
   770 1307 A9 7D			lda #$7D
   771 1309 85 58			sta T0B
   772 130B			l_022C
   773
   774 				; optimize OK (tools.inc), line = 58
   775
   776 130B AC DE 1C 84 12 AC + 	mwy PLY :bp2
   777 1315 A0 04			ldy #PLY.DIR-DATAORIGIN
   778 1317 B1 12			lda (:bp2),y
   779 1319 29 09			and #$09
   780 131B F0 0A			jeq l_0259
   781 131D A5 5B			lda NEWDIR
   782 131F 29 06			and #$06
   783 1321 F0 04			jeq l_0259
   784 1323 A9 6E			lda #$6E
   785 1325 85 58			sta T0B
   786 1327			l_0259
   787
   788 				; optimize OK (tools.inc), line = 59
   789
   790 1327 AC DE 1C 84 12 AC + 	mwy PLY :bp2
   791 1331 A0 04			ldy #PLY.DIR-DATAORIGIN
   792 1333 B1 12			lda (:bp2),y
   793 1335 29 06			and #$06
   794 1337 F0 0A			jeq l_0286
   795 1339 A5 5B			lda NEWDIR
   796 133B 29 09			and #$09
   797 133D F0 04			jeq l_0286
   798 133F A9 6D			lda #$6D
   799 1341 85 58			sta T0B
   800 1343			l_0286
   801
   802 				; optimize OK (tools.inc), line = 60
   803
   804 1343 AC DE 1C 84 12 AC + 	mwy PLY :bp2
   805 134D A0 04			ldy #PLY.DIR-DATAORIGIN
   806 134F B1 12			lda (:bp2),y
   807 1351 29 05			and #$05
   808 1353 F0 0A			jeq l_02B3
   809 1355 A5 5B			lda NEWDIR
   810 1357 29 0A			and #$0A
   811 1359 F0 04			jeq l_02B3
   812 135B A9 70			lda #$70
   813 135D 85 58			sta T0B
   814 135F			l_02B3
   815 135F			l_0206
   816
   817 				; optimize OK (tools.inc), line = 62
   818
   819 135F AC DE 1C 84 12 AC + 	mwy PLY :bp2
   820 1369 A0 00			ldy #PLY.X-DATAORIGIN
   821 136B B1 12			lda (:bp2),y
   822 136D 8D 1D 1D			sta PUTCHAR.X
   823 1370 A0 01			ldy #PLY.Y-DATAORIGIN
   824 1372 B1 12			lda (:bp2),y
   825 1374 8D 1E 1D			sta PUTCHAR.Y
   826 1377 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   827 1379 B1 12			lda (:bp2),y
   828 137B 8D 20 1D			sta PUTCHAR.C
   829 137E A5 58			lda T0B
   830 1380 8D 1F 1D			sta PUTCHAR.V
   831 1383 20 71 11			jsr PUTCHAR
   832 1386			@exit
   833 					.ifdef @new
   834 					lda <@VarData
   835 					sta :ztmp
   836 					lda >@VarData
   837 					ldy #@VarDataSize-1
   838 					jmp @FreeMem
   839 					els
   840 1386 60				rts						; ret
   841 					eif
   842 				.endl
   843
   844 1387			.local	INITPLAYERS					; PROCEDURE
   845
   846 				; optimize OK (init.inc), line = 5
   847
   848 1387 AD 23 1D			lda P
   849 138A 8D DE 1C			sta PLY
   850 138D 85 12			sta :bp2
   851 138F AD 24 1D			lda P+1
   852 1392 8D DF 1C			sta PLY+1
   853 1395 85 13			sta :bp2+1
   854 				; optimize OK (init.inc), line = 6
   855 1397 A0 05			ldy #PLY.BRAIN-DATAORIGIN
   856 1399 AD 28 1D			lda BRAIN
   857 139C 91 12			sta (:bp2),y
   858 139E A0 00			ldy #PLY.X-DATAORIGIN
   859 13A0 AD 25 1D			lda X
   860 13A3 91 12			sta (:bp2),y
   861 13A5 A0 01			ldy #PLY.Y-DATAORIGIN
   862 13A7 AD 26 1D			lda Y
   863 13AA 91 12			sta (:bp2),y
   864 13AC A0 04			ldy #PLY.DIR-DATAORIGIN
   865 13AE AD 27 1D			lda DIR
   866 13B1 91 12			sta (:bp2),y
   867
   868 				; optimize OK (init.inc), line = 7
   869
   870 13B3 A0 02			ldy #PLY.HEAD-DATAORIGIN
   871 13B5 AD 29 1D			lda HEAD
   872 13B8 91 12			sta (:bp2),y
   873 13BA A0 03			ldy #PLY.COLOUR-DATAORIGIN
   874 13BC AD 2A 1D			lda COLOUR
   875 13BF 91 12			sta (:bp2),y
   876 13C1 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
   877 13C3 AD 2B 1D			lda ISALIVE
   878 13C6 91 12			sta (:bp2),y
   879
   880 				; optimize OK (init.inc), line = 8
   881
   882 13C8 AD 2B 1D			lda ISALIVE
   883 13CB F0 1D			jeq l_0306
   884
   885 				; optimize FAIL (0, init.inc), line = 9
   886
   887 13CD E6 5A			inc ALIVE
   888 13CF AD 2A 1D			lda COLOUR
   889 13D2 8D 20 1D			sta PUTCHAR.C
   890 13D5 AD 29 1D			lda HEAD
   891 13D8 8D 1F 1D			sta PUTCHAR.V
   892 13DB AD 26 1D			lda Y
   893 13DE 8D 1E 1D			sta PUTCHAR.Y
   894 13E1 AD 25 1D			lda X
   895 13E4 8D 1D 1D			sta PUTCHAR.X
   896 13E7 20 71 11			jsr PUTCHAR
   897 13EA			l_0306
   898
   899 				; ------------------------------------------------------------
   900
   901 = 1D23			P	= DATAORIGIN+$0037
   902 = 1D25			X	= DATAORIGIN+$0039
   903 = 1D26			Y	= DATAORIGIN+$003A
   904 = 1D27			DIR	= DATAORIGIN+$003B
   905 = 1D28			BRAIN	= DATAORIGIN+$003C
   906 = 1D29			HEAD	= DATAORIGIN+$003D
   907 = 1D2A			COLOUR	= DATAORIGIN+$003E
   908 = 1D2B			ISALIVE	= DATAORIGIN+$003F
   909
   910 = 1D23			@VarData	= P
   911 = 0009			@VarDataSize	= 9
   912
   913 13EA			@exit
   914 					.ifdef @new
   915 					lda <@VarData
   916 					sta :ztmp
   917 					lda >@VarData
   918 					ldy #@VarDataSize-1
   919 					jmp @FreeMem
   920 					els
   921 13EA 60				rts						; ret
   922 					eif
   923 				.endl
   924
   925 13EB			.local	INITPLAYFIELD					; PROCEDURE
   926
   927 				; optimize OK (init.inc), line = 17
   928
   929 13EB A9 1F			lda #$1F
   930 13ED 8D 15 FF			sta BACKGROUND
   931 13F0 A9 00			lda #$00
   932 13F2 8D 19 FF			sta BOREDER
   933
   934 				; optimize OK (init.inc), line = 18
   935
   936 13F5 A9 20			lda #$20
   937 13F7 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   938 13F9 A9 C0			lda #$C0
   939 13FB 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   940 13FD A9 03			lda #$03
   941 13FF 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
   942 1401 A9 00			lda #$00
   943 1403 85 08			sta SYSTEM.FILLCHAR_0056.A
   944 1405 A9 0C			lda #$0C
   945 1407 85 09			sta SYSTEM.FILLCHAR_0056.A+1
   946 1409 20 1F 11			jsr SYSTEM.FILLCHAR_0056
   947
   948 				; optimize OK (init.inc), line = 20
   949
   950 140C A9 27			lda #$27
   951 140E 85 58			sta T0B
   952
   953 1410			l_0333
   954 				; --- ForToDoCondition
   955
   956 				; optimize OK (init.inc), line = 21
   957
   958 1410 A4 58			ldy T0B
   959 1412 A9 A0			lda #$A0
   960 1414 99 00 0C			sta $0C00,y
   961
   962 				; optimize OK (init.inc), line = 22
   963
   964 1417 99 C0 0F			sta $0FC0,y
   965
   966 				; optimize OK (init.inc), line = 23
   967
   968 141A A9 41			lda #$41
   969 141C 99 00 08			sta $0800,y
   970
   971 				; optimize OK (init.inc), line = 24
   972
   973 141F 99 C0 0B			sta $0BC0,y
   974
   975 				; --- ForToDoEpilog
   976 1422 C6 58			dec T0B
   977 1424 10 EA			jpl l_0333
   978 1426			l_0341
   979
   980 				; optimize OK (init.inc), line = 27
   981
   982 1426 A9 18			lda #$18
   983 1428 85 58			sta T0B
   984
   985 142A			l_0373
   986 				; --- ForToDoCondition
   987 142A A5 58			lda T0B
   988 142C C9 01			cmp #$01
   989 142E 90 3A			jcc l_0381
   990
   991 				; optimize OK (init.inc), line = 28
   992
   993 1430 0A				asl @
   994 1431 A8				tay
   995 1432 A9 FF			lda #$FF
   996 1434 18 79 0E 10			add adr.MUL40,y
   997 1438 85 12			sta :bp2
   998 143A A9 0B			lda #$0B
   999 143C 79 0F 10			adc adr.MUL40+1,y
  1000 143F 85 13			sta :bp2+1
  1001 1441 A0 00			ldy #$00
  1002 1443 A9 A0			lda #$A0
  1003 1445 91 12			sta (:bp2),y
  1004 1447 C8				iny
  1005 1448 91 12			sta (:bp2),y
  1006
  1007 				; optimize OK (init.inc), line = 29
  1008
  1009 144A A5 58			lda T0B
  1010 144C 0A				asl @
  1011 144D A8				tay
  1012 144E A9 FF			lda #$FF
  1013 1450 18 79 0E 10			add adr.MUL40,y
  1014 1454 85 12			sta :bp2
  1015 1456 A9 07			lda #$07
  1016 1458 79 0F 10			adc adr.MUL40+1,y
  1017 145B 85 13			sta :bp2+1
  1018 145D A0 00			ldy #$00
  1019 145F A9 41			lda #$41
  1020 1461 91 12			sta (:bp2),y
  1021 1463 C8				iny
  1022 1464 91 12			sta (:bp2),y
  1023
  1024 				; --- ForToDoEpilog
  1025 1466 C6 58			dec T0B
  1026 1468 10 C0			jpl l_0373
  1027 146A			l_0381
  1028
  1029 				; optimize OK (init.inc), line = 42
  1030
  1031 146A A9 01			lda #$01
  1032 146C 8D 2B 1D			sta INITPLAYERS.ISALIVE
  1033 146F A9 5F			lda #$5F
  1034 1471 8D 2A 1D			sta INITPLAYERS.COLOUR
  1035 1474 A9 51			lda #$51
  1036 1476 8D 29 1D			sta INITPLAYERS.HEAD
  1037 1479 A9 00			lda #$00
  1038 147B 8D 28 1D			sta INITPLAYERS.BRAIN
  1039 147E A9 04			lda #$04
  1040 1480 8D 27 1D			sta INITPLAYERS.DIR
  1041 1483 A9 0C			lda #$0C
  1042 1485 8D 26 1D			sta INITPLAYERS.Y
  1043 1488 A9 13			lda #$13
  1044 148A 8D 25 1D			sta INITPLAYERS.X
  1045 148D AD E2 1C			lda PLAYER1
  1046 1490 8D 23 1D			sta INITPLAYERS.P
  1047 1493 AD E3 1C			lda PLAYER1+1
  1048 1496 8D 24 1D			sta INITPLAYERS.P+1
  1049 1499 20 87 13			jsr INITPLAYERS
  1050
  1051 				; optimize OK (init.inc), line = 43
  1052
  1053 149C A9 01			lda #$01
  1054 149E 8D 2B 1D			sta INITPLAYERS.ISALIVE
  1055 14A1 A9 5D			lda #$5D
  1056 14A3 8D 2A 1D			sta INITPLAYERS.COLOUR
  1057 14A6 A9 51			lda #$51
  1058 14A8 8D 29 1D			sta INITPLAYERS.HEAD
  1059 14AB A9 04			lda #$04
  1060 14AD 8D 28 1D			sta INITPLAYERS.BRAIN
  1061 14B0 A9 08			lda #$08
  1062 14B2 8D 27 1D			sta INITPLAYERS.DIR
  1063 14B5 A9 0C			lda #$0C
  1064 14B7 8D 26 1D			sta INITPLAYERS.Y
  1065 14BA A9 15			lda #$15
  1066 14BC 8D 25 1D			sta INITPLAYERS.X
  1067 14BF AD E4 1C			lda PLAYER2
  1068 14C2 8D 23 1D			sta INITPLAYERS.P
  1069 14C5 AD E5 1C			lda PLAYER2+1
  1070 14C8 8D 24 1D			sta INITPLAYERS.P+1
  1071 14CB 20 87 13			jsr INITPLAYERS
  1072
  1073 				; optimize OK (init.inc), line = 44
  1074
  1075 14CE A9 01			lda #$01
  1076 14D0 8D 2B 1D			sta INITPLAYERS.ISALIVE
  1077 14D3 A9 71			lda #$71
  1078 14D5 8D 2A 1D			sta INITPLAYERS.COLOUR
  1079 14D8 A9 51			lda #$51
  1080 14DA 8D 29 1D			sta INITPLAYERS.HEAD
  1081 14DD A9 03			lda #$03
  1082 14DF 8D 28 1D			sta INITPLAYERS.BRAIN
  1083 14E2 A9 02			lda #$02
  1084 14E4 8D 27 1D			sta INITPLAYERS.DIR
  1085 14E7 A9 01			lda #$01
  1086 14E9 8D 26 1D			sta INITPLAYERS.Y
  1087 14EC 8D 25 1D			sta INITPLAYERS.X
  1088 14EF AD E6 1C			lda PLAYER3
  1089 14F2 8D 23 1D			sta INITPLAYERS.P
  1090 14F5 AD E7 1C			lda PLAYER3+1
  1091 14F8 8D 24 1D			sta INITPLAYERS.P+1
  1092 14FB 20 87 13			jsr INITPLAYERS
  1093
  1094 				; optimize OK (init.inc), line = 45
  1095
  1096 14FE A9 01			lda #$01
  1097 1500 8D 2B 1D			sta INITPLAYERS.ISALIVE
  1098 1503 A9 55			lda #$55
  1099 1505 8D 2A 1D			sta INITPLAYERS.COLOUR
  1100 1508 A9 51			lda #$51
  1101 150A 8D 29 1D			sta INITPLAYERS.HEAD
  1102 150D A9 02			lda #$02
  1103 150F 8D 28 1D			sta INITPLAYERS.BRAIN
  1104 1512 8D 27 1D			sta INITPLAYERS.DIR
  1105 1515 A9 0D			lda #$0D
  1106 1517 8D 26 1D			sta INITPLAYERS.Y
  1107 151A A9 14			lda #$14
  1108 151C 8D 25 1D			sta INITPLAYERS.X
  1109 151F AD E8 1C			lda PLAYER4
  1110 1522 8D 23 1D			sta INITPLAYERS.P
  1111 1525 AD E9 1C			lda PLAYER4+1
  1112 1528 8D 24 1D			sta INITPLAYERS.P+1
  1113 152B 20 87 13			jsr INITPLAYERS
  1114
  1115 				; optimize OK (init.inc), line = 47
  1116
  1117 152E A9 35			lda #$35
  1118 1530 8D 20 1D			sta PUTCHAR.C
  1119 1533 A9 56			lda #$56
  1120 1535 8D 1F 1D			sta PUTCHAR.V
  1121 1538 A9 06			lda #$06
  1122 153A 8D 1E 1D			sta PUTCHAR.Y
  1123 153D A9 0A			lda #$0A
  1124 153F 8D 1D 1D			sta PUTCHAR.X
  1125 1542 20 71 11			jsr PUTCHAR
  1126
  1127 				; optimize OK (init.inc), line = 48
  1128
  1129 1545 A9 35			lda #$35
  1130 1547 8D 20 1D			sta PUTCHAR.C
  1131 154A A9 56			lda #$56
  1132 154C 8D 1F 1D			sta PUTCHAR.V
  1133 154F A9 06			lda #$06
  1134 1551 8D 1E 1D			sta PUTCHAR.Y
  1135 1554 A9 1E			lda #$1E
  1136 1556 8D 1D 1D			sta PUTCHAR.X
  1137 1559 20 71 11			jsr PUTCHAR
  1138
  1139 				; optimize OK (init.inc), line = 49
  1140
  1141 155C A9 35			lda #$35
  1142 155E 8D 20 1D			sta PUTCHAR.C
  1143 1561 A9 56			lda #$56
  1144 1563 8D 1F 1D			sta PUTCHAR.V
  1145 1566 A9 12			lda #$12
  1146 1568 8D 1E 1D			sta PUTCHAR.Y
  1147 156B A9 0A			lda #$0A
  1148 156D 8D 1D 1D			sta PUTCHAR.X
  1149 1570 20 71 11			jsr PUTCHAR
  1150
  1151 				; optimize OK (init.inc), line = 50
  1152
  1153 1573 A9 35			lda #$35
  1154 1575 8D 20 1D			sta PUTCHAR.C
  1155 1578 A9 56			lda #$56
  1156 157A 8D 1F 1D			sta PUTCHAR.V
  1157 157D A9 12			lda #$12
  1158 157F 8D 1E 1D			sta PUTCHAR.Y
  1159 1582 A9 1E			lda #$1E
  1160 1584 8D 1D 1D			sta PUTCHAR.X
  1161 1587 20 71 11			jsr PUTCHAR
  1162
  1163 				; optimize OK (init.inc), line = 51
  1164
  1165 158A A9 35			lda #$35
  1166 158C 8D 20 1D			sta PUTCHAR.C
  1167 158F A9 56			lda #$56
  1168 1591 8D 1F 1D			sta PUTCHAR.V
  1169 1594 A9 0C			lda #$0C
  1170 1596 8D 1E 1D			sta PUTCHAR.Y
  1171 1599 A9 01			lda #$01
  1172 159B 8D 1D 1D			sta PUTCHAR.X
  1173 159E 20 71 11			jsr PUTCHAR
  1174
  1175 				; optimize OK (init.inc), line = 53
  1176
  1177 15A1 A9 35			lda #$35
  1178 15A3 8D 20 1D			sta PUTCHAR.C
  1179 15A6 A9 56			lda #$56
  1180 15A8 8D 1F 1D			sta PUTCHAR.V
  1181 15AB A9 02			lda #$02
  1182 15AD 8D 1E 1D			sta PUTCHAR.Y
  1183 15B0 A9 14			lda #$14
  1184 15B2 8D 1D 1D			sta PUTCHAR.X
  1185 15B5 20 71 11			jsr PUTCHAR
  1186
  1187 				; optimize OK (init.inc), line = 54
  1188
  1189 15B8 A9 35			lda #$35
  1190 15BA 8D 20 1D			sta PUTCHAR.C
  1191 15BD A9 56			lda #$56
  1192 15BF 8D 1F 1D			sta PUTCHAR.V
  1193 15C2 A9 16			lda #$16
  1194 15C4 8D 1E 1D			sta PUTCHAR.Y
  1195 15C7 A9 14			lda #$14
  1196 15C9 8D 1D 1D			sta PUTCHAR.X
  1197 15CC 20 71 11			jsr PUTCHAR
  1198
  1199 				; optimize OK (init.inc), line = 56
  1200
  1201 15CF A9 35			lda #$35
  1202 15D1 8D 20 1D			sta PUTCHAR.C
  1203 15D4 A9 56			lda #$56
  1204 15D6 8D 1F 1D			sta PUTCHAR.V
  1205 15D9 A9 0C			lda #$0C
  1206 15DB 8D 1E 1D			sta PUTCHAR.Y
  1207 15DE A9 14			lda #$14
  1208 15E0 8D 1D 1D			sta PUTCHAR.X
  1209 15E3 20 71 11			jsr PUTCHAR
  1210
  1211 				; optimize FAIL ('SHOWSCORE', init.inc), line = 58
  1212
  1213 15E6 20 9C 11			jsr SHOWSCORE
  1214
  1215 				; ------------------------------------------------------------
  1216
  1217 = 0000			@FORTMP_0330	= $00
  1218 = 0001			@FORTMP_0370	= $01
  1219 15E9			@exit
  1220 					.ifdef @new
  1221 					lda <@VarData
  1222 					sta :ztmp
  1223 					lda >@VarData
  1224 					ldy #@VarDataSize-1
  1225 					jmp @FreeMem
  1226 					els
  1227 15E9 60				rts						; ret
  1228 					eif
  1229 				.endl
  1230
  1231 15EA			.local	AISTRAIGHT					; PROCEDURE
  1232
  1233 				; optimize OK (ai.inc), line = 5
  1234
  1235 15EA AC DE 1C 84 12 AC + 	mwy PLY :bp2
  1236 15F4 A0 04			ldy #PLY.DIR-DATAORIGIN
  1237 15F6 B1 12			lda (:bp2),y
  1238 15F8 25 5C			and AVAILDIR
  1239 15FA F0 07			jeq l_0409
  1240 15FC B1 12			lda (:bp2),y
  1241 15FE 85 5B			sta NEWDIR
  1242 1600 4C 6E 16			jmp l_0419
  1243 1603			l_0409
  1244
  1245 				; optimize OK (ai.inc), line = 7
  1246
  1247 1603 A5 5C			lda AVAILDIR
  1248 1605 C9 03			cmp #$03
  1249 1607 D0 10			jne l_042B
  1250 1609 A9 02			lda #$02
  1251 160B 20 40 11			jsr SYSTEM.RANDOM_006C
  1252 160E B4 18			ldy :STACKORIGIN,x
  1253 1610 B9 40 10			lda adr.DIRECTION,y
  1254 1613 85 5B			sta NEWDIR
  1255 1615 CA				dex
  1256 1616 4C 31 16			jmp l_043D
  1257 1619			l_042B
  1258
  1259 				; optimize OK (ai.inc), line = 9
  1260
  1261 1619 A5 5C			lda AVAILDIR
  1262 161B 8D 2C 1D			sta @CASETMP_0003
  1263 161E C9 01			cmp #$01
  1264 1620 D0 07			jne l_0448
  1265 1622			@
  1266
  1267 				; optimize OK (ai.inc), line = 10
  1268
  1269 1622 A9 01			lda #$01
  1270 1624 85 5B			sta NEWDIR
  1271
  1272 1626 4C 31 16			jmp a_0003
  1273 1629			l_0448
  1274 1629 C9 02			cmp #$02
  1275 162B D0 04			jne l_0455
  1276 162D			@
  1277
  1278 				; optimize OK (ai.inc), line = 11
  1279
  1280 162D A9 02			lda #$02
  1281 162F 85 5B			sta NEWDIR
  1282
  1283 1631			l_0455
  1284 1631			a_0003
  1285 1631			l_043D
  1286
  1287 				; optimize OK (ai.inc), line = 14
  1288
  1289 1631 A5 5C			lda AVAILDIR
  1290 1633 C9 0C			cmp #$0C
  1291 1635 D0 1F			jne l_0471
  1292 1637 A9 02			lda #$02
  1293 1639 20 40 11			jsr SYSTEM.RANDOM_006C
  1294 163C E8				inx
  1295 163D A9 02 95 18			mva #$02 :STACKORIGIN,x
  1296 1641 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1297 1645 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1298 1647 20 44 10			jsr addAX_CX
  1299 164A CA				dex
  1300 164B B4 18			ldy :STACKORIGIN,x
  1301 164D B9 40 10			lda adr.DIRECTION,y
  1302 1650 85 5B			sta NEWDIR
  1303 1652 CA				dex
  1304 1653 4C 6E 16			jmp l_0487
  1305 1656			l_0471
  1306
  1307 				; optimize OK (ai.inc), line = 16
  1308
  1309 1656 A5 5C			lda AVAILDIR
  1310 1658 8D 2D 1D			sta @CASETMP_0004
  1311 165B C9 04			cmp #$04
  1312 165D D0 07			jne l_0492
  1313 165F			@
  1314
  1315 				; optimize OK (ai.inc), line = 17
  1316
  1317 165F A9 04			lda #$04
  1318 1661 85 5B			sta NEWDIR
  1319
  1320 1663 4C 6E 16			jmp a_0004
  1321 1666			l_0492
  1322 1666 C9 08			cmp #$08
  1323 1668 D0 04			jne l_049F
  1324 166A			@
  1325
  1326 				; optimize OK (ai.inc), line = 18
  1327
  1328 166A A9 08			lda #$08
  1329 166C 85 5B			sta NEWDIR
  1330
  1331 166E			l_049F
  1332 166E			a_0004
  1333 166E			l_0487
  1334 166E			l_0419
  1335
  1336 				; ------------------------------------------------------------
  1337
  1338 = 1D2C			@CASETMP_0003	= DATAORIGIN+$0040
  1339 = 1D2D			@CASETMP_0004	= DATAORIGIN+$0041
  1340
  1341 = 1D2C			@VarData	= @CASETMP_0003
  1342 = 0002			@VarDataSize	= 2
  1343
  1344 166E			@exit
  1345 					.ifdef @new
  1346 					lda <@VarData
  1347 					sta :ztmp
  1348 					lda >@VarData
  1349 					ldy #@VarDataSize-1
  1350 					jmp @FreeMem
  1351 					els
  1352 166E 60				rts						; ret
  1353 					eif
  1354 				.endl
  1355
  1356 166F			.local	AISAPPER					; PROCEDURE
  1357
  1358 				; optimize OK (ai.inc), line = 31
  1359
  1360 166F A9 00			lda #$00
  1361 1671 8D 2E 1D			sta L
  1362 1674 8D 2F 1D			sta R
  1363 1677 8D 30 1D			sta U
  1364 167A 8D 31 1D			sta D
  1365
  1366 				; optimize OK (ai.inc), line = 32
  1367
  1368 167D AC DE 1C 84 12 AC + 	mwy PLY :bp2
  1369 1687 A0 01			ldy #PLY.Y-DATAORIGIN
  1370 1689 B1 12			lda (:bp2),y
  1371 168B 0A				asl @
  1372 168C A8				tay
  1373 168D A9 00			lda #$00
  1374 168F 18 79 0E 10			add adr.MUL40,y
  1375 1693 85 21			sta :STACKORIGIN+9
  1376 1695 A9 0C			lda #$0C
  1377 1697 79 0F 10			adc adr.MUL40+1,y
  1378 169A 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1379 169C A0 00			ldy #PLY.X-DATAORIGIN
  1380 169E A5 21			lda :STACKORIGIN+9
  1381 16A0 18 71 12			add (:bp2),y
  1382 16A3 85 5D			sta T0W
  1383 16A5 A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1384 16A7 69 00			adc #$00
  1385 16A9 85 5E			sta T0W+1
  1386
  1387 				; optimize OK (ai.inc), line = 34
  1388
  1389 16AB A5 5C			lda AVAILDIR
  1390 16AD 29 01			and #$01
  1391 16AF F0 73			jeq l_04E5
  1392
  1393 				; optimize OK (ai.inc), line = 35
  1394
  1395 16B1 A9 05			lda #$05
  1396 16B3 85 59			sta I0B
  1397
  1398 16B5			l_04EF
  1399 				; --- ForToDoCondition
  1400 16B5 A5 59			lda I0B
  1401 16B7 C9 01			cmp #$01
  1402 16B9 90 69			jcc l_04FD
  1403
  1404 				; optimize OK (ai.inc), line = 36
  1405
  1406 16BB 0A				asl @
  1407 16BC A8				tay
  1408 16BD A5 5D			lda T0W
  1409 16BF 38 F9 0E 10			sub adr.MUL40,y
  1410 16C3 85 21			sta :STACKORIGIN+9
  1411 16C5 A5 5E			lda T0W+1
  1412 16C7 F9 0F 10			sbc adr.MUL40+1,y
  1413 16CA 85 11			sta :bp+1
  1414 16CC A4 21			ldy :STACKORIGIN+9
  1415 16CE B1 10			lda (:bp),y
  1416 16D0 C9 20			cmp #$20
  1417 16D2 D0 03			jne l_0517
  1418 16D4 EE 30 1D			inc U
  1419 16D7			l_0517
  1420
  1421 				; optimize OK (ai.inc), line = 37
  1422
  1423 16D7 A5 59			lda I0B
  1424 16D9 0A				asl @
  1425 16DA A8				tay
  1426 16DB A5 5D			lda T0W
  1427 16DD 38 F9 0E 10			sub adr.MUL40,y
  1428 16E1 85 21			sta :STACKORIGIN+9
  1429 16E3 A5 5E			lda T0W+1
  1430 16E5 F9 0F 10			sbc adr.MUL40+1,y
  1431 16E8 85 11			sta :bp+1
  1432 16EA A5 21			lda :STACKORIGIN+9
  1433 16EC 18 69 01			add #$01
  1434 16EF A8				tay
  1435 16F0 90 02			scc
  1436 16F2 E6 11			inc :bp+1
  1437 16F4 B1 10			lda (:bp),y
  1438 16F6 C9 20			cmp #$20
  1439 16F8 D0 03			jne l_053C
  1440 16FA EE 30 1D			inc U
  1441 16FD			l_053C
  1442
  1443 				; optimize OK (ai.inc), line = 38
  1444
  1445 16FD A5 59			lda I0B
  1446 16FF 0A				asl @
  1447 1700 A8				tay
  1448 1701 A5 5D			lda T0W
  1449 1703 38 F9 0E 10			sub adr.MUL40,y
  1450 1707 85 21			sta :STACKORIGIN+9
  1451 1709 A5 5E			lda T0W+1
  1452 170B F9 0F 10			sbc adr.MUL40+1,y
  1453 170E 85 11			sta :bp+1
  1454 1710 A4 21			ldy :STACKORIGIN+9
  1455 1712 88				dey
  1456 1713 B0 02			scs
  1457 1715 C6 11			dec :bp+1
  1458 1717 B1 10			lda (:bp),y
  1459 1719 C9 20			cmp #$20
  1460 171B D0 03			jne l_0561
  1461 171D EE 30 1D			inc U
  1462 1720			l_0561
  1463
  1464 				; --- ForToDoEpilog
  1465 1720 C6 59			dec I0B
  1466 1722 10 91			jpl l_04EF
  1467 1724			l_04FD
  1468 1724			l_04E5
  1469
  1470 				; optimize OK (ai.inc), line = 42
  1471
  1472 1724 A5 5C			lda AVAILDIR
  1473 1726 29 02			and #$02
  1474 1728 F0 73			jeq l_0585
  1475
  1476 				; optimize OK (ai.inc), line = 43
  1477
  1478 172A A9 05			lda #$05
  1479 172C 85 59			sta I0B
  1480
  1481 172E			l_058F
  1482 				; --- ForToDoCondition
  1483 172E A5 59			lda I0B
  1484 1730 C9 01			cmp #$01
  1485 1732 90 69			jcc l_059D
  1486
  1487 				; optimize OK (ai.inc), line = 44
  1488
  1489 1734 0A				asl @
  1490 1735 A8				tay
  1491 1736 A5 5D			lda T0W
  1492 1738 18 79 0E 10			add adr.MUL40,y
  1493 173C 85 21			sta :STACKORIGIN+9
  1494 173E A5 5E			lda T0W+1
  1495 1740 79 0F 10			adc adr.MUL40+1,y
  1496 1743 85 11			sta :bp+1
  1497 1745 A4 21			ldy :STACKORIGIN+9
  1498 1747 B1 10			lda (:bp),y
  1499 1749 C9 20			cmp #$20
  1500 174B D0 03			jne l_05B7
  1501 174D EE 31 1D			inc D
  1502 1750			l_05B7
  1503
  1504 				; optimize OK (ai.inc), line = 45
  1505
  1506 1750 A5 59			lda I0B
  1507 1752 0A				asl @
  1508 1753 A8				tay
  1509 1754 A5 5D			lda T0W
  1510 1756 18 79 0E 10			add adr.MUL40,y
  1511 175A 85 21			sta :STACKORIGIN+9
  1512 175C A5 5E			lda T0W+1
  1513 175E 79 0F 10			adc adr.MUL40+1,y
  1514 1761 85 11			sta :bp+1
  1515 1763 A5 21			lda :STACKORIGIN+9
  1516 1765 18 69 01			add #$01
  1517 1768 A8				tay
  1518 1769 90 02			scc
  1519 176B E6 11			inc :bp+1
  1520 176D B1 10			lda (:bp),y
  1521 176F C9 20			cmp #$20
  1522 1771 D0 03			jne l_05DC
  1523 1773 EE 31 1D			inc D
  1524 1776			l_05DC
  1525
  1526 				; optimize OK (ai.inc), line = 46
  1527
  1528 1776 A5 59			lda I0B
  1529 1778 0A				asl @
  1530 1779 A8				tay
  1531 177A A5 5D			lda T0W
  1532 177C 18 79 0E 10			add adr.MUL40,y
  1533 1780 85 21			sta :STACKORIGIN+9
  1534 1782 A5 5E			lda T0W+1
  1535 1784 79 0F 10			adc adr.MUL40+1,y
  1536 1787 85 11			sta :bp+1
  1537 1789 A4 21			ldy :STACKORIGIN+9
  1538 178B 88				dey
  1539 178C B0 02			scs
  1540 178E C6 11			dec :bp+1
  1541 1790 B1 10			lda (:bp),y
  1542 1792 C9 20			cmp #$20
  1543 1794 D0 03			jne l_0601
  1544 1796 EE 31 1D			inc D
  1545 1799			l_0601
  1546
  1547 				; --- ForToDoEpilog
  1548 1799 C6 59			dec I0B
  1549 179B 10 91			jpl l_058F
  1550 179D			l_059D
  1551 179D			l_0585
  1552
  1553 				; optimize OK (ai.inc), line = 50
  1554
  1555 179D A5 5C			lda AVAILDIR
  1556 179F 29 04			and #$04
  1557 17A1 F0 5F			jeq l_0625
  1558
  1559 				; optimize OK (ai.inc), line = 51
  1560
  1561 17A3 A9 05			lda #$05
  1562 17A5 85 59			sta I0B
  1563
  1564 17A7			l_062F
  1565 				; --- ForToDoCondition
  1566 17A7 A5 59			lda I0B
  1567 17A9 C9 01			cmp #$01
  1568 17AB 90 55			jcc l_063D
  1569
  1570 				; optimize OK (ai.inc), line = 52
  1571
  1572 17AD A5 5D			lda T0W
  1573 17AF 38 E5 59			sub I0B
  1574 17B2 A8				tay
  1575 17B3 A5 5E			lda T0W+1
  1576 17B5 E9 00			sbc #$00
  1577 17B7 85 11			sta :bp+1
  1578 17B9 B1 10			lda (:bp),y
  1579 17BB C9 20			cmp #$20
  1580 17BD D0 03			jne l_0655
  1581 17BF EE 2E 1D			inc L
  1582 17C2			l_0655
  1583
  1584 				; optimize OK (ai.inc), line = 53
  1585
  1586 17C2 A5 5D			lda T0W
  1587 17C4 38 E5 59			sub I0B
  1588 17C7 A8				tay
  1589 17C8 A5 5E			lda T0W+1
  1590 17CA E9 00			sbc #$00
  1591 17CC 85 11			sta :bp+1
  1592 17CE 98				tya
  1593 17CF 18 69 28			add #$28
  1594 17D2 A8				tay
  1595 17D3 90 02			scc
  1596 17D5 E6 11			inc :bp+1
  1597 17D7 B1 10			lda (:bp),y
  1598 17D9 C9 20			cmp #$20
  1599 17DB D0 03			jne l_0678
  1600 17DD EE 2E 1D			inc L
  1601 17E0			l_0678
  1602
  1603 				; optimize OK (ai.inc), line = 54
  1604
  1605 17E0 A5 5D			lda T0W
  1606 17E2 38 E5 59			sub I0B
  1607 17E5 A8				tay
  1608 17E6 A5 5E			lda T0W+1
  1609 17E8 E9 00			sbc #$00
  1610 17EA 85 11			sta :bp+1
  1611 17EC 98				tya
  1612 17ED 38 E9 28			sub #$28
  1613 17F0 A8				tay
  1614 17F1 B0 02			scs
  1615 17F3 C6 11			dec :bp+1
  1616 17F5 B1 10			lda (:bp),y
  1617 17F7 C9 20			cmp #$20
  1618 17F9 D0 03			jne l_069B
  1619 17FB EE 2E 1D			inc L
  1620 17FE			l_069B
  1621
  1622 				; --- ForToDoEpilog
  1623 17FE C6 59			dec I0B
  1624 1800 10 A5			jpl l_062F
  1625 1802			l_063D
  1626 1802			l_0625
  1627
  1628 				; optimize OK (ai.inc), line = 58
  1629
  1630 1802 A5 5C			lda AVAILDIR
  1631 1804 29 08			and #$08
  1632 1806 F0 5D			jeq l_06BF
  1633
  1634 				; optimize OK (ai.inc), line = 59
  1635
  1636 1808 A9 05			lda #$05
  1637 180A 85 59			sta I0B
  1638
  1639 180C			l_06C9
  1640 				; --- ForToDoCondition
  1641 180C A5 59			lda I0B
  1642 180E C9 01			cmp #$01
  1643 1810 90 53			jcc l_06D7
  1644
  1645 				; optimize OK (ai.inc), line = 60
  1646
  1647 1812 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1648 181A A4 59			ldy I0B
  1649 181C B1 12			lda (:bp2),y
  1650 181E C9 20			cmp #$20
  1651 1820 D0 03			jne l_06EF
  1652 1822 EE 2F 1D			inc R
  1653 1825			l_06EF
  1654
  1655 				; optimize OK (ai.inc), line = 61
  1656
  1657 1825 A5 5D			lda T0W
  1658 1827 18 65 59			add I0B
  1659 182A A8				tay
  1660 182B A5 5E			lda T0W+1
  1661 182D 69 00			adc #$00
  1662 182F 85 11			sta :bp+1
  1663 1831 98				tya
  1664 1832 18 69 28			add #$28
  1665 1835 A8				tay
  1666 1836 90 02			scc
  1667 1838 E6 11			inc :bp+1
  1668 183A B1 10			lda (:bp),y
  1669 183C C9 20			cmp #$20
  1670 183E D0 03			jne l_0712
  1671 1840 EE 2F 1D			inc R
  1672 1843			l_0712
  1673
  1674 				; optimize OK (ai.inc), line = 62
  1675
  1676 1843 A5 5D			lda T0W
  1677 1845 18 65 59			add I0B
  1678 1848 A8				tay
  1679 1849 A5 5E			lda T0W+1
  1680 184B 69 00			adc #$00
  1681 184D 85 11			sta :bp+1
  1682 184F 98				tya
  1683 1850 38 E9 28			sub #$28
  1684 1853 A8				tay
  1685 1854 B0 02			scs
  1686 1856 C6 11			dec :bp+1
  1687 1858 B1 10			lda (:bp),y
  1688 185A C9 20			cmp #$20
  1689 185C D0 03			jne l_0735
  1690 185E EE 2F 1D			inc R
  1691 1861			l_0735
  1692
  1693 				; --- ForToDoEpilog
  1694 1861 C6 59			dec I0B
  1695 1863 10 A7			jpl l_06C9
  1696 1865			l_06D7
  1697 1865			l_06BF
  1698
  1699 				; optimize OK (ai.inc), line = 66
  1700
  1701 1865 AD 31 1D			lda D
  1702 1868 85 58			sta T0B
  1703
  1704 				; optimize OK (ai.inc), line = 67
  1705
  1706 186A CD 30 1D			cmp U
  1707 186D B0 05			jcs l_075D
  1708 186F AD 30 1D			lda U
  1709 1872 85 58			sta T0B
  1710 1874			l_075D
  1711
  1712 				; optimize OK (ai.inc), line = 68
  1713
  1714 1874 A5 58			lda T0B
  1715 1876 CD 2E 1D			cmp L
  1716 1879 B0 05			jcs l_077A
  1717 187B AD 2E 1D			lda L
  1718 187E 85 58			sta T0B
  1719 1880			l_077A
  1720
  1721 				; optimize OK (ai.inc), line = 69
  1722
  1723 1880 A5 58			lda T0B
  1724 1882 CD 2F 1D			cmp R
  1725 1885 B0 05			jcs l_0797
  1726 1887 AD 2F 1D			lda R
  1727 188A 85 58			sta T0B
  1728 188C			l_0797
  1729
  1730 				; optimize OK (ai.inc), line = 71
  1731
  1732 188C A5 58			lda T0B
  1733 188E CD 31 1D			cmp D
  1734 1891 D0 04			jne l_07B4
  1735 1893 A9 02			lda #$02
  1736 1895 85 58			sta T0B
  1737 1897			l_07B4
  1738
  1739 				; optimize OK (ai.inc), line = 72
  1740
  1741 1897 A5 58			lda T0B
  1742 1899 CD 30 1D			cmp U
  1743 189C D0 04			jne l_07CF
  1744 189E A9 01			lda #$01
  1745 18A0 85 58			sta T0B
  1746 18A2			l_07CF
  1747
  1748 				; optimize OK (ai.inc), line = 73
  1749
  1750 18A2 A5 58			lda T0B
  1751 18A4 CD 2E 1D			cmp L
  1752 18A7 D0 04			jne l_07EA
  1753 18A9 A9 04			lda #$04
  1754 18AB 85 58			sta T0B
  1755 18AD			l_07EA
  1756
  1757 				; optimize OK (ai.inc), line = 74
  1758
  1759 18AD A5 58			lda T0B
  1760 18AF CD 2F 1D			cmp R
  1761 18B2 D0 04			jne l_0805
  1762 18B4 A9 08			lda #$08
  1763 18B6 85 58			sta T0B
  1764 18B8			l_0805
  1765
  1766 				; optimize OK (ai.inc), line = 76
  1767
  1768 18B8 A5 5C			lda AVAILDIR
  1769 18BA 25 58			and T0B
  1770 18BC F0 07			jeq l_0824
  1771 18BE A5 58			lda T0B
  1772 18C0 85 5B			sta NEWDIR
  1773 18C2 4C C8 18			jmp l_0834
  1774 18C5			l_0824
  1775
  1776 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1777
  1778 18C5 20 EA 15			jsr AISTRAIGHT
  1779 18C8			l_0834
  1780
  1781 				; ------------------------------------------------------------
  1782
  1783 = 1D2E			L	= DATAORIGIN+$0042
  1784 = 1D2F			R	= DATAORIGIN+$0043
  1785 = 1D30			U	= DATAORIGIN+$0044
  1786 = 1D31			D	= DATAORIGIN+$0045
  1787 = 0001			@FORTMP_04EC	= $01
  1788 = 0001			@FORTMP_058C	= $01
  1789 = 0001			@FORTMP_062C	= $01
  1790 = 0001			@FORTMP_06C6	= $01
  1791
  1792 = 1D2E			@VarData	= L
  1793 = 0004			@VarDataSize	= 4
  1794
  1795 18C8			@exit
  1796 					.ifdef @new
  1797 					lda <@VarData
  1798 					sta :ztmp
  1799 					lda >@VarData
  1800 					ldy #@VarDataSize-1
  1801 					jmp @FreeMem
  1802 					els
  1803 18C8 60				rts						; ret
  1804 					eif
  1805 				.endl
  1806
  1807 18C9			.local	AIBULLY						; PROCEDURE
  1808
  1809 				; optimize OK (ai.inc), line = 84
  1810
  1811 18C9 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  1812 18D3 A0 04			ldy #PLY.DIR-DATAORIGIN
  1813 18D5 B1 12			lda (:bp2),y
  1814 18D7 85 58			sta T0B
  1815
  1816 				; optimize OK (ai.inc), line = 86
  1817
  1818 18D9 AD 04 1D			lda PLAYER1.ISALIVE
  1819 18DC 0D 0C 1D			ora PLAYER2.ISALIVE
  1820 18DF D0 03 4C 86 19		jeq l_0851
  1821
  1822 				; optimize OK (ai.inc), line = 88
  1823
  1824 18E4 AD 04 1D			lda PLAYER1.ISALIVE
  1825 18E7 F0 0F			jeq l_085E
  1826 18E9 AD E2 1C			lda PLAYER1
  1827 18EC 8D E0 1C			sta TMPPLY
  1828 18EF AD E3 1C			lda PLAYER1+1
  1829 18F2 8D E1 1C			sta TMPPLY+1
  1830 18F5 4C 04 19			jmp l_086D
  1831 18F8			l_085E
  1832 18F8 AD E4 1C			lda PLAYER2
  1833 18FB 8D E0 1C			sta TMPPLY
  1834 18FE AD E5 1C			lda PLAYER2+1
  1835 1901 8D E1 1C			sta TMPPLY+1
  1836 1904			l_086D
  1837
  1838 				; optimize OK (ai.inc), line = 90
  1839
  1840 1904 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  1841 190E A0 01			ldy #PLY.Y-DATAORIGIN
  1842 1910 B1 12			lda (:bp2),y
  1843 1912 85 21			sta :STACKORIGIN+9
  1844 1914 AC E0 1C 84 12 AC + 	mwy TMPPLY :bp2
  1845 191E A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1846 1920 B1 12			lda (:bp2),y
  1847 1922 C5 21			cmp :STACKORIGIN+9
  1848 1924 B0 07			jcs l_0886
  1849 1926 A9 01			lda #$01
  1850 1928 85 58			sta T0B
  1851 192A 4C 31 19			jmp l_0894
  1852 192D			l_0886
  1853 192D A9 02			lda #$02
  1854 192F 85 58			sta T0B
  1855 1931			l_0894
  1856
  1857 				; optimize OK (ai.inc), line = 91
  1858
  1859 1931 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  1860 193B A0 01			ldy #PLY.Y-DATAORIGIN
  1861 193D B1 12			lda (:bp2),y
  1862 193F 85 21			sta :STACKORIGIN+9
  1863 1941 AC E0 1C 84 12 AC + 	mwy TMPPLY :bp2
  1864 194B A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1865 194D B1 12			lda (:bp2),y
  1866 194F C5 21			cmp :STACKORIGIN+9
  1867 1951 F0 06			jeq l_08BEx
  1868 1953 A5 5C			lda AVAILDIR
  1869 1955 25 58			and T0B
  1870 1957 D0 2D			jne l_08BE
  1871 1959			l_08BEx
  1872
  1873 				; optimize OK (ai.inc), line = 92
  1874
  1875 1959 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  1876 1963 A0 00			ldy #PLY.X-DATAORIGIN
  1877 1965 B1 12			lda (:bp2),y
  1878 1967 85 21			sta :STACKORIGIN+9
  1879 1969 AC E0 1C 84 12 AC + 	mwy TMPPLY :bp2
  1880 1973 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1881 1975 B1 12			lda (:bp2),y
  1882 1977 C5 21			cmp :STACKORIGIN+9
  1883 1979 B0 07			jcs l_08D3
  1884 197B A9 04			lda #$04
  1885 197D 85 58			sta T0B
  1886 197F 4C 86 19			jmp l_08E1
  1887 1982			l_08D3
  1888 1982 A9 08			lda #$08
  1889 1984 85 58			sta T0B
  1890 1986			l_08E1
  1891 1986			l_08BE
  1892 1986			l_0851
  1893
  1894 				; optimize OK (ai.inc), line = 96
  1895
  1896 1986 A5 5C			lda AVAILDIR
  1897 1988 25 58			and T0B
  1898 198A F0 07			jeq l_0901
  1899 198C A5 58			lda T0B
  1900 198E 85 5B			sta NEWDIR
  1901 1990 4C 96 19			jmp l_0911
  1902 1993			l_0901
  1903
  1904 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  1905
  1906 1993 20 6F 16			jsr AISAPPER
  1907 1996			l_0911
  1908 1996			@exit
  1909 					.ifdef @new
  1910 					lda <@VarData
  1911 					sta :ztmp
  1912 					lda >@VarData
  1913 					ldy #@VarDataSize-1
  1914 					jmp @FreeMem
  1915 					els
  1916 1996 60				rts						; ret
  1917 					eif
  1918 				.endl
  1919
  1920 1997			.local	AIMIRROR					; PROCEDURE
  1921
  1922 				; optimize OK (ai.inc), line = 105
  1923
  1924 1997 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  1925 19A1 A0 04			ldy #PLY.DIR-DATAORIGIN
  1926 19A3 B1 12			lda (:bp2),y
  1927 19A5 85 58			sta T0B
  1928
  1929 				; optimize OK (ai.inc), line = 107
  1930
  1931 19A7 AD 04 1D			lda PLAYER1.ISALIVE
  1932 19AA F0 2F			jeq l_0928
  1933
  1934 				; optimize OK (ai.inc), line = 108
  1935
  1936 19AC AD 01 1D			lda PLAYER1.DIR
  1937 19AF 8D 32 1D			sta @CASETMP_0005
  1938 19B2 C9 01			cmp #$01
  1939 19B4 D0 07			jne l_0934
  1940 19B6			@
  1941
  1942 				; optimize OK (ai.inc), line = 109
  1943
  1944 19B6 A9 02			lda #$02
  1945 19B8 85 58			sta T0B
  1946
  1947 19BA 4C DB 19			jmp a_0005
  1948 19BD			l_0934
  1949 19BD C9 02			cmp #$02
  1950 19BF D0 07			jne l_0941
  1951 19C1			@
  1952
  1953 				; optimize OK (ai.inc), line = 110
  1954
  1955 19C1 A9 01			lda #$01
  1956 19C3 85 58			sta T0B
  1957
  1958 19C5 4C DB 19			jmp a_0005
  1959 19C8			l_0941
  1960 19C8 C9 04			cmp #$04
  1961 19CA D0 07			jne l_094E
  1962 19CC			@
  1963
  1964 				; optimize OK (ai.inc), line = 111
  1965
  1966 19CC A9 08			lda #$08
  1967 19CE 85 58			sta T0B
  1968
  1969 19D0 4C DB 19			jmp a_0005
  1970 19D3			l_094E
  1971 19D3 C9 08			cmp #$08
  1972 19D5 D0 04			jne l_095B
  1973 19D7			@
  1974
  1975 				; optimize OK (ai.inc), line = 112
  1976
  1977 19D7 A9 04			lda #$04
  1978 19D9 85 58			sta T0B
  1979
  1980 19DB			l_095B
  1981 19DB			a_0005
  1982 19DB			l_0928
  1983
  1984 				; optimize OK (ai.inc), line = 116
  1985
  1986 19DB A5 5C			lda AVAILDIR
  1987 19DD 25 58			and T0B
  1988 19DF F0 07			jeq l_0981
  1989 19E1 A5 58			lda T0B
  1990 19E3 85 5B			sta NEWDIR
  1991 19E5 4C EB 19			jmp l_0991
  1992 19E8			l_0981
  1993
  1994 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  1995
  1996 19E8 20 6F 16			jsr AISAPPER
  1997 19EB			l_0991
  1998
  1999 				; ------------------------------------------------------------
  2000
  2001 = 1D32			@CASETMP_0005	= DATAORIGIN+$0046
  2002
  2003 = 1D32			@VarData	= @CASETMP_0005
  2004 = 0001			@VarDataSize	= 1
  2005
  2006 19EB			@exit
  2007 					.ifdef @new
  2008 					lda <@VarData
  2009 					sta :ztmp
  2010 					lda >@VarData
  2011 					ldy #@VarDataSize-1
  2012 					jmp @FreeMem
  2013 					els
  2014 19EB 60				rts						; ret
  2015 					eif
  2016 				.endl
  2017
  2018 19EC			.local	HUMAN						; PROCEDURE
  2019
  2020 				; optimize OK (main.pas), line = 14
  2021
  2022 19EC AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2023 19F6 A0 04			ldy #PLY.DIR-DATAORIGIN
  2024 19F8 B1 12			lda (:bp2),y
  2025 19FA 85 5B			sta NEWDIR
  2026
  2027 				; optimize OK (main.pas), line = 15
  2028
  2029 19FC A9 02			lda #$02
  2030 19FE 8D 08 FF			sta JOY
  2031 1A01 A9 FF			lda #$FF
  2032 1A03 8D 30 FD			sta KEYSCAN
  2033 1A06 AD 08 FF			lda JOY
  2034 1A09 49 FF			eor #$FF
  2035 1A0B 85 58			sta T0B
  2036
  2037 				; optimize OK (main.pas), line = 17
  2038
  2039 1A0D 8D 33 1D			sta @CASETMP_0006
  2040 1A10 C9 01			cmp #$01
  2041 1A12 D0 19			jne l_09B9
  2042 1A14			@
  2043
  2044 				; optimize OK (main.pas), line = 18
  2045
  2046 1A14 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2047 1A1E A0 04			ldy #PLY.DIR-DATAORIGIN
  2048 1A20 B1 12			lda (:bp2),y
  2049 1A22 C9 02			cmp #$02
  2050 1A24 F0 04			jeq l_09CB
  2051 1A26 A9 01			lda #$01
  2052 1A28 85 5B			sta NEWDIR
  2053 1A2A			l_09CB
  2054
  2055 1A2A 4C 81 1A			jmp a_0006
  2056 1A2D			l_09B9
  2057 1A2D C9 02			cmp #$02
  2058 1A2F D0 19			jne l_09DB
  2059 1A31			@
  2060
  2061 				; optimize OK (main.pas), line = 19
  2062
  2063 1A31 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2064 1A3B A0 04			ldy #PLY.DIR-DATAORIGIN
  2065 1A3D B1 12			lda (:bp2),y
  2066 1A3F C9 01			cmp #$01
  2067 1A41 F0 04			jeq l_09ED
  2068 1A43 A9 02			lda #$02
  2069 1A45 85 5B			sta NEWDIR
  2070 1A47			l_09ED
  2071
  2072 1A47 4C 81 1A			jmp a_0006
  2073 1A4A			l_09DB
  2074 1A4A C9 04			cmp #$04
  2075 1A4C D0 19			jne l_09FD
  2076 1A4E			@
  2077
  2078 				; optimize OK (main.pas), line = 20
  2079
  2080 1A4E AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2081 1A58 A0 04			ldy #PLY.DIR-DATAORIGIN
  2082 1A5A B1 12			lda (:bp2),y
  2083 1A5C C9 08			cmp #$08
  2084 1A5E F0 04			jeq l_0A0F
  2085 1A60 A9 04			lda #$04
  2086 1A62 85 5B			sta NEWDIR
  2087 1A64			l_0A0F
  2088
  2089 1A64 4C 81 1A			jmp a_0006
  2090 1A67			l_09FD
  2091 1A67 C9 08			cmp #$08
  2092 1A69 D0 16			jne l_0A1F
  2093 1A6B			@
  2094
  2095 				; optimize OK (main.pas), line = 21
  2096
  2097 1A6B AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2098 1A75 A0 04			ldy #PLY.DIR-DATAORIGIN
  2099 1A77 B1 12			lda (:bp2),y
  2100 1A79 C9 04			cmp #$04
  2101 1A7B F0 04			jeq l_0A31
  2102 1A7D A9 08			lda #$08
  2103 1A7F 85 5B			sta NEWDIR
  2104 1A81			l_0A31
  2105
  2106 1A81			l_0A1F
  2107 1A81			a_0006
  2108
  2109 				; optimize OK (main.pas), line = 24
  2110
  2111 1A81 A5 5B			lda NEWDIR
  2112 1A83 25 5C			and AVAILDIR
  2113 1A85 D0 18			jne l_0A58
  2114
  2115 				; optimize OK (main.pas), line = 25
  2116
  2117 1A87 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2118 1A91 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2119 1A93 A9 00			lda #$00
  2120 1A95 91 12			sta (:bp2),y
  2121 1A97 A0 02			ldy #PLY.HEAD-DATAORIGIN
  2122 1A99 A9 2A			lda #$2A
  2123 1A9B 91 12			sta (:bp2),y
  2124 1A9D C6 5A			dec ALIVE
  2125 1A9F			l_0A58
  2126
  2127 				; ------------------------------------------------------------
  2128
  2129 = 1D33			@CASETMP_0006	= DATAORIGIN+$0047
  2130
  2131 = 1D33			@VarData	= @CASETMP_0006
  2132 = 0001			@VarDataSize	= 1
  2133
  2134 1A9F			@exit
  2135 					.ifdef @new
  2136 					lda <@VarData
  2137 					sta :ztmp
  2138 					lda >@VarData
  2139 					ldy #@VarDataSize-1
  2140 					jmp @FreeMem
  2141 					els
  2142 1A9F 60				rts						; ret
  2143 					eif
  2144 				.endl
  2145
  2146 1AA0			.local	PLAYERMOVE					; PROCEDURE
  2147
  2148 				; optimize OK (main.pas), line = 33
  2149
  2150 1AA0 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2151 1AAA A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2152 1AAC B1 12			lda (:bp2),y
  2153 1AAE D0 03 4C D5 1B		jeq l_0A77
  2154
  2155 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 34
  2156
  2157 1AB3 20 01 12			jsr CHECKAVAILDIR
  2158
  2159 				; optimize OK (main.pas), line = 36
  2160
  2161 1AB6 A5 5C			lda AVAILDIR
  2162 1AB8 D0 35			jne l_0A8B
  2163
  2164 				; optimize OK (main.pas), line = 37
  2165
  2166 1ABA AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2167 1AC4 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2168 1AC6 A9 00			lda #$00
  2169 1AC8 91 12			sta (:bp2),y
  2170 1ACA C6 5A			dec ALIVE
  2171
  2172 				; optimize OK (main.pas), line = 38
  2173
  2174 1ACC A0 00			ldy #PLY.X-DATAORIGIN
  2175 1ACE B1 12			lda (:bp2),y
  2176 1AD0 8D 1D 1D			sta PUTCHAR.X
  2177 1AD3 A0 01			ldy #PLY.Y-DATAORIGIN
  2178 1AD5 B1 12			lda (:bp2),y
  2179 1AD7 8D 1E 1D			sta PUTCHAR.Y
  2180 1ADA A0 03			ldy #PLY.COLOUR-DATAORIGIN
  2181 1ADC B1 12			lda (:bp2),y
  2182 1ADE 18 69 80			add #$80
  2183 1AE1 8D 20 1D			sta PUTCHAR.C
  2184 1AE4 A9 57			lda #$57
  2185 1AE6 8D 1F 1D			sta PUTCHAR.V
  2186 1AE9 20 71 11			jsr PUTCHAR
  2187 1AEC 4C D5 1B			jmp l_0AAC
  2188 1AEF			l_0A8B
  2189
  2190 				; optimize OK (main.pas), line = 41
  2191
  2192 1AEF AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2193 1AF9 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  2194 1AFB B1 12			lda (:bp2),y
  2195 1AFD 8D 34 1D			sta @CASETMP_0007
  2196 1B00 C9 00			cmp #$00
  2197 1B02 D0 06			jne l_0AB7
  2198 1B04			@
  2199
  2200 				; optimize FAIL ('HUMAN', main.pas), line = 42
  2201
  2202 1B04 20 EC 19			jsr HUMAN
  2203 1B07 4C 2F 1B			jmp a_0007
  2204 1B0A			l_0AB7
  2205 1B0A C9 01			cmp #$01
  2206 1B0C D0 06			jne l_0AC1
  2207 1B0E			@
  2208
  2209 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 43
  2210
  2211 1B0E 20 EA 15			jsr AISTRAIGHT
  2212 1B11 4C 2F 1B			jmp a_0007
  2213 1B14			l_0AC1
  2214 1B14 C9 02			cmp #$02
  2215 1B16 D0 06			jne l_0ACB
  2216 1B18			@
  2217
  2218 				; optimize FAIL ('AISAPPER', main.pas), line = 44
  2219
  2220 1B18 20 6F 16			jsr AISAPPER
  2221 1B1B 4C 2F 1B			jmp a_0007
  2222 1B1E			l_0ACB
  2223 1B1E C9 03			cmp #$03
  2224 1B20 D0 06			jne l_0AD5
  2225 1B22			@
  2226
  2227 				; optimize FAIL ('AIBULLY', main.pas), line = 45
  2228
  2229 1B22 20 C9 18			jsr AIBULLY
  2230 1B25 4C 2F 1B			jmp a_0007
  2231 1B28			l_0AD5
  2232 1B28 C9 04			cmp #$04
  2233 1B2A D0 03			jne l_0ADF
  2234 1B2C			@
  2235
  2236 				; optimize FAIL ('AIMIRROR', main.pas), line = 46
  2237
  2238 1B2C 20 97 19			jsr AIMIRROR
  2239 1B2F			l_0ADF
  2240 1B2F			a_0007
  2241
  2242 				; optimize FAIL ('DRAWTAIL', main.pas), line = 49
  2243
  2244 1B2F 20 C9 12			jsr DRAWTAIL
  2245 1B32 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2246 1B3C A0 04			ldy #PLY.DIR-DATAORIGIN
  2247 1B3E A5 5B			lda NEWDIR
  2248 1B40 91 12			sta (:bp2),y
  2249
  2250 				; optimize OK (main.pas), line = 51
  2251
  2252 1B42 A5 5B			lda NEWDIR
  2253 1B44 8D 35 1D			sta @CASETMP_0008
  2254 1B47 C9 01			cmp #$01
  2255 1B49 D0 16			jne l_0AFB
  2256 1B4B			@
  2257
  2258 				; optimize OK (main.pas), line = 52
  2259
  2260 1B4B AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2261 1B55 A0 01			ldy #PLY.Y-DATAORIGIN
  2262 1B57 B1 12			lda (:bp2),y
  2263 1B59 38 E9 01			sub #$01
  2264 1B5C 91 12			sta (:bp2),y
  2265
  2266 1B5E 4C AC 1B			jmp a_0008
  2267 1B61			l_0AFB
  2268 1B61 C9 02			cmp #$02
  2269 1B63 D0 16			jne l_0B05
  2270 1B65			@
  2271
  2272 				; optimize OK (main.pas), line = 53
  2273
  2274 1B65 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2275 1B6F A0 01			ldy #PLY.Y-DATAORIGIN
  2276 1B71 B1 12			lda (:bp2),y
  2277 1B73 18 69 01			add #$01
  2278 1B76 91 12			sta (:bp2),y
  2279
  2280 1B78 4C AC 1B			jmp a_0008
  2281 1B7B			l_0B05
  2282 1B7B C9 04			cmp #$04
  2283 1B7D D0 16			jne l_0B0F
  2284 1B7F			@
  2285
  2286 				; optimize OK (main.pas), line = 54
  2287
  2288 1B7F AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2289 1B89 A0 00			ldy #PLY.X-DATAORIGIN
  2290 1B8B B1 12			lda (:bp2),y
  2291 1B8D 38 E9 01			sub #$01
  2292 1B90 91 12			sta (:bp2),y
  2293
  2294 1B92 4C AC 1B			jmp a_0008
  2295 1B95			l_0B0F
  2296 1B95 C9 08			cmp #$08
  2297 1B97 D0 13			jne l_0B19
  2298 1B99			@
  2299
  2300 				; optimize OK (main.pas), line = 55
  2301
  2302 1B99 AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2303 1BA3 A0 00			ldy #PLY.X-DATAORIGIN
  2304 1BA5 B1 12			lda (:bp2),y
  2305 1BA7 18 69 01			add #$01
  2306 1BAA 91 12			sta (:bp2),y
  2307
  2308 1BAC			l_0B19
  2309 1BAC			a_0008
  2310
  2311 				; optimize OK (main.pas), line = 58
  2312
  2313 1BAC AC DE 1C 84 12 AC + 	mwy PLY :bp2
  2314 1BB6 A0 00			ldy #PLY.X-DATAORIGIN
  2315 1BB8 B1 12			lda (:bp2),y
  2316 1BBA 8D 1D 1D			sta PUTCHAR.X
  2317 1BBD A0 01			ldy #PLY.Y-DATAORIGIN
  2318 1BBF B1 12			lda (:bp2),y
  2319 1BC1 8D 1E 1D			sta PUTCHAR.Y
  2320 1BC4 A0 02			ldy #PLY.HEAD-DATAORIGIN
  2321 1BC6 B1 12			lda (:bp2),y
  2322 1BC8 8D 1F 1D			sta PUTCHAR.V
  2323 1BCB A0 03			ldy #PLY.COLOUR-DATAORIGIN
  2324 1BCD B1 12			lda (:bp2),y
  2325 1BCF 8D 20 1D			sta PUTCHAR.C
  2326 1BD2 20 71 11			jsr PUTCHAR
  2327 1BD5			l_0AAC
  2328 1BD5			l_0A77
  2329
  2330 				; ------------------------------------------------------------
  2331
  2332 = 1D34			@CASETMP_0007	= DATAORIGIN+$0048
  2333 = 1D35			@CASETMP_0008	= DATAORIGIN+$0049
  2334
  2335 = 1D34			@VarData	= @CASETMP_0007
  2336 = 0002			@VarDataSize	= 2
  2337
  2338 1BD5			@exit
  2339 					.ifdef @new
  2340 					lda <@VarData
  2341 					sta :ztmp
  2342 					lda >@VarData
  2343 					ldy #@VarDataSize-1
  2344 					jmp @FreeMem
  2345 					els
  2346 1BD5 60				rts						; ret
  2347 					eif
  2348 				.endl
  2349
  2350 1BD6			.local	STARTSCREEN					; PROCEDURE
  2351
  2352 				; --- RepeatUntilProlog
  2353 1BD6			l_0B36
  2354
  2355 				; optimize OK (main.pas), line = 70
  2356
  2357 1BD6 A9 02			lda #$02
  2358 1BD8 8D 08 FF			sta JOY
  2359 1BDB A9 FF			lda #$FF
  2360 1BDD 8D 30 FD			sta KEYSCAN
  2361 1BE0 AD 08 FF			lda JOY
  2362 1BE3 49 FF			eor #$FF
  2363 1BE5 85 58			sta T0B
  2364
  2365 				; optimize OK (main.pas), line = 71
  2366
  2367 1BE7 C9 40			cmp #$40
  2368 1BE9 D0 EB			jne l_0B36
  2369 1BEB			@exit
  2370 					.ifdef @new
  2371 					lda <@VarData
  2372 					sta :ztmp
  2373 					lda >@VarData
  2374 					ldy #@VarDataSize-1
  2375 					jmp @FreeMem
  2376 					els
  2377 1BEB 60				rts						; ret
  2378 					eif
  2379 				.endl
  2380
  2381 1BEC			.local	MAINLOOP					; PROCEDURE
  2382
  2383 				; optimize OK (main.pas), line = 78
  2384
  2385 1BEC A9 FF			lda #$FF
  2386 1BEE 85 5A			sta ALIVE
  2387 1BF0 20 EB 13			jsr INITPLAYFIELD
  2388 1BF3 20 D6 1B			jsr STARTSCREEN
  2389
  2390 				; --- RepeatUntilProlog
  2391 1BF6			l_0B60
  2392
  2393 				; optimize OK (main.pas), line = 81
  2394
  2395 1BF6 A9 03			lda #$03
  2396 1BF8 8D F8 1C			sta SYSTEM.PAUSE_006B.N
  2397 1BFB A9 00			lda #$00
  2398 1BFD 8D F9 1C			sta SYSTEM.PAUSE_006B.N+1
  2399 1C00 20 23 11			jsr SYSTEM.PAUSE_006B
  2400
  2401 				; optimize OK (main.pas), line = 82
  2402
  2403 1C03 AD E2 1C			lda PLAYER1
  2404 1C06 8D DE 1C			sta PLY
  2405 1C09 AD E3 1C			lda PLAYER1+1
  2406 1C0C 8D DF 1C			sta PLY+1
  2407 1C0F 20 A0 1A			jsr PLAYERMOVE
  2408
  2409 				; optimize OK (main.pas), line = 83
  2410
  2411 1C12 AD E4 1C			lda PLAYER2
  2412 1C15 8D DE 1C			sta PLY
  2413 1C18 AD E5 1C			lda PLAYER2+1
  2414 1C1B 8D DF 1C			sta PLY+1
  2415 1C1E 20 A0 1A			jsr PLAYERMOVE
  2416
  2417 				; optimize OK (main.pas), line = 84
  2418
  2419 1C21 AD E6 1C			lda PLAYER3
  2420 1C24 8D DE 1C			sta PLY
  2421 1C27 AD E7 1C			lda PLAYER3+1
  2422 1C2A 8D DF 1C			sta PLY+1
  2423 1C2D 20 A0 1A			jsr PLAYERMOVE
  2424
  2425 				; optimize OK (main.pas), line = 85
  2426
  2427 1C30 AD E8 1C			lda PLAYER4
  2428 1C33 8D DE 1C			sta PLY
  2429 1C36 AD E9 1C			lda PLAYER4+1
  2430 1C39 8D DF 1C			sta PLY+1
  2431 1C3C 20 A0 1A			jsr PLAYERMOVE
  2432
  2433 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 86
  2434
  2435 1C3F 20 96 12			jsr ANIMATEOBSTACLES
  2436
  2437 				; optimize OK (main.pas), line = 87
  2438
  2439 1C42 A5 5A			lda ALIVE
  2440 1C44 F0 04			jeq l_0B60x
  2441 1C46 C9 FF			cmp #$FF
  2442 1C48 D0 AC			jne l_0B60
  2443 1C4A			l_0B60x
  2444
  2445 				; optimize OK (main.pas), line = 89
  2446
  2447 1C4A AD 04 1D			lda PLAYER1.ISALIVE
  2448 1C4D F0 03			jeq l_0BA0
  2449 1C4F EE 03 1D			inc PLAYER1.SCORE
  2450 1C52			l_0BA0
  2451
  2452 				; optimize OK (main.pas), line = 90
  2453
  2454 1C52 AD 0C 1D			lda PLAYER2.ISALIVE
  2455 1C55 F0 03			jeq l_0BB3
  2456 1C57 EE 0B 1D			inc PLAYER2.SCORE
  2457 1C5A			l_0BB3
  2458
  2459 				; optimize OK (main.pas), line = 91
  2460
  2461 1C5A AD 14 1D			lda PLAYER3.ISALIVE
  2462 1C5D F0 03			jeq l_0BC6
  2463 1C5F EE 13 1D			inc PLAYER3.SCORE
  2464 1C62			l_0BC6
  2465
  2466 				; optimize OK (main.pas), line = 92
  2467
  2468 1C62 AD 1C 1D			lda PLAYER4.ISALIVE
  2469 1C65 F0 03			jeq l_0BD9
  2470 1C67 EE 1B 1D			inc PLAYER4.SCORE
  2471 1C6A			l_0BD9
  2472
  2473 				; optimize OK (main.pas), line = 94
  2474
  2475 1C6A A9 64			lda #$64
  2476 1C6C 8D F8 1C			sta SYSTEM.PAUSE_006B.N
  2477 1C6F A9 00			lda #$00
  2478 1C71 8D F9 1C			sta SYSTEM.PAUSE_006B.N+1
  2479 1C74 20 23 11			jsr SYSTEM.PAUSE_006B
  2480 1C77			@exit
  2481 					.ifdef @new
  2482 					lda <@VarData
  2483 					sta :ztmp
  2484 					lda >@VarData
  2485 					ldy #@VarDataSize-1
  2486 					jmp @FreeMem
  2487 					els
  2488 1C77 60				rts						; ret
  2489 					eif
  2490 				.endl
  2491 1C78			l_0007
  2492
  2493 				; --- RepeatUntilProlog
  2494 1C78			l_0BE4
  2495
  2496 				; optimize OK (main.pas), line = 101
  2497
  2498 1C78 A9 30			lda #$30
  2499 1C7A 8D 03 1D			sta PLAYER1.SCORE
  2500 1C7D 8D 0B 1D			sta PLAYER2.SCORE
  2501
  2502 				; optimize OK (main.pas), line = 102
  2503
  2504 1C80 8D 13 1D			sta PLAYER3.SCORE
  2505 1C83 8D 1B 1D			sta PLAYER4.SCORE
  2506
  2507 				; optimize OK (main.pas), line = 104
  2508
  2509 1C86 A9 00			lda #$00
  2510 1C88 8D FC 1C			sta GAMEOVER
  2511
  2512 				; --- RepeatUntilProlog
  2513 1C8B			l_0BF9
  2514
  2515 				; optimize FAIL ('MAINLOOP', main.pas), line = 106
  2516
  2517 1C8B 20 EC 1B			jsr MAINLOOP
  2518
  2519 				; optimize OK (main.pas), line = 107
  2520
  2521 1C8E AD 03 1D			lda PLAYER1.SCORE
  2522 1C91 C9 39			cmp #$39
  2523 1C93 D0 05			jne l_0C0C
  2524 1C95 A9 01			lda #$01
  2525 1C97 8D FC 1C			sta GAMEOVER
  2526 1C9A			l_0C0C
  2527
  2528 				; optimize OK (main.pas), line = 108
  2529
  2530 1C9A AD 0B 1D			lda PLAYER2.SCORE
  2531 1C9D C9 39			cmp #$39
  2532 1C9F D0 05			jne l_0C25
  2533 1CA1 A9 01			lda #$01
  2534 1CA3 8D FC 1C			sta GAMEOVER
  2535 1CA6			l_0C25
  2536
  2537 				; optimize OK (main.pas), line = 109
  2538
  2539 1CA6 AD 13 1D			lda PLAYER3.SCORE
  2540 1CA9 C9 39			cmp #$39
  2541 1CAB D0 05			jne l_0C3E
  2542 1CAD A9 01			lda #$01
  2543 1CAF 8D FC 1C			sta GAMEOVER
  2544 1CB2			l_0C3E
  2545
  2546 				; optimize OK (main.pas), line = 110
  2547
  2548 1CB2 AD 1B 1D			lda PLAYER4.SCORE
  2549 1CB5 C9 39			cmp #$39
  2550 1CB7 D0 05			jne l_0C57
  2551 1CB9 A9 01			lda #$01
  2552 1CBB 8D FC 1C			sta GAMEOVER
  2553 1CBE			l_0C57
  2554
  2555 				; optimize OK (main.pas), line = 111
  2556
  2557 1CBE AD FC 1C			lda GAMEOVER
  2558 1CC1 F0 C8			jeq l_0BF9
  2559
  2560 				; optimize FAIL ('SHOWSCORE', main.pas), line = 113
  2561
  2562 1CC3 20 9C 11			jsr SHOWSCORE
  2563
  2564 				; optimize OK (main.pas), line = 115
  2565
  2566 1CC6 A9 C8			lda #$C8
  2567 1CC8 8D F8 1C			sta SYSTEM.PAUSE_006B.N
  2568 1CCB A9 00			lda #$00
  2569 1CCD 8D F9 1C			sta SYSTEM.PAUSE_006B.N+1
  2570 1CD0 20 23 11			jsr SYSTEM.PAUSE_006B
  2571
  2572 				; optimize OK (main.pas), line = 116
  2573
  2574 1CD3 4C 78 1C			jmp l_0BE4
  2575
  2576 				; ------------------------------------------------------------
  2577
  2578 = 0800			ATTRIBUTE_ADDR	= $0800
  2579 = 0C00			SCREEN_ADDR	= $0C00
  2580 = 0009			VICTORIES	= $09
  2581 = 0005			LOOK_AHEAD	= $05
  2582 = 0020			EMPTY	= $20
  2583 = 00A0			WALL	= $A0
  2584 = 0041			WALL_COLOUR	= $41
  2585 = 0030			ZERO	= $30
  2586 = 0056			OBSTACLE_1	= $56
  2587 = 005B			OBSTACLE_2	= $5B
  2588 = 0035			OBST_COLOUR	= $35
  2589 = 0051			PLY_HEAD	= $51
  2590 = 002A			PLY_CRASH	= $2A
  2591 = 0057			PLY_BUSTED	= $57
  2592 = 0042			PLY_TAIL_UD	= $42
  2593 = 0040			PLY_TAIL_LR	= $40
  2594 = 007D			PLY_TAIL_RD	= $7D
  2595 = 006E			PLY_TAIL_RU	= $6E
  2596 = 006D			PLY_TAIL_LD	= $6D
  2597 = 0070			PLY_TAIL_LU	= $70
  2598 = 005F			PLY1_COLOUR	= $5F
  2599 = 005D			PLY2_COLOUR	= $5D
  2600 = 0071			PLY3_COLOUR	= $71
  2601 = 0055			PLY4_COLOUR	= $55
  2602 = 0000			PLY_CTRL	= $00
  2603 = 0001			AI_STRAIGHT	= $01
  2604 = 0002			AI_SAPPER	= $02
  2605 = 0003			AI_BULLY	= $03
  2606 = 0004			AI_MIRROR	= $04
  2607 = 0001			JOY_UP	= $01
  2608 = 0002			JOY_DOWN	= $02
  2609 = 0004			JOY_LEFT	= $04
  2610 = 0008			JOY_RIGHT	= $08
  2611 = 0040			JOY_FIRE	= $40
  2612 = 0002			JOY_SELECT_1	= $02
  2613 = 0004			JOY_SELECT_2	= $04
  2614 = 100E			adr.MUL40	= CODEORIGIN+$0000
  2615 1CD6			.var MUL40	= adr.MUL40 .word
  2616 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  2617 1CD6			.var DIRECTION	= adr.DIRECTION .word
  2618 = FD30			KEYSCAN	= $FD30
  2619 = FF08			JOY	= $FF08
  2620 = FF15			BACKGROUND	= $FF15
  2621 = FF19			BOREDER	= $FF19
  2622 = 0058			T0B	= $58
  2623 = 0059			I0B	= $59
  2624 = 005A			ALIVE	= $5A
  2625 = 005B			NEWDIR	= $5B
  2626 = 005C			AVAILDIR	= $5C
  2627 = 005D			T0W	= $5D
  2628 = 005F			adr.PLY	= $5F
  2629 1CD6			.var PLY	= adr.PLY .word
  2630 = 1CEC			PLY.X	= DATAORIGIN+$0000
  2631 = 1CED			PLY.Y	= DATAORIGIN+$0001
  2632 = 1CEE			PLY.HEAD	= DATAORIGIN+$0002
  2633 = 1CEF			PLY.COLOUR	= DATAORIGIN+$0003
  2634 = 1CF0			PLY.DIR	= DATAORIGIN+$0004
  2635 = 1CF1			PLY.BRAIN	= DATAORIGIN+$0005
  2636 = 1CF2			PLY.SCORE	= DATAORIGIN+$0006
  2637 = 1CF3			PLY.ISALIVE	= DATAORIGIN+$0007
  2638 = 0061			adr.TMPPLY	= $61
  2639 1CD6			.var TMPPLY	= adr.TMPPLY .word
  2640 = 1CEC			TMPPLY.X	= DATAORIGIN+$0000
  2641 = 1CED			TMPPLY.Y	= DATAORIGIN+$0001
  2642 = 1CEE			TMPPLY.HEAD	= DATAORIGIN+$0002
  2643 = 1CEF			TMPPLY.COLOUR	= DATAORIGIN+$0003
  2644 = 1CF0			TMPPLY.DIR	= DATAORIGIN+$0004
  2645 = 1CF1			TMPPLY.BRAIN	= DATAORIGIN+$0005
  2646 = 1CF2			TMPPLY.SCORE	= DATAORIGIN+$0006
  2647 = 1CF3			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  2648 = 1CFC			GAMEOVER	= DATAORIGIN+$0010
  2649 = 1CFD			adr.PLAYER1	= [DATAORIGIN+$0011] .array [6]
  2650 1CD6			.var PLAYER1	= adr.PLAYER1 .word
  2651 = 1CFD			PLAYER1.X	= DATAORIGIN+$0011
  2652 = 1CFE			PLAYER1.Y	= DATAORIGIN+$0012
  2653 = 1CFF			PLAYER1.HEAD	= DATAORIGIN+$0013
  2654 = 1D00			PLAYER1.COLOUR	= DATAORIGIN+$0014
  2655 = 1D01			PLAYER1.DIR	= DATAORIGIN+$0015
  2656 = 1D02			PLAYER1.BRAIN	= DATAORIGIN+$0016
  2657 = 1D03			PLAYER1.SCORE	= DATAORIGIN+$0017
  2658 = 1D04			PLAYER1.ISALIVE	= DATAORIGIN+$0018
  2659 = 1D05			adr.PLAYER2	= [DATAORIGIN+$0019] .array [6]
  2660 1CD6			.var PLAYER2	= adr.PLAYER2 .word
  2661 = 1D05			PLAYER2.X	= DATAORIGIN+$0019
  2662 = 1D06			PLAYER2.Y	= DATAORIGIN+$001A
  2663 = 1D07			PLAYER2.HEAD	= DATAORIGIN+$001B
  2664 = 1D08			PLAYER2.COLOUR	= DATAORIGIN+$001C
  2665 = 1D09			PLAYER2.DIR	= DATAORIGIN+$001D
  2666 = 1D0A			PLAYER2.BRAIN	= DATAORIGIN+$001E
  2667 = 1D0B			PLAYER2.SCORE	= DATAORIGIN+$001F
  2668 = 1D0C			PLAYER2.ISALIVE	= DATAORIGIN+$0020
  2669 = 1D0D			adr.PLAYER3	= [DATAORIGIN+$0021] .array [6]
  2670 1CD6			.var PLAYER3	= adr.PLAYER3 .word
  2671 = 1D0D			PLAYER3.X	= DATAORIGIN+$0021
  2672 = 1D0E			PLAYER3.Y	= DATAORIGIN+$0022
  2673 = 1D0F			PLAYER3.HEAD	= DATAORIGIN+$0023
  2674 = 1D10			PLAYER3.COLOUR	= DATAORIGIN+$0024
  2675 = 1D11			PLAYER3.DIR	= DATAORIGIN+$0025
  2676 = 1D12			PLAYER3.BRAIN	= DATAORIGIN+$0026
  2677 = 1D13			PLAYER3.SCORE	= DATAORIGIN+$0027
  2678 = 1D14			PLAYER3.ISALIVE	= DATAORIGIN+$0028
  2679 = 1D15			adr.PLAYER4	= [DATAORIGIN+$0029] .array [6]
  2680 1CD6			.var PLAYER4	= adr.PLAYER4 .word
  2681 = 1D15			PLAYER4.X	= DATAORIGIN+$0029
  2682 = 1D16			PLAYER4.Y	= DATAORIGIN+$002A
  2683 = 1D17			PLAYER4.HEAD	= DATAORIGIN+$002B
  2684 = 1D18			PLAYER4.COLOUR	= DATAORIGIN+$002C
  2685 = 1D19			PLAYER4.DIR	= DATAORIGIN+$002D
  2686 = 1D1A			PLAYER4.BRAIN	= DATAORIGIN+$002E
  2687 = 1D1B			PLAYER4.SCORE	= DATAORIGIN+$002F
  2688 = 1D1C			PLAYER4.ISALIVE	= DATAORIGIN+$0030
  2689 1CD6			@exit
  2690
  2691 1CD6 A2 00		@halt	ldx #$00
  2692 1CD8 9A				txs
  2693
  2694 1CD9 60				rts
  2695
  2696 				; ------------------------------------------------------------
  2697
  2698 				; ------------------------------------------------------------
  2699
  2700 1CDA			.local	@DEFINES
  2701 1CDA			C4P
  2702 				.endl
  2703
  2704 1CDA			.local	@RESOURCE
  2705 				.endl
  2706
  2707 = 1CDA 0E 10		MUL40
  2707 = 1CDC 40 10		DIRECTION
  2707 = 1CDE 5F 00		PLY
  2707 = 1CE0 61 00		TMPPLY
  2707 = 1CE2 FD 1C		PLAYER1
  2707 = 1CE4 05 1D		PLAYER2
  2707 = 1CE6 0D 1D		PLAYER3
  2707 = 1CE8 15 1D		PLAYER4
  2707 				.endl							; MAIN
  2708
  2709 				; ------------------------------------------------------------
  2710 				; ------------------------------------------------------------
  2711
  2712 				.macro	UNITINITIALIZATION
  2713 				
  2714 					.ifdef MAIN.SYSTEM.@UnitInit
  2715 					jsr MAIN.SYSTEM.@UnitInit
  2716 					eif
  2717 				.endm
  2718
  2719 				; ------------------------------------------------------------
  2720
  2721 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2722 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2722 				SYSTEM: $10D5..$1170
  2723 					eif
  2724
  2725 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2725 				CODE: $100E..$1CD9
  2726
  2727 				; ------------------------------------------------------------
  2728
  2729 1CEA				.align $04
  2730
  2731 1CEC			DATAORIGIN
  2732 1CEC 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  2733
  2734 = 0006			VARINITSIZE	= *-DATAORIGIN
  2735 = 004A			VARDATASIZE	= 74
  2736
  2737 = 1D36			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2738
  2739 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2739 				DATA: $1CEC..$1D36
  2740
  2741 				; ------------------------------------------------------------
  2742
  2743 				.macro	STATICDATA
  2744 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  2745 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  2746 				.by  $C0 $03 $01 $02 $04 $08
  2747 				.endm
  2748
  2749 					end
