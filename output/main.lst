mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E D9 1C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0044			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 1CF2			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 BC			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 36 1C E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 36 85 02 A9 1D + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 7A 1C			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D F7 1C		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD F7 1C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 1CF7			RESULT	= DATAORIGIN+$000B
   182
   183 = 1CF7			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD F8 1C		loop  lda n
   307 1126 0D F9 1C		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD F8 1C D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 1CF8			N	= DATAORIGIN+$000C
   321
   322 = 1CF8			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D FA 1C			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD FA 1C		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C FB 1C		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD FB 1C 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 1CFA			RANGE	= DATAORIGIN+$000E
   383 = 1CFB			RESULT	= DATAORIGIN+$000F
   384
   385 = 1CFA			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 1CEC			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 1CEE			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 1CF0			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 1CF1			FILEMODE	= DATAORIGIN+$0005
   450 = 1CF2			GRAPHMODE	= DATAORIGIN+$0006
   451 = 1CF3			IORESULT	= DATAORIGIN+$0007
   452 = 1CF4			EOLN	= DATAORIGIN+$0008
   453 = 1CF5			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD 1E 1D			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D 1D 1D			add X
   466 117D 85 5D			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5E			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5D			ldy T0W
   475 118A AD 20 1D			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5E			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD 1F 1D			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 1D1D			X	= DATAORIGIN+$0031
   486 = 1D1E			Y	= DATAORIGIN+$0032
   487 = 1D1F			V	= DATAORIGIN+$0033
   488 = 1D20			C	= DATAORIGIN+$0034
   489
   490 = 1D1D			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 00 1D			lda PLAYER1.COLOUR
   510 119F 8D 20 1D			sta PUTCHAR.C
   511 11A2 AD 03 1D			lda PLAYER1.SCORE
   512 11A5 8D 1F 1D			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D 1E 1D			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D 1D 1D			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD 08 1D			lda PLAYER2.COLOUR
   522 11B8 8D 20 1D			sta PUTCHAR.C
   523 11BB AD 0B 1D			lda PLAYER2.SCORE
   524 11BE 8D 1F 1D			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D 1E 1D			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D 1D 1D			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD 10 1D			lda PLAYER3.COLOUR
   534 11D1 8D 20 1D			sta PUTCHAR.C
   535 11D4 AD 13 1D			lda PLAYER3.SCORE
   536 11D7 8D 1F 1D			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D 1E 1D			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D 1D 1D			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD 18 1D			lda PLAYER4.COLOUR
   546 11EA 8D 20 1D			sta PUTCHAR.C
   547 11ED AD 1B 1D			lda PLAYER4.SCORE
   548 11F0 8D 1F 1D			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D 1E 1D			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D 1D 1D			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5C			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AC E0 1C 84 12 AC + 	mwy PLY :bp2
   576 120F A0 01			ldy #PLY.Y-DATAORIGIN
   577 1211 B1 12			lda (:bp2),y
   578 1213 0A				asl @
   579 1214 A8				tay
   580 1215 A9 00			lda #$00
   581 1217 18 79 0E 10			add adr.MUL40,y
   582 121B 85 21			sta :STACKORIGIN+9
   583 121D A9 0C			lda #$0C
   584 121F 79 0F 10			adc adr.MUL40+1,y
   585 1222 85 31			sta :STACKORIGIN+STACKWIDTH+9
   586 1224 A0 00			ldy #PLY.X-DATAORIGIN
   587 1226 A5 21			lda :STACKORIGIN+9
   588 1228 18 71 12			add (:bp2),y
   589 122B 85 5D			sta T0W
   590 122D A5 31			lda :STACKORIGIN+STACKWIDTH+9
   591 122F 69 00			adc #$00
   592 1231 85 5E			sta T0W+1
   593
   594 				; optimize OK (tools.inc), line = 26
   595
   596 1233 A5 5D			lda T0W
   597 1235 38 E9 28			sub #$28
   598 1238 85 21			sta :STACKORIGIN+9
   599 123A A5 5E			lda T0W+1
   600 123C E9 00			sbc #$00
   601 123E 85 11			sta :bp+1
   602 1240 A4 21			ldy :STACKORIGIN+9
   603 1242 B1 10			lda (:bp),y
   604 1244 C9 20			cmp #$20
   605 1246 D0 06			jne l_00EE
   606 1248 A5 5C			lda AVAILDIR
   607 124A 09 01			ora #$01
   608 124C 85 5C			sta AVAILDIR
   609 124E			l_00EE
   610
   611 				; optimize OK (tools.inc), line = 27
   612
   613 124E A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   614 1256 A0 28			ldy #$28
   615 1258 B1 12			lda (:bp2),y
   616 125A C9 20			cmp #$20
   617 125C D0 06			jne l_0111
   618 125E A5 5C			lda AVAILDIR
   619 1260 09 02			ora #$02
   620 1262 85 5C			sta AVAILDIR
   621 1264			l_0111
   622
   623 				; optimize OK (tools.inc), line = 28
   624
   625 1264 A5 5D			lda T0W
   626 1266 38 E9 01			sub #$01
   627 1269 85 21			sta :STACKORIGIN+9
   628 126B A5 5E			lda T0W+1
   629 126D E9 00			sbc #$00
   630 126F 85 11			sta :bp+1
   631 1271 A4 21			ldy :STACKORIGIN+9
   632 1273 B1 10			lda (:bp),y
   633 1275 C9 20			cmp #$20
   634 1277 D0 06			jne l_0134
   635 1279 A5 5C			lda AVAILDIR
   636 127B 09 04			ora #$04
   637 127D 85 5C			sta AVAILDIR
   638 127F			l_0134
   639
   640 				; optimize OK (tools.inc), line = 29
   641
   642 127F A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   643 1287 A0 01			ldy #$01
   644 1289 B1 12			lda (:bp2),y
   645 128B C9 20			cmp #$20
   646 128D D0 06			jne l_0157
   647 128F A5 5C			lda AVAILDIR
   648 1291 09 08			ora #$08
   649 1293 85 5C			sta AVAILDIR
   650 1295			l_0157
   651 1295			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 1295 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 1296			.local	ANIMATEOBSTACLES				; PROCEDURE
   664
   665 				; optimize FAIL (0, tools.inc), line = 38
   666
   667 1296 EE 21 1D			inc COUNTER
   668
   669 				; optimize OK (tools.inc), line = 39
   670
   671 1299 AD 21 1D			lda COUNTER
   672 129C 29 01			and #$01
   673 129E F0 08			jeq l_0182
   674 12A0 A9 56			lda #$56
   675 12A2 8D 22 1D			sta OBST
   676 12A5 4C AD 12			jmp l_0190
   677 12A8			l_0182
   678 12A8 A9 5B			lda #$5B
   679 12AA 8D 22 1D			sta OBST
   680 12AD			l_0190
   681
   682 				; optimize OK (tools.inc), line = 40
   683
   684 12AD AD 22 1D			lda OBST
   685 12B0 8D FA 0C			sta $0CFA
   686
   687 				; optimize OK (tools.inc), line = 41
   688
   689 12B3 8D 0E 0D			sta $0D0E
   690
   691 				; optimize OK (tools.inc), line = 42
   692
   693 12B6 8D DA 0E			sta $0EDA
   694
   695 				; optimize OK (tools.inc), line = 43
   696
   697 12B9 8D EE 0E			sta $0EEE
   698
   699 				; optimize OK (tools.inc), line = 44
   700
   701 12BC 8D E1 0D			sta $0DE1
   702
   703 				; optimize OK (tools.inc), line = 45
   704
   705 12BF 8D 64 0C			sta $0C64
   706
   707 				; optimize OK (tools.inc), line = 46
   708
   709 12C2 8D 84 0F			sta $0F84
   710
   711 				; optimize OK (tools.inc), line = 47
   712
   713 12C5 8D F4 0D			sta $0DF4
   714
   715 				; ------------------------------------------------------------
   716
   717 = 1D21			COUNTER	= DATAORIGIN+$0035
   718 = 1D22			OBST	= DATAORIGIN+$0036
   719
   720 = 1D21			@VarData	= COUNTER
   721 = 0002			@VarDataSize	= 2
   722
   723 12C8			@exit
   724 					.ifdef @new
   725 					lda <@VarData
   726 					sta :ztmp
   727 					lda >@VarData
   728 					ldy #@VarDataSize-1
   729 					jmp @FreeMem
   730 					els
   731 12C8 60				rts						; ret
   732 					eif
   733 				.endl
   734
   735 12C9			.local	DRAWTAIL					; PROCEDURE
   736
   737 				; optimize OK (tools.inc), line = 54
   738
   739 12C9 AC E0 1C 84 12 AC + 	mwy PLY :bp2
   740 12D3 A0 04			ldy #PLY.DIR-DATAORIGIN
   741 12D5 B1 12			lda (:bp2),y
   742 12D7 C5 5B			cmp NEWDIR
   743 12D9 D0 14			jne l_01D4
   744
   745 				; optimize OK (tools.inc), line = 55
   746
   747 12DB A5 5B			lda NEWDIR
   748 12DD 29 0C			and #$0C
   749 12DF F0 07			jeq l_01EB
   750 12E1 A9 40			lda #$40
   751 12E3 85 58			sta T0B
   752 12E5 4C EC 12			jmp l_01F9
   753 12E8			l_01EB
   754 12E8 A9 42			lda #$42
   755 12EA 85 58			sta T0B
   756 12EC			l_01F9
   757 12EC 4C 5F 13			jmp l_0206
   758 12EF			l_01D4
   759
   760 				; optimize OK (tools.inc), line = 57
   761
   762 12EF AC E0 1C 84 12 AC + 	mwy PLY :bp2
   763 12F9 A0 04			ldy #PLY.DIR-DATAORIGIN
   764 12FB B1 12			lda (:bp2),y
   765 12FD 29 0A			and #$0A
   766 12FF F0 0A			jeq l_022C
   767 1301 A5 5B			lda NEWDIR
   768 1303 29 05			and #$05
   769 1305 F0 04			jeq l_022C
   770 1307 A9 7D			lda #$7D
   771 1309 85 58			sta T0B
   772 130B			l_022C
   773
   774 				; optimize OK (tools.inc), line = 58
   775
   776 130B AC E0 1C 84 12 AC + 	mwy PLY :bp2
   777 1315 A0 04			ldy #PLY.DIR-DATAORIGIN
   778 1317 B1 12			lda (:bp2),y
   779 1319 29 09			and #$09
   780 131B F0 0A			jeq l_0259
   781 131D A5 5B			lda NEWDIR
   782 131F 29 06			and #$06
   783 1321 F0 04			jeq l_0259
   784 1323 A9 6E			lda #$6E
   785 1325 85 58			sta T0B
   786 1327			l_0259
   787
   788 				; optimize OK (tools.inc), line = 59
   789
   790 1327 AC E0 1C 84 12 AC + 	mwy PLY :bp2
   791 1331 A0 04			ldy #PLY.DIR-DATAORIGIN
   792 1333 B1 12			lda (:bp2),y
   793 1335 29 06			and #$06
   794 1337 F0 0A			jeq l_0286
   795 1339 A5 5B			lda NEWDIR
   796 133B 29 09			and #$09
   797 133D F0 04			jeq l_0286
   798 133F A9 6D			lda #$6D
   799 1341 85 58			sta T0B
   800 1343			l_0286
   801
   802 				; optimize OK (tools.inc), line = 60
   803
   804 1343 AC E0 1C 84 12 AC + 	mwy PLY :bp2
   805 134D A0 04			ldy #PLY.DIR-DATAORIGIN
   806 134F B1 12			lda (:bp2),y
   807 1351 29 05			and #$05
   808 1353 F0 0A			jeq l_02B3
   809 1355 A5 5B			lda NEWDIR
   810 1357 29 0A			and #$0A
   811 1359 F0 04			jeq l_02B3
   812 135B A9 70			lda #$70
   813 135D 85 58			sta T0B
   814 135F			l_02B3
   815 135F			l_0206
   816
   817 				; optimize OK (tools.inc), line = 62
   818
   819 135F AC E0 1C 84 12 AC + 	mwy PLY :bp2
   820 1369 A0 00			ldy #PLY.X-DATAORIGIN
   821 136B B1 12			lda (:bp2),y
   822 136D 8D 1D 1D			sta PUTCHAR.X
   823 1370 A0 01			ldy #PLY.Y-DATAORIGIN
   824 1372 B1 12			lda (:bp2),y
   825 1374 8D 1E 1D			sta PUTCHAR.Y
   826 1377 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   827 1379 B1 12			lda (:bp2),y
   828 137B 8D 20 1D			sta PUTCHAR.C
   829 137E A5 58			lda T0B
   830 1380 8D 1F 1D			sta PUTCHAR.V
   831 1383 20 71 11			jsr PUTCHAR
   832 1386			@exit
   833 					.ifdef @new
   834 					lda <@VarData
   835 					sta :ztmp
   836 					lda >@VarData
   837 					ldy #@VarDataSize-1
   838 					jmp @FreeMem
   839 					els
   840 1386 60				rts						; ret
   841 					eif
   842 				.endl
   843
   844 1387			.local	INITPLAYERS					; PROCEDURE
   845
   846 				; optimize OK (init.inc), line = 5
   847
   848 1387 AD 23 1D			lda P
   849 138A 8D E0 1C			sta PLY
   850 138D 85 12			sta :bp2
   851 138F AD 24 1D			lda P+1
   852 1392 8D E1 1C			sta PLY+1
   853 1395 85 13			sta :bp2+1
   854 				; optimize OK (init.inc), line = 6
   855 1397 A0 05			ldy #PLY.BRAIN-DATAORIGIN
   856 1399 AD 28 1D			lda BRAIN
   857 139C 91 12			sta (:bp2),y
   858 139E A0 00			ldy #PLY.X-DATAORIGIN
   859 13A0 AD 25 1D			lda X
   860 13A3 91 12			sta (:bp2),y
   861 13A5 A0 01			ldy #PLY.Y-DATAORIGIN
   862 13A7 AD 26 1D			lda Y
   863 13AA 91 12			sta (:bp2),y
   864 13AC A0 04			ldy #PLY.DIR-DATAORIGIN
   865 13AE AD 27 1D			lda DIR
   866 13B1 91 12			sta (:bp2),y
   867
   868 				; optimize OK (init.inc), line = 7
   869
   870 13B3 A0 02			ldy #PLY.HEAD-DATAORIGIN
   871 13B5 AD 29 1D			lda HEAD
   872 13B8 91 12			sta (:bp2),y
   873 13BA A0 03			ldy #PLY.COLOUR-DATAORIGIN
   874 13BC AD 2A 1D			lda COLOUR
   875 13BF 91 12			sta (:bp2),y
   876 13C1 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
   877 13C3 AD 2B 1D			lda ISALIVE
   878 13C6 91 12			sta (:bp2),y
   879
   880 				; optimize OK (init.inc), line = 8
   881
   882 13C8 AD 2B 1D			lda ISALIVE
   883 13CB F0 1D			jeq l_0306
   884
   885 				; optimize FAIL (0, init.inc), line = 9
   886
   887 13CD E6 5A			inc ALIVE
   888 13CF AD 2A 1D			lda COLOUR
   889 13D2 8D 20 1D			sta PUTCHAR.C
   890 13D5 AD 29 1D			lda HEAD
   891 13D8 8D 1F 1D			sta PUTCHAR.V
   892 13DB AD 26 1D			lda Y
   893 13DE 8D 1E 1D			sta PUTCHAR.Y
   894 13E1 AD 25 1D			lda X
   895 13E4 8D 1D 1D			sta PUTCHAR.X
   896 13E7 20 71 11			jsr PUTCHAR
   897 13EA			l_0306
   898
   899 				; ------------------------------------------------------------
   900
   901 = 1D23			P	= DATAORIGIN+$0037
   902 = 1D25			X	= DATAORIGIN+$0039
   903 = 1D26			Y	= DATAORIGIN+$003A
   904 = 1D27			DIR	= DATAORIGIN+$003B
   905 = 1D28			BRAIN	= DATAORIGIN+$003C
   906 = 1D29			HEAD	= DATAORIGIN+$003D
   907 = 1D2A			COLOUR	= DATAORIGIN+$003E
   908 = 1D2B			ISALIVE	= DATAORIGIN+$003F
   909
   910 = 1D23			@VarData	= P
   911 = 0009			@VarDataSize	= 9
   912
   913 13EA			@exit
   914 					.ifdef @new
   915 					lda <@VarData
   916 					sta :ztmp
   917 					lda >@VarData
   918 					ldy #@VarDataSize-1
   919 					jmp @FreeMem
   920 					els
   921 13EA 60				rts						; ret
   922 					eif
   923 				.endl
   924
   925 13EB			.local	INITPLAYFIELD					; PROCEDURE
   926
   927 				; optimize OK (init.inc), line = 17
   928
   929 13EB A9 1F			lda #$1F
   930 13ED 8D 15 FF			sta BACKGROUND
   931 13F0 A9 00			lda #$00
   932 13F2 8D 19 FF			sta BOREDER
   933
   934 				; optimize OK (init.inc), line = 18
   935
   936 13F5 A9 20			lda #$20
   937 13F7 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   938 13F9 A9 C0			lda #$C0
   939 13FB 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   940 13FD A9 03			lda #$03
   941 13FF 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
   942 1401 A9 00			lda #$00
   943 1403 85 08			sta SYSTEM.FILLCHAR_0056.A
   944 1405 A9 0C			lda #$0C
   945 1407 85 09			sta SYSTEM.FILLCHAR_0056.A+1
   946 1409 20 1F 11			jsr SYSTEM.FILLCHAR_0056
   947
   948 				; optimize OK (init.inc), line = 20
   949
   950 140C A9 27			lda #$27
   951 140E 85 58			sta T0B
   952
   953 1410			l_0333
   954 				; --- ForToDoCondition
   955
   956 				; optimize OK (init.inc), line = 21
   957
   958 1410 A4 58			ldy T0B
   959 1412 A9 A0			lda #$A0
   960 1414 99 00 0C			sta $0C00,y
   961
   962 				; optimize OK (init.inc), line = 22
   963
   964 1417 99 C0 0F			sta $0FC0,y
   965
   966 				; optimize OK (init.inc), line = 23
   967
   968 141A A9 41			lda #$41
   969 141C 99 00 08			sta $0800,y
   970
   971 				; optimize OK (init.inc), line = 24
   972
   973 141F 99 C0 0B			sta $0BC0,y
   974
   975 				; --- ForToDoEpilog
   976 1422 C6 58			dec T0B
   977 1424 10 EA			jpl l_0333
   978 1426			l_0341
   979
   980 				; optimize OK (init.inc), line = 27
   981
   982 1426 A9 18			lda #$18
   983 1428 85 58			sta T0B
   984
   985 142A			l_0373
   986 				; --- ForToDoCondition
   987 142A A5 58			lda T0B
   988 142C C9 01			cmp #$01
   989 142E 90 3A			jcc l_0381
   990
   991 				; optimize OK (init.inc), line = 28
   992
   993 1430 0A				asl @
   994 1431 A8				tay
   995 1432 A9 FF			lda #$FF
   996 1434 18 79 0E 10			add adr.MUL40,y
   997 1438 85 12			sta :bp2
   998 143A A9 0B			lda #$0B
   999 143C 79 0F 10			adc adr.MUL40+1,y
  1000 143F 85 13			sta :bp2+1
  1001 1441 A0 00			ldy #$00
  1002 1443 A9 A0			lda #$A0
  1003 1445 91 12			sta (:bp2),y
  1004 1447 C8				iny
  1005 1448 91 12			sta (:bp2),y
  1006
  1007 				; optimize OK (init.inc), line = 29
  1008
  1009 144A A5 58			lda T0B
  1010 144C 0A				asl @
  1011 144D A8				tay
  1012 144E A9 FF			lda #$FF
  1013 1450 18 79 0E 10			add adr.MUL40,y
  1014 1454 85 12			sta :bp2
  1015 1456 A9 07			lda #$07
  1016 1458 79 0F 10			adc adr.MUL40+1,y
  1017 145B 85 13			sta :bp2+1
  1018 145D A0 00			ldy #$00
  1019 145F A9 41			lda #$41
  1020 1461 91 12			sta (:bp2),y
  1021 1463 C8				iny
  1022 1464 91 12			sta (:bp2),y
  1023
  1024 				; --- ForToDoEpilog
  1025 1466 C6 58			dec T0B
  1026 1468 10 C0			jpl l_0373
  1027 146A			l_0381
  1028
  1029 				; optimize OK (init.inc), line = 42
  1030
  1031 146A A9 01			lda #$01
  1032 146C 8D 2B 1D			sta INITPLAYERS.ISALIVE
  1033 146F A9 5F			lda #$5F
  1034 1471 8D 2A 1D			sta INITPLAYERS.COLOUR
  1035 1474 A9 51			lda #$51
  1036 1476 8D 29 1D			sta INITPLAYERS.HEAD
  1037 1479 A9 00			lda #$00
  1038 147B 8D 28 1D			sta INITPLAYERS.BRAIN
  1039 147E A9 04			lda #$04
  1040 1480 8D 27 1D			sta INITPLAYERS.DIR
  1041 1483 A9 0C			lda #$0C
  1042 1485 8D 26 1D			sta INITPLAYERS.Y
  1043 1488 A9 13			lda #$13
  1044 148A 8D 25 1D			sta INITPLAYERS.X
  1045 148D AD E4 1C			lda PLAYER1
  1046 1490 8D 23 1D			sta INITPLAYERS.P
  1047 1493 AD E5 1C			lda PLAYER1+1
  1048 1496 8D 24 1D			sta INITPLAYERS.P+1
  1049 1499 20 87 13			jsr INITPLAYERS
  1050
  1051 				; optimize OK (init.inc), line = 43
  1052
  1053 149C A9 01			lda #$01
  1054 149E 8D 2B 1D			sta INITPLAYERS.ISALIVE
  1055 14A1 A9 5D			lda #$5D
  1056 14A3 8D 2A 1D			sta INITPLAYERS.COLOUR
  1057 14A6 A9 51			lda #$51
  1058 14A8 8D 29 1D			sta INITPLAYERS.HEAD
  1059 14AB A9 04			lda #$04
  1060 14AD 8D 28 1D			sta INITPLAYERS.BRAIN
  1061 14B0 A9 08			lda #$08
  1062 14B2 8D 27 1D			sta INITPLAYERS.DIR
  1063 14B5 A9 0C			lda #$0C
  1064 14B7 8D 26 1D			sta INITPLAYERS.Y
  1065 14BA A9 15			lda #$15
  1066 14BC 8D 25 1D			sta INITPLAYERS.X
  1067 14BF AD E6 1C			lda PLAYER2
  1068 14C2 8D 23 1D			sta INITPLAYERS.P
  1069 14C5 AD E7 1C			lda PLAYER2+1
  1070 14C8 8D 24 1D			sta INITPLAYERS.P+1
  1071 14CB 20 87 13			jsr INITPLAYERS
  1072
  1073 				; optimize OK (init.inc), line = 44
  1074
  1075 14CE A9 01			lda #$01
  1076 14D0 8D 2B 1D			sta INITPLAYERS.ISALIVE
  1077 14D3 A9 71			lda #$71
  1078 14D5 8D 2A 1D			sta INITPLAYERS.COLOUR
  1079 14D8 A9 51			lda #$51
  1080 14DA 8D 29 1D			sta INITPLAYERS.HEAD
  1081 14DD A9 03			lda #$03
  1082 14DF 8D 28 1D			sta INITPLAYERS.BRAIN
  1083 14E2 A9 01			lda #$01
  1084 14E4 8D 27 1D			sta INITPLAYERS.DIR
  1085 14E7 A9 0B			lda #$0B
  1086 14E9 8D 26 1D			sta INITPLAYERS.Y
  1087 14EC A9 14			lda #$14
  1088 14EE 8D 25 1D			sta INITPLAYERS.X
  1089 14F1 AD E8 1C			lda PLAYER3
  1090 14F4 8D 23 1D			sta INITPLAYERS.P
  1091 14F7 AD E9 1C			lda PLAYER3+1
  1092 14FA 8D 24 1D			sta INITPLAYERS.P+1
  1093 14FD 20 87 13			jsr INITPLAYERS
  1094
  1095 				; optimize OK (init.inc), line = 45
  1096
  1097 1500 A9 01			lda #$01
  1098 1502 8D 2B 1D			sta INITPLAYERS.ISALIVE
  1099 1505 A9 55			lda #$55
  1100 1507 8D 2A 1D			sta INITPLAYERS.COLOUR
  1101 150A A9 51			lda #$51
  1102 150C 8D 29 1D			sta INITPLAYERS.HEAD
  1103 150F A9 02			lda #$02
  1104 1511 8D 28 1D			sta INITPLAYERS.BRAIN
  1105 1514 8D 27 1D			sta INITPLAYERS.DIR
  1106 1517 A9 0D			lda #$0D
  1107 1519 8D 26 1D			sta INITPLAYERS.Y
  1108 151C A9 14			lda #$14
  1109 151E 8D 25 1D			sta INITPLAYERS.X
  1110 1521 AD EA 1C			lda PLAYER4
  1111 1524 8D 23 1D			sta INITPLAYERS.P
  1112 1527 AD EB 1C			lda PLAYER4+1
  1113 152A 8D 24 1D			sta INITPLAYERS.P+1
  1114 152D 20 87 13			jsr INITPLAYERS
  1115
  1116 				; optimize OK (init.inc), line = 47
  1117
  1118 1530 A9 35			lda #$35
  1119 1532 8D 20 1D			sta PUTCHAR.C
  1120 1535 A9 56			lda #$56
  1121 1537 8D 1F 1D			sta PUTCHAR.V
  1122 153A A9 06			lda #$06
  1123 153C 8D 1E 1D			sta PUTCHAR.Y
  1124 153F A9 0A			lda #$0A
  1125 1541 8D 1D 1D			sta PUTCHAR.X
  1126 1544 20 71 11			jsr PUTCHAR
  1127
  1128 				; optimize OK (init.inc), line = 48
  1129
  1130 1547 A9 35			lda #$35
  1131 1549 8D 20 1D			sta PUTCHAR.C
  1132 154C A9 56			lda #$56
  1133 154E 8D 1F 1D			sta PUTCHAR.V
  1134 1551 A9 06			lda #$06
  1135 1553 8D 1E 1D			sta PUTCHAR.Y
  1136 1556 A9 1E			lda #$1E
  1137 1558 8D 1D 1D			sta PUTCHAR.X
  1138 155B 20 71 11			jsr PUTCHAR
  1139
  1140 				; optimize OK (init.inc), line = 49
  1141
  1142 155E A9 35			lda #$35
  1143 1560 8D 20 1D			sta PUTCHAR.C
  1144 1563 A9 56			lda #$56
  1145 1565 8D 1F 1D			sta PUTCHAR.V
  1146 1568 A9 12			lda #$12
  1147 156A 8D 1E 1D			sta PUTCHAR.Y
  1148 156D A9 0A			lda #$0A
  1149 156F 8D 1D 1D			sta PUTCHAR.X
  1150 1572 20 71 11			jsr PUTCHAR
  1151
  1152 				; optimize OK (init.inc), line = 50
  1153
  1154 1575 A9 35			lda #$35
  1155 1577 8D 20 1D			sta PUTCHAR.C
  1156 157A A9 56			lda #$56
  1157 157C 8D 1F 1D			sta PUTCHAR.V
  1158 157F A9 12			lda #$12
  1159 1581 8D 1E 1D			sta PUTCHAR.Y
  1160 1584 A9 1E			lda #$1E
  1161 1586 8D 1D 1D			sta PUTCHAR.X
  1162 1589 20 71 11			jsr PUTCHAR
  1163
  1164 				; optimize OK (init.inc), line = 51
  1165
  1166 158C A9 35			lda #$35
  1167 158E 8D 20 1D			sta PUTCHAR.C
  1168 1591 A9 56			lda #$56
  1169 1593 8D 1F 1D			sta PUTCHAR.V
  1170 1596 A9 0C			lda #$0C
  1171 1598 8D 1E 1D			sta PUTCHAR.Y
  1172 159B A9 01			lda #$01
  1173 159D 8D 1D 1D			sta PUTCHAR.X
  1174 15A0 20 71 11			jsr PUTCHAR
  1175
  1176 				; optimize OK (init.inc), line = 53
  1177
  1178 15A3 A9 35			lda #$35
  1179 15A5 8D 20 1D			sta PUTCHAR.C
  1180 15A8 A9 56			lda #$56
  1181 15AA 8D 1F 1D			sta PUTCHAR.V
  1182 15AD A9 02			lda #$02
  1183 15AF 8D 1E 1D			sta PUTCHAR.Y
  1184 15B2 A9 14			lda #$14
  1185 15B4 8D 1D 1D			sta PUTCHAR.X
  1186 15B7 20 71 11			jsr PUTCHAR
  1187
  1188 				; optimize OK (init.inc), line = 54
  1189
  1190 15BA A9 35			lda #$35
  1191 15BC 8D 20 1D			sta PUTCHAR.C
  1192 15BF A9 56			lda #$56
  1193 15C1 8D 1F 1D			sta PUTCHAR.V
  1194 15C4 A9 16			lda #$16
  1195 15C6 8D 1E 1D			sta PUTCHAR.Y
  1196 15C9 A9 14			lda #$14
  1197 15CB 8D 1D 1D			sta PUTCHAR.X
  1198 15CE 20 71 11			jsr PUTCHAR
  1199
  1200 				; optimize OK (init.inc), line = 56
  1201
  1202 15D1 A9 35			lda #$35
  1203 15D3 8D 20 1D			sta PUTCHAR.C
  1204 15D6 A9 56			lda #$56
  1205 15D8 8D 1F 1D			sta PUTCHAR.V
  1206 15DB A9 0C			lda #$0C
  1207 15DD 8D 1E 1D			sta PUTCHAR.Y
  1208 15E0 A9 14			lda #$14
  1209 15E2 8D 1D 1D			sta PUTCHAR.X
  1210 15E5 20 71 11			jsr PUTCHAR
  1211
  1212 				; optimize FAIL ('SHOWSCORE', init.inc), line = 58
  1213
  1214 15E8 20 9C 11			jsr SHOWSCORE
  1215
  1216 				; ------------------------------------------------------------
  1217
  1218 = 0000			@FORTMP_0330	= $00
  1219 = 0001			@FORTMP_0370	= $01
  1220 15EB			@exit
  1221 					.ifdef @new
  1222 					lda <@VarData
  1223 					sta :ztmp
  1224 					lda >@VarData
  1225 					ldy #@VarDataSize-1
  1226 					jmp @FreeMem
  1227 					els
  1228 15EB 60				rts						; ret
  1229 					eif
  1230 				.endl
  1231
  1232 15EC			.local	AISTRAIGHT					; PROCEDURE
  1233
  1234 				; optimize OK (ai.inc), line = 5
  1235
  1236 15EC AC E0 1C 84 12 AC + 	mwy PLY :bp2
  1237 15F6 A0 04			ldy #PLY.DIR-DATAORIGIN
  1238 15F8 B1 12			lda (:bp2),y
  1239 15FA 25 5C			and AVAILDIR
  1240 15FC F0 07			jeq l_0409
  1241 15FE B1 12			lda (:bp2),y
  1242 1600 85 5B			sta NEWDIR
  1243 1602 4C 70 16			jmp l_0419
  1244 1605			l_0409
  1245
  1246 				; optimize OK (ai.inc), line = 7
  1247
  1248 1605 A5 5C			lda AVAILDIR
  1249 1607 C9 03			cmp #$03
  1250 1609 D0 10			jne l_042B
  1251 160B A9 02			lda #$02
  1252 160D 20 40 11			jsr SYSTEM.RANDOM_006C
  1253 1610 B4 18			ldy :STACKORIGIN,x
  1254 1612 B9 40 10			lda adr.DIRECTION,y
  1255 1615 85 5B			sta NEWDIR
  1256 1617 CA				dex
  1257 1618 4C 33 16			jmp l_043D
  1258 161B			l_042B
  1259
  1260 				; optimize OK (ai.inc), line = 9
  1261
  1262 161B A5 5C			lda AVAILDIR
  1263 161D 8D 2C 1D			sta @CASETMP_0003
  1264 1620 C9 01			cmp #$01
  1265 1622 D0 07			jne l_0448
  1266 1624			@
  1267
  1268 				; optimize OK (ai.inc), line = 10
  1269
  1270 1624 A9 01			lda #$01
  1271 1626 85 5B			sta NEWDIR
  1272
  1273 1628 4C 33 16			jmp a_0003
  1274 162B			l_0448
  1275 162B C9 02			cmp #$02
  1276 162D D0 04			jne l_0455
  1277 162F			@
  1278
  1279 				; optimize OK (ai.inc), line = 11
  1280
  1281 162F A9 02			lda #$02
  1282 1631 85 5B			sta NEWDIR
  1283
  1284 1633			l_0455
  1285 1633			a_0003
  1286 1633			l_043D
  1287
  1288 				; optimize OK (ai.inc), line = 14
  1289
  1290 1633 A5 5C			lda AVAILDIR
  1291 1635 C9 0C			cmp #$0C
  1292 1637 D0 1F			jne l_0471
  1293 1639 A9 02			lda #$02
  1294 163B 20 40 11			jsr SYSTEM.RANDOM_006C
  1295 163E E8				inx
  1296 163F A9 02 95 18			mva #$02 :STACKORIGIN,x
  1297 1643 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1298 1647 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1299 1649 20 44 10			jsr addAX_CX
  1300 164C CA				dex
  1301 164D B4 18			ldy :STACKORIGIN,x
  1302 164F B9 40 10			lda adr.DIRECTION,y
  1303 1652 85 5B			sta NEWDIR
  1304 1654 CA				dex
  1305 1655 4C 70 16			jmp l_0487
  1306 1658			l_0471
  1307
  1308 				; optimize OK (ai.inc), line = 16
  1309
  1310 1658 A5 5C			lda AVAILDIR
  1311 165A 8D 2D 1D			sta @CASETMP_0004
  1312 165D C9 04			cmp #$04
  1313 165F D0 07			jne l_0492
  1314 1661			@
  1315
  1316 				; optimize OK (ai.inc), line = 17
  1317
  1318 1661 A9 04			lda #$04
  1319 1663 85 5B			sta NEWDIR
  1320
  1321 1665 4C 70 16			jmp a_0004
  1322 1668			l_0492
  1323 1668 C9 08			cmp #$08
  1324 166A D0 04			jne l_049F
  1325 166C			@
  1326
  1327 				; optimize OK (ai.inc), line = 18
  1328
  1329 166C A9 08			lda #$08
  1330 166E 85 5B			sta NEWDIR
  1331
  1332 1670			l_049F
  1333 1670			a_0004
  1334 1670			l_0487
  1335 1670			l_0419
  1336
  1337 				; ------------------------------------------------------------
  1338
  1339 = 1D2C			@CASETMP_0003	= DATAORIGIN+$0040
  1340 = 1D2D			@CASETMP_0004	= DATAORIGIN+$0041
  1341
  1342 = 1D2C			@VarData	= @CASETMP_0003
  1343 = 0002			@VarDataSize	= 2
  1344
  1345 1670			@exit
  1346 					.ifdef @new
  1347 					lda <@VarData
  1348 					sta :ztmp
  1349 					lda >@VarData
  1350 					ldy #@VarDataSize-1
  1351 					jmp @FreeMem
  1352 					els
  1353 1670 60				rts						; ret
  1354 					eif
  1355 				.endl
  1356
  1357 1671			.local	AISAPPER					; PROCEDURE
  1358
  1359 				; optimize OK (ai.inc), line = 31
  1360
  1361 1671 A9 00			lda #$00
  1362 1673 8D 2E 1D			sta L
  1363 1676 8D 2F 1D			sta R
  1364 1679 8D 30 1D			sta U
  1365 167C 8D 31 1D			sta D
  1366
  1367 				; optimize OK (ai.inc), line = 32
  1368
  1369 167F AC E0 1C 84 12 AC + 	mwy PLY :bp2
  1370 1689 A0 01			ldy #PLY.Y-DATAORIGIN
  1371 168B B1 12			lda (:bp2),y
  1372 168D 0A				asl @
  1373 168E A8				tay
  1374 168F A9 00			lda #$00
  1375 1691 18 79 0E 10			add adr.MUL40,y
  1376 1695 85 21			sta :STACKORIGIN+9
  1377 1697 A9 0C			lda #$0C
  1378 1699 79 0F 10			adc adr.MUL40+1,y
  1379 169C 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1380 169E A0 00			ldy #PLY.X-DATAORIGIN
  1381 16A0 A5 21			lda :STACKORIGIN+9
  1382 16A2 18 71 12			add (:bp2),y
  1383 16A5 85 5D			sta T0W
  1384 16A7 A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1385 16A9 69 00			adc #$00
  1386 16AB 85 5E			sta T0W+1
  1387
  1388 				; optimize OK (ai.inc), line = 34
  1389
  1390 16AD A5 5C			lda AVAILDIR
  1391 16AF 29 01			and #$01
  1392 16B1 F0 73			jeq l_04E5
  1393
  1394 				; optimize OK (ai.inc), line = 35
  1395
  1396 16B3 A9 05			lda #$05
  1397 16B5 85 59			sta I0B
  1398
  1399 16B7			l_04EF
  1400 				; --- ForToDoCondition
  1401 16B7 A5 59			lda I0B
  1402 16B9 C9 01			cmp #$01
  1403 16BB 90 69			jcc l_04FD
  1404
  1405 				; optimize OK (ai.inc), line = 36
  1406
  1407 16BD 0A				asl @
  1408 16BE A8				tay
  1409 16BF A5 5D			lda T0W
  1410 16C1 38 F9 0E 10			sub adr.MUL40,y
  1411 16C5 85 21			sta :STACKORIGIN+9
  1412 16C7 A5 5E			lda T0W+1
  1413 16C9 F9 0F 10			sbc adr.MUL40+1,y
  1414 16CC 85 11			sta :bp+1
  1415 16CE A4 21			ldy :STACKORIGIN+9
  1416 16D0 B1 10			lda (:bp),y
  1417 16D2 C9 20			cmp #$20
  1418 16D4 D0 03			jne l_0517
  1419 16D6 EE 30 1D			inc U
  1420 16D9			l_0517
  1421
  1422 				; optimize OK (ai.inc), line = 37
  1423
  1424 16D9 A5 59			lda I0B
  1425 16DB 0A				asl @
  1426 16DC A8				tay
  1427 16DD A5 5D			lda T0W
  1428 16DF 38 F9 0E 10			sub adr.MUL40,y
  1429 16E3 85 21			sta :STACKORIGIN+9
  1430 16E5 A5 5E			lda T0W+1
  1431 16E7 F9 0F 10			sbc adr.MUL40+1,y
  1432 16EA 85 11			sta :bp+1
  1433 16EC A5 21			lda :STACKORIGIN+9
  1434 16EE 18 69 01			add #$01
  1435 16F1 A8				tay
  1436 16F2 90 02			scc
  1437 16F4 E6 11			inc :bp+1
  1438 16F6 B1 10			lda (:bp),y
  1439 16F8 C9 20			cmp #$20
  1440 16FA D0 03			jne l_053C
  1441 16FC EE 30 1D			inc U
  1442 16FF			l_053C
  1443
  1444 				; optimize OK (ai.inc), line = 38
  1445
  1446 16FF A5 59			lda I0B
  1447 1701 0A				asl @
  1448 1702 A8				tay
  1449 1703 A5 5D			lda T0W
  1450 1705 38 F9 0E 10			sub adr.MUL40,y
  1451 1709 85 21			sta :STACKORIGIN+9
  1452 170B A5 5E			lda T0W+1
  1453 170D F9 0F 10			sbc adr.MUL40+1,y
  1454 1710 85 11			sta :bp+1
  1455 1712 A4 21			ldy :STACKORIGIN+9
  1456 1714 88				dey
  1457 1715 B0 02			scs
  1458 1717 C6 11			dec :bp+1
  1459 1719 B1 10			lda (:bp),y
  1460 171B C9 20			cmp #$20
  1461 171D D0 03			jne l_0561
  1462 171F EE 30 1D			inc U
  1463 1722			l_0561
  1464
  1465 				; --- ForToDoEpilog
  1466 1722 C6 59			dec I0B
  1467 1724 10 91			jpl l_04EF
  1468 1726			l_04FD
  1469 1726			l_04E5
  1470
  1471 				; optimize OK (ai.inc), line = 42
  1472
  1473 1726 A5 5C			lda AVAILDIR
  1474 1728 29 02			and #$02
  1475 172A F0 73			jeq l_0585
  1476
  1477 				; optimize OK (ai.inc), line = 43
  1478
  1479 172C A9 05			lda #$05
  1480 172E 85 59			sta I0B
  1481
  1482 1730			l_058F
  1483 				; --- ForToDoCondition
  1484 1730 A5 59			lda I0B
  1485 1732 C9 01			cmp #$01
  1486 1734 90 69			jcc l_059D
  1487
  1488 				; optimize OK (ai.inc), line = 44
  1489
  1490 1736 0A				asl @
  1491 1737 A8				tay
  1492 1738 A5 5D			lda T0W
  1493 173A 18 79 0E 10			add adr.MUL40,y
  1494 173E 85 21			sta :STACKORIGIN+9
  1495 1740 A5 5E			lda T0W+1
  1496 1742 79 0F 10			adc adr.MUL40+1,y
  1497 1745 85 11			sta :bp+1
  1498 1747 A4 21			ldy :STACKORIGIN+9
  1499 1749 B1 10			lda (:bp),y
  1500 174B C9 20			cmp #$20
  1501 174D D0 03			jne l_05B7
  1502 174F EE 31 1D			inc D
  1503 1752			l_05B7
  1504
  1505 				; optimize OK (ai.inc), line = 45
  1506
  1507 1752 A5 59			lda I0B
  1508 1754 0A				asl @
  1509 1755 A8				tay
  1510 1756 A5 5D			lda T0W
  1511 1758 18 79 0E 10			add adr.MUL40,y
  1512 175C 85 21			sta :STACKORIGIN+9
  1513 175E A5 5E			lda T0W+1
  1514 1760 79 0F 10			adc adr.MUL40+1,y
  1515 1763 85 11			sta :bp+1
  1516 1765 A5 21			lda :STACKORIGIN+9
  1517 1767 18 69 01			add #$01
  1518 176A A8				tay
  1519 176B 90 02			scc
  1520 176D E6 11			inc :bp+1
  1521 176F B1 10			lda (:bp),y
  1522 1771 C9 20			cmp #$20
  1523 1773 D0 03			jne l_05DC
  1524 1775 EE 31 1D			inc D
  1525 1778			l_05DC
  1526
  1527 				; optimize OK (ai.inc), line = 46
  1528
  1529 1778 A5 59			lda I0B
  1530 177A 0A				asl @
  1531 177B A8				tay
  1532 177C A5 5D			lda T0W
  1533 177E 18 79 0E 10			add adr.MUL40,y
  1534 1782 85 21			sta :STACKORIGIN+9
  1535 1784 A5 5E			lda T0W+1
  1536 1786 79 0F 10			adc adr.MUL40+1,y
  1537 1789 85 11			sta :bp+1
  1538 178B A4 21			ldy :STACKORIGIN+9
  1539 178D 88				dey
  1540 178E B0 02			scs
  1541 1790 C6 11			dec :bp+1
  1542 1792 B1 10			lda (:bp),y
  1543 1794 C9 20			cmp #$20
  1544 1796 D0 03			jne l_0601
  1545 1798 EE 31 1D			inc D
  1546 179B			l_0601
  1547
  1548 				; --- ForToDoEpilog
  1549 179B C6 59			dec I0B
  1550 179D 10 91			jpl l_058F
  1551 179F			l_059D
  1552 179F			l_0585
  1553
  1554 				; optimize OK (ai.inc), line = 50
  1555
  1556 179F A5 5C			lda AVAILDIR
  1557 17A1 29 04			and #$04
  1558 17A3 F0 5F			jeq l_0625
  1559
  1560 				; optimize OK (ai.inc), line = 51
  1561
  1562 17A5 A9 05			lda #$05
  1563 17A7 85 59			sta I0B
  1564
  1565 17A9			l_062F
  1566 				; --- ForToDoCondition
  1567 17A9 A5 59			lda I0B
  1568 17AB C9 01			cmp #$01
  1569 17AD 90 55			jcc l_063D
  1570
  1571 				; optimize OK (ai.inc), line = 52
  1572
  1573 17AF A5 5D			lda T0W
  1574 17B1 38 E5 59			sub I0B
  1575 17B4 A8				tay
  1576 17B5 A5 5E			lda T0W+1
  1577 17B7 E9 00			sbc #$00
  1578 17B9 85 11			sta :bp+1
  1579 17BB B1 10			lda (:bp),y
  1580 17BD C9 20			cmp #$20
  1581 17BF D0 03			jne l_0655
  1582 17C1 EE 2E 1D			inc L
  1583 17C4			l_0655
  1584
  1585 				; optimize OK (ai.inc), line = 53
  1586
  1587 17C4 A5 5D			lda T0W
  1588 17C6 38 E5 59			sub I0B
  1589 17C9 A8				tay
  1590 17CA A5 5E			lda T0W+1
  1591 17CC E9 00			sbc #$00
  1592 17CE 85 11			sta :bp+1
  1593 17D0 98				tya
  1594 17D1 18 69 28			add #$28
  1595 17D4 A8				tay
  1596 17D5 90 02			scc
  1597 17D7 E6 11			inc :bp+1
  1598 17D9 B1 10			lda (:bp),y
  1599 17DB C9 20			cmp #$20
  1600 17DD D0 03			jne l_0678
  1601 17DF EE 2E 1D			inc L
  1602 17E2			l_0678
  1603
  1604 				; optimize OK (ai.inc), line = 54
  1605
  1606 17E2 A5 5D			lda T0W
  1607 17E4 38 E5 59			sub I0B
  1608 17E7 A8				tay
  1609 17E8 A5 5E			lda T0W+1
  1610 17EA E9 00			sbc #$00
  1611 17EC 85 11			sta :bp+1
  1612 17EE 98				tya
  1613 17EF 38 E9 28			sub #$28
  1614 17F2 A8				tay
  1615 17F3 B0 02			scs
  1616 17F5 C6 11			dec :bp+1
  1617 17F7 B1 10			lda (:bp),y
  1618 17F9 C9 20			cmp #$20
  1619 17FB D0 03			jne l_069B
  1620 17FD EE 2E 1D			inc L
  1621 1800			l_069B
  1622
  1623 				; --- ForToDoEpilog
  1624 1800 C6 59			dec I0B
  1625 1802 10 A5			jpl l_062F
  1626 1804			l_063D
  1627 1804			l_0625
  1628
  1629 				; optimize OK (ai.inc), line = 58
  1630
  1631 1804 A5 5C			lda AVAILDIR
  1632 1806 29 08			and #$08
  1633 1808 F0 5D			jeq l_06BF
  1634
  1635 				; optimize OK (ai.inc), line = 59
  1636
  1637 180A A9 05			lda #$05
  1638 180C 85 59			sta I0B
  1639
  1640 180E			l_06C9
  1641 				; --- ForToDoCondition
  1642 180E A5 59			lda I0B
  1643 1810 C9 01			cmp #$01
  1644 1812 90 53			jcc l_06D7
  1645
  1646 				; optimize OK (ai.inc), line = 60
  1647
  1648 1814 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1649 181C A4 59			ldy I0B
  1650 181E B1 12			lda (:bp2),y
  1651 1820 C9 20			cmp #$20
  1652 1822 D0 03			jne l_06EF
  1653 1824 EE 2F 1D			inc R
  1654 1827			l_06EF
  1655
  1656 				; optimize OK (ai.inc), line = 61
  1657
  1658 1827 A5 5D			lda T0W
  1659 1829 18 65 59			add I0B
  1660 182C A8				tay
  1661 182D A5 5E			lda T0W+1
  1662 182F 69 00			adc #$00
  1663 1831 85 11			sta :bp+1
  1664 1833 98				tya
  1665 1834 18 69 28			add #$28
  1666 1837 A8				tay
  1667 1838 90 02			scc
  1668 183A E6 11			inc :bp+1
  1669 183C B1 10			lda (:bp),y
  1670 183E C9 20			cmp #$20
  1671 1840 D0 03			jne l_0712
  1672 1842 EE 2F 1D			inc R
  1673 1845			l_0712
  1674
  1675 				; optimize OK (ai.inc), line = 62
  1676
  1677 1845 A5 5D			lda T0W
  1678 1847 18 65 59			add I0B
  1679 184A A8				tay
  1680 184B A5 5E			lda T0W+1
  1681 184D 69 00			adc #$00
  1682 184F 85 11			sta :bp+1
  1683 1851 98				tya
  1684 1852 38 E9 28			sub #$28
  1685 1855 A8				tay
  1686 1856 B0 02			scs
  1687 1858 C6 11			dec :bp+1
  1688 185A B1 10			lda (:bp),y
  1689 185C C9 20			cmp #$20
  1690 185E D0 03			jne l_0735
  1691 1860 EE 2F 1D			inc R
  1692 1863			l_0735
  1693
  1694 				; --- ForToDoEpilog
  1695 1863 C6 59			dec I0B
  1696 1865 10 A7			jpl l_06C9
  1697 1867			l_06D7
  1698 1867			l_06BF
  1699
  1700 				; optimize OK (ai.inc), line = 66
  1701
  1702 1867 AD 31 1D			lda D
  1703 186A 85 58			sta T0B
  1704
  1705 				; optimize OK (ai.inc), line = 67
  1706
  1707 186C CD 30 1D			cmp U
  1708 186F B0 05			jcs l_075D
  1709 1871 AD 30 1D			lda U
  1710 1874 85 58			sta T0B
  1711 1876			l_075D
  1712
  1713 				; optimize OK (ai.inc), line = 68
  1714
  1715 1876 A5 58			lda T0B
  1716 1878 CD 2E 1D			cmp L
  1717 187B B0 05			jcs l_077A
  1718 187D AD 2E 1D			lda L
  1719 1880 85 58			sta T0B
  1720 1882			l_077A
  1721
  1722 				; optimize OK (ai.inc), line = 69
  1723
  1724 1882 A5 58			lda T0B
  1725 1884 CD 2F 1D			cmp R
  1726 1887 B0 05			jcs l_0797
  1727 1889 AD 2F 1D			lda R
  1728 188C 85 58			sta T0B
  1729 188E			l_0797
  1730
  1731 				; optimize OK (ai.inc), line = 71
  1732
  1733 188E A5 58			lda T0B
  1734 1890 CD 31 1D			cmp D
  1735 1893 D0 04			jne l_07B4
  1736 1895 A9 02			lda #$02
  1737 1897 85 58			sta T0B
  1738 1899			l_07B4
  1739
  1740 				; optimize OK (ai.inc), line = 72
  1741
  1742 1899 A5 58			lda T0B
  1743 189B CD 30 1D			cmp U
  1744 189E D0 04			jne l_07CF
  1745 18A0 A9 01			lda #$01
  1746 18A2 85 58			sta T0B
  1747 18A4			l_07CF
  1748
  1749 				; optimize OK (ai.inc), line = 73
  1750
  1751 18A4 A5 58			lda T0B
  1752 18A6 CD 2E 1D			cmp L
  1753 18A9 D0 04			jne l_07EA
  1754 18AB A9 04			lda #$04
  1755 18AD 85 58			sta T0B
  1756 18AF			l_07EA
  1757
  1758 				; optimize OK (ai.inc), line = 74
  1759
  1760 18AF A5 58			lda T0B
  1761 18B1 CD 2F 1D			cmp R
  1762 18B4 D0 04			jne l_0805
  1763 18B6 A9 08			lda #$08
  1764 18B8 85 58			sta T0B
  1765 18BA			l_0805
  1766
  1767 				; optimize OK (ai.inc), line = 76
  1768
  1769 18BA A5 5C			lda AVAILDIR
  1770 18BC 25 58			and T0B
  1771 18BE F0 07			jeq l_0824
  1772 18C0 A5 58			lda T0B
  1773 18C2 85 5B			sta NEWDIR
  1774 18C4 4C CA 18			jmp l_0834
  1775 18C7			l_0824
  1776
  1777 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1778
  1779 18C7 20 EC 15			jsr AISTRAIGHT
  1780 18CA			l_0834
  1781
  1782 				; ------------------------------------------------------------
  1783
  1784 = 1D2E			L	= DATAORIGIN+$0042
  1785 = 1D2F			R	= DATAORIGIN+$0043
  1786 = 1D30			U	= DATAORIGIN+$0044
  1787 = 1D31			D	= DATAORIGIN+$0045
  1788 = 0001			@FORTMP_04EC	= $01
  1789 = 0001			@FORTMP_058C	= $01
  1790 = 0001			@FORTMP_062C	= $01
  1791 = 0001			@FORTMP_06C6	= $01
  1792
  1793 = 1D2E			@VarData	= L
  1794 = 0004			@VarDataSize	= 4
  1795
  1796 18CA			@exit
  1797 					.ifdef @new
  1798 					lda <@VarData
  1799 					sta :ztmp
  1800 					lda >@VarData
  1801 					ldy #@VarDataSize-1
  1802 					jmp @FreeMem
  1803 					els
  1804 18CA 60				rts						; ret
  1805 					eif
  1806 				.endl
  1807
  1808 18CB			.local	AIBULLY						; PROCEDURE
  1809
  1810 				; optimize OK (ai.inc), line = 84
  1811
  1812 18CB AC E0 1C 84 12 AC + 	mwy PLY :bp2
  1813 18D5 A0 04			ldy #PLY.DIR-DATAORIGIN
  1814 18D7 B1 12			lda (:bp2),y
  1815 18D9 85 58			sta T0B
  1816
  1817 				; optimize OK (ai.inc), line = 86
  1818
  1819 18DB AD 04 1D			lda PLAYER1.ISALIVE
  1820 18DE 0D 0C 1D			ora PLAYER2.ISALIVE
  1821 18E1 D0 03 4C 88 19		jeq l_0851
  1822
  1823 				; optimize OK (ai.inc), line = 88
  1824
  1825 18E6 AD 04 1D			lda PLAYER1.ISALIVE
  1826 18E9 F0 0F			jeq l_085E
  1827 18EB AD E4 1C			lda PLAYER1
  1828 18EE 8D E2 1C			sta TMPPLY
  1829 18F1 AD E5 1C			lda PLAYER1+1
  1830 18F4 8D E3 1C			sta TMPPLY+1
  1831 18F7 4C 06 19			jmp l_086D
  1832 18FA			l_085E
  1833 18FA AD E6 1C			lda PLAYER2
  1834 18FD 8D E2 1C			sta TMPPLY
  1835 1900 AD E7 1C			lda PLAYER2+1
  1836 1903 8D E3 1C			sta TMPPLY+1
  1837 1906			l_086D
  1838
  1839 				; optimize OK (ai.inc), line = 89
  1840
  1841 1906 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  1842 1910 A0 01			ldy #PLY.Y-DATAORIGIN
  1843 1912 B1 12			lda (:bp2),y
  1844 1914 85 21			sta :STACKORIGIN+9
  1845 1916 AC E2 1C 84 12 AC + 	mwy TMPPLY :bp2
  1846 1920 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1847 1922 B1 12			lda (:bp2),y
  1848 1924 C5 21			cmp :STACKORIGIN+9
  1849 1926 B0 07			jcs l_0886
  1850 1928 A9 01			lda #$01
  1851 192A 85 58			sta T0B
  1852 192C 4C 33 19			jmp l_0894
  1853 192F			l_0886
  1854 192F A9 02			lda #$02
  1855 1931 85 58			sta T0B
  1856 1933			l_0894
  1857
  1858 				; optimize OK (ai.inc), line = 91
  1859
  1860 1933 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  1861 193D A0 01			ldy #PLY.Y-DATAORIGIN
  1862 193F B1 12			lda (:bp2),y
  1863 1941 85 21			sta :STACKORIGIN+9
  1864 1943 AC E2 1C 84 12 AC + 	mwy TMPPLY :bp2
  1865 194D A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1866 194F B1 12			lda (:bp2),y
  1867 1951 C5 21			cmp :STACKORIGIN+9
  1868 1953 F0 06			jeq l_08BEx
  1869 1955 A5 5C			lda AVAILDIR
  1870 1957 25 58			and T0B
  1871 1959 D0 2D			jne l_08BE
  1872 195B			l_08BEx
  1873
  1874 				; optimize OK (ai.inc), line = 92
  1875
  1876 195B AC E0 1C 84 12 AC + 	mwy PLY :bp2
  1877 1965 A0 00			ldy #PLY.X-DATAORIGIN
  1878 1967 B1 12			lda (:bp2),y
  1879 1969 85 21			sta :STACKORIGIN+9
  1880 196B AC E2 1C 84 12 AC + 	mwy TMPPLY :bp2
  1881 1975 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1882 1977 B1 12			lda (:bp2),y
  1883 1979 C5 21			cmp :STACKORIGIN+9
  1884 197B B0 07			jcs l_08D3
  1885 197D A9 04			lda #$04
  1886 197F 85 58			sta T0B
  1887 1981 4C 88 19			jmp l_08E1
  1888 1984			l_08D3
  1889 1984 A9 08			lda #$08
  1890 1986 85 58			sta T0B
  1891 1988			l_08E1
  1892 1988			l_08BE
  1893 1988			l_0851
  1894
  1895 				; optimize OK (ai.inc), line = 96
  1896
  1897 1988 A5 5C			lda AVAILDIR
  1898 198A 25 58			and T0B
  1899 198C F0 07			jeq l_0901
  1900 198E A5 58			lda T0B
  1901 1990 85 5B			sta NEWDIR
  1902 1992 4C 98 19			jmp l_0911
  1903 1995			l_0901
  1904
  1905 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 97
  1906
  1907 1995 20 EC 15			jsr AISTRAIGHT
  1908 1998			l_0911
  1909 1998			@exit
  1910 					.ifdef @new
  1911 					lda <@VarData
  1912 					sta :ztmp
  1913 					lda >@VarData
  1914 					ldy #@VarDataSize-1
  1915 					jmp @FreeMem
  1916 					els
  1917 1998 60				rts						; ret
  1918 					eif
  1919 				.endl
  1920
  1921 1999			.local	AIMIRROR					; PROCEDURE
  1922
  1923 				; optimize OK (ai.inc), line = 105
  1924
  1925 1999 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  1926 19A3 A0 04			ldy #PLY.DIR-DATAORIGIN
  1927 19A5 B1 12			lda (:bp2),y
  1928 19A7 85 58			sta T0B
  1929
  1930 				; optimize OK (ai.inc), line = 107
  1931
  1932 19A9 AD 04 1D			lda PLAYER1.ISALIVE
  1933 19AC F0 2F			jeq l_0928
  1934
  1935 				; optimize OK (ai.inc), line = 108
  1936
  1937 19AE AD 01 1D			lda PLAYER1.DIR
  1938 19B1 8D 32 1D			sta @CASETMP_0005
  1939 19B4 C9 01			cmp #$01
  1940 19B6 D0 07			jne l_0934
  1941 19B8			@
  1942
  1943 				; optimize OK (ai.inc), line = 109
  1944
  1945 19B8 A9 02			lda #$02
  1946 19BA 85 58			sta T0B
  1947
  1948 19BC 4C DD 19			jmp a_0005
  1949 19BF			l_0934
  1950 19BF C9 02			cmp #$02
  1951 19C1 D0 07			jne l_0941
  1952 19C3			@
  1953
  1954 				; optimize OK (ai.inc), line = 110
  1955
  1956 19C3 A9 01			lda #$01
  1957 19C5 85 58			sta T0B
  1958
  1959 19C7 4C DD 19			jmp a_0005
  1960 19CA			l_0941
  1961 19CA C9 04			cmp #$04
  1962 19CC D0 07			jne l_094E
  1963 19CE			@
  1964
  1965 				; optimize OK (ai.inc), line = 111
  1966
  1967 19CE A9 08			lda #$08
  1968 19D0 85 58			sta T0B
  1969
  1970 19D2 4C DD 19			jmp a_0005
  1971 19D5			l_094E
  1972 19D5 C9 08			cmp #$08
  1973 19D7 D0 04			jne l_095B
  1974 19D9			@
  1975
  1976 				; optimize OK (ai.inc), line = 112
  1977
  1978 19D9 A9 04			lda #$04
  1979 19DB 85 58			sta T0B
  1980
  1981 19DD			l_095B
  1982 19DD			a_0005
  1983 19DD			l_0928
  1984
  1985 				; optimize OK (ai.inc), line = 116
  1986
  1987 19DD A5 5C			lda AVAILDIR
  1988 19DF 25 58			and T0B
  1989 19E1 F0 07			jeq l_0981
  1990 19E3 A5 58			lda T0B
  1991 19E5 85 5B			sta NEWDIR
  1992 19E7 4C ED 19			jmp l_0991
  1993 19EA			l_0981
  1994
  1995 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  1996
  1997 19EA 20 71 16			jsr AISAPPER
  1998 19ED			l_0991
  1999
  2000 				; ------------------------------------------------------------
  2001
  2002 = 1D32			@CASETMP_0005	= DATAORIGIN+$0046
  2003
  2004 = 1D32			@VarData	= @CASETMP_0005
  2005 = 0001			@VarDataSize	= 1
  2006
  2007 19ED			@exit
  2008 					.ifdef @new
  2009 					lda <@VarData
  2010 					sta :ztmp
  2011 					lda >@VarData
  2012 					ldy #@VarDataSize-1
  2013 					jmp @FreeMem
  2014 					els
  2015 19ED 60				rts						; ret
  2016 					eif
  2017 				.endl
  2018
  2019 19EE			.local	HUMAN						; PROCEDURE
  2020
  2021 				; optimize OK (main.pas), line = 14
  2022
  2023 19EE AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2024 19F8 A0 04			ldy #PLY.DIR-DATAORIGIN
  2025 19FA B1 12			lda (:bp2),y
  2026 19FC 85 5B			sta NEWDIR
  2027
  2028 				; optimize OK (main.pas), line = 15
  2029
  2030 19FE A9 02			lda #$02
  2031 1A00 8D 08 FF			sta JOY
  2032 1A03 A9 FF			lda #$FF
  2033 1A05 8D 30 FD			sta KEYSCAN
  2034 1A08 AD 08 FF			lda JOY
  2035 1A0B 49 FF			eor #$FF
  2036 1A0D 85 58			sta T0B
  2037
  2038 				; optimize OK (main.pas), line = 17
  2039
  2040 1A0F 8D 33 1D			sta @CASETMP_0006
  2041 1A12 C9 01			cmp #$01
  2042 1A14 D0 19			jne l_09B9
  2043 1A16			@
  2044
  2045 				; optimize OK (main.pas), line = 18
  2046
  2047 1A16 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2048 1A20 A0 04			ldy #PLY.DIR-DATAORIGIN
  2049 1A22 B1 12			lda (:bp2),y
  2050 1A24 C9 02			cmp #$02
  2051 1A26 F0 04			jeq l_09CB
  2052 1A28 A9 01			lda #$01
  2053 1A2A 85 5B			sta NEWDIR
  2054 1A2C			l_09CB
  2055
  2056 1A2C 4C 83 1A			jmp a_0006
  2057 1A2F			l_09B9
  2058 1A2F C9 02			cmp #$02
  2059 1A31 D0 19			jne l_09DB
  2060 1A33			@
  2061
  2062 				; optimize OK (main.pas), line = 19
  2063
  2064 1A33 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2065 1A3D A0 04			ldy #PLY.DIR-DATAORIGIN
  2066 1A3F B1 12			lda (:bp2),y
  2067 1A41 C9 01			cmp #$01
  2068 1A43 F0 04			jeq l_09ED
  2069 1A45 A9 02			lda #$02
  2070 1A47 85 5B			sta NEWDIR
  2071 1A49			l_09ED
  2072
  2073 1A49 4C 83 1A			jmp a_0006
  2074 1A4C			l_09DB
  2075 1A4C C9 04			cmp #$04
  2076 1A4E D0 19			jne l_09FD
  2077 1A50			@
  2078
  2079 				; optimize OK (main.pas), line = 20
  2080
  2081 1A50 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2082 1A5A A0 04			ldy #PLY.DIR-DATAORIGIN
  2083 1A5C B1 12			lda (:bp2),y
  2084 1A5E C9 08			cmp #$08
  2085 1A60 F0 04			jeq l_0A0F
  2086 1A62 A9 04			lda #$04
  2087 1A64 85 5B			sta NEWDIR
  2088 1A66			l_0A0F
  2089
  2090 1A66 4C 83 1A			jmp a_0006
  2091 1A69			l_09FD
  2092 1A69 C9 08			cmp #$08
  2093 1A6B D0 16			jne l_0A1F
  2094 1A6D			@
  2095
  2096 				; optimize OK (main.pas), line = 21
  2097
  2098 1A6D AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2099 1A77 A0 04			ldy #PLY.DIR-DATAORIGIN
  2100 1A79 B1 12			lda (:bp2),y
  2101 1A7B C9 04			cmp #$04
  2102 1A7D F0 04			jeq l_0A31
  2103 1A7F A9 08			lda #$08
  2104 1A81 85 5B			sta NEWDIR
  2105 1A83			l_0A31
  2106
  2107 1A83			l_0A1F
  2108 1A83			a_0006
  2109
  2110 				; optimize OK (main.pas), line = 24
  2111
  2112 1A83 A5 5B			lda NEWDIR
  2113 1A85 25 5C			and AVAILDIR
  2114 1A87 D0 18			jne l_0A58
  2115
  2116 				; optimize OK (main.pas), line = 25
  2117
  2118 1A89 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2119 1A93 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2120 1A95 A9 00			lda #$00
  2121 1A97 91 12			sta (:bp2),y
  2122 1A99 A0 02			ldy #PLY.HEAD-DATAORIGIN
  2123 1A9B A9 2A			lda #$2A
  2124 1A9D 91 12			sta (:bp2),y
  2125 1A9F C6 5A			dec ALIVE
  2126 1AA1			l_0A58
  2127
  2128 				; ------------------------------------------------------------
  2129
  2130 = 1D33			@CASETMP_0006	= DATAORIGIN+$0047
  2131
  2132 = 1D33			@VarData	= @CASETMP_0006
  2133 = 0001			@VarDataSize	= 1
  2134
  2135 1AA1			@exit
  2136 					.ifdef @new
  2137 					lda <@VarData
  2138 					sta :ztmp
  2139 					lda >@VarData
  2140 					ldy #@VarDataSize-1
  2141 					jmp @FreeMem
  2142 					els
  2143 1AA1 60				rts						; ret
  2144 					eif
  2145 				.endl
  2146
  2147 1AA2			.local	PLAYERMOVE					; PROCEDURE
  2148
  2149 				; optimize OK (main.pas), line = 33
  2150
  2151 1AA2 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2152 1AAC A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2153 1AAE B1 12			lda (:bp2),y
  2154 1AB0 D0 03 4C D7 1B		jeq l_0A77
  2155
  2156 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 34
  2157
  2158 1AB5 20 01 12			jsr CHECKAVAILDIR
  2159
  2160 				; optimize OK (main.pas), line = 36
  2161
  2162 1AB8 A5 5C			lda AVAILDIR
  2163 1ABA D0 35			jne l_0A8B
  2164
  2165 				; optimize OK (main.pas), line = 37
  2166
  2167 1ABC AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2168 1AC6 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  2169 1AC8 A9 00			lda #$00
  2170 1ACA 91 12			sta (:bp2),y
  2171 1ACC C6 5A			dec ALIVE
  2172
  2173 				; optimize OK (main.pas), line = 38
  2174
  2175 1ACE A0 00			ldy #PLY.X-DATAORIGIN
  2176 1AD0 B1 12			lda (:bp2),y
  2177 1AD2 8D 1D 1D			sta PUTCHAR.X
  2178 1AD5 A0 01			ldy #PLY.Y-DATAORIGIN
  2179 1AD7 B1 12			lda (:bp2),y
  2180 1AD9 8D 1E 1D			sta PUTCHAR.Y
  2181 1ADC A0 03			ldy #PLY.COLOUR-DATAORIGIN
  2182 1ADE B1 12			lda (:bp2),y
  2183 1AE0 18 69 80			add #$80
  2184 1AE3 8D 20 1D			sta PUTCHAR.C
  2185 1AE6 A9 57			lda #$57
  2186 1AE8 8D 1F 1D			sta PUTCHAR.V
  2187 1AEB 20 71 11			jsr PUTCHAR
  2188 1AEE 4C D7 1B			jmp l_0AAC
  2189 1AF1			l_0A8B
  2190
  2191 				; optimize OK (main.pas), line = 41
  2192
  2193 1AF1 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2194 1AFB A0 05			ldy #PLY.BRAIN-DATAORIGIN
  2195 1AFD B1 12			lda (:bp2),y
  2196 1AFF 8D 34 1D			sta @CASETMP_0007
  2197 1B02 C9 00			cmp #$00
  2198 1B04 D0 06			jne l_0AB7
  2199 1B06			@
  2200
  2201 				; optimize FAIL ('HUMAN', main.pas), line = 42
  2202
  2203 1B06 20 EE 19			jsr HUMAN
  2204 1B09 4C 31 1B			jmp a_0007
  2205 1B0C			l_0AB7
  2206 1B0C C9 01			cmp #$01
  2207 1B0E D0 06			jne l_0AC1
  2208 1B10			@
  2209
  2210 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 43
  2211
  2212 1B10 20 EC 15			jsr AISTRAIGHT
  2213 1B13 4C 31 1B			jmp a_0007
  2214 1B16			l_0AC1
  2215 1B16 C9 02			cmp #$02
  2216 1B18 D0 06			jne l_0ACB
  2217 1B1A			@
  2218
  2219 				; optimize FAIL ('AISAPPER', main.pas), line = 44
  2220
  2221 1B1A 20 71 16			jsr AISAPPER
  2222 1B1D 4C 31 1B			jmp a_0007
  2223 1B20			l_0ACB
  2224 1B20 C9 03			cmp #$03
  2225 1B22 D0 06			jne l_0AD5
  2226 1B24			@
  2227
  2228 				; optimize FAIL ('AIBULLY', main.pas), line = 45
  2229
  2230 1B24 20 CB 18			jsr AIBULLY
  2231 1B27 4C 31 1B			jmp a_0007
  2232 1B2A			l_0AD5
  2233 1B2A C9 04			cmp #$04
  2234 1B2C D0 03			jne l_0ADF
  2235 1B2E			@
  2236
  2237 				; optimize FAIL ('AIMIRROR', main.pas), line = 46
  2238
  2239 1B2E 20 99 19			jsr AIMIRROR
  2240 1B31			l_0ADF
  2241 1B31			a_0007
  2242
  2243 				; optimize FAIL ('DRAWTAIL', main.pas), line = 49
  2244
  2245 1B31 20 C9 12			jsr DRAWTAIL
  2246 1B34 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2247 1B3E A0 04			ldy #PLY.DIR-DATAORIGIN
  2248 1B40 A5 5B			lda NEWDIR
  2249 1B42 91 12			sta (:bp2),y
  2250
  2251 				; optimize OK (main.pas), line = 51
  2252
  2253 1B44 A5 5B			lda NEWDIR
  2254 1B46 8D 35 1D			sta @CASETMP_0008
  2255 1B49 C9 01			cmp #$01
  2256 1B4B D0 16			jne l_0AFB
  2257 1B4D			@
  2258
  2259 				; optimize OK (main.pas), line = 52
  2260
  2261 1B4D AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2262 1B57 A0 01			ldy #PLY.Y-DATAORIGIN
  2263 1B59 B1 12			lda (:bp2),y
  2264 1B5B 38 E9 01			sub #$01
  2265 1B5E 91 12			sta (:bp2),y
  2266
  2267 1B60 4C AE 1B			jmp a_0008
  2268 1B63			l_0AFB
  2269 1B63 C9 02			cmp #$02
  2270 1B65 D0 16			jne l_0B05
  2271 1B67			@
  2272
  2273 				; optimize OK (main.pas), line = 53
  2274
  2275 1B67 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2276 1B71 A0 01			ldy #PLY.Y-DATAORIGIN
  2277 1B73 B1 12			lda (:bp2),y
  2278 1B75 18 69 01			add #$01
  2279 1B78 91 12			sta (:bp2),y
  2280
  2281 1B7A 4C AE 1B			jmp a_0008
  2282 1B7D			l_0B05
  2283 1B7D C9 04			cmp #$04
  2284 1B7F D0 16			jne l_0B0F
  2285 1B81			@
  2286
  2287 				; optimize OK (main.pas), line = 54
  2288
  2289 1B81 AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2290 1B8B A0 00			ldy #PLY.X-DATAORIGIN
  2291 1B8D B1 12			lda (:bp2),y
  2292 1B8F 38 E9 01			sub #$01
  2293 1B92 91 12			sta (:bp2),y
  2294
  2295 1B94 4C AE 1B			jmp a_0008
  2296 1B97			l_0B0F
  2297 1B97 C9 08			cmp #$08
  2298 1B99 D0 13			jne l_0B19
  2299 1B9B			@
  2300
  2301 				; optimize OK (main.pas), line = 55
  2302
  2303 1B9B AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2304 1BA5 A0 00			ldy #PLY.X-DATAORIGIN
  2305 1BA7 B1 12			lda (:bp2),y
  2306 1BA9 18 69 01			add #$01
  2307 1BAC 91 12			sta (:bp2),y
  2308
  2309 1BAE			l_0B19
  2310 1BAE			a_0008
  2311
  2312 				; optimize OK (main.pas), line = 58
  2313
  2314 1BAE AC E0 1C 84 12 AC + 	mwy PLY :bp2
  2315 1BB8 A0 00			ldy #PLY.X-DATAORIGIN
  2316 1BBA B1 12			lda (:bp2),y
  2317 1BBC 8D 1D 1D			sta PUTCHAR.X
  2318 1BBF A0 01			ldy #PLY.Y-DATAORIGIN
  2319 1BC1 B1 12			lda (:bp2),y
  2320 1BC3 8D 1E 1D			sta PUTCHAR.Y
  2321 1BC6 A0 02			ldy #PLY.HEAD-DATAORIGIN
  2322 1BC8 B1 12			lda (:bp2),y
  2323 1BCA 8D 1F 1D			sta PUTCHAR.V
  2324 1BCD A0 03			ldy #PLY.COLOUR-DATAORIGIN
  2325 1BCF B1 12			lda (:bp2),y
  2326 1BD1 8D 20 1D			sta PUTCHAR.C
  2327 1BD4 20 71 11			jsr PUTCHAR
  2328 1BD7			l_0AAC
  2329 1BD7			l_0A77
  2330
  2331 				; ------------------------------------------------------------
  2332
  2333 = 1D34			@CASETMP_0007	= DATAORIGIN+$0048
  2334 = 1D35			@CASETMP_0008	= DATAORIGIN+$0049
  2335
  2336 = 1D34			@VarData	= @CASETMP_0007
  2337 = 0002			@VarDataSize	= 2
  2338
  2339 1BD7			@exit
  2340 					.ifdef @new
  2341 					lda <@VarData
  2342 					sta :ztmp
  2343 					lda >@VarData
  2344 					ldy #@VarDataSize-1
  2345 					jmp @FreeMem
  2346 					els
  2347 1BD7 60				rts						; ret
  2348 					eif
  2349 				.endl
  2350
  2351 1BD8			.local	STARTSCREEN					; PROCEDURE
  2352
  2353 				; --- RepeatUntilProlog
  2354 1BD8			l_0B36
  2355
  2356 				; optimize OK (main.pas), line = 70
  2357
  2358 1BD8 A9 02			lda #$02
  2359 1BDA 8D 08 FF			sta JOY
  2360 1BDD A9 FF			lda #$FF
  2361 1BDF 8D 30 FD			sta KEYSCAN
  2362 1BE2 AD 08 FF			lda JOY
  2363 1BE5 49 FF			eor #$FF
  2364 1BE7 85 58			sta T0B
  2365
  2366 				; optimize OK (main.pas), line = 71
  2367
  2368 1BE9 C9 40			cmp #$40
  2369 1BEB D0 EB			jne l_0B36
  2370 1BED			@exit
  2371 					.ifdef @new
  2372 					lda <@VarData
  2373 					sta :ztmp
  2374 					lda >@VarData
  2375 					ldy #@VarDataSize-1
  2376 					jmp @FreeMem
  2377 					els
  2378 1BED 60				rts						; ret
  2379 					eif
  2380 				.endl
  2381
  2382 1BEE			.local	MAINLOOP					; PROCEDURE
  2383
  2384 				; optimize OK (main.pas), line = 78
  2385
  2386 1BEE A9 FF			lda #$FF
  2387 1BF0 85 5A			sta ALIVE
  2388 1BF2 20 EB 13			jsr INITPLAYFIELD
  2389 1BF5 20 D8 1B			jsr STARTSCREEN
  2390
  2391 				; --- RepeatUntilProlog
  2392 1BF8			l_0B60
  2393
  2394 				; optimize OK (main.pas), line = 81
  2395
  2396 1BF8 A9 03			lda #$03
  2397 1BFA 8D F8 1C			sta SYSTEM.PAUSE_006B.N
  2398 1BFD A9 00			lda #$00
  2399 1BFF 8D F9 1C			sta SYSTEM.PAUSE_006B.N+1
  2400 1C02 20 23 11			jsr SYSTEM.PAUSE_006B
  2401
  2402 				; optimize OK (main.pas), line = 82
  2403
  2404 1C05 AD E4 1C			lda PLAYER1
  2405 1C08 8D E0 1C			sta PLY
  2406 1C0B AD E5 1C			lda PLAYER1+1
  2407 1C0E 8D E1 1C			sta PLY+1
  2408 1C11 20 A2 1A			jsr PLAYERMOVE
  2409
  2410 				; optimize OK (main.pas), line = 83
  2411
  2412 1C14 AD E6 1C			lda PLAYER2
  2413 1C17 8D E0 1C			sta PLY
  2414 1C1A AD E7 1C			lda PLAYER2+1
  2415 1C1D 8D E1 1C			sta PLY+1
  2416 1C20 20 A2 1A			jsr PLAYERMOVE
  2417
  2418 				; optimize OK (main.pas), line = 84
  2419
  2420 1C23 AD E8 1C			lda PLAYER3
  2421 1C26 8D E0 1C			sta PLY
  2422 1C29 AD E9 1C			lda PLAYER3+1
  2423 1C2C 8D E1 1C			sta PLY+1
  2424 1C2F 20 A2 1A			jsr PLAYERMOVE
  2425
  2426 				; optimize OK (main.pas), line = 85
  2427
  2428 1C32 AD EA 1C			lda PLAYER4
  2429 1C35 8D E0 1C			sta PLY
  2430 1C38 AD EB 1C			lda PLAYER4+1
  2431 1C3B 8D E1 1C			sta PLY+1
  2432 1C3E 20 A2 1A			jsr PLAYERMOVE
  2433
  2434 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 86
  2435
  2436 1C41 20 96 12			jsr ANIMATEOBSTACLES
  2437
  2438 				; optimize OK (main.pas), line = 87
  2439
  2440 1C44 A5 5A			lda ALIVE
  2441 1C46 F0 04			jeq l_0B60x
  2442 1C48 C9 FF			cmp #$FF
  2443 1C4A D0 AC			jne l_0B60
  2444 1C4C			l_0B60x
  2445
  2446 				; optimize OK (main.pas), line = 89
  2447
  2448 1C4C AD 04 1D			lda PLAYER1.ISALIVE
  2449 1C4F F0 03			jeq l_0BA0
  2450 1C51 EE 03 1D			inc PLAYER1.SCORE
  2451 1C54			l_0BA0
  2452
  2453 				; optimize OK (main.pas), line = 90
  2454
  2455 1C54 AD 0C 1D			lda PLAYER2.ISALIVE
  2456 1C57 F0 03			jeq l_0BB3
  2457 1C59 EE 0B 1D			inc PLAYER2.SCORE
  2458 1C5C			l_0BB3
  2459
  2460 				; optimize OK (main.pas), line = 91
  2461
  2462 1C5C AD 14 1D			lda PLAYER3.ISALIVE
  2463 1C5F F0 03			jeq l_0BC6
  2464 1C61 EE 13 1D			inc PLAYER3.SCORE
  2465 1C64			l_0BC6
  2466
  2467 				; optimize OK (main.pas), line = 92
  2468
  2469 1C64 AD 1C 1D			lda PLAYER4.ISALIVE
  2470 1C67 F0 03			jeq l_0BD9
  2471 1C69 EE 1B 1D			inc PLAYER4.SCORE
  2472 1C6C			l_0BD9
  2473
  2474 				; optimize OK (main.pas), line = 94
  2475
  2476 1C6C A9 64			lda #$64
  2477 1C6E 8D F8 1C			sta SYSTEM.PAUSE_006B.N
  2478 1C71 A9 00			lda #$00
  2479 1C73 8D F9 1C			sta SYSTEM.PAUSE_006B.N+1
  2480 1C76 20 23 11			jsr SYSTEM.PAUSE_006B
  2481 1C79			@exit
  2482 					.ifdef @new
  2483 					lda <@VarData
  2484 					sta :ztmp
  2485 					lda >@VarData
  2486 					ldy #@VarDataSize-1
  2487 					jmp @FreeMem
  2488 					els
  2489 1C79 60				rts						; ret
  2490 					eif
  2491 				.endl
  2492 1C7A			l_0007
  2493
  2494 				; --- RepeatUntilProlog
  2495 1C7A			l_0BE4
  2496
  2497 				; optimize OK (main.pas), line = 101
  2498
  2499 1C7A A9 30			lda #$30
  2500 1C7C 8D 03 1D			sta PLAYER1.SCORE
  2501 1C7F 8D 0B 1D			sta PLAYER2.SCORE
  2502
  2503 				; optimize OK (main.pas), line = 102
  2504
  2505 1C82 8D 13 1D			sta PLAYER3.SCORE
  2506 1C85 8D 1B 1D			sta PLAYER4.SCORE
  2507
  2508 				; optimize OK (main.pas), line = 104
  2509
  2510 1C88 A9 00			lda #$00
  2511 1C8A 8D FC 1C			sta GAMEOVER
  2512
  2513 				; --- RepeatUntilProlog
  2514 1C8D			l_0BF9
  2515
  2516 				; optimize FAIL ('MAINLOOP', main.pas), line = 106
  2517
  2518 1C8D 20 EE 1B			jsr MAINLOOP
  2519
  2520 				; optimize OK (main.pas), line = 107
  2521
  2522 1C90 AD 03 1D			lda PLAYER1.SCORE
  2523 1C93 C9 39			cmp #$39
  2524 1C95 D0 05			jne l_0C0C
  2525 1C97 A9 01			lda #$01
  2526 1C99 8D FC 1C			sta GAMEOVER
  2527 1C9C			l_0C0C
  2528
  2529 				; optimize OK (main.pas), line = 108
  2530
  2531 1C9C AD 0B 1D			lda PLAYER2.SCORE
  2532 1C9F C9 39			cmp #$39
  2533 1CA1 D0 05			jne l_0C25
  2534 1CA3 A9 01			lda #$01
  2535 1CA5 8D FC 1C			sta GAMEOVER
  2536 1CA8			l_0C25
  2537
  2538 				; optimize OK (main.pas), line = 109
  2539
  2540 1CA8 AD 13 1D			lda PLAYER3.SCORE
  2541 1CAB C9 39			cmp #$39
  2542 1CAD D0 05			jne l_0C3E
  2543 1CAF A9 01			lda #$01
  2544 1CB1 8D FC 1C			sta GAMEOVER
  2545 1CB4			l_0C3E
  2546
  2547 				; optimize OK (main.pas), line = 110
  2548
  2549 1CB4 AD 1B 1D			lda PLAYER4.SCORE
  2550 1CB7 C9 39			cmp #$39
  2551 1CB9 D0 05			jne l_0C57
  2552 1CBB A9 01			lda #$01
  2553 1CBD 8D FC 1C			sta GAMEOVER
  2554 1CC0			l_0C57
  2555
  2556 				; optimize OK (main.pas), line = 111
  2557
  2558 1CC0 AD FC 1C			lda GAMEOVER
  2559 1CC3 F0 C8			jeq l_0BF9
  2560
  2561 				; optimize FAIL ('SHOWSCORE', main.pas), line = 113
  2562
  2563 1CC5 20 9C 11			jsr SHOWSCORE
  2564
  2565 				; optimize OK (main.pas), line = 115
  2566
  2567 1CC8 A9 C8			lda #$C8
  2568 1CCA 8D F8 1C			sta SYSTEM.PAUSE_006B.N
  2569 1CCD A9 00			lda #$00
  2570 1CCF 8D F9 1C			sta SYSTEM.PAUSE_006B.N+1
  2571 1CD2 20 23 11			jsr SYSTEM.PAUSE_006B
  2572
  2573 				; optimize OK (main.pas), line = 116
  2574
  2575 1CD5 4C 7A 1C			jmp l_0BE4
  2576
  2577 				; ------------------------------------------------------------
  2578
  2579 = 0800			ATTRIBUTE_ADDR	= $0800
  2580 = 0C00			SCREEN_ADDR	= $0C00
  2581 = 0009			VICTORIES	= $09
  2582 = 0005			LOOK_AHEAD	= $05
  2583 = 0020			EMPTY	= $20
  2584 = 00A0			WALL	= $A0
  2585 = 0041			WALL_COLOUR	= $41
  2586 = 0030			ZERO	= $30
  2587 = 0056			OBSTACLE_1	= $56
  2588 = 005B			OBSTACLE_2	= $5B
  2589 = 0035			OBST_COLOUR	= $35
  2590 = 0051			PLY_HEAD	= $51
  2591 = 002A			PLY_CRASH	= $2A
  2592 = 0057			PLY_BUSTED	= $57
  2593 = 0042			PLY_TAIL_UD	= $42
  2594 = 0040			PLY_TAIL_LR	= $40
  2595 = 007D			PLY_TAIL_RD	= $7D
  2596 = 006E			PLY_TAIL_RU	= $6E
  2597 = 006D			PLY_TAIL_LD	= $6D
  2598 = 0070			PLY_TAIL_LU	= $70
  2599 = 005F			PLY1_COLOUR	= $5F
  2600 = 005D			PLY2_COLOUR	= $5D
  2601 = 0071			PLY3_COLOUR	= $71
  2602 = 0055			PLY4_COLOUR	= $55
  2603 = 0000			PLY_CTRL	= $00
  2604 = 0001			AI_STRAIGHT	= $01
  2605 = 0002			AI_SAPPER	= $02
  2606 = 0003			AI_BULLY	= $03
  2607 = 0004			AI_MIRROR	= $04
  2608 = 0001			JOY_UP	= $01
  2609 = 0002			JOY_DOWN	= $02
  2610 = 0004			JOY_LEFT	= $04
  2611 = 0008			JOY_RIGHT	= $08
  2612 = 0040			JOY_FIRE	= $40
  2613 = 0002			JOY_SELECT_1	= $02
  2614 = 0004			JOY_SELECT_2	= $04
  2615 = 100E			adr.MUL40	= CODEORIGIN+$0000
  2616 1CD8			.var MUL40	= adr.MUL40 .word
  2617 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  2618 1CD8			.var DIRECTION	= adr.DIRECTION .word
  2619 = FD30			KEYSCAN	= $FD30
  2620 = FF08			JOY	= $FF08
  2621 = FF15			BACKGROUND	= $FF15
  2622 = FF19			BOREDER	= $FF19
  2623 = 0058			T0B	= $58
  2624 = 0059			I0B	= $59
  2625 = 005A			ALIVE	= $5A
  2626 = 005B			NEWDIR	= $5B
  2627 = 005C			AVAILDIR	= $5C
  2628 = 005D			T0W	= $5D
  2629 = 005F			adr.PLY	= $5F
  2630 1CD8			.var PLY	= adr.PLY .word
  2631 = 1CEC			PLY.X	= DATAORIGIN+$0000
  2632 = 1CED			PLY.Y	= DATAORIGIN+$0001
  2633 = 1CEE			PLY.HEAD	= DATAORIGIN+$0002
  2634 = 1CEF			PLY.COLOUR	= DATAORIGIN+$0003
  2635 = 1CF0			PLY.DIR	= DATAORIGIN+$0004
  2636 = 1CF1			PLY.BRAIN	= DATAORIGIN+$0005
  2637 = 1CF2			PLY.SCORE	= DATAORIGIN+$0006
  2638 = 1CF3			PLY.ISALIVE	= DATAORIGIN+$0007
  2639 = 0061			adr.TMPPLY	= $61
  2640 1CD8			.var TMPPLY	= adr.TMPPLY .word
  2641 = 1CEC			TMPPLY.X	= DATAORIGIN+$0000
  2642 = 1CED			TMPPLY.Y	= DATAORIGIN+$0001
  2643 = 1CEE			TMPPLY.HEAD	= DATAORIGIN+$0002
  2644 = 1CEF			TMPPLY.COLOUR	= DATAORIGIN+$0003
  2645 = 1CF0			TMPPLY.DIR	= DATAORIGIN+$0004
  2646 = 1CF1			TMPPLY.BRAIN	= DATAORIGIN+$0005
  2647 = 1CF2			TMPPLY.SCORE	= DATAORIGIN+$0006
  2648 = 1CF3			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  2649 = 1CFC			GAMEOVER	= DATAORIGIN+$0010
  2650 = 1CFD			adr.PLAYER1	= [DATAORIGIN+$0011] .array [6]
  2651 1CD8			.var PLAYER1	= adr.PLAYER1 .word
  2652 = 1CFD			PLAYER1.X	= DATAORIGIN+$0011
  2653 = 1CFE			PLAYER1.Y	= DATAORIGIN+$0012
  2654 = 1CFF			PLAYER1.HEAD	= DATAORIGIN+$0013
  2655 = 1D00			PLAYER1.COLOUR	= DATAORIGIN+$0014
  2656 = 1D01			PLAYER1.DIR	= DATAORIGIN+$0015
  2657 = 1D02			PLAYER1.BRAIN	= DATAORIGIN+$0016
  2658 = 1D03			PLAYER1.SCORE	= DATAORIGIN+$0017
  2659 = 1D04			PLAYER1.ISALIVE	= DATAORIGIN+$0018
  2660 = 1D05			adr.PLAYER2	= [DATAORIGIN+$0019] .array [6]
  2661 1CD8			.var PLAYER2	= adr.PLAYER2 .word
  2662 = 1D05			PLAYER2.X	= DATAORIGIN+$0019
  2663 = 1D06			PLAYER2.Y	= DATAORIGIN+$001A
  2664 = 1D07			PLAYER2.HEAD	= DATAORIGIN+$001B
  2665 = 1D08			PLAYER2.COLOUR	= DATAORIGIN+$001C
  2666 = 1D09			PLAYER2.DIR	= DATAORIGIN+$001D
  2667 = 1D0A			PLAYER2.BRAIN	= DATAORIGIN+$001E
  2668 = 1D0B			PLAYER2.SCORE	= DATAORIGIN+$001F
  2669 = 1D0C			PLAYER2.ISALIVE	= DATAORIGIN+$0020
  2670 = 1D0D			adr.PLAYER3	= [DATAORIGIN+$0021] .array [6]
  2671 1CD8			.var PLAYER3	= adr.PLAYER3 .word
  2672 = 1D0D			PLAYER3.X	= DATAORIGIN+$0021
  2673 = 1D0E			PLAYER3.Y	= DATAORIGIN+$0022
  2674 = 1D0F			PLAYER3.HEAD	= DATAORIGIN+$0023
  2675 = 1D10			PLAYER3.COLOUR	= DATAORIGIN+$0024
  2676 = 1D11			PLAYER3.DIR	= DATAORIGIN+$0025
  2677 = 1D12			PLAYER3.BRAIN	= DATAORIGIN+$0026
  2678 = 1D13			PLAYER3.SCORE	= DATAORIGIN+$0027
  2679 = 1D14			PLAYER3.ISALIVE	= DATAORIGIN+$0028
  2680 = 1D15			adr.PLAYER4	= [DATAORIGIN+$0029] .array [6]
  2681 1CD8			.var PLAYER4	= adr.PLAYER4 .word
  2682 = 1D15			PLAYER4.X	= DATAORIGIN+$0029
  2683 = 1D16			PLAYER4.Y	= DATAORIGIN+$002A
  2684 = 1D17			PLAYER4.HEAD	= DATAORIGIN+$002B
  2685 = 1D18			PLAYER4.COLOUR	= DATAORIGIN+$002C
  2686 = 1D19			PLAYER4.DIR	= DATAORIGIN+$002D
  2687 = 1D1A			PLAYER4.BRAIN	= DATAORIGIN+$002E
  2688 = 1D1B			PLAYER4.SCORE	= DATAORIGIN+$002F
  2689 = 1D1C			PLAYER4.ISALIVE	= DATAORIGIN+$0030
  2690 1CD8			@exit
  2691
  2692 1CD8 A2 00		@halt	ldx #$00
  2693 1CDA 9A				txs
  2694
  2695 1CDB 60				rts
  2696
  2697 				; ------------------------------------------------------------
  2698
  2699 				; ------------------------------------------------------------
  2700
  2701 1CDC			.local	@DEFINES
  2702 1CDC			C4P
  2703 				.endl
  2704
  2705 1CDC			.local	@RESOURCE
  2706 				.endl
  2707
  2708 = 1CDC 0E 10		MUL40
  2708 = 1CDE 40 10		DIRECTION
  2708 = 1CE0 5F 00		PLY
  2708 = 1CE2 61 00		TMPPLY
  2708 = 1CE4 FD 1C		PLAYER1
  2708 = 1CE6 05 1D		PLAYER2
  2708 = 1CE8 0D 1D		PLAYER3
  2708 = 1CEA 15 1D		PLAYER4
  2708 				.endl							; MAIN
  2709
  2710 				; ------------------------------------------------------------
  2711 				; ------------------------------------------------------------
  2712
  2713 				.macro	UNITINITIALIZATION
  2714 				
  2715 					.ifdef MAIN.SYSTEM.@UnitInit
  2716 					jsr MAIN.SYSTEM.@UnitInit
  2717 					eif
  2718 				.endm
  2719
  2720 				; ------------------------------------------------------------
  2721
  2722 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2723 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2723 				SYSTEM: $10D5..$1170
  2724 					eif
  2725
  2726 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2726 				CODE: $100E..$1CDB
  2727
  2728 				; ------------------------------------------------------------
  2729
  2730 1CEC				.align $04
  2731
  2732 1CEC			DATAORIGIN
  2733 1CEC 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  2734
  2735 = 0006			VARINITSIZE	= *-DATAORIGIN
  2736 = 004A			VARDATASIZE	= 74
  2737
  2738 = 1D36			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2739
  2740 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2740 				DATA: $1CEC..$1D36
  2741
  2742 				; ------------------------------------------------------------
  2743
  2744 				.macro	STATICDATA
  2745 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  2746 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  2747 				.by  $C0 $03 $01 $02 $04 $08
  2748 				.endm
  2749
  2750 					end
