mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E 7D 26			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0059			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 269A			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 A7			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D F3 25 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 F3 85 02 A9 26 + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 0A 26			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 9F 26		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 9F 26 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 269F			RESULT	= DATAORIGIN+$000B
   182
   183 = 269F			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 034  ---------------------
   304
   305 1123 A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   306
   307 1129			@exit
   308 					.ifdef @new
   309 					lda <@VarData
   310 					sta :ztmp
   311 					lda >@VarData
   312 					ldy #@VarDataSize-1
   313 					jmp @FreeMem
   314 					els
   315 1129 60				rts						; ret
   316 					eif
   317 				.endl
   318
   319 112A			.local	PAUSE_006C					; PROCEDURE | ASSEMBLER | OVERLOAD
   320
   321 				; ---------------------  ASM Block 035  ---------------------
   322
   323
   324 112A AD A0 26		loop  lda n
   325 112D 0D A1 26		  ora n+1
   326 1130 F0 14		  beq stop
   327
   328 1132 A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   329
   330 1138 AD A0 26 D0 03 CE +   dew n
   331
   332 1143 4C 2A 11		  jmp loop
   333 1146			stop
   334
   335
   336 				; ------------------------------------------------------------
   337
   338 = 26A0			N	= DATAORIGIN+$000C
   339
   340 = 26A0			@VarData	= N
   341 = 0002			@VarDataSize	= 2
   342
   343 1146			@exit
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					els
   351 1146 60				rts						; ret
   352 					eif
   353 				.endl
   354
   355 1147			.local	RANDOM_006D					; FUNCTION | ASSEMBLER | OVERLOAD
   356 1147 8D A2 26			sta RANGE
   357
   358 				; ---------------------  ASM Block 039  ---------------------
   359
   360
   361 114A AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   362 114D 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   363 1150 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   364 1153 6D 1E FF		  adc ted_hcount    //Horizontal counter
   365 1156 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   366 1159 4D 1E FF		  eor ted_hcount    //Horizontal counter
   367 115C A8			  tay
   368
   369 115D AD A2 26		  lda range
   370 1160 F0 08		  beq stop
   371
   372 1162 85 0C		  sta ecx
   373 1164 84 04		  sty eax
   374
   375 1166 20 A3 10		  jsr imulCL
   376 1169 A8			  tay
   377
   378 116A 8C A3 26		stop  sty Result
   379
   380 116D			@exit
   381
   382 				; ------------------------------------------------------------
   383
   384 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   385 				; as Pointer
   386
   387 116D E8				inx
   388 116E AD A3 26 95 18		mva RESULT :STACKORIGIN,x
   389
   390 					.ifdef @new
   391 					lda <@VarData
   392 					sta :ztmp
   393 					lda >@VarData
   394 					ldy #@VarDataSize-1
   395 					jmp @FreeMem
   396 					eif
   397
   398 				; ------------------------------------------------------------
   399
   400 = 26A2			RANGE	= DATAORIGIN+$000E
   401 = 26A3			RESULT	= DATAORIGIN+$000F
   402
   403 = 26A2			@VarData	= RANGE
   404 = 0002			@VarDataSize	= 2
   405
   406 1173 60				rts						; ret
   407 				.endl
   408
   409 				; ------------------------------------------------------------
   410
   411 = 0101			__PORTB_BANKS	= $0101
   412 = 0648			M_PI_2	= $0648
   413 = 0192			D_PI_2	= $0192
   414 = 0004			D_PI_180	= $04
   415 = 0000			MGTIA	= $00
   416 = 0080			MVBXE	= $80
   417 = 0000			VBXE_XDLADR	= $00
   418 = 0100			VBXE_BCBADR	= $0100
   419 = 1000			VBXE_MAPADR	= $1000
   420 = 5000			VBXE_OVRADR	= $5000
   421 = B000			VBXE_WINDOW	= $B000
   422 = 0000			IDLI	= $00
   423 = 0001			IVBL	= $01
   424 = 00FE			CH_DELCHR	= $FE
   425 = 009B			CH_ENTER	= $9B
   426 = 001B			CH_ESC	= $1B
   427 = 001C			CH_CURS_UP	= $1C
   428 = 001D			CH_CURS_DOWN	= $1D
   429 = 001E			CH_CURS_LEFT	= $1E
   430 = 001F			CH_CURS_RIGHT	= $1F
   431 = 007F			CH_TAB	= $7F
   432 = 009B			CH_EOL	= $9B
   433 = 007D			CH_CLR	= $7D
   434 = 00FD			CH_BELL	= $FD
   435 = 007E			CH_DEL	= $7E
   436 = 009C			CH_DELLINE	= $9C
   437 = 009D			CH_INSLINE	= $9D
   438 = 0000			COLOR_BLACK	= $00
   439 = 000E			COLOR_WHITE	= $0E
   440 = 0032			COLOR_RED	= $32
   441 = 0096			COLOR_CYAN	= $96
   442 = 0068			COLOR_VIOLET	= $68
   443 = 00C4			COLOR_GREEN	= $C4
   444 = 0074			COLOR_BLUE	= $74
   445 = 00EE			COLOR_YELLOW	= $EE
   446 = 0028			COLOR_ORANGE	= $28
   447 = 00E4			COLOR_BROWN	= $E4
   448 = 003C			COLOR_LIGHTRED	= $3C
   449 = 0004			COLOR_GRAY1	= $04
   450 = 0006			COLOR_GRAY2	= $06
   451 = 000A			COLOR_GRAY3	= $0A
   452 = 00CC			COLOR_LIGHTGREEN	= $CC
   453 = 007C			COLOR_LIGHTBLUE	= $7C
   454 = 0004			FMOPENREAD	= $04
   455 = 0008			FMOPENWRITE	= $08
   456 = 0009			FMOPENAPPEND	= $09
   457 = 000C			FMOPENREADWRITE	= $0C
   458 = 2694			SCREENWIDTH	= DATAORIGIN+$0000
   459 = 2696			SCREENHEIGHT	= DATAORIGIN+$0002
   460 = 2698			DATESEPARATOR	= DATAORIGIN+$0004
   461 = D014			TVSYSTEM	= $D014
   462 = D20A			RND	= $D20A
   463 = 02C0			adr.PALETTE	= $02C0
   464 1174			.var PALETTE	= adr.PALETTE .word
   465 = D012			adr.HPALETTE	= $D012
   466 1174			.var HPALETTE	= adr.HPALETTE .word
   467 = 2699			FILEMODE	= DATAORIGIN+$0005
   468 = 269A			GRAPHMODE	= DATAORIGIN+$0006
   469 = 269B			IORESULT	= DATAORIGIN+$0007
   470 = 269C			EOLN	= DATAORIGIN+$0008
   471 = 269D			RNDSEED	= DATAORIGIN+$0009
   472
   473 = 1174 C0 02		PALETTE
   473 = 1176 12 D0		HPALETTE
   473 				.endl							; UNIT SYSTEM
   474
   475 1178			.local	PUTCHAR_0072					; PROCEDURE | OVERLOAD
   476
   477 				; optimize OK (tools.inc), line = 5
   478
   479 1178 AD D7 26			lda Y
   480 117B 0A				asl @
   481 117C A8				tay
   482 117D B9 0E 10			lda adr.MUL40,y
   483 1180 18 6D D6 26			add X
   484 1184 85 5D			sta T0W
   485 1186 B9 0F 10			lda adr.MUL40+1,y
   486 1189 69 08			adc #$08
   487 118B 85 5E			sta T0W+1
   488
   489 				; optimize OK (tools.inc), line = 6
   490
   491 118D 85 11			sta :bp+1
   492 118F A4 5D			ldy T0W
   493 1191 AD D9 26			lda C
   494 1194 91 10			sta (:bp),y
   495 1196 A5 5E			lda T0W+1
   496 1198 18 69 04			add #$04
   497 119B 85 11			sta :bp+1
   498 119D AD D8 26			lda V
   499 11A0 91 10			sta (:bp),y
   500
   501 				; ------------------------------------------------------------
   502
   503 = 26D6			X	= DATAORIGIN+$0042
   504 = 26D7			Y	= DATAORIGIN+$0043
   505 = 26D8			V	= DATAORIGIN+$0044
   506 = 26D9			C	= DATAORIGIN+$0045
   507
   508 = 26D6			@VarData	= X
   509 = 0004			@VarDataSize	= 4
   510
   511 11A2			@exit
   512 					.ifdef @new
   513 					lda <@VarData
   514 					sta :ztmp
   515 					lda >@VarData
   516 					ldy #@VarDataSize-1
   517 					jmp @FreeMem
   518 					els
   519 11A2 60				rts						; ret
   520 					eif
   521 				.endl
   522
   523 11A3			.local	PUTCHAR_0098					; PROCEDURE | OVERLOAD
   524
   525 				; optimize OK (tools.inc), line = 11
   526
   527 11A3 AD DB 26			lda Y
   528 11A6 0A				asl @
   529 11A7 A8				tay
   530 11A8 B9 0E 10			lda adr.MUL40,y
   531 11AB 18 6D DA 26			add X
   532 11AF 85 5D			sta T0W
   533 11B1 B9 0F 10			lda adr.MUL40+1,y
   534 11B4 69 0C			adc #$0C
   535 11B6 85 5E			sta T0W+1
   536 11B8 A4 5E			ldy T0W+1
   537 11BA 84 11			sty :bp+1
   538 11BC A4 5D			ldy T0W
   539 11BE AD DC 26			lda V
   540 11C1 91 10			sta (:bp),y
   541
   542 				; ------------------------------------------------------------
   543
   544 = 26DA			X	= DATAORIGIN+$0046
   545 = 26DB			Y	= DATAORIGIN+$0047
   546 = 26DC			V	= DATAORIGIN+$0048
   547
   548 = 26DA			@VarData	= X
   549 = 0003			@VarDataSize	= 3
   550
   551 11C3			@exit
   552 					.ifdef @new
   553 					lda <@VarData
   554 					sta :ztmp
   555 					lda >@VarData
   556 					ldy #@VarDataSize-1
   557 					jmp @FreeMem
   558 					els
   559 11C3 60				rts						; ret
   560 					eif
   561 				.endl
   562
   563 11C4			.local	SHOWSCORE					; PROCEDURE
   564
   565 				; optimize OK (tools.inc), line = 18
   566
   567 11C4 AD A9 26			lda PLAYER1.COLOUR
   568 11C7 8D D9 26			sta PUTCHAR_0072.C
   569 11CA AD AC 26			lda PLAYER1.SCORE
   570 11CD 8D D8 26			sta PUTCHAR_0072.V
   571 11D0 A9 00			lda #$00
   572 11D2 8D D7 26			sta PUTCHAR_0072.Y
   573 11D5 A9 1E			lda #$1E
   574 11D7 8D D6 26			sta PUTCHAR_0072.X
   575 11DA 20 78 11			jsr PUTCHAR_0072
   576
   577 				; optimize OK (tools.inc), line = 19
   578
   579 11DD AD B1 26			lda PLAYER2.COLOUR
   580 11E0 8D D9 26			sta PUTCHAR_0072.C
   581 11E3 AD B4 26			lda PLAYER2.SCORE
   582 11E6 8D D8 26			sta PUTCHAR_0072.V
   583 11E9 A9 00			lda #$00
   584 11EB 8D D7 26			sta PUTCHAR_0072.Y
   585 11EE A9 20			lda #$20
   586 11F0 8D D6 26			sta PUTCHAR_0072.X
   587 11F3 20 78 11			jsr PUTCHAR_0072
   588
   589 				; optimize OK (tools.inc), line = 20
   590
   591 11F6 AD B9 26			lda PLAYER3.COLOUR
   592 11F9 8D D9 26			sta PUTCHAR_0072.C
   593 11FC AD BC 26			lda PLAYER3.SCORE
   594 11FF 8D D8 26			sta PUTCHAR_0072.V
   595 1202 A9 00			lda #$00
   596 1204 8D D7 26			sta PUTCHAR_0072.Y
   597 1207 A9 22			lda #$22
   598 1209 8D D6 26			sta PUTCHAR_0072.X
   599 120C 20 78 11			jsr PUTCHAR_0072
   600
   601 				; optimize OK (tools.inc), line = 21
   602
   603 120F AD C1 26			lda PLAYER4.COLOUR
   604 1212 8D D9 26			sta PUTCHAR_0072.C
   605 1215 AD C4 26			lda PLAYER4.SCORE
   606 1218 8D D8 26			sta PUTCHAR_0072.V
   607 121B A9 00			lda #$00
   608 121D 8D D7 26			sta PUTCHAR_0072.Y
   609 1220 A9 24			lda #$24
   610 1222 8D D6 26			sta PUTCHAR_0072.X
   611 1225 20 78 11			jsr PUTCHAR_0072
   612 1228			@exit
   613 					.ifdef @new
   614 					lda <@VarData
   615 					sta :ztmp
   616 					lda >@VarData
   617 					ldy #@VarDataSize-1
   618 					jmp @FreeMem
   619 					els
   620 1228 60				rts						; ret
   621 					eif
   622 				.endl
   623
   624 1229			.local	CHECKAVAILDIR					; PROCEDURE
   625
   626 				; optimize OK (tools.inc), line = 28
   627
   628 1229 A9 00			lda #$00
   629 122B 85 5C			sta AVAILDIR
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 122D AC 84 26 84 12 AC + 	mwy PLY :bp2
   634 1237 A0 01			ldy #PLY.Y-DATAORIGIN
   635 1239 B1 12			lda (:bp2),y
   636 123B 0A				asl @
   637 123C A8				tay
   638 123D A9 00			lda #$00
   639 123F 18 79 0E 10			add adr.MUL40,y
   640 1243 85 21			sta :STACKORIGIN+9
   641 1245 A9 0C			lda #$0C
   642 1247 79 0F 10			adc adr.MUL40+1,y
   643 124A 85 31			sta :STACKORIGIN+STACKWIDTH+9
   644 124C A0 00			ldy #PLY.X-DATAORIGIN
   645 124E A5 21			lda :STACKORIGIN+9
   646 1250 18 71 12			add (:bp2),y
   647 1253 85 5D			sta T0W
   648 1255 A5 31			lda :STACKORIGIN+STACKWIDTH+9
   649 1257 69 00			adc #$00
   650 1259 85 5E			sta T0W+1
   651
   652 				; optimize OK (tools.inc), line = 31
   653
   654 125B A5 5D			lda T0W
   655 125D 38 E9 28			sub #$28
   656 1260 85 21			sta :STACKORIGIN+9
   657 1262 A5 5E			lda T0W+1
   658 1264 E9 00			sbc #$00
   659 1266 85 11			sta :bp+1
   660 1268 A4 21			ldy :STACKORIGIN+9
   661 126A B1 10			lda (:bp),y
   662 126C C9 20			cmp #$20
   663 126E D0 06			jne l_010B
   664 1270 A5 5C			lda AVAILDIR
   665 1272 09 01			ora #$01
   666 1274 85 5C			sta AVAILDIR
   667 1276			l_010B
   668
   669 				; optimize OK (tools.inc), line = 32
   670
   671 1276 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   672 127E A0 28			ldy #$28
   673 1280 B1 12			lda (:bp2),y
   674 1282 C9 20			cmp #$20
   675 1284 D0 06			jne l_012E
   676 1286 A5 5C			lda AVAILDIR
   677 1288 09 02			ora #$02
   678 128A 85 5C			sta AVAILDIR
   679 128C			l_012E
   680
   681 				; optimize OK (tools.inc), line = 33
   682
   683 128C A5 5D			lda T0W
   684 128E 38 E9 01			sub #$01
   685 1291 85 21			sta :STACKORIGIN+9
   686 1293 A5 5E			lda T0W+1
   687 1295 E9 00			sbc #$00
   688 1297 85 11			sta :bp+1
   689 1299 A4 21			ldy :STACKORIGIN+9
   690 129B B1 10			lda (:bp),y
   691 129D C9 20			cmp #$20
   692 129F D0 06			jne l_0151
   693 12A1 A5 5C			lda AVAILDIR
   694 12A3 09 04			ora #$04
   695 12A5 85 5C			sta AVAILDIR
   696 12A7			l_0151
   697
   698 				; optimize OK (tools.inc), line = 34
   699
   700 12A7 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   701 12AF A0 01			ldy #$01
   702 12B1 B1 12			lda (:bp2),y
   703 12B3 C9 20			cmp #$20
   704 12B5 D0 06			jne l_0174
   705 12B7 A5 5C			lda AVAILDIR
   706 12B9 09 08			ora #$08
   707 12BB 85 5C			sta AVAILDIR
   708 12BD			l_0174
   709 12BD			@exit
   710 					.ifdef @new
   711 					lda <@VarData
   712 					sta :ztmp
   713 					lda >@VarData
   714 					ldy #@VarDataSize-1
   715 					jmp @FreeMem
   716 					els
   717 12BD 60				rts						; ret
   718 					eif
   719 				.endl
   720
   721 12BE			.local	ANIMATEOBSTACLES				; PROCEDURE
   722
   723 				; optimize FAIL (0, tools.inc), line = 43
   724
   725 12BE EE DD 26			inc COUNTER
   726
   727 				; optimize OK (tools.inc), line = 44
   728
   729 12C1 AD DD 26			lda COUNTER
   730 12C4 29 01			and #$01
   731 12C6 F0 08			jeq l_019F
   732 12C8 A9 56			lda #$56
   733 12CA 8D DE 26			sta OBST
   734 12CD 4C D5 12			jmp l_01AD
   735 12D0			l_019F
   736 12D0 A9 5B			lda #$5B
   737 12D2 8D DE 26			sta OBST
   738 12D5			l_01AD
   739
   740 				; optimize OK (tools.inc), line = 45
   741
   742 12D5 A9 07			lda #$07
   743 12D7 85 59			sta I0B
   744
   745 12D9			l_01BA
   746 				; --- ForToDoCondition
   747 12D9 A5 59			lda I0B
   748 12DB 0A				asl @
   749 12DC A8				tay
   750 12DD B9 C6 26			lda adr.OBSTACLES,y
   751 12E0 85 21			sta :STACKORIGIN+9
   752 12E2 B9 C7 26			lda adr.OBSTACLES+1,y
   753 12E5 85 11			sta :bp+1
   754 12E7 A4 21			ldy :STACKORIGIN+9
   755 12E9 AD DE 26			lda OBST
   756 12EC 91 10			sta (:bp),y
   757 12EE C6 59			dec I0B
   758 12F0 10 E7			jpl l_01BA
   759 12F2			l_01C8
   760
   761 				; ------------------------------------------------------------
   762
   763 = 26DD			COUNTER	= DATAORIGIN+$0049
   764 = 26DE			OBST	= DATAORIGIN+$004A
   765 = 0000			@FORTMP_01B7	= $00
   766
   767 = 26DD			@VarData	= COUNTER
   768 = 0002			@VarDataSize	= 2
   769
   770 12F2			@exit
   771 					.ifdef @new
   772 					lda <@VarData
   773 					sta :ztmp
   774 					lda >@VarData
   775 					ldy #@VarDataSize-1
   776 					jmp @FreeMem
   777 					els
   778 12F2 60				rts						; ret
   779 					eif
   780 				.endl
   781
   782 12F3			.local	SAVEOBSTACLES					; PROCEDURE
   783
   784 				; optimize OK (tools.inc), line = 52
   785
   786 12F3 A9 07			lda #$07
   787 12F5 85 59			sta I0B
   788
   789 12F7			l_01E3
   790 				; --- ForToDoCondition
   791
   792 				; optimize OK (tools.inc), line = 53
   793
   794 12F7 A5 59			lda I0B
   795 12F9 0A				asl @
   796 12FA A8				tay
   797 12FB B9 C7 26			lda adr.OBSTACLES+1,y
   798 12FE C9 00			cmp #$00
   799 1300 D0 05			bne @+
   800 1302 B9 C6 26			lda adr.OBSTACLES,y
   801 1305 C9 7E			cmp #$7E
   802 1307			@
   803 1307 F0 29			jeq l_0205
   804
   805 				; optimize OK (tools.inc), line = 54
   806
   807 1309 B9 C6 26			lda adr.OBSTACLES,y
   808 130C 85 21			sta :STACKORIGIN+9
   809 130E B9 C7 26			lda adr.OBSTACLES+1,y
   810 1311 85 11			sta :bp+1
   811 1313 A4 21			ldy :STACKORIGIN+9
   812 1315 A9 56			lda #$56
   813 1317 91 10			sta (:bp),y
   814
   815 				; optimize OK (tools.inc), line = 55
   816
   817 1319 A5 59			lda I0B
   818 131B 0A				asl @
   819 131C A8				tay
   820 131D B9 C6 26			lda adr.OBSTACLES,y
   821 1320 38 E9 00			sub #$00
   822 1323 85 21			sta :STACKORIGIN+9
   823 1325 B9 C7 26			lda adr.OBSTACLES+1,y
   824 1328 E9 04			sbc #$04
   825 132A 85 11			sta :bp+1
   826 132C A4 21			ldy :STACKORIGIN+9
   827 132E A9 35			lda #$35
   828 1330 91 10			sta (:bp),y
   829 1332			l_0205
   830
   831 				; --- ForToDoEpilog
   832 1332 C6 59			dec I0B
   833 1334 10 C1			jpl l_01E3
   834 1336			l_01F1
   835
   836 				; ------------------------------------------------------------
   837
   838 = 0000			@FORTMP_01E0	= $00
   839 1336			@exit
   840 					.ifdef @new
   841 					lda <@VarData
   842 					sta :ztmp
   843 					lda >@VarData
   844 					ldy #@VarDataSize-1
   845 					jmp @FreeMem
   846 					els
   847 1336 60				rts						; ret
   848 					eif
   849 				.endl
   850
   851 1337			.local	DRAWTAIL					; PROCEDURE
   852
   853 				; optimize OK (tools.inc), line = 64
   854
   855 1337 AC 84 26 84 12 AC + 	mwy PLY :bp2
   856 1341 A0 04			ldy #PLY.DIR-DATAORIGIN
   857 1343 B1 12			lda (:bp2),y
   858 1345 C5 5B			cmp NEWDIR
   859 1347 D0 14			jne l_0237
   860
   861 				; optimize OK (tools.inc), line = 65
   862
   863 1349 A5 5B			lda NEWDIR
   864 134B 29 0C			and #$0C
   865 134D F0 07			jeq l_024E
   866 134F A9 40			lda #$40
   867 1351 85 58			sta T0B
   868 1353 4C 5A 13			jmp l_025C
   869 1356			l_024E
   870 1356 A9 42			lda #$42
   871 1358 85 58			sta T0B
   872 135A			l_025C
   873 135A 4C CD 13			jmp l_0269
   874 135D			l_0237
   875
   876 				; optimize OK (tools.inc), line = 67
   877
   878 135D AC 84 26 84 12 AC + 	mwy PLY :bp2
   879 1367 A0 04			ldy #PLY.DIR-DATAORIGIN
   880 1369 B1 12			lda (:bp2),y
   881 136B 29 0A			and #$0A
   882 136D F0 0A			jeq l_028F
   883 136F A5 5B			lda NEWDIR
   884 1371 29 05			and #$05
   885 1373 F0 04			jeq l_028F
   886 1375 A9 7D			lda #$7D
   887 1377 85 58			sta T0B
   888 1379			l_028F
   889
   890 				; optimize OK (tools.inc), line = 68
   891
   892 1379 AC 84 26 84 12 AC + 	mwy PLY :bp2
   893 1383 A0 04			ldy #PLY.DIR-DATAORIGIN
   894 1385 B1 12			lda (:bp2),y
   895 1387 29 09			and #$09
   896 1389 F0 0A			jeq l_02BC
   897 138B A5 5B			lda NEWDIR
   898 138D 29 06			and #$06
   899 138F F0 04			jeq l_02BC
   900 1391 A9 6E			lda #$6E
   901 1393 85 58			sta T0B
   902 1395			l_02BC
   903
   904 				; optimize OK (tools.inc), line = 69
   905
   906 1395 AC 84 26 84 12 AC + 	mwy PLY :bp2
   907 139F A0 04			ldy #PLY.DIR-DATAORIGIN
   908 13A1 B1 12			lda (:bp2),y
   909 13A3 29 06			and #$06
   910 13A5 F0 0A			jeq l_02E9
   911 13A7 A5 5B			lda NEWDIR
   912 13A9 29 09			and #$09
   913 13AB F0 04			jeq l_02E9
   914 13AD A9 6D			lda #$6D
   915 13AF 85 58			sta T0B
   916 13B1			l_02E9
   917
   918 				; optimize OK (tools.inc), line = 70
   919
   920 13B1 AC 84 26 84 12 AC + 	mwy PLY :bp2
   921 13BB A0 04			ldy #PLY.DIR-DATAORIGIN
   922 13BD B1 12			lda (:bp2),y
   923 13BF 29 05			and #$05
   924 13C1 F0 0A			jeq l_0316
   925 13C3 A5 5B			lda NEWDIR
   926 13C5 29 0A			and #$0A
   927 13C7 F0 04			jeq l_0316
   928 13C9 A9 70			lda #$70
   929 13CB 85 58			sta T0B
   930 13CD			l_0316
   931 13CD			l_0269
   932
   933 				; optimize OK (tools.inc), line = 72
   934
   935 13CD AC 84 26 84 12 AC + 	mwy PLY :bp2
   936 13D7 A0 00			ldy #PLY.X-DATAORIGIN
   937 13D9 B1 12			lda (:bp2),y
   938 13DB 8D DA 26			sta PUTCHAR_0098.X
   939 13DE A0 01			ldy #PLY.Y-DATAORIGIN
   940 13E0 B1 12			lda (:bp2),y
   941 13E2 8D DB 26			sta PUTCHAR_0098.Y
   942 13E5 A5 58			lda T0B
   943 13E7 8D DC 26			sta PUTCHAR_0098.V
   944 13EA 20 A3 11			jsr PUTCHAR_0098
   945 13ED			@exit
   946 					.ifdef @new
   947 					lda <@VarData
   948 					sta :ztmp
   949 					lda >@VarData
   950 					ldy #@VarDataSize-1
   951 					jmp @FreeMem
   952 					els
   953 13ED 60				rts						; ret
   954 					eif
   955 				.endl
   956
   957 13EE			.local	CHECKJOYSTATUS					; PROCEDURE
   958
   959 				; optimize OK (tools.inc), line = 79
   960
   961 13EE A9 02			lda #$02
   962 13F0 8D 08 FF			sta JOY
   963 13F3 A9 FF			lda #$FF
   964 13F5 8D 30 FD			sta KEYSCAN
   965
   966 				; optimize OK (tools.inc), line = 80
   967
   968 13F8 AD 08 FF			lda JOY
   969 13FB 49 FF			eor #$FF
   970 13FD 85 63			sta JOYSTATUS
   971 13FF			@exit
   972 					.ifdef @new
   973 					lda <@VarData
   974 					sta :ztmp
   975 					lda >@VarData
   976 					ldy #@VarDataSize-1
   977 					jmp @FreeMem
   978 					els
   979 13FF 60				rts						; ret
   980 					eif
   981 				.endl
   982
   983 1400			.local	SETPLAYER					; PROCEDURE
   984
   985 				; optimize OK (tools.inc), line = 87
   986
   987 1400 AD DF 26			lda P
   988 1403 8D 84 26			sta PLY
   989 1406 85 12			sta :bp2
   990 1408 AD E0 26			lda P+1
   991 140B 8D 85 26			sta PLY+1
   992 140E 85 13			sta :bp2+1
   993 				; optimize OK (tools.inc), line = 88
   994 1410 A0 05			ldy #PLY.BRAIN-DATAORIGIN
   995 1412 AD E4 26			lda BRAIN
   996 1415 91 12			sta (:bp2),y
   997 1417 A0 00			ldy #PLY.X-DATAORIGIN
   998 1419 AD E1 26			lda X
   999 141C 91 12			sta (:bp2),y
  1000 141E A0 01			ldy #PLY.Y-DATAORIGIN
  1001 1420 AD E2 26			lda Y
  1002 1423 91 12			sta (:bp2),y
  1003 1425 A0 04			ldy #PLY.DIR-DATAORIGIN
  1004 1427 AD E3 26			lda DIR
  1005 142A 91 12			sta (:bp2),y
  1006
  1007 				; optimize OK (tools.inc), line = 89
  1008
  1009 142C A0 02			ldy #PLY.HEAD-DATAORIGIN
  1010 142E AD E5 26			lda HEAD
  1011 1431 91 12			sta (:bp2),y
  1012 1433 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1013 1435 AD E6 26			lda COLOUR
  1014 1438 91 12			sta (:bp2),y
  1015 143A A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1016 143C AD E7 26			lda ISALIVE
  1017 143F 91 12			sta (:bp2),y
  1018
  1019 				; optimize OK (tools.inc), line = 90
  1020
  1021 1441 AD E7 26			lda ISALIVE
  1022 1444 F0 1D			jeq l_037C
  1023
  1024 				; optimize FAIL (0, tools.inc), line = 91
  1025
  1026 1446 E6 5A			inc ALIVE
  1027 1448 AD E6 26			lda COLOUR
  1028 144B 8D D9 26			sta PUTCHAR_0072.C
  1029 144E AD E5 26			lda HEAD
  1030 1451 8D D8 26			sta PUTCHAR_0072.V
  1031 1454 AD E2 26			lda Y
  1032 1457 8D D7 26			sta PUTCHAR_0072.Y
  1033 145A AD E1 26			lda X
  1034 145D 8D D6 26			sta PUTCHAR_0072.X
  1035 1460 20 78 11			jsr PUTCHAR_0072
  1036 1463			l_037C
  1037
  1038 				; ------------------------------------------------------------
  1039
  1040 = 26DF			P	= DATAORIGIN+$004B
  1041 = 26E1			X	= DATAORIGIN+$004D
  1042 = 26E2			Y	= DATAORIGIN+$004E
  1043 = 26E3			DIR	= DATAORIGIN+$004F
  1044 = 26E4			BRAIN	= DATAORIGIN+$0050
  1045 = 26E5			HEAD	= DATAORIGIN+$0051
  1046 = 26E6			COLOUR	= DATAORIGIN+$0052
  1047 = 26E7			ISALIVE	= DATAORIGIN+$0053
  1048
  1049 = 26DF			@VarData	= P
  1050 = 0009			@VarDataSize	= 9
  1051
  1052 1463			@exit
  1053 					.ifdef @new
  1054 					lda <@VarData
  1055 					sta :ztmp
  1056 					lda >@VarData
  1057 					ldy #@VarDataSize-1
  1058 					jmp @FreeMem
  1059 					els
  1060 1463 60				rts						; ret
  1061 					eif
  1062 				.endl
  1063
  1064 1464			.local	INITPLAYFIELD					; PROCEDURE
  1065
  1066 				; optimize OK (init.inc), line = 5
  1067
  1068 1464 A9 1F			lda #$1F
  1069 1466 8D 15 FF			sta BACKGROUND
  1070 1469 A9 00			lda #$00
  1071 146B 8D 19 FF			sta BOREDER
  1072
  1073 				; optimize OK (init.inc), line = 6
  1074
  1075 146E A9 20			lda #$20
  1076 1470 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
  1077 1472 A9 C0			lda #$C0
  1078 1474 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
  1079 1476 A9 03			lda #$03
  1080 1478 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
  1081 147A A9 00			lda #$00
  1082 147C 85 08			sta SYSTEM.FILLCHAR_0056.A
  1083 147E A9 0C			lda #$0C
  1084 1480 85 09			sta SYSTEM.FILLCHAR_0056.A+1
  1085 1482 20 1F 11			jsr SYSTEM.FILLCHAR_0056
  1086
  1087 				; optimize OK (init.inc), line = 8
  1088
  1089 1485 A9 27			lda #$27
  1090 1487 85 58			sta T0B
  1091
  1092 1489			l_03A9
  1093 				; --- ForToDoCondition
  1094
  1095 				; optimize OK (init.inc), line = 9
  1096
  1097 1489 A4 58			ldy T0B
  1098 148B A9 A0			lda #$A0
  1099 148D 99 00 0C			sta $0C00,y
  1100
  1101 				; optimize OK (init.inc), line = 10
  1102
  1103 1490 99 C0 0F			sta $0FC0,y
  1104
  1105 				; optimize OK (init.inc), line = 11
  1106
  1107 1493 A9 41			lda #$41
  1108 1495 99 00 08			sta $0800,y
  1109
  1110 				; optimize OK (init.inc), line = 12
  1111
  1112 1498 99 C0 0B			sta $0BC0,y
  1113
  1114 				; --- ForToDoEpilog
  1115 149B C6 58			dec T0B
  1116 149D 10 EA			jpl l_03A9
  1117 149F			l_03B7
  1118
  1119 				; optimize OK (init.inc), line = 15
  1120
  1121 149F A9 18			lda #$18
  1122 14A1 85 58			sta T0B
  1123
  1124 14A3			l_03E9
  1125 				; --- ForToDoCondition
  1126 14A3 A5 58			lda T0B
  1127 14A5 C9 01			cmp #$01
  1128 14A7 90 3A			jcc l_03F7
  1129
  1130 				; optimize OK (init.inc), line = 16
  1131
  1132 14A9 0A				asl @
  1133 14AA A8				tay
  1134 14AB A9 FF			lda #$FF
  1135 14AD 18 79 0E 10			add adr.MUL40,y
  1136 14B1 85 12			sta :bp2
  1137 14B3 A9 0B			lda #$0B
  1138 14B5 79 0F 10			adc adr.MUL40+1,y
  1139 14B8 85 13			sta :bp2+1
  1140 14BA A0 00			ldy #$00
  1141 14BC A9 A0			lda #$A0
  1142 14BE 91 12			sta (:bp2),y
  1143 14C0 C8				iny
  1144 14C1 91 12			sta (:bp2),y
  1145
  1146 				; optimize OK (init.inc), line = 17
  1147
  1148 14C3 A5 58			lda T0B
  1149 14C5 0A				asl @
  1150 14C6 A8				tay
  1151 14C7 A9 FF			lda #$FF
  1152 14C9 18 79 0E 10			add adr.MUL40,y
  1153 14CD 85 12			sta :bp2
  1154 14CF A9 07			lda #$07
  1155 14D1 79 0F 10			adc adr.MUL40+1,y
  1156 14D4 85 13			sta :bp2+1
  1157 14D6 A0 00			ldy #$00
  1158 14D8 A9 41			lda #$41
  1159 14DA 91 12			sta (:bp2),y
  1160 14DC C8				iny
  1161 14DD 91 12			sta (:bp2),y
  1162
  1163 				; --- ForToDoEpilog
  1164 14DF C6 58			dec T0B
  1165 14E1 10 C0			jpl l_03E9
  1166 14E3			l_03F7
  1167
  1168 				; ------------------------------------------------------------
  1169
  1170 = 0000			@FORTMP_03A6	= $00
  1171 = 0001			@FORTMP_03E6	= $01
  1172 14E3			@exit
  1173 					.ifdef @new
  1174 					lda <@VarData
  1175 					sta :ztmp
  1176 					lda >@VarData
  1177 					ldy #@VarDataSize-1
  1178 					jmp @FreeMem
  1179 					els
  1180 14E3 60				rts						; ret
  1181 					eif
  1182 				.endl
  1183
  1184 14E4			.local	AISTRAIGHT					; PROCEDURE
  1185
  1186 				; optimize OK (ai.inc), line = 5
  1187
  1188 14E4 AC 84 26 84 12 AC + 	mwy PLY :bp2
  1189 14EE A0 04			ldy #PLY.DIR-DATAORIGIN
  1190 14F0 B1 12			lda (:bp2),y
  1191 14F2 25 5C			and AVAILDIR
  1192 14F4 F0 07			jeq l_042E
  1193 14F6 B1 12			lda (:bp2),y
  1194 14F8 85 5B			sta NEWDIR
  1195 14FA 4C 68 15			jmp l_043E
  1196 14FD			l_042E
  1197
  1198 				; optimize OK (ai.inc), line = 7
  1199
  1200 14FD A5 5C			lda AVAILDIR
  1201 14FF C9 03			cmp #$03
  1202 1501 D0 10			jne l_0450
  1203 1503 A9 02			lda #$02
  1204 1505 20 47 11			jsr SYSTEM.RANDOM_006D
  1205 1508 B4 18			ldy :STACKORIGIN,x
  1206 150A B9 40 10			lda adr.DIRECTION,y
  1207 150D 85 5B			sta NEWDIR
  1208 150F CA				dex
  1209 1510 4C 2B 15			jmp l_0462
  1210 1513			l_0450
  1211
  1212 				; optimize OK (ai.inc), line = 9
  1213
  1214 1513 A5 5C			lda AVAILDIR
  1215 1515 8D E8 26			sta @CASETMP_0003
  1216 1518 C9 01			cmp #$01
  1217 151A D0 07			jne l_046D
  1218 151C			@
  1219
  1220 				; optimize OK (ai.inc), line = 10
  1221
  1222 151C A9 01			lda #$01
  1223 151E 85 5B			sta NEWDIR
  1224
  1225 1520 4C 2B 15			jmp a_0003
  1226 1523			l_046D
  1227 1523 C9 02			cmp #$02
  1228 1525 D0 04			jne l_047A
  1229 1527			@
  1230
  1231 				; optimize OK (ai.inc), line = 11
  1232
  1233 1527 A9 02			lda #$02
  1234 1529 85 5B			sta NEWDIR
  1235
  1236 152B			l_047A
  1237 152B			a_0003
  1238 152B			l_0462
  1239
  1240 				; optimize OK (ai.inc), line = 14
  1241
  1242 152B A5 5C			lda AVAILDIR
  1243 152D C9 0C			cmp #$0C
  1244 152F D0 1F			jne l_0496
  1245 1531 A9 02			lda #$02
  1246 1533 20 47 11			jsr SYSTEM.RANDOM_006D
  1247 1536 E8				inx
  1248 1537 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1249 153B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1250 153F 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1251 1541 20 44 10			jsr addAX_CX
  1252 1544 CA				dex
  1253 1545 B4 18			ldy :STACKORIGIN,x
  1254 1547 B9 40 10			lda adr.DIRECTION,y
  1255 154A 85 5B			sta NEWDIR
  1256 154C CA				dex
  1257 154D 4C 68 15			jmp l_04AC
  1258 1550			l_0496
  1259
  1260 				; optimize OK (ai.inc), line = 16
  1261
  1262 1550 A5 5C			lda AVAILDIR
  1263 1552 8D E9 26			sta @CASETMP_0004
  1264 1555 C9 04			cmp #$04
  1265 1557 D0 07			jne l_04B7
  1266 1559			@
  1267
  1268 				; optimize OK (ai.inc), line = 17
  1269
  1270 1559 A9 04			lda #$04
  1271 155B 85 5B			sta NEWDIR
  1272
  1273 155D 4C 68 15			jmp a_0004
  1274 1560			l_04B7
  1275 1560 C9 08			cmp #$08
  1276 1562 D0 04			jne l_04C4
  1277 1564			@
  1278
  1279 				; optimize OK (ai.inc), line = 18
  1280
  1281 1564 A9 08			lda #$08
  1282 1566 85 5B			sta NEWDIR
  1283
  1284 1568			l_04C4
  1285 1568			a_0004
  1286 1568			l_04AC
  1287 1568			l_043E
  1288
  1289 				; ------------------------------------------------------------
  1290
  1291 = 26E8			@CASETMP_0003	= DATAORIGIN+$0054
  1292 = 26E9			@CASETMP_0004	= DATAORIGIN+$0055
  1293
  1294 = 26E8			@VarData	= @CASETMP_0003
  1295 = 0002			@VarDataSize	= 2
  1296
  1297 1568			@exit
  1298 					.ifdef @new
  1299 					lda <@VarData
  1300 					sta :ztmp
  1301 					lda >@VarData
  1302 					ldy #@VarDataSize-1
  1303 					jmp @FreeMem
  1304 					els
  1305 1568 60				rts						; ret
  1306 					eif
  1307 				.endl
  1308
  1309 1569			.local	AISAPPER					; PROCEDURE
  1310
  1311 				; optimize OK (ai.inc), line = 31
  1312
  1313 1569 A9 00			lda #$00
  1314 156B 8D EA 26			sta L
  1315 156E 8D EB 26			sta R
  1316 1571 8D EC 26			sta U
  1317 1574 8D ED 26			sta D
  1318
  1319 				; optimize OK (ai.inc), line = 32
  1320
  1321 1577 AC 84 26 84 12 AC + 	mwy PLY :bp2
  1322 1581 A0 01			ldy #PLY.Y-DATAORIGIN
  1323 1583 B1 12			lda (:bp2),y
  1324 1585 0A				asl @
  1325 1586 A8				tay
  1326 1587 A9 00			lda #$00
  1327 1589 18 79 0E 10			add adr.MUL40,y
  1328 158D 85 21			sta :STACKORIGIN+9
  1329 158F A9 0C			lda #$0C
  1330 1591 79 0F 10			adc adr.MUL40+1,y
  1331 1594 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1332 1596 A0 00			ldy #PLY.X-DATAORIGIN
  1333 1598 A5 21			lda :STACKORIGIN+9
  1334 159A 18 71 12			add (:bp2),y
  1335 159D 85 5D			sta T0W
  1336 159F A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1337 15A1 69 00			adc #$00
  1338 15A3 85 5E			sta T0W+1
  1339
  1340 				; optimize OK (ai.inc), line = 34
  1341
  1342 15A5 A5 5C			lda AVAILDIR
  1343 15A7 29 01			and #$01
  1344 15A9 F0 73			jeq l_050A
  1345
  1346 				; optimize OK (ai.inc), line = 35
  1347
  1348 15AB A9 05			lda #$05
  1349 15AD 85 59			sta I0B
  1350
  1351 15AF			l_0514
  1352 				; --- ForToDoCondition
  1353 15AF A5 59			lda I0B
  1354 15B1 C9 01			cmp #$01
  1355 15B3 90 69			jcc l_0522
  1356
  1357 				; optimize OK (ai.inc), line = 36
  1358
  1359 15B5 0A				asl @
  1360 15B6 A8				tay
  1361 15B7 A5 5D			lda T0W
  1362 15B9 38 F9 0E 10			sub adr.MUL40,y
  1363 15BD 85 21			sta :STACKORIGIN+9
  1364 15BF A5 5E			lda T0W+1
  1365 15C1 F9 0F 10			sbc adr.MUL40+1,y
  1366 15C4 85 11			sta :bp+1
  1367 15C6 A4 21			ldy :STACKORIGIN+9
  1368 15C8 B1 10			lda (:bp),y
  1369 15CA C9 20			cmp #$20
  1370 15CC D0 03			jne l_053C
  1371 15CE EE EC 26			inc U
  1372 15D1			l_053C
  1373
  1374 				; optimize OK (ai.inc), line = 37
  1375
  1376 15D1 A5 59			lda I0B
  1377 15D3 0A				asl @
  1378 15D4 A8				tay
  1379 15D5 A5 5D			lda T0W
  1380 15D7 38 F9 0E 10			sub adr.MUL40,y
  1381 15DB 85 21			sta :STACKORIGIN+9
  1382 15DD A5 5E			lda T0W+1
  1383 15DF F9 0F 10			sbc adr.MUL40+1,y
  1384 15E2 85 11			sta :bp+1
  1385 15E4 A5 21			lda :STACKORIGIN+9
  1386 15E6 18 69 01			add #$01
  1387 15E9 A8				tay
  1388 15EA 90 02			scc
  1389 15EC E6 11			inc :bp+1
  1390 15EE B1 10			lda (:bp),y
  1391 15F0 C9 20			cmp #$20
  1392 15F2 D0 03			jne l_0561
  1393 15F4 EE EC 26			inc U
  1394 15F7			l_0561
  1395
  1396 				; optimize OK (ai.inc), line = 38
  1397
  1398 15F7 A5 59			lda I0B
  1399 15F9 0A				asl @
  1400 15FA A8				tay
  1401 15FB A5 5D			lda T0W
  1402 15FD 38 F9 0E 10			sub adr.MUL40,y
  1403 1601 85 21			sta :STACKORIGIN+9
  1404 1603 A5 5E			lda T0W+1
  1405 1605 F9 0F 10			sbc adr.MUL40+1,y
  1406 1608 85 11			sta :bp+1
  1407 160A A4 21			ldy :STACKORIGIN+9
  1408 160C 88				dey
  1409 160D B0 02			scs
  1410 160F C6 11			dec :bp+1
  1411 1611 B1 10			lda (:bp),y
  1412 1613 C9 20			cmp #$20
  1413 1615 D0 03			jne l_0586
  1414 1617 EE EC 26			inc U
  1415 161A			l_0586
  1416
  1417 				; --- ForToDoEpilog
  1418 161A C6 59			dec I0B
  1419 161C 10 91			jpl l_0514
  1420 161E			l_0522
  1421 161E			l_050A
  1422
  1423 				; optimize OK (ai.inc), line = 42
  1424
  1425 161E A5 5C			lda AVAILDIR
  1426 1620 29 02			and #$02
  1427 1622 F0 73			jeq l_05AA
  1428
  1429 				; optimize OK (ai.inc), line = 43
  1430
  1431 1624 A9 05			lda #$05
  1432 1626 85 59			sta I0B
  1433
  1434 1628			l_05B4
  1435 				; --- ForToDoCondition
  1436 1628 A5 59			lda I0B
  1437 162A C9 01			cmp #$01
  1438 162C 90 69			jcc l_05C2
  1439
  1440 				; optimize OK (ai.inc), line = 44
  1441
  1442 162E 0A				asl @
  1443 162F A8				tay
  1444 1630 A5 5D			lda T0W
  1445 1632 18 79 0E 10			add adr.MUL40,y
  1446 1636 85 21			sta :STACKORIGIN+9
  1447 1638 A5 5E			lda T0W+1
  1448 163A 79 0F 10			adc adr.MUL40+1,y
  1449 163D 85 11			sta :bp+1
  1450 163F A4 21			ldy :STACKORIGIN+9
  1451 1641 B1 10			lda (:bp),y
  1452 1643 C9 20			cmp #$20
  1453 1645 D0 03			jne l_05DC
  1454 1647 EE ED 26			inc D
  1455 164A			l_05DC
  1456
  1457 				; optimize OK (ai.inc), line = 45
  1458
  1459 164A A5 59			lda I0B
  1460 164C 0A				asl @
  1461 164D A8				tay
  1462 164E A5 5D			lda T0W
  1463 1650 18 79 0E 10			add adr.MUL40,y
  1464 1654 85 21			sta :STACKORIGIN+9
  1465 1656 A5 5E			lda T0W+1
  1466 1658 79 0F 10			adc adr.MUL40+1,y
  1467 165B 85 11			sta :bp+1
  1468 165D A5 21			lda :STACKORIGIN+9
  1469 165F 18 69 01			add #$01
  1470 1662 A8				tay
  1471 1663 90 02			scc
  1472 1665 E6 11			inc :bp+1
  1473 1667 B1 10			lda (:bp),y
  1474 1669 C9 20			cmp #$20
  1475 166B D0 03			jne l_0601
  1476 166D EE ED 26			inc D
  1477 1670			l_0601
  1478
  1479 				; optimize OK (ai.inc), line = 46
  1480
  1481 1670 A5 59			lda I0B
  1482 1672 0A				asl @
  1483 1673 A8				tay
  1484 1674 A5 5D			lda T0W
  1485 1676 18 79 0E 10			add adr.MUL40,y
  1486 167A 85 21			sta :STACKORIGIN+9
  1487 167C A5 5E			lda T0W+1
  1488 167E 79 0F 10			adc adr.MUL40+1,y
  1489 1681 85 11			sta :bp+1
  1490 1683 A4 21			ldy :STACKORIGIN+9
  1491 1685 88				dey
  1492 1686 B0 02			scs
  1493 1688 C6 11			dec :bp+1
  1494 168A B1 10			lda (:bp),y
  1495 168C C9 20			cmp #$20
  1496 168E D0 03			jne l_0626
  1497 1690 EE ED 26			inc D
  1498 1693			l_0626
  1499
  1500 				; --- ForToDoEpilog
  1501 1693 C6 59			dec I0B
  1502 1695 10 91			jpl l_05B4
  1503 1697			l_05C2
  1504 1697			l_05AA
  1505
  1506 				; optimize OK (ai.inc), line = 50
  1507
  1508 1697 A5 5C			lda AVAILDIR
  1509 1699 29 04			and #$04
  1510 169B F0 5F			jeq l_064A
  1511
  1512 				; optimize OK (ai.inc), line = 51
  1513
  1514 169D A9 05			lda #$05
  1515 169F 85 59			sta I0B
  1516
  1517 16A1			l_0654
  1518 				; --- ForToDoCondition
  1519 16A1 A5 59			lda I0B
  1520 16A3 C9 01			cmp #$01
  1521 16A5 90 55			jcc l_0662
  1522
  1523 				; optimize OK (ai.inc), line = 52
  1524
  1525 16A7 A5 5D			lda T0W
  1526 16A9 38 E5 59			sub I0B
  1527 16AC A8				tay
  1528 16AD A5 5E			lda T0W+1
  1529 16AF E9 00			sbc #$00
  1530 16B1 85 11			sta :bp+1
  1531 16B3 B1 10			lda (:bp),y
  1532 16B5 C9 20			cmp #$20
  1533 16B7 D0 03			jne l_067A
  1534 16B9 EE EA 26			inc L
  1535 16BC			l_067A
  1536
  1537 				; optimize OK (ai.inc), line = 53
  1538
  1539 16BC A5 5D			lda T0W
  1540 16BE 38 E5 59			sub I0B
  1541 16C1 A8				tay
  1542 16C2 A5 5E			lda T0W+1
  1543 16C4 E9 00			sbc #$00
  1544 16C6 85 11			sta :bp+1
  1545 16C8 98				tya
  1546 16C9 18 69 28			add #$28
  1547 16CC A8				tay
  1548 16CD 90 02			scc
  1549 16CF E6 11			inc :bp+1
  1550 16D1 B1 10			lda (:bp),y
  1551 16D3 C9 20			cmp #$20
  1552 16D5 D0 03			jne l_069D
  1553 16D7 EE EA 26			inc L
  1554 16DA			l_069D
  1555
  1556 				; optimize OK (ai.inc), line = 54
  1557
  1558 16DA A5 5D			lda T0W
  1559 16DC 38 E5 59			sub I0B
  1560 16DF A8				tay
  1561 16E0 A5 5E			lda T0W+1
  1562 16E2 E9 00			sbc #$00
  1563 16E4 85 11			sta :bp+1
  1564 16E6 98				tya
  1565 16E7 38 E9 28			sub #$28
  1566 16EA A8				tay
  1567 16EB B0 02			scs
  1568 16ED C6 11			dec :bp+1
  1569 16EF B1 10			lda (:bp),y
  1570 16F1 C9 20			cmp #$20
  1571 16F3 D0 03			jne l_06C0
  1572 16F5 EE EA 26			inc L
  1573 16F8			l_06C0
  1574
  1575 				; --- ForToDoEpilog
  1576 16F8 C6 59			dec I0B
  1577 16FA 10 A5			jpl l_0654
  1578 16FC			l_0662
  1579 16FC			l_064A
  1580
  1581 				; optimize OK (ai.inc), line = 58
  1582
  1583 16FC A5 5C			lda AVAILDIR
  1584 16FE 29 08			and #$08
  1585 1700 F0 5D			jeq l_06E4
  1586
  1587 				; optimize OK (ai.inc), line = 59
  1588
  1589 1702 A9 05			lda #$05
  1590 1704 85 59			sta I0B
  1591
  1592 1706			l_06EE
  1593 				; --- ForToDoCondition
  1594 1706 A5 59			lda I0B
  1595 1708 C9 01			cmp #$01
  1596 170A 90 53			jcc l_06FC
  1597
  1598 				; optimize OK (ai.inc), line = 60
  1599
  1600 170C A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1601 1714 A4 59			ldy I0B
  1602 1716 B1 12			lda (:bp2),y
  1603 1718 C9 20			cmp #$20
  1604 171A D0 03			jne l_0714
  1605 171C EE EB 26			inc R
  1606 171F			l_0714
  1607
  1608 				; optimize OK (ai.inc), line = 61
  1609
  1610 171F A5 5D			lda T0W
  1611 1721 18 65 59			add I0B
  1612 1724 A8				tay
  1613 1725 A5 5E			lda T0W+1
  1614 1727 69 00			adc #$00
  1615 1729 85 11			sta :bp+1
  1616 172B 98				tya
  1617 172C 18 69 28			add #$28
  1618 172F A8				tay
  1619 1730 90 02			scc
  1620 1732 E6 11			inc :bp+1
  1621 1734 B1 10			lda (:bp),y
  1622 1736 C9 20			cmp #$20
  1623 1738 D0 03			jne l_0737
  1624 173A EE EB 26			inc R
  1625 173D			l_0737
  1626
  1627 				; optimize OK (ai.inc), line = 62
  1628
  1629 173D A5 5D			lda T0W
  1630 173F 18 65 59			add I0B
  1631 1742 A8				tay
  1632 1743 A5 5E			lda T0W+1
  1633 1745 69 00			adc #$00
  1634 1747 85 11			sta :bp+1
  1635 1749 98				tya
  1636 174A 38 E9 28			sub #$28
  1637 174D A8				tay
  1638 174E B0 02			scs
  1639 1750 C6 11			dec :bp+1
  1640 1752 B1 10			lda (:bp),y
  1641 1754 C9 20			cmp #$20
  1642 1756 D0 03			jne l_075A
  1643 1758 EE EB 26			inc R
  1644 175B			l_075A
  1645
  1646 				; --- ForToDoEpilog
  1647 175B C6 59			dec I0B
  1648 175D 10 A7			jpl l_06EE
  1649 175F			l_06FC
  1650 175F			l_06E4
  1651
  1652 				; optimize OK (ai.inc), line = 66
  1653
  1654 175F AD ED 26			lda D
  1655 1762 85 58			sta T0B
  1656
  1657 				; optimize OK (ai.inc), line = 67
  1658
  1659 1764 CD EC 26			cmp U
  1660 1767 B0 05			jcs l_0782
  1661 1769 AD EC 26			lda U
  1662 176C 85 58			sta T0B
  1663 176E			l_0782
  1664
  1665 				; optimize OK (ai.inc), line = 68
  1666
  1667 176E A5 58			lda T0B
  1668 1770 CD EA 26			cmp L
  1669 1773 B0 05			jcs l_079F
  1670 1775 AD EA 26			lda L
  1671 1778 85 58			sta T0B
  1672 177A			l_079F
  1673
  1674 				; optimize OK (ai.inc), line = 69
  1675
  1676 177A A5 58			lda T0B
  1677 177C CD EB 26			cmp R
  1678 177F B0 05			jcs l_07BC
  1679 1781 AD EB 26			lda R
  1680 1784 85 58			sta T0B
  1681 1786			l_07BC
  1682
  1683 				; optimize OK (ai.inc), line = 71
  1684
  1685 1786 A5 58			lda T0B
  1686 1788 CD ED 26			cmp D
  1687 178B D0 04			jne l_07D9
  1688 178D A9 02			lda #$02
  1689 178F 85 58			sta T0B
  1690 1791			l_07D9
  1691
  1692 				; optimize OK (ai.inc), line = 72
  1693
  1694 1791 A5 58			lda T0B
  1695 1793 CD EC 26			cmp U
  1696 1796 D0 04			jne l_07F4
  1697 1798 A9 01			lda #$01
  1698 179A 85 58			sta T0B
  1699 179C			l_07F4
  1700
  1701 				; optimize OK (ai.inc), line = 73
  1702
  1703 179C A5 58			lda T0B
  1704 179E CD EA 26			cmp L
  1705 17A1 D0 04			jne l_080F
  1706 17A3 A9 04			lda #$04
  1707 17A5 85 58			sta T0B
  1708 17A7			l_080F
  1709
  1710 				; optimize OK (ai.inc), line = 74
  1711
  1712 17A7 A5 58			lda T0B
  1713 17A9 CD EB 26			cmp R
  1714 17AC D0 04			jne l_082A
  1715 17AE A9 08			lda #$08
  1716 17B0 85 58			sta T0B
  1717 17B2			l_082A
  1718
  1719 				; optimize OK (ai.inc), line = 76
  1720
  1721 17B2 A5 5C			lda AVAILDIR
  1722 17B4 25 58			and T0B
  1723 17B6 F0 07			jeq l_0849
  1724 17B8 A5 58			lda T0B
  1725 17BA 85 5B			sta NEWDIR
  1726 17BC 4C C2 17			jmp l_0859
  1727 17BF			l_0849
  1728
  1729 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1730
  1731 17BF 20 E4 14			jsr AISTRAIGHT
  1732 17C2			l_0859
  1733
  1734 				; ------------------------------------------------------------
  1735
  1736 = 26EA			L	= DATAORIGIN+$0056
  1737 = 26EB			R	= DATAORIGIN+$0057
  1738 = 26EC			U	= DATAORIGIN+$0058
  1739 = 26ED			D	= DATAORIGIN+$0059
  1740 = 0001			@FORTMP_0511	= $01
  1741 = 0001			@FORTMP_05B1	= $01
  1742 = 0001			@FORTMP_0651	= $01
  1743 = 0001			@FORTMP_06EB	= $01
  1744
  1745 = 26EA			@VarData	= L
  1746 = 0004			@VarDataSize	= 4
  1747
  1748 17C2			@exit
  1749 					.ifdef @new
  1750 					lda <@VarData
  1751 					sta :ztmp
  1752 					lda >@VarData
  1753 					ldy #@VarDataSize-1
  1754 					jmp @FreeMem
  1755 					els
  1756 17C2 60				rts						; ret
  1757 					eif
  1758 				.endl
  1759
  1760 17C3			.local	AIBULLY						; PROCEDURE
  1761
  1762 				; optimize OK (ai.inc), line = 84
  1763
  1764 17C3 AC 84 26 84 12 AC + 	mwy PLY :bp2
  1765 17CD A0 04			ldy #PLY.DIR-DATAORIGIN
  1766 17CF B1 12			lda (:bp2),y
  1767 17D1 85 58			sta T0B
  1768
  1769 				; optimize OK (ai.inc), line = 86
  1770
  1771 17D3 AD AD 26			lda PLAYER1.ISALIVE
  1772 17D6 0D B5 26			ora PLAYER2.ISALIVE
  1773 17D9 D0 03 4C 80 18		jeq l_0876
  1774
  1775 				; optimize OK (ai.inc), line = 88
  1776
  1777 17DE AD AD 26			lda PLAYER1.ISALIVE
  1778 17E1 F0 0F			jeq l_0883
  1779 17E3 AD 88 26			lda PLAYER1
  1780 17E6 8D 86 26			sta TMPPLY
  1781 17E9 AD 89 26			lda PLAYER1+1
  1782 17EC 8D 87 26			sta TMPPLY+1
  1783 17EF 4C FE 17			jmp l_0892
  1784 17F2			l_0883
  1785 17F2 AD 8A 26			lda PLAYER2
  1786 17F5 8D 86 26			sta TMPPLY
  1787 17F8 AD 8B 26			lda PLAYER2+1
  1788 17FB 8D 87 26			sta TMPPLY+1
  1789 17FE			l_0892
  1790
  1791 				; optimize OK (ai.inc), line = 90
  1792
  1793 17FE AC 84 26 84 12 AC + 	mwy PLY :bp2
  1794 1808 A0 01			ldy #PLY.Y-DATAORIGIN
  1795 180A B1 12			lda (:bp2),y
  1796 180C 85 21			sta :STACKORIGIN+9
  1797 180E AC 86 26 84 12 AC + 	mwy TMPPLY :bp2
  1798 1818 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1799 181A B1 12			lda (:bp2),y
  1800 181C C5 21			cmp :STACKORIGIN+9
  1801 181E B0 07			jcs l_08AB
  1802 1820 A9 01			lda #$01
  1803 1822 85 58			sta T0B
  1804 1824 4C 2B 18			jmp l_08B9
  1805 1827			l_08AB
  1806 1827 A9 02			lda #$02
  1807 1829 85 58			sta T0B
  1808 182B			l_08B9
  1809
  1810 				; optimize OK (ai.inc), line = 91
  1811
  1812 182B AC 84 26 84 12 AC + 	mwy PLY :bp2
  1813 1835 A0 01			ldy #PLY.Y-DATAORIGIN
  1814 1837 B1 12			lda (:bp2),y
  1815 1839 85 21			sta :STACKORIGIN+9
  1816 183B AC 86 26 84 12 AC + 	mwy TMPPLY :bp2
  1817 1845 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1818 1847 B1 12			lda (:bp2),y
  1819 1849 C5 21			cmp :STACKORIGIN+9
  1820 184B F0 06			jeq l_08E3x
  1821 184D A5 5C			lda AVAILDIR
  1822 184F 25 58			and T0B
  1823 1851 D0 2D			jne l_08E3
  1824 1853			l_08E3x
  1825
  1826 				; optimize OK (ai.inc), line = 92
  1827
  1828 1853 AC 84 26 84 12 AC + 	mwy PLY :bp2
  1829 185D A0 00			ldy #PLY.X-DATAORIGIN
  1830 185F B1 12			lda (:bp2),y
  1831 1861 85 21			sta :STACKORIGIN+9
  1832 1863 AC 86 26 84 12 AC + 	mwy TMPPLY :bp2
  1833 186D A0 00			ldy #TMPPLY.X-DATAORIGIN
  1834 186F B1 12			lda (:bp2),y
  1835 1871 C5 21			cmp :STACKORIGIN+9
  1836 1873 B0 07			jcs l_08F8
  1837 1875 A9 04			lda #$04
  1838 1877 85 58			sta T0B
  1839 1879 4C 80 18			jmp l_0906
  1840 187C			l_08F8
  1841 187C A9 08			lda #$08
  1842 187E 85 58			sta T0B
  1843 1880			l_0906
  1844 1880			l_08E3
  1845 1880			l_0876
  1846
  1847 				; optimize OK (ai.inc), line = 96
  1848
  1849 1880 A5 5C			lda AVAILDIR
  1850 1882 25 58			and T0B
  1851 1884 F0 07			jeq l_0926
  1852 1886 A5 58			lda T0B
  1853 1888 85 5B			sta NEWDIR
  1854 188A 4C 90 18			jmp l_0936
  1855 188D			l_0926
  1856
  1857 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  1858
  1859 188D 20 69 15			jsr AISAPPER
  1860 1890			l_0936
  1861 1890			@exit
  1862 					.ifdef @new
  1863 					lda <@VarData
  1864 					sta :ztmp
  1865 					lda >@VarData
  1866 					ldy #@VarDataSize-1
  1867 					jmp @FreeMem
  1868 					els
  1869 1890 60				rts						; ret
  1870 					eif
  1871 				.endl
  1872
  1873 1891			.local	AIMIRROR					; PROCEDURE
  1874
  1875 				; optimize OK (ai.inc), line = 105
  1876
  1877 1891 AC 84 26 84 12 AC + 	mwy PLY :bp2
  1878 189B A0 04			ldy #PLY.DIR-DATAORIGIN
  1879 189D B1 12			lda (:bp2),y
  1880 189F 85 58			sta T0B
  1881
  1882 				; optimize OK (ai.inc), line = 107
  1883
  1884 18A1 AD AD 26			lda PLAYER1.ISALIVE
  1885 18A4 F0 2F			jeq l_094D
  1886
  1887 				; optimize OK (ai.inc), line = 108
  1888
  1889 18A6 AD AA 26			lda PLAYER1.DIR
  1890 18A9 8D EE 26			sta @CASETMP_0005
  1891 18AC C9 01			cmp #$01
  1892 18AE D0 07			jne l_0959
  1893 18B0			@
  1894
  1895 				; optimize OK (ai.inc), line = 109
  1896
  1897 18B0 A9 02			lda #$02
  1898 18B2 85 58			sta T0B
  1899
  1900 18B4 4C D5 18			jmp a_0005
  1901 18B7			l_0959
  1902 18B7 C9 02			cmp #$02
  1903 18B9 D0 07			jne l_0966
  1904 18BB			@
  1905
  1906 				; optimize OK (ai.inc), line = 110
  1907
  1908 18BB A9 01			lda #$01
  1909 18BD 85 58			sta T0B
  1910
  1911 18BF 4C D5 18			jmp a_0005
  1912 18C2			l_0966
  1913 18C2 C9 04			cmp #$04
  1914 18C4 D0 07			jne l_0973
  1915 18C6			@
  1916
  1917 				; optimize OK (ai.inc), line = 111
  1918
  1919 18C6 A9 08			lda #$08
  1920 18C8 85 58			sta T0B
  1921
  1922 18CA 4C D5 18			jmp a_0005
  1923 18CD			l_0973
  1924 18CD C9 08			cmp #$08
  1925 18CF D0 04			jne l_0980
  1926 18D1			@
  1927
  1928 				; optimize OK (ai.inc), line = 112
  1929
  1930 18D1 A9 04			lda #$04
  1931 18D3 85 58			sta T0B
  1932
  1933 18D5			l_0980
  1934 18D5			a_0005
  1935 18D5			l_094D
  1936
  1937 				; optimize OK (ai.inc), line = 116
  1938
  1939 18D5 A5 5C			lda AVAILDIR
  1940 18D7 25 58			and T0B
  1941 18D9 F0 07			jeq l_09A6
  1942 18DB A5 58			lda T0B
  1943 18DD 85 5B			sta NEWDIR
  1944 18DF 4C E5 18			jmp l_09B6
  1945 18E2			l_09A6
  1946
  1947 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  1948
  1949 18E2 20 69 15			jsr AISAPPER
  1950 18E5			l_09B6
  1951
  1952 				; ------------------------------------------------------------
  1953
  1954 = 26EE			@CASETMP_0005	= DATAORIGIN+$005A
  1955
  1956 = 26EE			@VarData	= @CASETMP_0005
  1957 = 0001			@VarDataSize	= 1
  1958
  1959 18E5			@exit
  1960 					.ifdef @new
  1961 					lda <@VarData
  1962 					sta :ztmp
  1963 					lda >@VarData
  1964 					ldy #@VarDataSize-1
  1965 					jmp @FreeMem
  1966 					els
  1967 18E5 60				rts						; ret
  1968 					eif
  1969 				.endl
  1970
  1971 18E6			.local	SETLEVEL00					; PROCEDURE
  1972
  1973 				; optimize OK (levels.inc), line = 5
  1974
  1975 18E6 A9 01			lda #$01
  1976 18E8 8D E7 26			sta SETPLAYER.ISALIVE
  1977 18EB A9 62			lda #$62
  1978 18ED 8D E6 26			sta SETPLAYER.COLOUR
  1979 18F0 A9 51			lda #$51
  1980 18F2 8D E5 26			sta SETPLAYER.HEAD
  1981 18F5 A9 00			lda #$00
  1982 18F7 8D E4 26			sta SETPLAYER.BRAIN
  1983 18FA A9 08			lda #$08
  1984 18FC 8D E3 26			sta SETPLAYER.DIR
  1985 18FF A9 0C			lda #$0C
  1986 1901 8D E2 26			sta SETPLAYER.Y
  1987 1904 A9 0A			lda #$0A
  1988 1906 8D E1 26			sta SETPLAYER.X
  1989 1909 AD 88 26			lda PLAYER1
  1990 190C 8D DF 26			sta SETPLAYER.P
  1991 190F AD 89 26			lda PLAYER1+1
  1992 1912 8D E0 26			sta SETPLAYER.P+1
  1993 1915 20 00 14			jsr SETPLAYER
  1994
  1995 				; optimize OK (levels.inc), line = 6
  1996
  1997 1918 A9 01			lda #$01
  1998 191A 8D E7 26			sta SETPLAYER.ISALIVE
  1999 191D A9 5D			lda #$5D
  2000 191F 8D E6 26			sta SETPLAYER.COLOUR
  2001 1922 A9 51			lda #$51
  2002 1924 8D E5 26			sta SETPLAYER.HEAD
  2003 1927 A9 01			lda #$01
  2004 1929 8D E4 26			sta SETPLAYER.BRAIN
  2005 192C A9 04			lda #$04
  2006 192E 8D E3 26			sta SETPLAYER.DIR
  2007 1931 A9 0C			lda #$0C
  2008 1933 8D E2 26			sta SETPLAYER.Y
  2009 1936 A9 1E			lda #$1E
  2010 1938 8D E1 26			sta SETPLAYER.X
  2011 193B AD 8A 26			lda PLAYER2
  2012 193E 8D DF 26			sta SETPLAYER.P
  2013 1941 AD 8B 26			lda PLAYER2+1
  2014 1944 8D E0 26			sta SETPLAYER.P+1
  2015 1947 20 00 14			jsr SETPLAYER
  2016
  2017 				; optimize OK (levels.inc), line = 7
  2018
  2019 194A A9 00			lda #$00
  2020 194C 8D E7 26			sta SETPLAYER.ISALIVE
  2021 194F A9 71			lda #$71
  2022 1951 8D E6 26			sta SETPLAYER.COLOUR
  2023 1954 A9 51			lda #$51
  2024 1956 8D E5 26			sta SETPLAYER.HEAD
  2025 1959 A9 03			lda #$03
  2026 195B 8D E4 26			sta SETPLAYER.BRAIN
  2027 195E A9 02			lda #$02
  2028 1960 8D E3 26			sta SETPLAYER.DIR
  2029 1963 A9 04			lda #$04
  2030 1965 8D E2 26			sta SETPLAYER.Y
  2031 1968 A9 14			lda #$14
  2032 196A 8D E1 26			sta SETPLAYER.X
  2033 196D AD 8C 26			lda PLAYER3
  2034 1970 8D DF 26			sta SETPLAYER.P
  2035 1973 AD 8D 26			lda PLAYER3+1
  2036 1976 8D E0 26			sta SETPLAYER.P+1
  2037 1979 20 00 14			jsr SETPLAYER
  2038
  2039 				; optimize OK (levels.inc), line = 8
  2040
  2041 197C A9 00			lda #$00
  2042 197E 8D E7 26			sta SETPLAYER.ISALIVE
  2043 1981 A9 55			lda #$55
  2044 1983 8D E6 26			sta SETPLAYER.COLOUR
  2045 1986 A9 51			lda #$51
  2046 1988 8D E5 26			sta SETPLAYER.HEAD
  2047 198B A9 02			lda #$02
  2048 198D 8D E4 26			sta SETPLAYER.BRAIN
  2049 1990 A9 01			lda #$01
  2050 1992 8D E3 26			sta SETPLAYER.DIR
  2051 1995 A9 12			lda #$12
  2052 1997 8D E2 26			sta SETPLAYER.Y
  2053 199A A9 14			lda #$14
  2054 199C 8D E1 26			sta SETPLAYER.X
  2055 199F AD 8E 26			lda PLAYER4
  2056 19A2 8D DF 26			sta SETPLAYER.P
  2057 19A5 AD 8F 26			lda PLAYER4+1
  2058 19A8 8D E0 26			sta SETPLAYER.P+1
  2059 19AB 20 00 14			jsr SETPLAYER
  2060
  2061 				; optimize OK (levels.inc), line = 10
  2062
  2063 19AE A9 FA			lda #$FA
  2064 19B0 8D C6 26			sta adr.OBSTACLES+$00
  2065 19B3 A9 0C			lda #$0C
  2066 19B5 8D C7 26			sta adr.OBSTACLES+1+$00
  2067
  2068 				; optimize OK (levels.inc), line = 11
  2069
  2070 19B8 A9 0E			lda #$0E
  2071 19BA 8D C8 26			sta adr.OBSTACLES+$02
  2072 19BD A9 0D			lda #$0D
  2073 19BF 8D C9 26			sta adr.OBSTACLES+1+$02
  2074
  2075 				; optimize OK (levels.inc), line = 12
  2076
  2077 19C2 A9 DA			lda #$DA
  2078 19C4 8D CA 26			sta adr.OBSTACLES+$04
  2079 19C7 A9 0E			lda #$0E
  2080 19C9 8D CB 26			sta adr.OBSTACLES+1+$04
  2081
  2082 				; optimize OK (levels.inc), line = 13
  2083
  2084 19CC A9 EE			lda #$EE
  2085 19CE 8D CC 26			sta adr.OBSTACLES+$06
  2086 19D1 A9 0E			lda #$0E
  2087 19D3 8D CD 26			sta adr.OBSTACLES+1+$06
  2088
  2089 				; optimize OK (levels.inc), line = 14
  2090
  2091 19D6 A9 7E			lda #$7E
  2092 19D8 8D CE 26			sta adr.OBSTACLES+$08
  2093 19DB A9 00			lda #$00
  2094 19DD 8D CF 26			sta adr.OBSTACLES+1+$08
  2095
  2096 				; optimize OK (levels.inc), line = 15
  2097
  2098 19E0 A9 64			lda #$64
  2099 19E2 8D D0 26			sta adr.OBSTACLES+$0A
  2100 19E5 A9 0C			lda #$0C
  2101 19E7 8D D1 26			sta adr.OBSTACLES+1+$0A
  2102
  2103 				; optimize OK (levels.inc), line = 16
  2104
  2105 19EA A9 84			lda #$84
  2106 19EC 8D D2 26			sta adr.OBSTACLES+$0C
  2107 19EF A9 0F			lda #$0F
  2108 19F1 8D D3 26			sta adr.OBSTACLES+1+$0C
  2109
  2110 				; optimize OK (levels.inc), line = 17
  2111
  2112 19F4 A9 7E			lda #$7E
  2113 19F6 8D D4 26			sta adr.OBSTACLES+$0E
  2114 19F9 A9 00			lda #$00
  2115 19FB 8D D5 26			sta adr.OBSTACLES+1+$0E
  2116
  2117 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 19
  2118
  2119 19FE 20 F3 12			jsr SAVEOBSTACLES
  2120 1A01			@exit
  2121 					.ifdef @new
  2122 					lda <@VarData
  2123 					sta :ztmp
  2124 					lda >@VarData
  2125 					ldy #@VarDataSize-1
  2126 					jmp @FreeMem
  2127 					els
  2128 1A01 60				rts						; ret
  2129 					eif
  2130 				.endl
  2131
  2132 1A02			.local	SETLEVEL01					; PROCEDURE
  2133
  2134 				; optimize OK (levels.inc), line = 26
  2135
  2136 1A02 A9 01			lda #$01
  2137 1A04 8D E7 26			sta SETPLAYER.ISALIVE
  2138 1A07 A9 62			lda #$62
  2139 1A09 8D E6 26			sta SETPLAYER.COLOUR
  2140 1A0C A9 51			lda #$51
  2141 1A0E 8D E5 26			sta SETPLAYER.HEAD
  2142 1A11 A9 00			lda #$00
  2143 1A13 8D E4 26			sta SETPLAYER.BRAIN
  2144 1A16 A9 08			lda #$08
  2145 1A18 8D E3 26			sta SETPLAYER.DIR
  2146 1A1B A9 0C			lda #$0C
  2147 1A1D 8D E2 26			sta SETPLAYER.Y
  2148 1A20 A9 0A			lda #$0A
  2149 1A22 8D E1 26			sta SETPLAYER.X
  2150 1A25 AD 88 26			lda PLAYER1
  2151 1A28 8D DF 26			sta SETPLAYER.P
  2152 1A2B AD 89 26			lda PLAYER1+1
  2153 1A2E 8D E0 26			sta SETPLAYER.P+1
  2154 1A31 20 00 14			jsr SETPLAYER
  2155
  2156 				; optimize OK (levels.inc), line = 27
  2157
  2158 1A34 A9 01			lda #$01
  2159 1A36 8D E7 26			sta SETPLAYER.ISALIVE
  2160 1A39 A9 5D			lda #$5D
  2161 1A3B 8D E6 26			sta SETPLAYER.COLOUR
  2162 1A3E A9 51			lda #$51
  2163 1A40 8D E5 26			sta SETPLAYER.HEAD
  2164 1A43 A9 01			lda #$01
  2165 1A45 8D E4 26			sta SETPLAYER.BRAIN
  2166 1A48 A9 04			lda #$04
  2167 1A4A 8D E3 26			sta SETPLAYER.DIR
  2168 1A4D A9 0C			lda #$0C
  2169 1A4F 8D E2 26			sta SETPLAYER.Y
  2170 1A52 A9 1E			lda #$1E
  2171 1A54 8D E1 26			sta SETPLAYER.X
  2172 1A57 AD 8A 26			lda PLAYER2
  2173 1A5A 8D DF 26			sta SETPLAYER.P
  2174 1A5D AD 8B 26			lda PLAYER2+1
  2175 1A60 8D E0 26			sta SETPLAYER.P+1
  2176 1A63 20 00 14			jsr SETPLAYER
  2177
  2178 				; optimize OK (levels.inc), line = 28
  2179
  2180 1A66 A9 00			lda #$00
  2181 1A68 8D E7 26			sta SETPLAYER.ISALIVE
  2182 1A6B A9 71			lda #$71
  2183 1A6D 8D E6 26			sta SETPLAYER.COLOUR
  2184 1A70 A9 51			lda #$51
  2185 1A72 8D E5 26			sta SETPLAYER.HEAD
  2186 1A75 A9 03			lda #$03
  2187 1A77 8D E4 26			sta SETPLAYER.BRAIN
  2188 1A7A A9 02			lda #$02
  2189 1A7C 8D E3 26			sta SETPLAYER.DIR
  2190 1A7F A9 04			lda #$04
  2191 1A81 8D E2 26			sta SETPLAYER.Y
  2192 1A84 A9 14			lda #$14
  2193 1A86 8D E1 26			sta SETPLAYER.X
  2194 1A89 AD 8C 26			lda PLAYER3
  2195 1A8C 8D DF 26			sta SETPLAYER.P
  2196 1A8F AD 8D 26			lda PLAYER3+1
  2197 1A92 8D E0 26			sta SETPLAYER.P+1
  2198 1A95 20 00 14			jsr SETPLAYER
  2199
  2200 				; optimize OK (levels.inc), line = 29
  2201
  2202 1A98 A9 00			lda #$00
  2203 1A9A 8D E7 26			sta SETPLAYER.ISALIVE
  2204 1A9D A9 55			lda #$55
  2205 1A9F 8D E6 26			sta SETPLAYER.COLOUR
  2206 1AA2 A9 51			lda #$51
  2207 1AA4 8D E5 26			sta SETPLAYER.HEAD
  2208 1AA7 A9 02			lda #$02
  2209 1AA9 8D E4 26			sta SETPLAYER.BRAIN
  2210 1AAC A9 01			lda #$01
  2211 1AAE 8D E3 26			sta SETPLAYER.DIR
  2212 1AB1 A9 12			lda #$12
  2213 1AB3 8D E2 26			sta SETPLAYER.Y
  2214 1AB6 A9 14			lda #$14
  2215 1AB8 8D E1 26			sta SETPLAYER.X
  2216 1ABB AD 8E 26			lda PLAYER4
  2217 1ABE 8D DF 26			sta SETPLAYER.P
  2218 1AC1 AD 8F 26			lda PLAYER4+1
  2219 1AC4 8D E0 26			sta SETPLAYER.P+1
  2220 1AC7 20 00 14			jsr SETPLAYER
  2221
  2222 				; optimize OK (levels.inc), line = 31
  2223
  2224 1ACA A9 FA			lda #$FA
  2225 1ACC 8D C6 26			sta adr.OBSTACLES+$00
  2226 1ACF A9 0C			lda #$0C
  2227 1AD1 8D C7 26			sta adr.OBSTACLES+1+$00
  2228
  2229 				; optimize OK (levels.inc), line = 32
  2230
  2231 1AD4 A9 0E			lda #$0E
  2232 1AD6 8D C8 26			sta adr.OBSTACLES+$02
  2233 1AD9 A9 0D			lda #$0D
  2234 1ADB 8D C9 26			sta adr.OBSTACLES+1+$02
  2235
  2236 				; optimize OK (levels.inc), line = 33
  2237
  2238 1ADE A9 DA			lda #$DA
  2239 1AE0 8D CA 26			sta adr.OBSTACLES+$04
  2240 1AE3 A9 0E			lda #$0E
  2241 1AE5 8D CB 26			sta adr.OBSTACLES+1+$04
  2242
  2243 				; optimize OK (levels.inc), line = 34
  2244
  2245 1AE8 A9 EE			lda #$EE
  2246 1AEA 8D CC 26			sta adr.OBSTACLES+$06
  2247 1AED A9 0E			lda #$0E
  2248 1AEF 8D CD 26			sta adr.OBSTACLES+1+$06
  2249
  2250 				; optimize OK (levels.inc), line = 35
  2251
  2252 1AF2 A9 7E			lda #$7E
  2253 1AF4 8D CE 26			sta adr.OBSTACLES+$08
  2254 1AF7 A9 00			lda #$00
  2255 1AF9 8D CF 26			sta adr.OBSTACLES+1+$08
  2256
  2257 				; optimize OK (levels.inc), line = 36
  2258
  2259 1AFC A9 64			lda #$64
  2260 1AFE 8D D0 26			sta adr.OBSTACLES+$0A
  2261 1B01 A9 0C			lda #$0C
  2262 1B03 8D D1 26			sta adr.OBSTACLES+1+$0A
  2263
  2264 				; optimize OK (levels.inc), line = 37
  2265
  2266 1B06 A9 84			lda #$84
  2267 1B08 8D D2 26			sta adr.OBSTACLES+$0C
  2268 1B0B A9 0F			lda #$0F
  2269 1B0D 8D D3 26			sta adr.OBSTACLES+1+$0C
  2270
  2271 				; optimize OK (levels.inc), line = 38
  2272
  2273 1B10 A9 7E			lda #$7E
  2274 1B12 8D D4 26			sta adr.OBSTACLES+$0E
  2275 1B15 A9 00			lda #$00
  2276 1B17 8D D5 26			sta adr.OBSTACLES+1+$0E
  2277
  2278 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 40
  2279
  2280 1B1A 20 F3 12			jsr SAVEOBSTACLES
  2281 1B1D			@exit
  2282 					.ifdef @new
  2283 					lda <@VarData
  2284 					sta :ztmp
  2285 					lda >@VarData
  2286 					ldy #@VarDataSize-1
  2287 					jmp @FreeMem
  2288 					els
  2289 1B1D 60				rts						; ret
  2290 					eif
  2291 				.endl
  2292
  2293 1B1E			.local	SETLEVEL02					; PROCEDURE
  2294
  2295 				; optimize OK (levels.inc), line = 47
  2296
  2297 1B1E A9 01			lda #$01
  2298 1B20 8D E7 26			sta SETPLAYER.ISALIVE
  2299 1B23 A9 62			lda #$62
  2300 1B25 8D E6 26			sta SETPLAYER.COLOUR
  2301 1B28 A9 51			lda #$51
  2302 1B2A 8D E5 26			sta SETPLAYER.HEAD
  2303 1B2D A9 00			lda #$00
  2304 1B2F 8D E4 26			sta SETPLAYER.BRAIN
  2305 1B32 A9 08			lda #$08
  2306 1B34 8D E3 26			sta SETPLAYER.DIR
  2307 1B37 A9 0C			lda #$0C
  2308 1B39 8D E2 26			sta SETPLAYER.Y
  2309 1B3C A9 0A			lda #$0A
  2310 1B3E 8D E1 26			sta SETPLAYER.X
  2311 1B41 AD 88 26			lda PLAYER1
  2312 1B44 8D DF 26			sta SETPLAYER.P
  2313 1B47 AD 89 26			lda PLAYER1+1
  2314 1B4A 8D E0 26			sta SETPLAYER.P+1
  2315 1B4D 20 00 14			jsr SETPLAYER
  2316
  2317 				; optimize OK (levels.inc), line = 48
  2318
  2319 1B50 A9 01			lda #$01
  2320 1B52 8D E7 26			sta SETPLAYER.ISALIVE
  2321 1B55 A9 5D			lda #$5D
  2322 1B57 8D E6 26			sta SETPLAYER.COLOUR
  2323 1B5A A9 51			lda #$51
  2324 1B5C 8D E5 26			sta SETPLAYER.HEAD
  2325 1B5F A9 03			lda #$03
  2326 1B61 8D E4 26			sta SETPLAYER.BRAIN
  2327 1B64 A9 04			lda #$04
  2328 1B66 8D E3 26			sta SETPLAYER.DIR
  2329 1B69 A9 0C			lda #$0C
  2330 1B6B 8D E2 26			sta SETPLAYER.Y
  2331 1B6E A9 1E			lda #$1E
  2332 1B70 8D E1 26			sta SETPLAYER.X
  2333 1B73 AD 8A 26			lda PLAYER2
  2334 1B76 8D DF 26			sta SETPLAYER.P
  2335 1B79 AD 8B 26			lda PLAYER2+1
  2336 1B7C 8D E0 26			sta SETPLAYER.P+1
  2337 1B7F 20 00 14			jsr SETPLAYER
  2338
  2339 				; optimize OK (levels.inc), line = 49
  2340
  2341 1B82 A9 00			lda #$00
  2342 1B84 8D E7 26			sta SETPLAYER.ISALIVE
  2343 1B87 A9 71			lda #$71
  2344 1B89 8D E6 26			sta SETPLAYER.COLOUR
  2345 1B8C A9 51			lda #$51
  2346 1B8E 8D E5 26			sta SETPLAYER.HEAD
  2347 1B91 A9 03			lda #$03
  2348 1B93 8D E4 26			sta SETPLAYER.BRAIN
  2349 1B96 A9 02			lda #$02
  2350 1B98 8D E3 26			sta SETPLAYER.DIR
  2351 1B9B A9 04			lda #$04
  2352 1B9D 8D E2 26			sta SETPLAYER.Y
  2353 1BA0 A9 14			lda #$14
  2354 1BA2 8D E1 26			sta SETPLAYER.X
  2355 1BA5 AD 8C 26			lda PLAYER3
  2356 1BA8 8D DF 26			sta SETPLAYER.P
  2357 1BAB AD 8D 26			lda PLAYER3+1
  2358 1BAE 8D E0 26			sta SETPLAYER.P+1
  2359 1BB1 20 00 14			jsr SETPLAYER
  2360
  2361 				; optimize OK (levels.inc), line = 50
  2362
  2363 1BB4 A9 00			lda #$00
  2364 1BB6 8D E7 26			sta SETPLAYER.ISALIVE
  2365 1BB9 A9 55			lda #$55
  2366 1BBB 8D E6 26			sta SETPLAYER.COLOUR
  2367 1BBE A9 51			lda #$51
  2368 1BC0 8D E5 26			sta SETPLAYER.HEAD
  2369 1BC3 A9 02			lda #$02
  2370 1BC5 8D E4 26			sta SETPLAYER.BRAIN
  2371 1BC8 A9 01			lda #$01
  2372 1BCA 8D E3 26			sta SETPLAYER.DIR
  2373 1BCD A9 12			lda #$12
  2374 1BCF 8D E2 26			sta SETPLAYER.Y
  2375 1BD2 A9 14			lda #$14
  2376 1BD4 8D E1 26			sta SETPLAYER.X
  2377 1BD7 AD 8E 26			lda PLAYER4
  2378 1BDA 8D DF 26			sta SETPLAYER.P
  2379 1BDD AD 8F 26			lda PLAYER4+1
  2380 1BE0 8D E0 26			sta SETPLAYER.P+1
  2381 1BE3 20 00 14			jsr SETPLAYER
  2382
  2383 				; optimize OK (levels.inc), line = 52
  2384
  2385 1BE6 A9 FA			lda #$FA
  2386 1BE8 8D C6 26			sta adr.OBSTACLES+$00
  2387 1BEB A9 0C			lda #$0C
  2388 1BED 8D C7 26			sta adr.OBSTACLES+1+$00
  2389
  2390 				; optimize OK (levels.inc), line = 53
  2391
  2392 1BF0 A9 0E			lda #$0E
  2393 1BF2 8D C8 26			sta adr.OBSTACLES+$02
  2394 1BF5 A9 0D			lda #$0D
  2395 1BF7 8D C9 26			sta adr.OBSTACLES+1+$02
  2396
  2397 				; optimize OK (levels.inc), line = 54
  2398
  2399 1BFA A9 DA			lda #$DA
  2400 1BFC 8D CA 26			sta adr.OBSTACLES+$04
  2401 1BFF A9 0E			lda #$0E
  2402 1C01 8D CB 26			sta adr.OBSTACLES+1+$04
  2403
  2404 				; optimize OK (levels.inc), line = 55
  2405
  2406 1C04 A9 EE			lda #$EE
  2407 1C06 8D CC 26			sta adr.OBSTACLES+$06
  2408 1C09 A9 0E			lda #$0E
  2409 1C0B 8D CD 26			sta adr.OBSTACLES+1+$06
  2410
  2411 				; optimize OK (levels.inc), line = 56
  2412
  2413 1C0E A9 7E			lda #$7E
  2414 1C10 8D CE 26			sta adr.OBSTACLES+$08
  2415 1C13 A9 00			lda #$00
  2416 1C15 8D CF 26			sta adr.OBSTACLES+1+$08
  2417
  2418 				; optimize OK (levels.inc), line = 57
  2419
  2420 1C18 A9 64			lda #$64
  2421 1C1A 8D D0 26			sta adr.OBSTACLES+$0A
  2422 1C1D A9 0C			lda #$0C
  2423 1C1F 8D D1 26			sta adr.OBSTACLES+1+$0A
  2424
  2425 				; optimize OK (levels.inc), line = 58
  2426
  2427 1C22 A9 84			lda #$84
  2428 1C24 8D D2 26			sta adr.OBSTACLES+$0C
  2429 1C27 A9 0F			lda #$0F
  2430 1C29 8D D3 26			sta adr.OBSTACLES+1+$0C
  2431
  2432 				; optimize OK (levels.inc), line = 59
  2433
  2434 1C2C A9 7E			lda #$7E
  2435 1C2E 8D D4 26			sta adr.OBSTACLES+$0E
  2436 1C31 A9 00			lda #$00
  2437 1C33 8D D5 26			sta adr.OBSTACLES+1+$0E
  2438
  2439 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 61
  2440
  2441 1C36 20 F3 12			jsr SAVEOBSTACLES
  2442 1C39			@exit
  2443 					.ifdef @new
  2444 					lda <@VarData
  2445 					sta :ztmp
  2446 					lda >@VarData
  2447 					ldy #@VarDataSize-1
  2448 					jmp @FreeMem
  2449 					els
  2450 1C39 60				rts						; ret
  2451 					eif
  2452 				.endl
  2453
  2454 1C3A			.local	SETLEVEL03					; PROCEDURE
  2455
  2456 				; optimize OK (levels.inc), line = 68
  2457
  2458 1C3A A9 01			lda #$01
  2459 1C3C 8D E7 26			sta SETPLAYER.ISALIVE
  2460 1C3F A9 62			lda #$62
  2461 1C41 8D E6 26			sta SETPLAYER.COLOUR
  2462 1C44 A9 51			lda #$51
  2463 1C46 8D E5 26			sta SETPLAYER.HEAD
  2464 1C49 A9 00			lda #$00
  2465 1C4B 8D E4 26			sta SETPLAYER.BRAIN
  2466 1C4E A9 08			lda #$08
  2467 1C50 8D E3 26			sta SETPLAYER.DIR
  2468 1C53 A9 0C			lda #$0C
  2469 1C55 8D E2 26			sta SETPLAYER.Y
  2470 1C58 A9 0A			lda #$0A
  2471 1C5A 8D E1 26			sta SETPLAYER.X
  2472 1C5D AD 88 26			lda PLAYER1
  2473 1C60 8D DF 26			sta SETPLAYER.P
  2474 1C63 AD 89 26			lda PLAYER1+1
  2475 1C66 8D E0 26			sta SETPLAYER.P+1
  2476 1C69 20 00 14			jsr SETPLAYER
  2477
  2478 				; optimize OK (levels.inc), line = 69
  2479
  2480 1C6C A9 01			lda #$01
  2481 1C6E 8D E7 26			sta SETPLAYER.ISALIVE
  2482 1C71 A9 5D			lda #$5D
  2483 1C73 8D E6 26			sta SETPLAYER.COLOUR
  2484 1C76 A9 51			lda #$51
  2485 1C78 8D E5 26			sta SETPLAYER.HEAD
  2486 1C7B A9 02			lda #$02
  2487 1C7D 8D E4 26			sta SETPLAYER.BRAIN
  2488 1C80 A9 04			lda #$04
  2489 1C82 8D E3 26			sta SETPLAYER.DIR
  2490 1C85 A9 0C			lda #$0C
  2491 1C87 8D E2 26			sta SETPLAYER.Y
  2492 1C8A A9 1E			lda #$1E
  2493 1C8C 8D E1 26			sta SETPLAYER.X
  2494 1C8F AD 8A 26			lda PLAYER2
  2495 1C92 8D DF 26			sta SETPLAYER.P
  2496 1C95 AD 8B 26			lda PLAYER2+1
  2497 1C98 8D E0 26			sta SETPLAYER.P+1
  2498 1C9B 20 00 14			jsr SETPLAYER
  2499
  2500 				; optimize OK (levels.inc), line = 70
  2501
  2502 1C9E A9 00			lda #$00
  2503 1CA0 8D E7 26			sta SETPLAYER.ISALIVE
  2504 1CA3 A9 71			lda #$71
  2505 1CA5 8D E6 26			sta SETPLAYER.COLOUR
  2506 1CA8 A9 51			lda #$51
  2507 1CAA 8D E5 26			sta SETPLAYER.HEAD
  2508 1CAD A9 03			lda #$03
  2509 1CAF 8D E4 26			sta SETPLAYER.BRAIN
  2510 1CB2 A9 02			lda #$02
  2511 1CB4 8D E3 26			sta SETPLAYER.DIR
  2512 1CB7 A9 04			lda #$04
  2513 1CB9 8D E2 26			sta SETPLAYER.Y
  2514 1CBC A9 14			lda #$14
  2515 1CBE 8D E1 26			sta SETPLAYER.X
  2516 1CC1 AD 8C 26			lda PLAYER3
  2517 1CC4 8D DF 26			sta SETPLAYER.P
  2518 1CC7 AD 8D 26			lda PLAYER3+1
  2519 1CCA 8D E0 26			sta SETPLAYER.P+1
  2520 1CCD 20 00 14			jsr SETPLAYER
  2521
  2522 				; optimize OK (levels.inc), line = 71
  2523
  2524 1CD0 A9 00			lda #$00
  2525 1CD2 8D E7 26			sta SETPLAYER.ISALIVE
  2526 1CD5 A9 55			lda #$55
  2527 1CD7 8D E6 26			sta SETPLAYER.COLOUR
  2528 1CDA A9 51			lda #$51
  2529 1CDC 8D E5 26			sta SETPLAYER.HEAD
  2530 1CDF A9 03			lda #$03
  2531 1CE1 8D E4 26			sta SETPLAYER.BRAIN
  2532 1CE4 A9 01			lda #$01
  2533 1CE6 8D E3 26			sta SETPLAYER.DIR
  2534 1CE9 A9 12			lda #$12
  2535 1CEB 8D E2 26			sta SETPLAYER.Y
  2536 1CEE A9 14			lda #$14
  2537 1CF0 8D E1 26			sta SETPLAYER.X
  2538 1CF3 AD 8E 26			lda PLAYER4
  2539 1CF6 8D DF 26			sta SETPLAYER.P
  2540 1CF9 AD 8F 26			lda PLAYER4+1
  2541 1CFC 8D E0 26			sta SETPLAYER.P+1
  2542 1CFF 20 00 14			jsr SETPLAYER
  2543
  2544 				; optimize OK (levels.inc), line = 73
  2545
  2546 1D02 A9 FA			lda #$FA
  2547 1D04 8D C6 26			sta adr.OBSTACLES+$00
  2548 1D07 A9 0C			lda #$0C
  2549 1D09 8D C7 26			sta adr.OBSTACLES+1+$00
  2550
  2551 				; optimize OK (levels.inc), line = 74
  2552
  2553 1D0C A9 0E			lda #$0E
  2554 1D0E 8D C8 26			sta adr.OBSTACLES+$02
  2555 1D11 A9 0D			lda #$0D
  2556 1D13 8D C9 26			sta adr.OBSTACLES+1+$02
  2557
  2558 				; optimize OK (levels.inc), line = 75
  2559
  2560 1D16 A9 DA			lda #$DA
  2561 1D18 8D CA 26			sta adr.OBSTACLES+$04
  2562 1D1B A9 0E			lda #$0E
  2563 1D1D 8D CB 26			sta adr.OBSTACLES+1+$04
  2564
  2565 				; optimize OK (levels.inc), line = 76
  2566
  2567 1D20 A9 EE			lda #$EE
  2568 1D22 8D CC 26			sta adr.OBSTACLES+$06
  2569 1D25 A9 0E			lda #$0E
  2570 1D27 8D CD 26			sta adr.OBSTACLES+1+$06
  2571
  2572 				; optimize OK (levels.inc), line = 77
  2573
  2574 1D2A A9 E1			lda #$E1
  2575 1D2C 8D CE 26			sta adr.OBSTACLES+$08
  2576 1D2F A9 0D			lda #$0D
  2577 1D31 8D CF 26			sta adr.OBSTACLES+1+$08
  2578
  2579 				; optimize OK (levels.inc), line = 78
  2580
  2581 1D34 A9 64			lda #$64
  2582 1D36 8D D0 26			sta adr.OBSTACLES+$0A
  2583 1D39 A9 0C			lda #$0C
  2584 1D3B 8D D1 26			sta adr.OBSTACLES+1+$0A
  2585
  2586 				; optimize OK (levels.inc), line = 79
  2587
  2588 1D3E A9 84			lda #$84
  2589 1D40 8D D2 26			sta adr.OBSTACLES+$0C
  2590 1D43 A9 0F			lda #$0F
  2591 1D45 8D D3 26			sta adr.OBSTACLES+1+$0C
  2592
  2593 				; optimize OK (levels.inc), line = 80
  2594
  2595 1D48 A9 7E			lda #$7E
  2596 1D4A 8D D4 26			sta adr.OBSTACLES+$0E
  2597 1D4D A9 00			lda #$00
  2598 1D4F 8D D5 26			sta adr.OBSTACLES+1+$0E
  2599
  2600 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 82
  2601
  2602 1D52 20 F3 12			jsr SAVEOBSTACLES
  2603 1D55			@exit
  2604 					.ifdef @new
  2605 					lda <@VarData
  2606 					sta :ztmp
  2607 					lda >@VarData
  2608 					ldy #@VarDataSize-1
  2609 					jmp @FreeMem
  2610 					els
  2611 1D55 60				rts						; ret
  2612 					eif
  2613 				.endl
  2614
  2615 1D56			.local	SETLEVEL04					; PROCEDURE
  2616
  2617 				; optimize OK (levels.inc), line = 89
  2618
  2619 1D56 A9 01			lda #$01
  2620 1D58 8D E7 26			sta SETPLAYER.ISALIVE
  2621 1D5B A9 62			lda #$62
  2622 1D5D 8D E6 26			sta SETPLAYER.COLOUR
  2623 1D60 A9 51			lda #$51
  2624 1D62 8D E5 26			sta SETPLAYER.HEAD
  2625 1D65 A9 00			lda #$00
  2626 1D67 8D E4 26			sta SETPLAYER.BRAIN
  2627 1D6A A9 04			lda #$04
  2628 1D6C 8D E3 26			sta SETPLAYER.DIR
  2629 1D6F A9 0C			lda #$0C
  2630 1D71 8D E2 26			sta SETPLAYER.Y
  2631 1D74 A9 12			lda #$12
  2632 1D76 8D E1 26			sta SETPLAYER.X
  2633 1D79 AD 88 26			lda PLAYER1
  2634 1D7C 8D DF 26			sta SETPLAYER.P
  2635 1D7F AD 89 26			lda PLAYER1+1
  2636 1D82 8D E0 26			sta SETPLAYER.P+1
  2637 1D85 20 00 14			jsr SETPLAYER
  2638
  2639 				; optimize OK (levels.inc), line = 90
  2640
  2641 1D88 A9 01			lda #$01
  2642 1D8A 8D E7 26			sta SETPLAYER.ISALIVE
  2643 1D8D A9 5D			lda #$5D
  2644 1D8F 8D E6 26			sta SETPLAYER.COLOUR
  2645 1D92 A9 51			lda #$51
  2646 1D94 8D E5 26			sta SETPLAYER.HEAD
  2647 1D97 A9 04			lda #$04
  2648 1D99 8D E4 26			sta SETPLAYER.BRAIN
  2649 1D9C A9 08			lda #$08
  2650 1D9E 8D E3 26			sta SETPLAYER.DIR
  2651 1DA1 A9 0C			lda #$0C
  2652 1DA3 8D E2 26			sta SETPLAYER.Y
  2653 1DA6 A9 16			lda #$16
  2654 1DA8 8D E1 26			sta SETPLAYER.X
  2655 1DAB AD 8A 26			lda PLAYER2
  2656 1DAE 8D DF 26			sta SETPLAYER.P
  2657 1DB1 AD 8B 26			lda PLAYER2+1
  2658 1DB4 8D E0 26			sta SETPLAYER.P+1
  2659 1DB7 20 00 14			jsr SETPLAYER
  2660
  2661 				; optimize OK (levels.inc), line = 91
  2662
  2663 1DBA A9 00			lda #$00
  2664 1DBC 8D E7 26			sta SETPLAYER.ISALIVE
  2665 1DBF A9 71			lda #$71
  2666 1DC1 8D E6 26			sta SETPLAYER.COLOUR
  2667 1DC4 A9 51			lda #$51
  2668 1DC6 8D E5 26			sta SETPLAYER.HEAD
  2669 1DC9 A9 03			lda #$03
  2670 1DCB 8D E4 26			sta SETPLAYER.BRAIN
  2671 1DCE A9 02			lda #$02
  2672 1DD0 8D E3 26			sta SETPLAYER.DIR
  2673 1DD3 A9 04			lda #$04
  2674 1DD5 8D E2 26			sta SETPLAYER.Y
  2675 1DD8 A9 14			lda #$14
  2676 1DDA 8D E1 26			sta SETPLAYER.X
  2677 1DDD AD 8C 26			lda PLAYER3
  2678 1DE0 8D DF 26			sta SETPLAYER.P
  2679 1DE3 AD 8D 26			lda PLAYER3+1
  2680 1DE6 8D E0 26			sta SETPLAYER.P+1
  2681 1DE9 20 00 14			jsr SETPLAYER
  2682
  2683 				; optimize OK (levels.inc), line = 92
  2684
  2685 1DEC A9 00			lda #$00
  2686 1DEE 8D E7 26			sta SETPLAYER.ISALIVE
  2687 1DF1 A9 55			lda #$55
  2688 1DF3 8D E6 26			sta SETPLAYER.COLOUR
  2689 1DF6 A9 51			lda #$51
  2690 1DF8 8D E5 26			sta SETPLAYER.HEAD
  2691 1DFB A9 03			lda #$03
  2692 1DFD 8D E4 26			sta SETPLAYER.BRAIN
  2693 1E00 A9 01			lda #$01
  2694 1E02 8D E3 26			sta SETPLAYER.DIR
  2695 1E05 A9 12			lda #$12
  2696 1E07 8D E2 26			sta SETPLAYER.Y
  2697 1E0A A9 14			lda #$14
  2698 1E0C 8D E1 26			sta SETPLAYER.X
  2699 1E0F AD 8E 26			lda PLAYER4
  2700 1E12 8D DF 26			sta SETPLAYER.P
  2701 1E15 AD 8F 26			lda PLAYER4+1
  2702 1E18 8D E0 26			sta SETPLAYER.P+1
  2703 1E1B 20 00 14			jsr SETPLAYER
  2704
  2705 				; optimize OK (levels.inc), line = 94
  2706
  2707 1E1E A9 FA			lda #$FA
  2708 1E20 8D C6 26			sta adr.OBSTACLES+$00
  2709 1E23 A9 0C			lda #$0C
  2710 1E25 8D C7 26			sta adr.OBSTACLES+1+$00
  2711
  2712 				; optimize OK (levels.inc), line = 95
  2713
  2714 1E28 A9 0E			lda #$0E
  2715 1E2A 8D C8 26			sta adr.OBSTACLES+$02
  2716 1E2D A9 0D			lda #$0D
  2717 1E2F 8D C9 26			sta adr.OBSTACLES+1+$02
  2718
  2719 				; optimize OK (levels.inc), line = 96
  2720
  2721 1E32 A9 DA			lda #$DA
  2722 1E34 8D CA 26			sta adr.OBSTACLES+$04
  2723 1E37 A9 0E			lda #$0E
  2724 1E39 8D CB 26			sta adr.OBSTACLES+1+$04
  2725
  2726 				; optimize OK (levels.inc), line = 97
  2727
  2728 1E3C A9 EE			lda #$EE
  2729 1E3E 8D CC 26			sta adr.OBSTACLES+$06
  2730 1E41 A9 0E			lda #$0E
  2731 1E43 8D CD 26			sta adr.OBSTACLES+1+$06
  2732
  2733 				; optimize OK (levels.inc), line = 98
  2734
  2735 1E46 A9 E1			lda #$E1
  2736 1E48 8D CE 26			sta adr.OBSTACLES+$08
  2737 1E4B A9 0D			lda #$0D
  2738 1E4D 8D CF 26			sta adr.OBSTACLES+1+$08
  2739
  2740 				; optimize OK (levels.inc), line = 99
  2741
  2742 1E50 A9 64			lda #$64
  2743 1E52 8D D0 26			sta adr.OBSTACLES+$0A
  2744 1E55 A9 0C			lda #$0C
  2745 1E57 8D D1 26			sta adr.OBSTACLES+1+$0A
  2746
  2747 				; optimize OK (levels.inc), line = 100
  2748
  2749 1E5A A9 84			lda #$84
  2750 1E5C 8D D2 26			sta adr.OBSTACLES+$0C
  2751 1E5F A9 0F			lda #$0F
  2752 1E61 8D D3 26			sta adr.OBSTACLES+1+$0C
  2753
  2754 				; optimize OK (levels.inc), line = 101
  2755
  2756 1E64 A9 F4			lda #$F4
  2757 1E66 8D D4 26			sta adr.OBSTACLES+$0E
  2758 1E69 A9 0D			lda #$0D
  2759 1E6B 8D D5 26			sta adr.OBSTACLES+1+$0E
  2760
  2761 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 103
  2762
  2763 1E6E 20 F3 12			jsr SAVEOBSTACLES
  2764 1E71			@exit
  2765 					.ifdef @new
  2766 					lda <@VarData
  2767 					sta :ztmp
  2768 					lda >@VarData
  2769 					ldy #@VarDataSize-1
  2770 					jmp @FreeMem
  2771 					els
  2772 1E71 60				rts						; ret
  2773 					eif
  2774 				.endl
  2775
  2776 1E72			.local	SETLEVEL05					; PROCEDURE
  2777
  2778 				; optimize OK (levels.inc), line = 110
  2779
  2780 1E72 A9 01			lda #$01
  2781 1E74 8D E7 26			sta SETPLAYER.ISALIVE
  2782 1E77 A9 62			lda #$62
  2783 1E79 8D E6 26			sta SETPLAYER.COLOUR
  2784 1E7C A9 51			lda #$51
  2785 1E7E 8D E5 26			sta SETPLAYER.HEAD
  2786 1E81 A9 00			lda #$00
  2787 1E83 8D E4 26			sta SETPLAYER.BRAIN
  2788 1E86 A9 08			lda #$08
  2789 1E88 8D E3 26			sta SETPLAYER.DIR
  2790 1E8B A9 0C			lda #$0C
  2791 1E8D 8D E2 26			sta SETPLAYER.Y
  2792 1E90 A9 0A			lda #$0A
  2793 1E92 8D E1 26			sta SETPLAYER.X
  2794 1E95 AD 88 26			lda PLAYER1
  2795 1E98 8D DF 26			sta SETPLAYER.P
  2796 1E9B AD 89 26			lda PLAYER1+1
  2797 1E9E 8D E0 26			sta SETPLAYER.P+1
  2798 1EA1 20 00 14			jsr SETPLAYER
  2799
  2800 				; optimize OK (levels.inc), line = 111
  2801
  2802 1EA4 A9 01			lda #$01
  2803 1EA6 8D E7 26			sta SETPLAYER.ISALIVE
  2804 1EA9 A9 5D			lda #$5D
  2805 1EAB 8D E6 26			sta SETPLAYER.COLOUR
  2806 1EAE A9 51			lda #$51
  2807 1EB0 8D E5 26			sta SETPLAYER.HEAD
  2808 1EB3 A9 04			lda #$04
  2809 1EB5 8D E4 26			sta SETPLAYER.BRAIN
  2810 1EB8 8D E3 26			sta SETPLAYER.DIR
  2811 1EBB A9 0C			lda #$0C
  2812 1EBD 8D E2 26			sta SETPLAYER.Y
  2813 1EC0 A9 1E			lda #$1E
  2814 1EC2 8D E1 26			sta SETPLAYER.X
  2815 1EC5 AD 8A 26			lda PLAYER2
  2816 1EC8 8D DF 26			sta SETPLAYER.P
  2817 1ECB AD 8B 26			lda PLAYER2+1
  2818 1ECE 8D E0 26			sta SETPLAYER.P+1
  2819 1ED1 20 00 14			jsr SETPLAYER
  2820
  2821 				; optimize OK (levels.inc), line = 112
  2822
  2823 1ED4 A9 01			lda #$01
  2824 1ED6 8D E7 26			sta SETPLAYER.ISALIVE
  2825 1ED9 A9 71			lda #$71
  2826 1EDB 8D E6 26			sta SETPLAYER.COLOUR
  2827 1EDE A9 51			lda #$51
  2828 1EE0 8D E5 26			sta SETPLAYER.HEAD
  2829 1EE3 A9 03			lda #$03
  2830 1EE5 8D E4 26			sta SETPLAYER.BRAIN
  2831 1EE8 A9 02			lda #$02
  2832 1EEA 8D E3 26			sta SETPLAYER.DIR
  2833 1EED A9 04			lda #$04
  2834 1EEF 8D E2 26			sta SETPLAYER.Y
  2835 1EF2 A9 14			lda #$14
  2836 1EF4 8D E1 26			sta SETPLAYER.X
  2837 1EF7 AD 8C 26			lda PLAYER3
  2838 1EFA 8D DF 26			sta SETPLAYER.P
  2839 1EFD AD 8D 26			lda PLAYER3+1
  2840 1F00 8D E0 26			sta SETPLAYER.P+1
  2841 1F03 20 00 14			jsr SETPLAYER
  2842
  2843 				; optimize OK (levels.inc), line = 113
  2844
  2845 1F06 A9 01			lda #$01
  2846 1F08 8D E7 26			sta SETPLAYER.ISALIVE
  2847 1F0B A9 55			lda #$55
  2848 1F0D 8D E6 26			sta SETPLAYER.COLOUR
  2849 1F10 A9 51			lda #$51
  2850 1F12 8D E5 26			sta SETPLAYER.HEAD
  2851 1F15 A9 02			lda #$02
  2852 1F17 8D E4 26			sta SETPLAYER.BRAIN
  2853 1F1A A9 01			lda #$01
  2854 1F1C 8D E3 26			sta SETPLAYER.DIR
  2855 1F1F A9 12			lda #$12
  2856 1F21 8D E2 26			sta SETPLAYER.Y
  2857 1F24 A9 14			lda #$14
  2858 1F26 8D E1 26			sta SETPLAYER.X
  2859 1F29 AD 8E 26			lda PLAYER4
  2860 1F2C 8D DF 26			sta SETPLAYER.P
  2861 1F2F AD 8F 26			lda PLAYER4+1
  2862 1F32 8D E0 26			sta SETPLAYER.P+1
  2863 1F35 20 00 14			jsr SETPLAYER
  2864
  2865 				; optimize OK (levels.inc), line = 115
  2866
  2867 1F38 A9 FA			lda #$FA
  2868 1F3A 8D C6 26			sta adr.OBSTACLES+$00
  2869 1F3D A9 0C			lda #$0C
  2870 1F3F 8D C7 26			sta adr.OBSTACLES+1+$00
  2871
  2872 				; optimize OK (levels.inc), line = 116
  2873
  2874 1F42 A9 0E			lda #$0E
  2875 1F44 8D C8 26			sta adr.OBSTACLES+$02
  2876 1F47 A9 0D			lda #$0D
  2877 1F49 8D C9 26			sta adr.OBSTACLES+1+$02
  2878
  2879 				; optimize OK (levels.inc), line = 117
  2880
  2881 1F4C A9 DA			lda #$DA
  2882 1F4E 8D CA 26			sta adr.OBSTACLES+$04
  2883 1F51 A9 0E			lda #$0E
  2884 1F53 8D CB 26			sta adr.OBSTACLES+1+$04
  2885
  2886 				; optimize OK (levels.inc), line = 118
  2887
  2888 1F56 A9 EE			lda #$EE
  2889 1F58 8D CC 26			sta adr.OBSTACLES+$06
  2890 1F5B A9 0E			lda #$0E
  2891 1F5D 8D CD 26			sta adr.OBSTACLES+1+$06
  2892
  2893 				; optimize OK (levels.inc), line = 119
  2894
  2895 1F60 A9 E1			lda #$E1
  2896 1F62 8D CE 26			sta adr.OBSTACLES+$08
  2897 1F65 A9 0D			lda #$0D
  2898 1F67 8D CF 26			sta adr.OBSTACLES+1+$08
  2899
  2900 				; optimize OK (levels.inc), line = 120
  2901
  2902 1F6A A9 64			lda #$64
  2903 1F6C 8D D0 26			sta adr.OBSTACLES+$0A
  2904 1F6F A9 0C			lda #$0C
  2905 1F71 8D D1 26			sta adr.OBSTACLES+1+$0A
  2906
  2907 				; optimize OK (levels.inc), line = 121
  2908
  2909 1F74 A9 84			lda #$84
  2910 1F76 8D D2 26			sta adr.OBSTACLES+$0C
  2911 1F79 A9 0F			lda #$0F
  2912 1F7B 8D D3 26			sta adr.OBSTACLES+1+$0C
  2913
  2914 				; optimize OK (levels.inc), line = 122
  2915
  2916 1F7E A9 7E			lda #$7E
  2917 1F80 8D D4 26			sta adr.OBSTACLES+$0E
  2918 1F83 A9 00			lda #$00
  2919 1F85 8D D5 26			sta adr.OBSTACLES+1+$0E
  2920
  2921 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 124
  2922
  2923 1F88 20 F3 12			jsr SAVEOBSTACLES
  2924 1F8B			@exit
  2925 					.ifdef @new
  2926 					lda <@VarData
  2927 					sta :ztmp
  2928 					lda >@VarData
  2929 					ldy #@VarDataSize-1
  2930 					jmp @FreeMem
  2931 					els
  2932 1F8B 60				rts						; ret
  2933 					eif
  2934 				.endl
  2935
  2936 1F8C			.local	SETLEVEL06					; PROCEDURE
  2937
  2938 				; optimize OK (levels.inc), line = 131
  2939
  2940 1F8C A9 01			lda #$01
  2941 1F8E 8D E7 26			sta SETPLAYER.ISALIVE
  2942 1F91 A9 62			lda #$62
  2943 1F93 8D E6 26			sta SETPLAYER.COLOUR
  2944 1F96 A9 51			lda #$51
  2945 1F98 8D E5 26			sta SETPLAYER.HEAD
  2946 1F9B A9 00			lda #$00
  2947 1F9D 8D E4 26			sta SETPLAYER.BRAIN
  2948 1FA0 A9 04			lda #$04
  2949 1FA2 8D E3 26			sta SETPLAYER.DIR
  2950 1FA5 A9 0C			lda #$0C
  2951 1FA7 8D E2 26			sta SETPLAYER.Y
  2952 1FAA A9 12			lda #$12
  2953 1FAC 8D E1 26			sta SETPLAYER.X
  2954 1FAF AD 88 26			lda PLAYER1
  2955 1FB2 8D DF 26			sta SETPLAYER.P
  2956 1FB5 AD 89 26			lda PLAYER1+1
  2957 1FB8 8D E0 26			sta SETPLAYER.P+1
  2958 1FBB 20 00 14			jsr SETPLAYER
  2959
  2960 				; optimize OK (levels.inc), line = 132
  2961
  2962 1FBE A9 01			lda #$01
  2963 1FC0 8D E7 26			sta SETPLAYER.ISALIVE
  2964 1FC3 A9 5D			lda #$5D
  2965 1FC5 8D E6 26			sta SETPLAYER.COLOUR
  2966 1FC8 A9 51			lda #$51
  2967 1FCA 8D E5 26			sta SETPLAYER.HEAD
  2968 1FCD A9 02			lda #$02
  2969 1FCF 8D E4 26			sta SETPLAYER.BRAIN
  2970 1FD2 A9 08			lda #$08
  2971 1FD4 8D E3 26			sta SETPLAYER.DIR
  2972 1FD7 A9 0C			lda #$0C
  2973 1FD9 8D E2 26			sta SETPLAYER.Y
  2974 1FDC A9 16			lda #$16
  2975 1FDE 8D E1 26			sta SETPLAYER.X
  2976 1FE1 AD 8A 26			lda PLAYER2
  2977 1FE4 8D DF 26			sta SETPLAYER.P
  2978 1FE7 AD 8B 26			lda PLAYER2+1
  2979 1FEA 8D E0 26			sta SETPLAYER.P+1
  2980 1FED 20 00 14			jsr SETPLAYER
  2981
  2982 				; optimize OK (levels.inc), line = 133
  2983
  2984 1FF0 A9 01			lda #$01
  2985 1FF2 8D E7 26			sta SETPLAYER.ISALIVE
  2986 1FF5 A9 71			lda #$71
  2987 1FF7 8D E6 26			sta SETPLAYER.COLOUR
  2988 1FFA A9 51			lda #$51
  2989 1FFC 8D E5 26			sta SETPLAYER.HEAD
  2990 1FFF A9 02			lda #$02
  2991 2001 8D E4 26			sta SETPLAYER.BRAIN
  2992 2004 8D E3 26			sta SETPLAYER.DIR
  2993 2007 A9 06			lda #$06
  2994 2009 8D E2 26			sta SETPLAYER.Y
  2995 200C 8D E1 26			sta SETPLAYER.X
  2996 200F AD 8C 26			lda PLAYER3
  2997 2012 8D DF 26			sta SETPLAYER.P
  2998 2015 AD 8D 26			lda PLAYER3+1
  2999 2018 8D E0 26			sta SETPLAYER.P+1
  3000 201B 20 00 14			jsr SETPLAYER
  3001
  3002 				; optimize OK (levels.inc), line = 134
  3003
  3004 201E A9 01			lda #$01
  3005 2020 8D E7 26			sta SETPLAYER.ISALIVE
  3006 2023 A9 55			lda #$55
  3007 2025 8D E6 26			sta SETPLAYER.COLOUR
  3008 2028 A9 51			lda #$51
  3009 202A 8D E5 26			sta SETPLAYER.HEAD
  3010 202D A9 03			lda #$03
  3011 202F 8D E4 26			sta SETPLAYER.BRAIN
  3012 2032 A9 08			lda #$08
  3013 2034 8D E3 26			sta SETPLAYER.DIR
  3014 2037 A9 12			lda #$12
  3015 2039 8D E2 26			sta SETPLAYER.Y
  3016 203C A9 24			lda #$24
  3017 203E 8D E1 26			sta SETPLAYER.X
  3018 2041 AD 8E 26			lda PLAYER4
  3019 2044 8D DF 26			sta SETPLAYER.P
  3020 2047 AD 8F 26			lda PLAYER4+1
  3021 204A 8D E0 26			sta SETPLAYER.P+1
  3022 204D 20 00 14			jsr SETPLAYER
  3023
  3024 				; optimize OK (levels.inc), line = 136
  3025
  3026 2050 A9 FA			lda #$FA
  3027 2052 8D C6 26			sta adr.OBSTACLES+$00
  3028 2055 A9 0C			lda #$0C
  3029 2057 8D C7 26			sta adr.OBSTACLES+1+$00
  3030
  3031 				; optimize OK (levels.inc), line = 137
  3032
  3033 205A A9 0E			lda #$0E
  3034 205C 8D C8 26			sta adr.OBSTACLES+$02
  3035 205F A9 0D			lda #$0D
  3036 2061 8D C9 26			sta adr.OBSTACLES+1+$02
  3037
  3038 				; optimize OK (levels.inc), line = 138
  3039
  3040 2064 A9 DA			lda #$DA
  3041 2066 8D CA 26			sta adr.OBSTACLES+$04
  3042 2069 A9 0E			lda #$0E
  3043 206B 8D CB 26			sta adr.OBSTACLES+1+$04
  3044
  3045 				; optimize OK (levels.inc), line = 139
  3046
  3047 206E A9 EE			lda #$EE
  3048 2070 8D CC 26			sta adr.OBSTACLES+$06
  3049 2073 A9 0E			lda #$0E
  3050 2075 8D CD 26			sta adr.OBSTACLES+1+$06
  3051
  3052 				; optimize OK (levels.inc), line = 140
  3053
  3054 2078 A9 E1			lda #$E1
  3055 207A 8D CE 26			sta adr.OBSTACLES+$08
  3056 207D A9 0D			lda #$0D
  3057 207F 8D CF 26			sta adr.OBSTACLES+1+$08
  3058
  3059 				; optimize OK (levels.inc), line = 141
  3060
  3061 2082 A9 64			lda #$64
  3062 2084 8D D0 26			sta adr.OBSTACLES+$0A
  3063 2087 A9 0C			lda #$0C
  3064 2089 8D D1 26			sta adr.OBSTACLES+1+$0A
  3065
  3066 				; optimize OK (levels.inc), line = 142
  3067
  3068 208C A9 84			lda #$84
  3069 208E 8D D2 26			sta adr.OBSTACLES+$0C
  3070 2091 A9 0F			lda #$0F
  3071 2093 8D D3 26			sta adr.OBSTACLES+1+$0C
  3072
  3073 				; optimize OK (levels.inc), line = 143
  3074
  3075 2096 A9 F4			lda #$F4
  3076 2098 8D D4 26			sta adr.OBSTACLES+$0E
  3077 209B A9 0D			lda #$0D
  3078 209D 8D D5 26			sta adr.OBSTACLES+1+$0E
  3079
  3080 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 145
  3081
  3082 20A0 20 F3 12			jsr SAVEOBSTACLES
  3083 20A3			@exit
  3084 					.ifdef @new
  3085 					lda <@VarData
  3086 					sta :ztmp
  3087 					lda >@VarData
  3088 					ldy #@VarDataSize-1
  3089 					jmp @FreeMem
  3090 					els
  3091 20A3 60				rts						; ret
  3092 					eif
  3093 				.endl
  3094
  3095 20A4			.local	SETLEVEL07					; PROCEDURE
  3096
  3097 				; optimize OK (levels.inc), line = 152
  3098
  3099 20A4 A9 01			lda #$01
  3100 20A6 8D E7 26			sta SETPLAYER.ISALIVE
  3101 20A9 A9 62			lda #$62
  3102 20AB 8D E6 26			sta SETPLAYER.COLOUR
  3103 20AE A9 51			lda #$51
  3104 20B0 8D E5 26			sta SETPLAYER.HEAD
  3105 20B3 A9 00			lda #$00
  3106 20B5 8D E4 26			sta SETPLAYER.BRAIN
  3107 20B8 A9 04			lda #$04
  3108 20BA 8D E3 26			sta SETPLAYER.DIR
  3109 20BD A9 0C			lda #$0C
  3110 20BF 8D E2 26			sta SETPLAYER.Y
  3111 20C2 A9 12			lda #$12
  3112 20C4 8D E1 26			sta SETPLAYER.X
  3113 20C7 AD 88 26			lda PLAYER1
  3114 20CA 8D DF 26			sta SETPLAYER.P
  3115 20CD AD 89 26			lda PLAYER1+1
  3116 20D0 8D E0 26			sta SETPLAYER.P+1
  3117 20D3 20 00 14			jsr SETPLAYER
  3118
  3119 				; optimize OK (levels.inc), line = 153
  3120
  3121 20D6 A9 01			lda #$01
  3122 20D8 8D E7 26			sta SETPLAYER.ISALIVE
  3123 20DB A9 5D			lda #$5D
  3124 20DD 8D E6 26			sta SETPLAYER.COLOUR
  3125 20E0 A9 51			lda #$51
  3126 20E2 8D E5 26			sta SETPLAYER.HEAD
  3127 20E5 A9 03			lda #$03
  3128 20E7 8D E4 26			sta SETPLAYER.BRAIN
  3129 20EA A9 08			lda #$08
  3130 20EC 8D E3 26			sta SETPLAYER.DIR
  3131 20EF A9 17			lda #$17
  3132 20F1 8D E2 26			sta SETPLAYER.Y
  3133 20F4 A9 01			lda #$01
  3134 20F6 8D E1 26			sta SETPLAYER.X
  3135 20F9 AD 8A 26			lda PLAYER2
  3136 20FC 8D DF 26			sta SETPLAYER.P
  3137 20FF AD 8B 26			lda PLAYER2+1
  3138 2102 8D E0 26			sta SETPLAYER.P+1
  3139 2105 20 00 14			jsr SETPLAYER
  3140
  3141 				; optimize OK (levels.inc), line = 154
  3142
  3143 2108 A9 01			lda #$01
  3144 210A 8D E7 26			sta SETPLAYER.ISALIVE
  3145 210D A9 71			lda #$71
  3146 210F 8D E6 26			sta SETPLAYER.COLOUR
  3147 2112 A9 51			lda #$51
  3148 2114 8D E5 26			sta SETPLAYER.HEAD
  3149 2117 A9 03			lda #$03
  3150 2119 8D E4 26			sta SETPLAYER.BRAIN
  3151 211C A9 02			lda #$02
  3152 211E 8D E3 26			sta SETPLAYER.DIR
  3153 2121 A9 04			lda #$04
  3154 2123 8D E2 26			sta SETPLAYER.Y
  3155 2126 A9 1E			lda #$1E
  3156 2128 8D E1 26			sta SETPLAYER.X
  3157 212B AD 8C 26			lda PLAYER3
  3158 212E 8D DF 26			sta SETPLAYER.P
  3159 2131 AD 8D 26			lda PLAYER3+1
  3160 2134 8D E0 26			sta SETPLAYER.P+1
  3161 2137 20 00 14			jsr SETPLAYER
  3162
  3163 				; optimize OK (levels.inc), line = 155
  3164
  3165 213A A9 01			lda #$01
  3166 213C 8D E7 26			sta SETPLAYER.ISALIVE
  3167 213F A9 55			lda #$55
  3168 2141 8D E6 26			sta SETPLAYER.COLOUR
  3169 2144 A9 51			lda #$51
  3170 2146 8D E5 26			sta SETPLAYER.HEAD
  3171 2149 A9 02			lda #$02
  3172 214B 8D E4 26			sta SETPLAYER.BRAIN
  3173 214E A9 01			lda #$01
  3174 2150 8D E3 26			sta SETPLAYER.DIR
  3175 2153 A9 15			lda #$15
  3176 2155 8D E2 26			sta SETPLAYER.Y
  3177 2158 A9 24			lda #$24
  3178 215A 8D E1 26			sta SETPLAYER.X
  3179 215D AD 8E 26			lda PLAYER4
  3180 2160 8D DF 26			sta SETPLAYER.P
  3181 2163 AD 8F 26			lda PLAYER4+1
  3182 2166 8D E0 26			sta SETPLAYER.P+1
  3183 2169 20 00 14			jsr SETPLAYER
  3184
  3185 				; optimize OK (levels.inc), line = 157
  3186
  3187 216C A9 FA			lda #$FA
  3188 216E 8D C6 26			sta adr.OBSTACLES+$00
  3189 2171 A9 0C			lda #$0C
  3190 2173 8D C7 26			sta adr.OBSTACLES+1+$00
  3191
  3192 				; optimize OK (levels.inc), line = 158
  3193
  3194 2176 A9 0E			lda #$0E
  3195 2178 8D C8 26			sta adr.OBSTACLES+$02
  3196 217B A9 0D			lda #$0D
  3197 217D 8D C9 26			sta adr.OBSTACLES+1+$02
  3198
  3199 				; optimize OK (levels.inc), line = 159
  3200
  3201 2180 A9 DA			lda #$DA
  3202 2182 8D CA 26			sta adr.OBSTACLES+$04
  3203 2185 A9 0E			lda #$0E
  3204 2187 8D CB 26			sta adr.OBSTACLES+1+$04
  3205
  3206 				; optimize OK (levels.inc), line = 160
  3207
  3208 218A A9 EE			lda #$EE
  3209 218C 8D CC 26			sta adr.OBSTACLES+$06
  3210 218F A9 0E			lda #$0E
  3211 2191 8D CD 26			sta adr.OBSTACLES+1+$06
  3212
  3213 				; optimize OK (levels.inc), line = 161
  3214
  3215 2194 A9 E1			lda #$E1
  3216 2196 8D CE 26			sta adr.OBSTACLES+$08
  3217 2199 A9 0D			lda #$0D
  3218 219B 8D CF 26			sta adr.OBSTACLES+1+$08
  3219
  3220 				; optimize OK (levels.inc), line = 162
  3221
  3222 219E A9 64			lda #$64
  3223 21A0 8D D0 26			sta adr.OBSTACLES+$0A
  3224 21A3 A9 0C			lda #$0C
  3225 21A5 8D D1 26			sta adr.OBSTACLES+1+$0A
  3226
  3227 				; optimize OK (levels.inc), line = 163
  3228
  3229 21A8 A9 84			lda #$84
  3230 21AA 8D D2 26			sta adr.OBSTACLES+$0C
  3231 21AD A9 0F			lda #$0F
  3232 21AF 8D D3 26			sta adr.OBSTACLES+1+$0C
  3233
  3234 				; optimize OK (levels.inc), line = 164
  3235
  3236 21B2 A9 F4			lda #$F4
  3237 21B4 8D D4 26			sta adr.OBSTACLES+$0E
  3238 21B7 A9 0D			lda #$0D
  3239 21B9 8D D5 26			sta adr.OBSTACLES+1+$0E
  3240
  3241 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 166
  3242
  3243 21BC 20 F3 12			jsr SAVEOBSTACLES
  3244 21BF			@exit
  3245 					.ifdef @new
  3246 					lda <@VarData
  3247 					sta :ztmp
  3248 					lda >@VarData
  3249 					ldy #@VarDataSize-1
  3250 					jmp @FreeMem
  3251 					els
  3252 21BF 60				rts						; ret
  3253 					eif
  3254 				.endl
  3255
  3256 21C0			.local	SETLEVEL08					; PROCEDURE
  3257
  3258 				; optimize OK (levels.inc), line = 173
  3259
  3260 21C0 A9 01			lda #$01
  3261 21C2 8D E7 26			sta SETPLAYER.ISALIVE
  3262 21C5 A9 62			lda #$62
  3263 21C7 8D E6 26			sta SETPLAYER.COLOUR
  3264 21CA A9 51			lda #$51
  3265 21CC 8D E5 26			sta SETPLAYER.HEAD
  3266 21CF A9 00			lda #$00
  3267 21D1 8D E4 26			sta SETPLAYER.BRAIN
  3268 21D4 A9 08			lda #$08
  3269 21D6 8D E3 26			sta SETPLAYER.DIR
  3270 21D9 A9 17			lda #$17
  3271 21DB 8D E2 26			sta SETPLAYER.Y
  3272 21DE A9 01			lda #$01
  3273 21E0 8D E1 26			sta SETPLAYER.X
  3274 21E3 AD 88 26			lda PLAYER1
  3275 21E6 8D DF 26			sta SETPLAYER.P
  3276 21E9 AD 89 26			lda PLAYER1+1
  3277 21EC 8D E0 26			sta SETPLAYER.P+1
  3278 21EF 20 00 14			jsr SETPLAYER
  3279
  3280 				; optimize OK (levels.inc), line = 174
  3281
  3282 21F2 A9 01			lda #$01
  3283 21F4 8D E7 26			sta SETPLAYER.ISALIVE
  3284 21F7 A9 5D			lda #$5D
  3285 21F9 8D E6 26			sta SETPLAYER.COLOUR
  3286 21FC A9 51			lda #$51
  3287 21FE 8D E5 26			sta SETPLAYER.HEAD
  3288 2201 A9 03			lda #$03
  3289 2203 8D E4 26			sta SETPLAYER.BRAIN
  3290 2206 A9 04			lda #$04
  3291 2208 8D E3 26			sta SETPLAYER.DIR
  3292 220B A9 17			lda #$17
  3293 220D 8D E2 26			sta SETPLAYER.Y
  3294 2210 A9 26			lda #$26
  3295 2212 8D E1 26			sta SETPLAYER.X
  3296 2215 AD 8A 26			lda PLAYER2
  3297 2218 8D DF 26			sta SETPLAYER.P
  3298 221B AD 8B 26			lda PLAYER2+1
  3299 221E 8D E0 26			sta SETPLAYER.P+1
  3300 2221 20 00 14			jsr SETPLAYER
  3301
  3302 				; optimize OK (levels.inc), line = 175
  3303
  3304 2224 A9 01			lda #$01
  3305 2226 8D E7 26			sta SETPLAYER.ISALIVE
  3306 2229 A9 71			lda #$71
  3307 222B 8D E6 26			sta SETPLAYER.COLOUR
  3308 222E A9 51			lda #$51
  3309 2230 8D E5 26			sta SETPLAYER.HEAD
  3310 2233 A9 02			lda #$02
  3311 2235 8D E4 26			sta SETPLAYER.BRAIN
  3312 2238 8D E3 26			sta SETPLAYER.DIR
  3313 223B A9 01			lda #$01
  3314 223D 8D E2 26			sta SETPLAYER.Y
  3315 2240 A9 0A			lda #$0A
  3316 2242 8D E1 26			sta SETPLAYER.X
  3317 2245 AD 8C 26			lda PLAYER3
  3318 2248 8D DF 26			sta SETPLAYER.P
  3319 224B AD 8D 26			lda PLAYER3+1
  3320 224E 8D E0 26			sta SETPLAYER.P+1
  3321 2251 20 00 14			jsr SETPLAYER
  3322
  3323 				; optimize OK (levels.inc), line = 176
  3324
  3325 2254 A9 01			lda #$01
  3326 2256 8D E7 26			sta SETPLAYER.ISALIVE
  3327 2259 A9 55			lda #$55
  3328 225B 8D E6 26			sta SETPLAYER.COLOUR
  3329 225E A9 51			lda #$51
  3330 2260 8D E5 26			sta SETPLAYER.HEAD
  3331 2263 A9 04			lda #$04
  3332 2265 8D E4 26			sta SETPLAYER.BRAIN
  3333 2268 8D E3 26			sta SETPLAYER.DIR
  3334 226B A9 01			lda #$01
  3335 226D 8D E2 26			sta SETPLAYER.Y
  3336 2270 A9 26			lda #$26
  3337 2272 8D E1 26			sta SETPLAYER.X
  3338 2275 AD 8E 26			lda PLAYER4
  3339 2278 8D DF 26			sta SETPLAYER.P
  3340 227B AD 8F 26			lda PLAYER4+1
  3341 227E 8D E0 26			sta SETPLAYER.P+1
  3342 2281 20 00 14			jsr SETPLAYER
  3343
  3344 				; optimize OK (levels.inc), line = 178
  3345
  3346 2284 A9 FA			lda #$FA
  3347 2286 8D C6 26			sta adr.OBSTACLES+$00
  3348 2289 A9 0C			lda #$0C
  3349 228B 8D C7 26			sta adr.OBSTACLES+1+$00
  3350
  3351 				; optimize OK (levels.inc), line = 179
  3352
  3353 228E A9 0E			lda #$0E
  3354 2290 8D C8 26			sta adr.OBSTACLES+$02
  3355 2293 A9 0D			lda #$0D
  3356 2295 8D C9 26			sta adr.OBSTACLES+1+$02
  3357
  3358 				; optimize OK (levels.inc), line = 180
  3359
  3360 2298 A9 DA			lda #$DA
  3361 229A 8D CA 26			sta adr.OBSTACLES+$04
  3362 229D A9 0E			lda #$0E
  3363 229F 8D CB 26			sta adr.OBSTACLES+1+$04
  3364
  3365 				; optimize OK (levels.inc), line = 181
  3366
  3367 22A2 A9 EE			lda #$EE
  3368 22A4 8D CC 26			sta adr.OBSTACLES+$06
  3369 22A7 A9 0E			lda #$0E
  3370 22A9 8D CD 26			sta adr.OBSTACLES+1+$06
  3371
  3372 				; optimize OK (levels.inc), line = 182
  3373
  3374 22AC A9 E1			lda #$E1
  3375 22AE 8D CE 26			sta adr.OBSTACLES+$08
  3376 22B1 A9 0D			lda #$0D
  3377 22B3 8D CF 26			sta adr.OBSTACLES+1+$08
  3378
  3379 				; optimize OK (levels.inc), line = 183
  3380
  3381 22B6 A9 64			lda #$64
  3382 22B8 8D D0 26			sta adr.OBSTACLES+$0A
  3383 22BB A9 0C			lda #$0C
  3384 22BD 8D D1 26			sta adr.OBSTACLES+1+$0A
  3385
  3386 				; optimize OK (levels.inc), line = 184
  3387
  3388 22C0 A9 84			lda #$84
  3389 22C2 8D D2 26			sta adr.OBSTACLES+$0C
  3390 22C5 A9 0F			lda #$0F
  3391 22C7 8D D3 26			sta adr.OBSTACLES+1+$0C
  3392
  3393 				; optimize OK (levels.inc), line = 185
  3394
  3395 22CA A9 F4			lda #$F4
  3396 22CC 8D D4 26			sta adr.OBSTACLES+$0E
  3397 22CF A9 0D			lda #$0D
  3398 22D1 8D D5 26			sta adr.OBSTACLES+1+$0E
  3399
  3400 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 187
  3401
  3402 22D4 20 F3 12			jsr SAVEOBSTACLES
  3403 22D7			@exit
  3404 					.ifdef @new
  3405 					lda <@VarData
  3406 					sta :ztmp
  3407 					lda >@VarData
  3408 					ldy #@VarDataSize-1
  3409 					jmp @FreeMem
  3410 					els
  3411 22D7 60				rts						; ret
  3412 					eif
  3413 				.endl
  3414
  3415 22D8			.local	HUMAN						; PROCEDURE
  3416
  3417 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 15
  3418
  3419 22D8 20 EE 13			jsr CHECKJOYSTATUS
  3420 22DB AC 84 26 84 12 AC + 	mwy PLY :bp2
  3421 22E5 A0 04			ldy #PLY.DIR-DATAORIGIN
  3422 22E7 B1 12			lda (:bp2),y
  3423 22E9 85 5B			sta NEWDIR
  3424
  3425 				; optimize OK (main.pas), line = 16
  3426
  3427 22EB A5 63			lda JOYSTATUS
  3428 22ED 8D EF 26			sta @CASETMP_0006
  3429 22F0 C9 01			cmp #$01
  3430 22F2 D0 19			jne l_0CCA
  3431 22F4			@
  3432
  3433 				; optimize OK (main.pas), line = 17
  3434
  3435 22F4 AC 84 26 84 12 AC + 	mwy PLY :bp2
  3436 22FE A0 04			ldy #PLY.DIR-DATAORIGIN
  3437 2300 B1 12			lda (:bp2),y
  3438 2302 C9 02			cmp #$02
  3439 2304 F0 04			jeq l_0CDC
  3440 2306 A9 01			lda #$01
  3441 2308 85 5B			sta NEWDIR
  3442 230A			l_0CDC
  3443
  3444 230A 4C 61 23			jmp a_0006
  3445 230D			l_0CCA
  3446 230D C9 02			cmp #$02
  3447 230F D0 19			jne l_0CEC
  3448 2311			@
  3449
  3450 				; optimize OK (main.pas), line = 18
  3451
  3452 2311 AC 84 26 84 12 AC + 	mwy PLY :bp2
  3453 231B A0 04			ldy #PLY.DIR-DATAORIGIN
  3454 231D B1 12			lda (:bp2),y
  3455 231F C9 01			cmp #$01
  3456 2321 F0 04			jeq l_0CFE
  3457 2323 A9 02			lda #$02
  3458 2325 85 5B			sta NEWDIR
  3459 2327			l_0CFE
  3460
  3461 2327 4C 61 23			jmp a_0006
  3462 232A			l_0CEC
  3463 232A C9 04			cmp #$04
  3464 232C D0 19			jne l_0D0E
  3465 232E			@
  3466
  3467 				; optimize OK (main.pas), line = 19
  3468
  3469 232E AC 84 26 84 12 AC + 	mwy PLY :bp2
  3470 2338 A0 04			ldy #PLY.DIR-DATAORIGIN
  3471 233A B1 12			lda (:bp2),y
  3472 233C C9 08			cmp #$08
  3473 233E F0 04			jeq l_0D20
  3474 2340 A9 04			lda #$04
  3475 2342 85 5B			sta NEWDIR
  3476 2344			l_0D20
  3477
  3478 2344 4C 61 23			jmp a_0006
  3479 2347			l_0D0E
  3480 2347 C9 08			cmp #$08
  3481 2349 D0 16			jne l_0D30
  3482 234B			@
  3483
  3484 				; optimize OK (main.pas), line = 20
  3485
  3486 234B AC 84 26 84 12 AC + 	mwy PLY :bp2
  3487 2355 A0 04			ldy #PLY.DIR-DATAORIGIN
  3488 2357 B1 12			lda (:bp2),y
  3489 2359 C9 04			cmp #$04
  3490 235B F0 04			jeq l_0D42
  3491 235D A9 08			lda #$08
  3492 235F 85 5B			sta NEWDIR
  3493 2361			l_0D42
  3494
  3495 2361			l_0D30
  3496 2361			a_0006
  3497
  3498 				; optimize OK (main.pas), line = 23
  3499
  3500 2361 A5 5B			lda NEWDIR
  3501 2363 25 5C			and AVAILDIR
  3502 2365 D0 18			jne l_0D69
  3503
  3504 				; optimize OK (main.pas), line = 24
  3505
  3506 2367 AC 84 26 84 12 AC + 	mwy PLY :bp2
  3507 2371 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3508 2373 A9 00			lda #$00
  3509 2375 91 12			sta (:bp2),y
  3510 2377 A0 02			ldy #PLY.HEAD-DATAORIGIN
  3511 2379 A9 2A			lda #$2A
  3512 237B 91 12			sta (:bp2),y
  3513 237D C6 5A			dec ALIVE
  3514 237F			l_0D69
  3515
  3516 				; ------------------------------------------------------------
  3517
  3518 = 26EF			@CASETMP_0006	= DATAORIGIN+$005B
  3519
  3520 = 26EF			@VarData	= @CASETMP_0006
  3521 = 0001			@VarDataSize	= 1
  3522
  3523 237F			@exit
  3524 					.ifdef @new
  3525 					lda <@VarData
  3526 					sta :ztmp
  3527 					lda >@VarData
  3528 					ldy #@VarDataSize-1
  3529 					jmp @FreeMem
  3530 					els
  3531 237F 60				rts						; ret
  3532 					eif
  3533 				.endl
  3534
  3535 2380			.local	PLAYERMOVE					; PROCEDURE
  3536
  3537 				; optimize OK (main.pas), line = 32
  3538
  3539 2380 AC 84 26 84 12 AC + 	mwy PLY :bp2
  3540 238A A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3541 238C B1 12			lda (:bp2),y
  3542 238E D0 03 4C D4 24		jeq l_0D88
  3543
  3544 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 33
  3545
  3546 2393 20 29 12			jsr CHECKAVAILDIR
  3547
  3548 				; optimize OK (main.pas), line = 35
  3549
  3550 2396 A5 5C			lda AVAILDIR
  3551 2398 D0 35			jne l_0D9C
  3552
  3553 				; optimize OK (main.pas), line = 36
  3554
  3555 239A AC 84 26 84 12 AC + 	mwy PLY :bp2
  3556 23A4 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3557 23A6 A9 00			lda #$00
  3558 23A8 91 12			sta (:bp2),y
  3559 23AA C6 5A			dec ALIVE
  3560
  3561 				; optimize OK (main.pas), line = 37
  3562
  3563 23AC A0 00			ldy #PLY.X-DATAORIGIN
  3564 23AE B1 12			lda (:bp2),y
  3565 23B0 8D D6 26			sta PUTCHAR_0072.X
  3566 23B3 A0 01			ldy #PLY.Y-DATAORIGIN
  3567 23B5 B1 12			lda (:bp2),y
  3568 23B7 8D D7 26			sta PUTCHAR_0072.Y
  3569 23BA A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3570 23BC B1 12			lda (:bp2),y
  3571 23BE 18 69 80			add #$80
  3572 23C1 8D D9 26			sta PUTCHAR_0072.C
  3573 23C4 A9 57			lda #$57
  3574 23C6 8D D8 26			sta PUTCHAR_0072.V
  3575 23C9 20 78 11			jsr PUTCHAR_0072
  3576 23CC 4C D4 24			jmp l_0DBD
  3577 23CF			l_0D9C
  3578
  3579 				; optimize OK (main.pas), line = 40
  3580
  3581 23CF AC 84 26 84 12 AC + 	mwy PLY :bp2
  3582 23D9 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  3583 23DB B1 12			lda (:bp2),y
  3584 23DD 8D F0 26			sta @CASETMP_0007
  3585 23E0 C9 00			cmp #$00
  3586 23E2 D0 06			jne l_0DC8
  3587 23E4			@
  3588
  3589 				; optimize FAIL ('HUMAN', main.pas), line = 41
  3590
  3591 23E4 20 D8 22			jsr HUMAN
  3592 23E7 4C 0F 24			jmp a_0007
  3593 23EA			l_0DC8
  3594 23EA C9 01			cmp #$01
  3595 23EC D0 06			jne l_0DD2
  3596 23EE			@
  3597
  3598 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 42
  3599
  3600 23EE 20 E4 14			jsr AISTRAIGHT
  3601 23F1 4C 0F 24			jmp a_0007
  3602 23F4			l_0DD2
  3603 23F4 C9 02			cmp #$02
  3604 23F6 D0 06			jne l_0DDC
  3605 23F8			@
  3606
  3607 				; optimize FAIL ('AISAPPER', main.pas), line = 43
  3608
  3609 23F8 20 69 15			jsr AISAPPER
  3610 23FB 4C 0F 24			jmp a_0007
  3611 23FE			l_0DDC
  3612 23FE C9 03			cmp #$03
  3613 2400 D0 06			jne l_0DE6
  3614 2402			@
  3615
  3616 				; optimize FAIL ('AIBULLY', main.pas), line = 44
  3617
  3618 2402 20 C3 17			jsr AIBULLY
  3619 2405 4C 0F 24			jmp a_0007
  3620 2408			l_0DE6
  3621 2408 C9 04			cmp #$04
  3622 240A D0 03			jne l_0DF0
  3623 240C			@
  3624
  3625 				; optimize FAIL ('AIMIRROR', main.pas), line = 45
  3626
  3627 240C 20 91 18			jsr AIMIRROR
  3628 240F			l_0DF0
  3629 240F			a_0007
  3630
  3631 				; optimize FAIL ('DRAWTAIL', main.pas), line = 48
  3632
  3633 240F 20 37 13			jsr DRAWTAIL
  3634 2412 AC 84 26 84 12 AC + 	mwy PLY :bp2
  3635 241C A0 04			ldy #PLY.DIR-DATAORIGIN
  3636 241E A5 5B			lda NEWDIR
  3637 2420 91 12			sta (:bp2),y
  3638
  3639 				; optimize OK (main.pas), line = 50
  3640
  3641 2422 A5 5B			lda NEWDIR
  3642 2424 8D F1 26			sta @CASETMP_0008
  3643 2427 C9 01			cmp #$01
  3644 2429 D0 16			jne l_0E0C
  3645 242B			@
  3646
  3647 				; optimize OK (main.pas), line = 51
  3648
  3649 242B AC 84 26 84 12 AC + 	mwy PLY :bp2
  3650 2435 A0 01			ldy #PLY.Y-DATAORIGIN
  3651 2437 B1 12			lda (:bp2),y
  3652 2439 38 E9 01			sub #$01
  3653 243C 91 12			sta (:bp2),y
  3654
  3655 243E 4C 8C 24			jmp a_0008
  3656 2441			l_0E0C
  3657 2441 C9 02			cmp #$02
  3658 2443 D0 16			jne l_0E16
  3659 2445			@
  3660
  3661 				; optimize OK (main.pas), line = 52
  3662
  3663 2445 AC 84 26 84 12 AC + 	mwy PLY :bp2
  3664 244F A0 01			ldy #PLY.Y-DATAORIGIN
  3665 2451 B1 12			lda (:bp2),y
  3666 2453 18 69 01			add #$01
  3667 2456 91 12			sta (:bp2),y
  3668
  3669 2458 4C 8C 24			jmp a_0008
  3670 245B			l_0E16
  3671 245B C9 04			cmp #$04
  3672 245D D0 16			jne l_0E20
  3673 245F			@
  3674
  3675 				; optimize OK (main.pas), line = 53
  3676
  3677 245F AC 84 26 84 12 AC + 	mwy PLY :bp2
  3678 2469 A0 00			ldy #PLY.X-DATAORIGIN
  3679 246B B1 12			lda (:bp2),y
  3680 246D 38 E9 01			sub #$01
  3681 2470 91 12			sta (:bp2),y
  3682
  3683 2472 4C 8C 24			jmp a_0008
  3684 2475			l_0E20
  3685 2475 C9 08			cmp #$08
  3686 2477 D0 13			jne l_0E2A
  3687 2479			@
  3688
  3689 				; optimize OK (main.pas), line = 54
  3690
  3691 2479 AC 84 26 84 12 AC + 	mwy PLY :bp2
  3692 2483 A0 00			ldy #PLY.X-DATAORIGIN
  3693 2485 B1 12			lda (:bp2),y
  3694 2487 18 69 01			add #$01
  3695 248A 91 12			sta (:bp2),y
  3696
  3697 248C			l_0E2A
  3698 248C			a_0008
  3699
  3700 				; optimize OK (main.pas), line = 57
  3701
  3702 248C AC 84 26 84 12 AC + 	mwy PLY :bp2
  3703 2496 A0 00			ldy #PLY.X-DATAORIGIN
  3704 2498 B1 12			lda (:bp2),y
  3705 249A 8D D6 26			sta PUTCHAR_0072.X
  3706 249D A0 01			ldy #PLY.Y-DATAORIGIN
  3707 249F B1 12			lda (:bp2),y
  3708 24A1 8D D7 26			sta PUTCHAR_0072.Y
  3709 24A4 A0 02			ldy #PLY.HEAD-DATAORIGIN
  3710 24A6 B1 12			lda (:bp2),y
  3711 24A8 8D D8 26			sta PUTCHAR_0072.V
  3712 24AB A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3713 24AD B1 12			lda (:bp2),y
  3714 24AF 8D D9 26			sta PUTCHAR_0072.C
  3715 24B2 20 78 11			jsr PUTCHAR_0072
  3716
  3717 				; optimize OK (main.pas), line = 60
  3718
  3719 24B5 AD AD 26			lda PLAYER1.ISALIVE
  3720 24B8 D0 1A			jne l_0E4F
  3721 24BA AD A9 26			lda PLAYER1.COLOUR
  3722 24BD 8D D9 26			sta PUTCHAR_0072.C
  3723 24C0 A9 2A			lda #$2A
  3724 24C2 8D D8 26			sta PUTCHAR_0072.V
  3725 24C5 AD A7 26			lda PLAYER1.Y
  3726 24C8 8D D7 26			sta PUTCHAR_0072.Y
  3727 24CB AD A6 26			lda PLAYER1.X
  3728 24CE 8D D6 26			sta PUTCHAR_0072.X
  3729 24D1 20 78 11			jsr PUTCHAR_0072
  3730 24D4			l_0E4F
  3731 24D4			l_0DBD
  3732 24D4			l_0D88
  3733
  3734 				; ------------------------------------------------------------
  3735
  3736 = 26F0			@CASETMP_0007	= DATAORIGIN+$005C
  3737 = 26F1			@CASETMP_0008	= DATAORIGIN+$005D
  3738
  3739 = 26F0			@VarData	= @CASETMP_0007
  3740 = 0002			@VarDataSize	= 2
  3741
  3742 24D4			@exit
  3743 					.ifdef @new
  3744 					lda <@VarData
  3745 					sta :ztmp
  3746 					lda >@VarData
  3747 					ldy #@VarDataSize-1
  3748 					jmp @FreeMem
  3749 					els
  3750 24D4 60				rts						; ret
  3751 					eif
  3752 				.endl
  3753
  3754 24D5			.local	STARTSCREEN					; PROCEDURE
  3755
  3756 				; optimize OK (main.pas), line = 71
  3757
  3758 24D5 AD A9 26			lda PLAYER1.COLOUR
  3759 24D8 18 69 80			add #$80
  3760 24DB 8D D9 26			sta PUTCHAR_0072.C
  3761 24DE AD A8 26			lda PLAYER1.HEAD
  3762 24E1 8D D8 26			sta PUTCHAR_0072.V
  3763 24E4 AD A7 26			lda PLAYER1.Y
  3764 24E7 8D D7 26			sta PUTCHAR_0072.Y
  3765 24EA AD A6 26			lda PLAYER1.X
  3766 24ED 8D D6 26			sta PUTCHAR_0072.X
  3767 24F0 20 78 11			jsr PUTCHAR_0072
  3768
  3769 				; --- RepeatUntilProlog
  3770 24F3			l_0E75
  3771
  3772 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 72
  3773
  3774 24F3 20 EE 13			jsr CHECKJOYSTATUS
  3775 24F6 A5 63			lda JOYSTATUS
  3776 24F8 C9 40			cmp #$40
  3777 24FA D0 F7			jne l_0E75
  3778
  3779 				; optimize OK (main.pas), line = 73
  3780
  3781 24FC AD A9 26			lda PLAYER1.COLOUR
  3782 24FF 8D D9 26			sta PUTCHAR_0072.C
  3783 2502 AD A8 26			lda PLAYER1.HEAD
  3784 2505 8D D8 26			sta PUTCHAR_0072.V
  3785 2508 AD A7 26			lda PLAYER1.Y
  3786 250B 8D D7 26			sta PUTCHAR_0072.Y
  3787 250E AD A6 26			lda PLAYER1.X
  3788 2511 8D D6 26			sta PUTCHAR_0072.X
  3789 2514 20 78 11			jsr PUTCHAR_0072
  3790 2517			@exit
  3791 					.ifdef @new
  3792 					lda <@VarData
  3793 					sta :ztmp
  3794 					lda >@VarData
  3795 					ldy #@VarDataSize-1
  3796 					jmp @FreeMem
  3797 					els
  3798 2517 60				rts						; ret
  3799 					eif
  3800 				.endl
  3801
  3802 2518			.local	MAINLOOP					; PROCEDURE
  3803
  3804 				; optimize OK (main.pas), line = 80
  3805
  3806 2518 A9 FF			lda #$FF
  3807 251A 85 5A			sta ALIVE
  3808
  3809 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 82
  3810
  3811 251C 20 64 14			jsr INITPLAYFIELD
  3812
  3813 				; optimize OK (main.pas), line = 84
  3814
  3815 251F AD A4 26			lda LEVEL
  3816 2522 8D F2 26			sta @CASETMP_0009
  3817 2525 C9 00			cmp #$00
  3818 2527 D0 06			jne l_0EA4
  3819 2529			@
  3820
  3821 				; optimize FAIL ('SETLEVEL00', main.pas), line = 85
  3822
  3823 2529 20 E6 18			jsr SETLEVEL00
  3824 252C 4C 7C 25			jmp a_0009
  3825 252F			l_0EA4
  3826 252F C9 01			cmp #$01
  3827 2531 D0 06			jne l_0EAE
  3828 2533			@
  3829
  3830 				; optimize FAIL ('SETLEVEL01', main.pas), line = 86
  3831
  3832 2533 20 02 1A			jsr SETLEVEL01
  3833 2536 4C 7C 25			jmp a_0009
  3834 2539			l_0EAE
  3835 2539 C9 02			cmp #$02
  3836 253B D0 06			jne l_0EB8
  3837 253D			@
  3838
  3839 				; optimize FAIL ('SETLEVEL02', main.pas), line = 87
  3840
  3841 253D 20 1E 1B			jsr SETLEVEL02
  3842 2540 4C 7C 25			jmp a_0009
  3843 2543			l_0EB8
  3844 2543 C9 03			cmp #$03
  3845 2545 D0 06			jne l_0EC2
  3846 2547			@
  3847
  3848 				; optimize FAIL ('SETLEVEL03', main.pas), line = 88
  3849
  3850 2547 20 3A 1C			jsr SETLEVEL03
  3851 254A 4C 7C 25			jmp a_0009
  3852 254D			l_0EC2
  3853 254D C9 04			cmp #$04
  3854 254F D0 06			jne l_0ECC
  3855 2551			@
  3856
  3857 				; optimize FAIL ('SETLEVEL04', main.pas), line = 89
  3858
  3859 2551 20 56 1D			jsr SETLEVEL04
  3860 2554 4C 7C 25			jmp a_0009
  3861 2557			l_0ECC
  3862 2557 C9 05			cmp #$05
  3863 2559 D0 06			jne l_0ED6
  3864 255B			@
  3865
  3866 				; optimize FAIL ('SETLEVEL05', main.pas), line = 90
  3867
  3868 255B 20 72 1E			jsr SETLEVEL05
  3869 255E 4C 7C 25			jmp a_0009
  3870 2561			l_0ED6
  3871 2561 C9 06			cmp #$06
  3872 2563 D0 06			jne l_0EE0
  3873 2565			@
  3874
  3875 				; optimize FAIL ('SETLEVEL06', main.pas), line = 91
  3876
  3877 2565 20 8C 1F			jsr SETLEVEL06
  3878 2568 4C 7C 25			jmp a_0009
  3879 256B			l_0EE0
  3880 256B C9 07			cmp #$07
  3881 256D D0 06			jne l_0EEA
  3882 256F			@
  3883
  3884 				; optimize FAIL ('SETLEVEL07', main.pas), line = 92
  3885
  3886 256F 20 A4 20			jsr SETLEVEL07
  3887 2572 4C 7C 25			jmp a_0009
  3888 2575			l_0EEA
  3889 2575 C9 08			cmp #$08
  3890 2577 D0 03			jne l_0EF4
  3891 2579			@
  3892
  3893 				; optimize FAIL ('SETLEVEL08', main.pas), line = 93
  3894
  3895 2579 20 C0 21			jsr SETLEVEL08
  3896 257C			l_0EF4
  3897 257C			a_0009
  3898
  3899 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 96
  3900
  3901 257C 20 BE 12			jsr ANIMATEOBSTACLES
  3902 257F 20 C4 11			jsr SHOWSCORE
  3903 2582 20 D5 24			jsr STARTSCREEN
  3904
  3905 				; --- RepeatUntilProlog
  3906 2585			l_0F06
  3907
  3908 				; optimize FAIL ('SYSTEM.PAUSE_006B', main.pas), line = 99
  3909
  3910 2585 20 23 11			jsr SYSTEM.PAUSE_006B
  3911
  3912 				; optimize OK (main.pas), line = 100
  3913
  3914 2588 AD 88 26			lda PLAYER1
  3915 258B 8D 84 26			sta PLY
  3916 258E AD 89 26			lda PLAYER1+1
  3917 2591 8D 85 26			sta PLY+1
  3918 2594 20 80 23			jsr PLAYERMOVE
  3919
  3920 				; optimize OK (main.pas), line = 102
  3921
  3922 2597 A9 02			lda #$02
  3923 2599 8D A0 26			sta SYSTEM.PAUSE_006C.N
  3924 259C A9 00			lda #$00
  3925 259E 8D A1 26			sta SYSTEM.PAUSE_006C.N+1
  3926 25A1 20 2A 11			jsr SYSTEM.PAUSE_006C
  3927
  3928 				; optimize OK (main.pas), line = 103
  3929
  3930 25A4 AD 8A 26			lda PLAYER2
  3931 25A7 8D 84 26			sta PLY
  3932 25AA AD 8B 26			lda PLAYER2+1
  3933 25AD 8D 85 26			sta PLY+1
  3934 25B0 20 80 23			jsr PLAYERMOVE
  3935
  3936 				; optimize OK (main.pas), line = 104
  3937
  3938 25B3 AD 8C 26			lda PLAYER3
  3939 25B6 8D 84 26			sta PLY
  3940 25B9 AD 8D 26			lda PLAYER3+1
  3941 25BC 8D 85 26			sta PLY+1
  3942 25BF 20 80 23			jsr PLAYERMOVE
  3943
  3944 				; optimize OK (main.pas), line = 105
  3945
  3946 25C2 AD 8E 26			lda PLAYER4
  3947 25C5 8D 84 26			sta PLY
  3948 25C8 AD 8F 26			lda PLAYER4+1
  3949 25CB 8D 85 26			sta PLY+1
  3950 25CE 20 80 23			jsr PLAYERMOVE
  3951
  3952 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 106
  3953
  3954 25D1 20 BE 12			jsr ANIMATEOBSTACLES
  3955
  3956 				; optimize OK (main.pas), line = 107
  3957
  3958 25D4 A5 5A			lda ALIVE
  3959 25D6 F0 04			jeq l_0F06x
  3960 25D8 C9 FF			cmp #$FF
  3961 25DA D0 A9			jne l_0F06
  3962 25DC			l_0F06x
  3963
  3964 				; optimize OK (main.pas), line = 109
  3965
  3966 25DC AD AD 26			lda PLAYER1.ISALIVE
  3967 25DF F0 03			jeq l_0F47
  3968 25E1 EE AC 26			inc PLAYER1.SCORE
  3969 25E4			l_0F47
  3970
  3971 				; optimize OK (main.pas), line = 110
  3972
  3973 25E4 AD B5 26			lda PLAYER2.ISALIVE
  3974 25E7 F0 03			jeq l_0F5A
  3975 25E9 EE B4 26			inc PLAYER2.SCORE
  3976 25EC			l_0F5A
  3977
  3978 				; optimize OK (main.pas), line = 111
  3979
  3980 25EC AD BD 26			lda PLAYER3.ISALIVE
  3981 25EF F0 03			jeq l_0F6D
  3982 25F1 EE BC 26			inc PLAYER3.SCORE
  3983 25F4			l_0F6D
  3984
  3985 				; optimize OK (main.pas), line = 112
  3986
  3987 25F4 AD C5 26			lda PLAYER4.ISALIVE
  3988 25F7 F0 03			jeq l_0F80
  3989 25F9 EE C4 26			inc PLAYER4.SCORE
  3990 25FC			l_0F80
  3991
  3992 				; optimize OK (main.pas), line = 114
  3993
  3994 25FC A9 64			lda #$64
  3995 25FE 8D A0 26			sta SYSTEM.PAUSE_006C.N
  3996 2601 A9 00			lda #$00
  3997 2603 8D A1 26			sta SYSTEM.PAUSE_006C.N+1
  3998 2606 20 2A 11			jsr SYSTEM.PAUSE_006C
  3999
  4000 				; ------------------------------------------------------------
  4001
  4002 = 26F2			@CASETMP_0009	= DATAORIGIN+$005E
  4003
  4004 = 26F2			@VarData	= @CASETMP_0009
  4005 = 0001			@VarDataSize	= 1
  4006
  4007 2609			@exit
  4008 					.ifdef @new
  4009 					lda <@VarData
  4010 					sta :ztmp
  4011 					lda >@VarData
  4012 					ldy #@VarDataSize-1
  4013 					jmp @FreeMem
  4014 					els
  4015 2609 60				rts						; ret
  4016 					eif
  4017 				.endl
  4018 260A			l_0007
  4019
  4020 				; --- RepeatUntilProlog
  4021 260A			l_0F8B
  4022
  4023 				; optimize OK (main.pas), line = 121
  4024
  4025 260A A9 30			lda #$30
  4026 260C 8D AC 26			sta PLAYER1.SCORE
  4027 260F 8D B4 26			sta PLAYER2.SCORE
  4028
  4029 				; optimize OK (main.pas), line = 122
  4030
  4031 2612 8D BC 26			sta PLAYER3.SCORE
  4032 2615 8D C4 26			sta PLAYER4.SCORE
  4033
  4034 				; optimize OK (main.pas), line = 123
  4035
  4036 2618 A9 01			lda #$01
  4037 261A 8D A4 26			sta LEVEL
  4038
  4039 				; optimize OK (main.pas), line = 125
  4040
  4041 261D A9 00			lda #$00
  4042 261F 8D A5 26			sta GAMEOVER
  4043
  4044 				; --- RepeatUntilProlog
  4045 2622			l_0FA4
  4046
  4047 				; optimize FAIL ('MAINLOOP', main.pas), line = 127
  4048
  4049 2622 20 18 25			jsr MAINLOOP
  4050
  4051 				; optimize FAIL (0, main.pas), line = 128
  4052
  4053 2625 EE A4 26			inc LEVEL
  4054 2628 AD A4 26			lda LEVEL
  4055 262B C9 08			cmp #$08
  4056 262D D0 05			jne l_0FBB
  4057 262F A9 05			lda #$05
  4058 2631 8D A4 26			sta LEVEL
  4059 2634			l_0FBB
  4060
  4061 				; optimize OK (main.pas), line = 129
  4062
  4063 2634 AD AC 26			lda PLAYER1.SCORE
  4064 2637 C9 39			cmp #$39
  4065 2639 D0 05			jne l_0FD4
  4066 263B A9 01			lda #$01
  4067 263D 8D A5 26			sta GAMEOVER
  4068 2640			l_0FD4
  4069
  4070 				; optimize OK (main.pas), line = 130
  4071
  4072 2640 AD B4 26			lda PLAYER2.SCORE
  4073 2643 C9 39			cmp #$39
  4074 2645 D0 05			jne l_0FED
  4075 2647 A9 01			lda #$01
  4076 2649 8D A5 26			sta GAMEOVER
  4077 264C			l_0FED
  4078
  4079 				; optimize OK (main.pas), line = 131
  4080
  4081 264C AD BC 26			lda PLAYER3.SCORE
  4082 264F C9 39			cmp #$39
  4083 2651 D0 05			jne l_1006
  4084 2653 A9 01			lda #$01
  4085 2655 8D A5 26			sta GAMEOVER
  4086 2658			l_1006
  4087
  4088 				; optimize OK (main.pas), line = 132
  4089
  4090 2658 AD C4 26			lda PLAYER4.SCORE
  4091 265B C9 39			cmp #$39
  4092 265D D0 05			jne l_101F
  4093 265F A9 01			lda #$01
  4094 2661 8D A5 26			sta GAMEOVER
  4095 2664			l_101F
  4096
  4097 				; optimize OK (main.pas), line = 133
  4098
  4099 2664 AD A5 26			lda GAMEOVER
  4100 2667 F0 B9			jeq l_0FA4
  4101
  4102 				; optimize FAIL ('SHOWSCORE', main.pas), line = 135
  4103
  4104 2669 20 C4 11			jsr SHOWSCORE
  4105
  4106 				; optimize OK (main.pas), line = 137
  4107
  4108 266C A9 C8			lda #$C8
  4109 266E 8D A0 26			sta SYSTEM.PAUSE_006C.N
  4110 2671 A9 00			lda #$00
  4111 2673 8D A1 26			sta SYSTEM.PAUSE_006C.N+1
  4112 2676 20 2A 11			jsr SYSTEM.PAUSE_006C
  4113
  4114 				; optimize OK (main.pas), line = 138
  4115
  4116 2679 4C 0A 26			jmp l_0F8B
  4117
  4118 				; ------------------------------------------------------------
  4119
  4120 = 0800			ATTRIBUTE_ADDR	= $0800
  4121 = 0C00			SCREEN_ADDR	= $0C00
  4122 = 0009			VICTORIES	= $09
  4123 = 0005			LOOK_AHEAD	= $05
  4124 = 007E			TRASH	= $7E
  4125 = 0020			EMPTY	= $20
  4126 = 00A0			WALL	= $A0
  4127 = 0041			WALL_COLOUR	= $41
  4128 = 0030			ZERO	= $30
  4129 = 0056			OBSTACLE_1	= $56
  4130 = 005B			OBSTACLE_2	= $5B
  4131 = 0035			OBST_COLOUR	= $35
  4132 = 0051			PLY_HEAD	= $51
  4133 = 002A			PLY_CRASH	= $2A
  4134 = 0057			PLY_BUSTED	= $57
  4135 = 0042			PLY_TAIL_UD	= $42
  4136 = 0040			PLY_TAIL_LR	= $40
  4137 = 007D			PLY_TAIL_RD	= $7D
  4138 = 006E			PLY_TAIL_RU	= $6E
  4139 = 006D			PLY_TAIL_LD	= $6D
  4140 = 0070			PLY_TAIL_LU	= $70
  4141 = 0062			PLY1_COLOUR	= $62
  4142 = 005D			PLY2_COLOUR	= $5D
  4143 = 0071			PLY3_COLOUR	= $71
  4144 = 0055			PLY4_COLOUR	= $55
  4145 = 0000			PLY_CTRL	= $00
  4146 = 0001			AI_STRAIGHT	= $01
  4147 = 0002			AI_SAPPER	= $02
  4148 = 0003			AI_BULLY	= $03
  4149 = 0004			AI_MIRROR	= $04
  4150 = 0001			JOY_UP	= $01
  4151 = 0002			JOY_DOWN	= $02
  4152 = 0004			JOY_LEFT	= $04
  4153 = 0008			JOY_RIGHT	= $08
  4154 = 0040			JOY_FIRE	= $40
  4155 = 0002			JOY_SELECT_1	= $02
  4156 = 0004			JOY_SELECT_2	= $04
  4157 = 100E			adr.MUL40	= CODEORIGIN+$0000
  4158 267C			.var MUL40	= adr.MUL40 .word
  4159 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  4160 267C			.var DIRECTION	= adr.DIRECTION .word
  4161 = FD30			KEYSCAN	= $FD30
  4162 = FF08			JOY	= $FF08
  4163 = FF15			BACKGROUND	= $FF15
  4164 = FF19			BOREDER	= $FF19
  4165 = 0058			T0B	= $58
  4166 = 0059			I0B	= $59
  4167 = 005A			ALIVE	= $5A
  4168 = 005B			NEWDIR	= $5B
  4169 = 005C			AVAILDIR	= $5C
  4170 = 005D			T0W	= $5D
  4171 = 005F			adr.PLY	= $5F
  4172 267C			.var PLY	= adr.PLY .word
  4173 = 2694			PLY.X	= DATAORIGIN+$0000
  4174 = 2695			PLY.Y	= DATAORIGIN+$0001
  4175 = 2696			PLY.HEAD	= DATAORIGIN+$0002
  4176 = 2697			PLY.COLOUR	= DATAORIGIN+$0003
  4177 = 2698			PLY.DIR	= DATAORIGIN+$0004
  4178 = 2699			PLY.BRAIN	= DATAORIGIN+$0005
  4179 = 269A			PLY.SCORE	= DATAORIGIN+$0006
  4180 = 269B			PLY.ISALIVE	= DATAORIGIN+$0007
  4181 = 0061			adr.TMPPLY	= $61
  4182 267C			.var TMPPLY	= adr.TMPPLY .word
  4183 = 2694			TMPPLY.X	= DATAORIGIN+$0000
  4184 = 2695			TMPPLY.Y	= DATAORIGIN+$0001
  4185 = 2696			TMPPLY.HEAD	= DATAORIGIN+$0002
  4186 = 2697			TMPPLY.COLOUR	= DATAORIGIN+$0003
  4187 = 2698			TMPPLY.DIR	= DATAORIGIN+$0004
  4188 = 2699			TMPPLY.BRAIN	= DATAORIGIN+$0005
  4189 = 269A			TMPPLY.SCORE	= DATAORIGIN+$0006
  4190 = 269B			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  4191 = 0063			JOYSTATUS	= $63
  4192 = 26A4			LEVEL	= DATAORIGIN+$0010
  4193 = 26A5			GAMEOVER	= DATAORIGIN+$0011
  4194 = 26A6			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  4195 267C			.var PLAYER1	= adr.PLAYER1 .word
  4196 = 26A6			PLAYER1.X	= DATAORIGIN+$0012
  4197 = 26A7			PLAYER1.Y	= DATAORIGIN+$0013
  4198 = 26A8			PLAYER1.HEAD	= DATAORIGIN+$0014
  4199 = 26A9			PLAYER1.COLOUR	= DATAORIGIN+$0015
  4200 = 26AA			PLAYER1.DIR	= DATAORIGIN+$0016
  4201 = 26AB			PLAYER1.BRAIN	= DATAORIGIN+$0017
  4202 = 26AC			PLAYER1.SCORE	= DATAORIGIN+$0018
  4203 = 26AD			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  4204 = 26AE			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  4205 267C			.var PLAYER2	= adr.PLAYER2 .word
  4206 = 26AE			PLAYER2.X	= DATAORIGIN+$001A
  4207 = 26AF			PLAYER2.Y	= DATAORIGIN+$001B
  4208 = 26B0			PLAYER2.HEAD	= DATAORIGIN+$001C
  4209 = 26B1			PLAYER2.COLOUR	= DATAORIGIN+$001D
  4210 = 26B2			PLAYER2.DIR	= DATAORIGIN+$001E
  4211 = 26B3			PLAYER2.BRAIN	= DATAORIGIN+$001F
  4212 = 26B4			PLAYER2.SCORE	= DATAORIGIN+$0020
  4213 = 26B5			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  4214 = 26B6			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  4215 267C			.var PLAYER3	= adr.PLAYER3 .word
  4216 = 26B6			PLAYER3.X	= DATAORIGIN+$0022
  4217 = 26B7			PLAYER3.Y	= DATAORIGIN+$0023
  4218 = 26B8			PLAYER3.HEAD	= DATAORIGIN+$0024
  4219 = 26B9			PLAYER3.COLOUR	= DATAORIGIN+$0025
  4220 = 26BA			PLAYER3.DIR	= DATAORIGIN+$0026
  4221 = 26BB			PLAYER3.BRAIN	= DATAORIGIN+$0027
  4222 = 26BC			PLAYER3.SCORE	= DATAORIGIN+$0028
  4223 = 26BD			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  4224 = 26BE			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  4225 267C			.var PLAYER4	= adr.PLAYER4 .word
  4226 = 26BE			PLAYER4.X	= DATAORIGIN+$002A
  4227 = 26BF			PLAYER4.Y	= DATAORIGIN+$002B
  4228 = 26C0			PLAYER4.HEAD	= DATAORIGIN+$002C
  4229 = 26C1			PLAYER4.COLOUR	= DATAORIGIN+$002D
  4230 = 26C2			PLAYER4.DIR	= DATAORIGIN+$002E
  4231 = 26C3			PLAYER4.BRAIN	= DATAORIGIN+$002F
  4232 = 26C4			PLAYER4.SCORE	= DATAORIGIN+$0030
  4233 = 26C5			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  4234 = 26C6			adr.OBSTACLES	= [DATAORIGIN+$0032] .array [8] .word
  4235 267C			.var OBSTACLES	= adr.OBSTACLES .word
  4236 267C			@exit
  4237
  4238 267C A2 00		@halt	ldx #$00
  4239 267E 9A				txs
  4240
  4241 267F 60				rts
  4242
  4243 				; ------------------------------------------------------------
  4244
  4245 				; ------------------------------------------------------------
  4246
  4247 2680			.local	@DEFINES
  4248 2680			C4P
  4249 				.endl
  4250
  4251 2680			.local	@RESOURCE
  4252 				.endl
  4253
  4254 = 2680 0E 10		MUL40
  4254 = 2682 40 10		DIRECTION
  4254 = 2684 5F 00		PLY
  4254 = 2686 61 00		TMPPLY
  4254 = 2688 A6 26		PLAYER1
  4254 = 268A AE 26		PLAYER2
  4254 = 268C B6 26		PLAYER3
  4254 = 268E BE 26		PLAYER4
  4254 = 2690 C6 26		OBSTACLES
  4254 				.endl							; MAIN
  4255
  4256 				; ------------------------------------------------------------
  4257 				; ------------------------------------------------------------
  4258
  4259 				.macro	UNITINITIALIZATION
  4260 				
  4261 					.ifdef MAIN.SYSTEM.@UnitInit
  4262 					jsr MAIN.SYSTEM.@UnitInit
  4263 					eif
  4264 				.endm
  4265
  4266 				; ------------------------------------------------------------
  4267
  4268 					ift .SIZEOF(MAIN.SYSTEM) > 0
  4269 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  4269 				SYSTEM: $10D5..$1177
  4270 					eif
  4271
  4272 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  4272 				CODE: $100E..$267F
  4273
  4274 				; ------------------------------------------------------------
  4275
  4276 2692				.align $04
  4277
  4278 2694			DATAORIGIN
  4279 2694 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  4280
  4281 = 0006			VARINITSIZE	= *-DATAORIGIN
  4282 = 005F			VARDATASIZE	= 95
  4283
  4284 = 26F3			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  4285
  4286 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  4286 				DATA: $2694..$26F3
  4287
  4288 				; ------------------------------------------------------------
  4289
  4290 				.macro	STATICDATA
  4291 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  4292 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  4293 				.by  $C0 $03 $01 $02 $04 $08
  4294 				.endm
  4295
  4296 					end
