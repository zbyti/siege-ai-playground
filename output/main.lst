mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E 77 1A			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0045			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 1A8E			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 BB			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D D3 19 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 D3 85 02 A9 1A + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 18 1A			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 93 1A		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 93 1A 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 1A93			RESULT	= DATAORIGIN+$000B
   182
   183 = 1A93			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD 94 1A		loop  lda n
   307 1126 0D 95 1A		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD 94 1A D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 1A94			N	= DATAORIGIN+$000C
   321
   322 = 1A94			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D 96 1A			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD 96 1A		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C 97 1A		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD 97 1A 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 1A96			RANGE	= DATAORIGIN+$000E
   383 = 1A97			RESULT	= DATAORIGIN+$000F
   384
   385 = 1A96			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 1A88			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 1A8A			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 1A8C			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 1A8D			FILEMODE	= DATAORIGIN+$0005
   450 = 1A8E			GRAPHMODE	= DATAORIGIN+$0006
   451 = 1A8F			IORESULT	= DATAORIGIN+$0007
   452 = 1A90			EOLN	= DATAORIGIN+$0008
   453 = 1A91			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD BC 1A			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D BB 1A			add X
   466 117D 85 5E			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5F			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5E			ldy T0W
   475 118A AD BE 1A			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5F			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD BD 1A			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 1ABB			X	= DATAORIGIN+$0033
   486 = 1ABC			Y	= DATAORIGIN+$0034
   487 = 1ABD			V	= DATAORIGIN+$0035
   488 = 1ABE			C	= DATAORIGIN+$0036
   489
   490 = 1ABB			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 9E 1A			lda PLAYER1.COLOUR
   510 119F 8D BE 1A			sta PUTCHAR.C
   511 11A2 AD A1 1A			lda PLAYER1.SCORE
   512 11A5 8D BD 1A			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D BC 1A			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D BB 1A			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD A6 1A			lda PLAYER2.COLOUR
   522 11B8 8D BE 1A			sta PUTCHAR.C
   523 11BB AD A9 1A			lda PLAYER2.SCORE
   524 11BE 8D BD 1A			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D BC 1A			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D BB 1A			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD AE 1A			lda PLAYER3.COLOUR
   534 11D1 8D BE 1A			sta PUTCHAR.C
   535 11D4 AD B1 1A			lda PLAYER3.SCORE
   536 11D7 8D BD 1A			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D BC 1A			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D BB 1A			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD B6 1A			lda PLAYER4.COLOUR
   546 11EA 8D BE 1A			sta PUTCHAR.C
   547 11ED AD B9 1A			lda PLAYER4.SCORE
   548 11F0 8D BD 1A			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D BC 1A			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D BB 1A			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5D			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AD C0 1A			lda Y
   576 1208 0A				asl @
   577 1209 A8				tay
   578 120A B9 0E 10			lda adr.MUL40,y
   579 120D 18 6D BF 1A			add X
   580 1211 85 5E			sta T0W
   581 1213 B9 0F 10			lda adr.MUL40+1,y
   582 1216 69 0C			adc #$0C
   583 1218 85 5F			sta T0W+1
   584
   585 				; optimize OK (tools.inc), line = 26
   586
   587 121A A5 5E			lda T0W
   588 121C 38 E9 28			sub #$28
   589 121F 85 21			sta :STACKORIGIN+9
   590 1221 A5 5F			lda T0W+1
   591 1223 E9 00			sbc #$00
   592 1225 85 11			sta :bp+1
   593 1227 A4 21			ldy :STACKORIGIN+9
   594 1229 B1 10			lda (:bp),y
   595 122B C9 20			cmp #$20
   596 122D D0 06			jne l_00EE
   597 122F A5 5D			lda AVAILDIR
   598 1231 09 01			ora #$01
   599 1233 85 5D			sta AVAILDIR
   600 1235			l_00EE
   601
   602 				; optimize OK (tools.inc), line = 27
   603
   604 1235 A4 5E 84 12 A4 5F + 	mwy T0W :bp2
   605 123D A0 28			ldy #$28
   606 123F B1 12			lda (:bp2),y
   607 1241 C9 20			cmp #$20
   608 1243 D0 06			jne l_0111
   609 1245 A5 5D			lda AVAILDIR
   610 1247 09 02			ora #$02
   611 1249 85 5D			sta AVAILDIR
   612 124B			l_0111
   613
   614 				; optimize OK (tools.inc), line = 28
   615
   616 124B A5 5E			lda T0W
   617 124D 38 E9 01			sub #$01
   618 1250 85 21			sta :STACKORIGIN+9
   619 1252 A5 5F			lda T0W+1
   620 1254 E9 00			sbc #$00
   621 1256 85 11			sta :bp+1
   622 1258 A4 21			ldy :STACKORIGIN+9
   623 125A B1 10			lda (:bp),y
   624 125C C9 20			cmp #$20
   625 125E D0 06			jne l_0134
   626 1260 A5 5D			lda AVAILDIR
   627 1262 09 04			ora #$04
   628 1264 85 5D			sta AVAILDIR
   629 1266			l_0134
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 1266 A4 5E 84 12 A4 5F + 	mwy T0W :bp2
   634 126E A0 01			ldy #$01
   635 1270 B1 12			lda (:bp2),y
   636 1272 C9 20			cmp #$20
   637 1274 D0 06			jne l_0157
   638 1276 A5 5D			lda AVAILDIR
   639 1278 09 08			ora #$08
   640 127A 85 5D			sta AVAILDIR
   641 127C			l_0157
   642
   643 				; ------------------------------------------------------------
   644
   645 = 1ABF			X	= DATAORIGIN+$0037
   646 = 1AC0			Y	= DATAORIGIN+$0038
   647
   648 = 1ABF			@VarData	= X
   649 = 0002			@VarDataSize	= 2
   650
   651 127C			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 127C 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 127D			.local	INITPLAYERS					; PROCEDURE
   664
   665 				; optimize OK (init.inc), line = 5
   666
   667 127D AD C1 1A			lda P
   668 1280 8D 7E 1A			sta PLY
   669 1283 85 12			sta :bp2
   670 1285 AD C2 1A			lda P+1
   671 1288 8D 7F 1A			sta PLY+1
   672 128B 85 13			sta :bp2+1
   673 				; optimize OK (init.inc), line = 6
   674 128D A0 05			ldy #PLY.BRAIN-DATAORIGIN
   675 128F AD C6 1A			lda BRAIN
   676 1292 91 12			sta (:bp2),y
   677 1294 A0 00			ldy #PLY.X-DATAORIGIN
   678 1296 AD C3 1A			lda X
   679 1299 91 12			sta (:bp2),y
   680 129B A0 01			ldy #PLY.Y-DATAORIGIN
   681 129D AD C4 1A			lda Y
   682 12A0 91 12			sta (:bp2),y
   683 12A2 A0 04			ldy #PLY.DIR-DATAORIGIN
   684 12A4 AD C5 1A			lda DIR
   685 12A7 91 12			sta (:bp2),y
   686
   687 				; optimize OK (init.inc), line = 7
   688
   689 12A9 A0 02			ldy #PLY.HEAD-DATAORIGIN
   690 12AB AD C7 1A			lda HEAD
   691 12AE 91 12			sta (:bp2),y
   692 12B0 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   693 12B2 AD C8 1A			lda COLOUR
   694 12B5 91 12			sta (:bp2),y
   695 12B7 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
   696 12B9 AD C9 1A			lda ISDEAD
   697 12BC 91 12			sta (:bp2),y
   698
   699 				; ------------------------------------------------------------
   700
   701 = 1AC1			P	= DATAORIGIN+$0039
   702 = 1AC3			X	= DATAORIGIN+$003B
   703 = 1AC4			Y	= DATAORIGIN+$003C
   704 = 1AC5			DIR	= DATAORIGIN+$003D
   705 = 1AC6			BRAIN	= DATAORIGIN+$003E
   706 = 1AC7			HEAD	= DATAORIGIN+$003F
   707 = 1AC8			COLOUR	= DATAORIGIN+$0040
   708 = 1AC9			ISDEAD	= DATAORIGIN+$0041
   709
   710 = 1AC1			@VarData	= P
   711 = 0009			@VarDataSize	= 9
   712
   713 12BE			@exit
   714 					.ifdef @new
   715 					lda <@VarData
   716 					sta :ztmp
   717 					lda >@VarData
   718 					ldy #@VarDataSize-1
   719 					jmp @FreeMem
   720 					els
   721 12BE 60				rts						; ret
   722 					eif
   723 				.endl
   724
   725 12BF			.local	INITPLAYFIELD					; PROCEDURE
   726
   727 				; optimize OK (init.inc), line = 14
   728
   729 12BF A9 00			lda #$00
   730 12C1 8D C9 1A			sta INITPLAYERS.ISDEAD
   731 12C4 A9 5F			lda #$5F
   732 12C6 8D C8 1A			sta INITPLAYERS.COLOUR
   733 12C9 A9 51			lda #$51
   734 12CB 8D C7 1A			sta INITPLAYERS.HEAD
   735 12CE A9 00			lda #$00
   736 12D0 8D C6 1A			sta INITPLAYERS.BRAIN
   737 12D3 A9 08			lda #$08
   738 12D5 8D C5 1A			sta INITPLAYERS.DIR
   739 12D8 A9 0C			lda #$0C
   740 12DA 8D C4 1A			sta INITPLAYERS.Y
   741 12DD A9 0A			lda #$0A
   742 12DF 8D C3 1A			sta INITPLAYERS.X
   743 12E2 AD 80 1A			lda PLAYER1
   744 12E5 8D C1 1A			sta INITPLAYERS.P
   745 12E8 AD 81 1A			lda PLAYER1+1
   746 12EB 8D C2 1A			sta INITPLAYERS.P+1
   747 12EE 20 7D 12			jsr INITPLAYERS
   748
   749 				; optimize OK (init.inc), line = 15
   750
   751 12F1 A9 00			lda #$00
   752 12F3 8D C9 1A			sta INITPLAYERS.ISDEAD
   753 12F6 A9 5D			lda #$5D
   754 12F8 8D C8 1A			sta INITPLAYERS.COLOUR
   755 12FB A9 51			lda #$51
   756 12FD 8D C7 1A			sta INITPLAYERS.HEAD
   757 1300 A9 03			lda #$03
   758 1302 8D C6 1A			sta INITPLAYERS.BRAIN
   759 1305 A9 04			lda #$04
   760 1307 8D C5 1A			sta INITPLAYERS.DIR
   761 130A A9 0C			lda #$0C
   762 130C 8D C4 1A			sta INITPLAYERS.Y
   763 130F A9 1E			lda #$1E
   764 1311 8D C3 1A			sta INITPLAYERS.X
   765 1314 AD 82 1A			lda PLAYER2
   766 1317 8D C1 1A			sta INITPLAYERS.P
   767 131A AD 83 1A			lda PLAYER2+1
   768 131D 8D C2 1A			sta INITPLAYERS.P+1
   769 1320 20 7D 12			jsr INITPLAYERS
   770
   771 				; optimize OK (init.inc), line = 16
   772
   773 1323 A9 00			lda #$00
   774 1325 8D C9 1A			sta INITPLAYERS.ISDEAD
   775 1328 A9 71			lda #$71
   776 132A 8D C8 1A			sta INITPLAYERS.COLOUR
   777 132D A9 51			lda #$51
   778 132F 8D C7 1A			sta INITPLAYERS.HEAD
   779 1332 A9 02			lda #$02
   780 1334 8D C6 1A			sta INITPLAYERS.BRAIN
   781 1337 8D C5 1A			sta INITPLAYERS.DIR
   782 133A A9 06			lda #$06
   783 133C 8D C4 1A			sta INITPLAYERS.Y
   784 133F A9 14			lda #$14
   785 1341 8D C3 1A			sta INITPLAYERS.X
   786 1344 AD 84 1A			lda PLAYER3
   787 1347 8D C1 1A			sta INITPLAYERS.P
   788 134A AD 85 1A			lda PLAYER3+1
   789 134D 8D C2 1A			sta INITPLAYERS.P+1
   790 1350 20 7D 12			jsr INITPLAYERS
   791
   792 				; optimize OK (init.inc), line = 17
   793
   794 1353 A9 00			lda #$00
   795 1355 8D C9 1A			sta INITPLAYERS.ISDEAD
   796 1358 A9 55			lda #$55
   797 135A 8D C8 1A			sta INITPLAYERS.COLOUR
   798 135D A9 51			lda #$51
   799 135F 8D C7 1A			sta INITPLAYERS.HEAD
   800 1362 A9 02			lda #$02
   801 1364 8D C6 1A			sta INITPLAYERS.BRAIN
   802 1367 A9 01			lda #$01
   803 1369 8D C5 1A			sta INITPLAYERS.DIR
   804 136C A9 12			lda #$12
   805 136E 8D C4 1A			sta INITPLAYERS.Y
   806 1371 A9 14			lda #$14
   807 1373 8D C3 1A			sta INITPLAYERS.X
   808 1376 AD 86 1A			lda PLAYER4
   809 1379 8D C1 1A			sta INITPLAYERS.P
   810 137C AD 87 1A			lda PLAYER4+1
   811 137F 8D C2 1A			sta INITPLAYERS.P+1
   812 1382 20 7D 12			jsr INITPLAYERS
   813
   814 				; optimize OK (init.inc), line = 19
   815
   816 1385 A9 1F			lda #$1F
   817 1387 8D 15 FF			sta BORDERCOLOR
   818 138A A9 00			lda #$00
   819 138C 8D 19 FF			sta BGCOLOR
   820
   821 				; optimize OK (init.inc), line = 20
   822
   823 138F A9 20			lda #$20
   824 1391 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   825 1393 A9 C0			lda #$C0
   826 1395 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   827 1397 A9 03			lda #$03
   828 1399 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
   829 139B A9 00			lda #$00
   830 139D 85 08			sta SYSTEM.FILLCHAR_0056.A
   831 139F A9 0C			lda #$0C
   832 13A1 85 09			sta SYSTEM.FILLCHAR_0056.A+1
   833 13A3 20 1F 11			jsr SYSTEM.FILLCHAR_0056
   834
   835 				; optimize OK (init.inc), line = 22
   836
   837 13A6 A9 27			lda #$27
   838 13A8 85 58			sta T0B
   839
   840 13AA			l_01D8
   841 				; --- ForToDoCondition
   842
   843 				; optimize OK (init.inc), line = 23
   844
   845 13AA A4 58			ldy T0B
   846 13AC A9 A0			lda #$A0
   847 13AE 99 00 0C			sta $0C00,y
   848
   849 				; optimize OK (init.inc), line = 24
   850
   851 13B1 99 C0 0F			sta $0FC0,y
   852
   853 				; optimize OK (init.inc), line = 25
   854
   855 13B4 A9 41			lda #$41
   856 13B6 99 00 08			sta $0800,y
   857
   858 				; optimize OK (init.inc), line = 26
   859
   860 13B9 99 C0 0B			sta $0BC0,y
   861
   862 				; --- ForToDoEpilog
   863 13BC C6 58			dec T0B
   864 13BE 10 EA			jpl l_01D8
   865 13C0			l_01E6
   866
   867 				; optimize OK (init.inc), line = 29
   868
   869 13C0 A9 18			lda #$18
   870 13C2 85 58			sta T0B
   871
   872 13C4			l_0218
   873 				; --- ForToDoCondition
   874 13C4 A5 58			lda T0B
   875 13C6 C9 01			cmp #$01
   876 13C8 90 3A			jcc l_0226
   877
   878 				; optimize OK (init.inc), line = 30
   879
   880 13CA 0A				asl @
   881 13CB A8				tay
   882 13CC A9 FF			lda #$FF
   883 13CE 18 79 0E 10			add adr.MUL40,y
   884 13D2 85 12			sta :bp2
   885 13D4 A9 0B			lda #$0B
   886 13D6 79 0F 10			adc adr.MUL40+1,y
   887 13D9 85 13			sta :bp2+1
   888 13DB A0 00			ldy #$00
   889 13DD A9 A0			lda #$A0
   890 13DF 91 12			sta (:bp2),y
   891 13E1 C8				iny
   892 13E2 91 12			sta (:bp2),y
   893
   894 				; optimize OK (init.inc), line = 31
   895
   896 13E4 A5 58			lda T0B
   897 13E6 0A				asl @
   898 13E7 A8				tay
   899 13E8 A9 FF			lda #$FF
   900 13EA 18 79 0E 10			add adr.MUL40,y
   901 13EE 85 12			sta :bp2
   902 13F0 A9 07			lda #$07
   903 13F2 79 0F 10			adc adr.MUL40+1,y
   904 13F5 85 13			sta :bp2+1
   905 13F7 A0 00			ldy #$00
   906 13F9 A9 41			lda #$41
   907 13FB 91 12			sta (:bp2),y
   908 13FD C8				iny
   909 13FE 91 12			sta (:bp2),y
   910
   911 				; --- ForToDoEpilog
   912 1400 C6 58			dec T0B
   913 1402 10 C0			jpl l_0218
   914 1404			l_0226
   915
   916 				; optimize OK (init.inc), line = 34
   917
   918 1404 AD A2 1A			lda PLAYER1.ISDEAD
   919 1407 D0 1B			jne l_0250
   920 1409 AD 9E 1A			lda PLAYER1.COLOUR
   921 140C 8D BE 1A			sta PUTCHAR.C
   922 140F AD 9D 1A			lda PLAYER1.HEAD
   923 1412 8D BD 1A			sta PUTCHAR.V
   924 1415 AD 9C 1A			lda PLAYER1.Y
   925 1418 8D BC 1A			sta PUTCHAR.Y
   926 141B AD 9B 1A			lda PLAYER1.X
   927 141E 8D BB 1A			sta PUTCHAR.X
   928 1421 20 71 11			jsr PUTCHAR
   929 1424			l_0250
   930
   931 				; optimize OK (init.inc), line = 35
   932
   933 1424 AD AA 1A			lda PLAYER2.ISDEAD
   934 1427 D0 1B			jne l_026F
   935 1429 AD A6 1A			lda PLAYER2.COLOUR
   936 142C 8D BE 1A			sta PUTCHAR.C
   937 142F AD A5 1A			lda PLAYER2.HEAD
   938 1432 8D BD 1A			sta PUTCHAR.V
   939 1435 AD A4 1A			lda PLAYER2.Y
   940 1438 8D BC 1A			sta PUTCHAR.Y
   941 143B AD A3 1A			lda PLAYER2.X
   942 143E 8D BB 1A			sta PUTCHAR.X
   943 1441 20 71 11			jsr PUTCHAR
   944 1444			l_026F
   945
   946 				; optimize OK (init.inc), line = 36
   947
   948 1444 AD B2 1A			lda PLAYER3.ISDEAD
   949 1447 D0 1B			jne l_028E
   950 1449 AD AE 1A			lda PLAYER3.COLOUR
   951 144C 8D BE 1A			sta PUTCHAR.C
   952 144F AD AD 1A			lda PLAYER3.HEAD
   953 1452 8D BD 1A			sta PUTCHAR.V
   954 1455 AD AC 1A			lda PLAYER3.Y
   955 1458 8D BC 1A			sta PUTCHAR.Y
   956 145B AD AB 1A			lda PLAYER3.X
   957 145E 8D BB 1A			sta PUTCHAR.X
   958 1461 20 71 11			jsr PUTCHAR
   959 1464			l_028E
   960
   961 				; optimize OK (init.inc), line = 37
   962
   963 1464 AD BA 1A			lda PLAYER4.ISDEAD
   964 1467 D0 1B			jne l_02AD
   965 1469 AD B6 1A			lda PLAYER4.COLOUR
   966 146C 8D BE 1A			sta PUTCHAR.C
   967 146F AD B5 1A			lda PLAYER4.HEAD
   968 1472 8D BD 1A			sta PUTCHAR.V
   969 1475 AD B4 1A			lda PLAYER4.Y
   970 1478 8D BC 1A			sta PUTCHAR.Y
   971 147B AD B3 1A			lda PLAYER4.X
   972 147E 8D BB 1A			sta PUTCHAR.X
   973 1481 20 71 11			jsr PUTCHAR
   974 1484			l_02AD
   975
   976 				; optimize OK (init.inc), line = 39
   977
   978 1484 A9 35			lda #$35
   979 1486 8D BE 1A			sta PUTCHAR.C
   980 1489 A9 56			lda #$56
   981 148B 8D BD 1A			sta PUTCHAR.V
   982 148E A9 06			lda #$06
   983 1490 8D BC 1A			sta PUTCHAR.Y
   984 1493 A9 0A			lda #$0A
   985 1495 8D BB 1A			sta PUTCHAR.X
   986 1498 20 71 11			jsr PUTCHAR
   987
   988 				; optimize OK (init.inc), line = 40
   989
   990 149B A9 35			lda #$35
   991 149D 8D BE 1A			sta PUTCHAR.C
   992 14A0 A9 56			lda #$56
   993 14A2 8D BD 1A			sta PUTCHAR.V
   994 14A5 A9 06			lda #$06
   995 14A7 8D BC 1A			sta PUTCHAR.Y
   996 14AA A9 1E			lda #$1E
   997 14AC 8D BB 1A			sta PUTCHAR.X
   998 14AF 20 71 11			jsr PUTCHAR
   999
  1000 				; optimize OK (init.inc), line = 41
  1001
  1002 14B2 A9 35			lda #$35
  1003 14B4 8D BE 1A			sta PUTCHAR.C
  1004 14B7 A9 56			lda #$56
  1005 14B9 8D BD 1A			sta PUTCHAR.V
  1006 14BC A9 12			lda #$12
  1007 14BE 8D BC 1A			sta PUTCHAR.Y
  1008 14C1 A9 0A			lda #$0A
  1009 14C3 8D BB 1A			sta PUTCHAR.X
  1010 14C6 20 71 11			jsr PUTCHAR
  1011
  1012 				; optimize OK (init.inc), line = 42
  1013
  1014 14C9 A9 35			lda #$35
  1015 14CB 8D BE 1A			sta PUTCHAR.C
  1016 14CE A9 56			lda #$56
  1017 14D0 8D BD 1A			sta PUTCHAR.V
  1018 14D3 A9 12			lda #$12
  1019 14D5 8D BC 1A			sta PUTCHAR.Y
  1020 14D8 A9 1E			lda #$1E
  1021 14DA 8D BB 1A			sta PUTCHAR.X
  1022 14DD 20 71 11			jsr PUTCHAR
  1023
  1024 				; optimize FAIL ('SHOWSCORE', init.inc), line = 44
  1025
  1026 14E0 20 9C 11			jsr SHOWSCORE
  1027
  1028 				; ------------------------------------------------------------
  1029
  1030 = 0000			@FORTMP_01D5	= $00
  1031 = 0001			@FORTMP_0215	= $01
  1032 14E3			@exit
  1033 					.ifdef @new
  1034 					lda <@VarData
  1035 					sta :ztmp
  1036 					lda >@VarData
  1037 					ldy #@VarDataSize-1
  1038 					jmp @FreeMem
  1039 					els
  1040 14E3 60				rts						; ret
  1041 					eif
  1042 				.endl
  1043
  1044 14E4			.local	AISTRAIGHT					; PROCEDURE
  1045
  1046 				; optimize OK (ai.inc), line = 5
  1047
  1048 14E4 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1049 14EE A0 04			ldy #PLY.DIR-DATAORIGIN
  1050 14F0 B1 12			lda (:bp2),y
  1051 14F2 25 5D			and AVAILDIR
  1052 14F4 F0 07			jeq l_02EE
  1053 14F6 B1 12			lda (:bp2),y
  1054 14F8 85 5C			sta NEWDIR
  1055 14FA 4C 74 15			jmp l_02FE
  1056 14FD			l_02EE
  1057
  1058 				; optimize OK (ai.inc), line = 7
  1059
  1060 14FD A5 5D			lda AVAILDIR
  1061 14FF C9 03			cmp #$03
  1062 1501 D0 16			jne l_0310
  1063 1503 A9 00			lda #$00
  1064 1505 20 40 11			jsr SYSTEM.RANDOM_006C
  1065 1508 B5 18			lda :STACKORIGIN,x
  1066 150A 29 01			and #$01
  1067 150C 95 18			sta :STACKORIGIN,x
  1068 150E B4 18			ldy :STACKORIGIN,x
  1069 1510 B9 40 10			lda adr.DIRECTION,y
  1070 1513 85 5C			sta NEWDIR
  1071 1515 CA				dex
  1072 1516 4C 31 15			jmp l_0326
  1073 1519			l_0310
  1074
  1075 				; optimize OK (ai.inc), line = 9
  1076
  1077 1519 A5 5D			lda AVAILDIR
  1078 151B 8D CA 1A			sta @CASETMP_0003
  1079 151E C9 01			cmp #$01
  1080 1520 D0 07			jne l_0331
  1081 1522			@
  1082
  1083 				; optimize OK (ai.inc), line = 10
  1084
  1085 1522 A9 01			lda #$01
  1086 1524 85 5C			sta NEWDIR
  1087
  1088 1526 4C 31 15			jmp a_0003
  1089 1529			l_0331
  1090 1529 C9 02			cmp #$02
  1091 152B D0 04			jne l_033E
  1092 152D			@
  1093
  1094 				; optimize OK (ai.inc), line = 11
  1095
  1096 152D A9 02			lda #$02
  1097 152F 85 5C			sta NEWDIR
  1098
  1099 1531			l_033E
  1100 1531			a_0003
  1101 1531			l_0326
  1102
  1103 				; optimize OK (ai.inc), line = 14
  1104
  1105 1531 A5 5D			lda AVAILDIR
  1106 1533 C9 0C			cmp #$0C
  1107 1535 D0 25			jne l_035A
  1108 1537 A9 00			lda #$00
  1109 1539 20 40 11			jsr SYSTEM.RANDOM_006C
  1110 153C B5 18			lda :STACKORIGIN,x
  1111 153E 29 01			and #$01
  1112 1540 95 18			sta :STACKORIGIN,x
  1113 1542 E8				inx
  1114 1543 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1115 1547 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1116 154B 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1117 154D 20 44 10			jsr addAX_CX
  1118 1550 CA				dex
  1119 1551 B4 18			ldy :STACKORIGIN,x
  1120 1553 B9 40 10			lda adr.DIRECTION,y
  1121 1556 85 5C			sta NEWDIR
  1122 1558 CA				dex
  1123 1559 4C 74 15			jmp l_0374
  1124 155C			l_035A
  1125
  1126 				; optimize OK (ai.inc), line = 16
  1127
  1128 155C A5 5D			lda AVAILDIR
  1129 155E 8D CB 1A			sta @CASETMP_0004
  1130 1561 C9 04			cmp #$04
  1131 1563 D0 07			jne l_037F
  1132 1565			@
  1133
  1134 				; optimize OK (ai.inc), line = 17
  1135
  1136 1565 A9 04			lda #$04
  1137 1567 85 5C			sta NEWDIR
  1138
  1139 1569 4C 74 15			jmp a_0004
  1140 156C			l_037F
  1141 156C C9 08			cmp #$08
  1142 156E D0 04			jne l_038C
  1143 1570			@
  1144
  1145 				; optimize OK (ai.inc), line = 18
  1146
  1147 1570 A9 08			lda #$08
  1148 1572 85 5C			sta NEWDIR
  1149
  1150 1574			l_038C
  1151 1574			a_0004
  1152 1574			l_0374
  1153 1574			l_02FE
  1154
  1155 				; ------------------------------------------------------------
  1156
  1157 = 1ACA			@CASETMP_0003	= DATAORIGIN+$0042
  1158 = 1ACB			@CASETMP_0004	= DATAORIGIN+$0043
  1159
  1160 = 1ACA			@VarData	= @CASETMP_0003
  1161 = 0002			@VarDataSize	= 2
  1162
  1163 1574			@exit
  1164 					.ifdef @new
  1165 					lda <@VarData
  1166 					sta :ztmp
  1167 					lda >@VarData
  1168 					ldy #@VarDataSize-1
  1169 					jmp @FreeMem
  1170 					els
  1171 1574 60				rts						; ret
  1172 					eif
  1173 				.endl
  1174
  1175 1575			.local	AIBULLY						; PROCEDURE
  1176
  1177 				; optimize OK (ai.inc), line = 28
  1178
  1179 1575 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1180 157F A0 04			ldy #PLY.DIR-DATAORIGIN
  1181 1581 B1 12			lda (:bp2),y
  1182 1583 85 58			sta T0B
  1183
  1184 				; optimize OK (ai.inc), line = 30
  1185
  1186 1585 A0 01			ldy #PLY.Y-DATAORIGIN
  1187 1587 AD 9C 1A			lda PLAYER1.Y
  1188 158A D1 12			cmp (:bp2),y
  1189 158C B0 07			jcs l_03B4
  1190 158E A9 01			lda #$01
  1191 1590 85 58			sta T0B
  1192 1592 4C 99 15			jmp l_03C2
  1193 1595			l_03B4
  1194 1595 A9 02			lda #$02
  1195 1597 85 58			sta T0B
  1196 1599			l_03C2
  1197
  1198 				; optimize OK (ai.inc), line = 31
  1199
  1200 1599 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1201 15A3 A0 01			ldy #PLY.Y-DATAORIGIN
  1202 15A5 B1 12			lda (:bp2),y
  1203 15A7 CD 9C 1A			cmp PLAYER1.Y
  1204 15AA F0 06			jeq l_03ECx
  1205 15AC A5 5D			lda AVAILDIR
  1206 15AE 25 58			and T0B
  1207 15B0 D0 1E			jne l_03EC
  1208 15B2			l_03ECx
  1209
  1210 				; optimize OK (ai.inc), line = 32
  1211
  1212 15B2 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1213 15BC A0 00			ldy #PLY.X-DATAORIGIN
  1214 15BE AD 9B 1A			lda PLAYER1.X
  1215 15C1 D1 12			cmp (:bp2),y
  1216 15C3 B0 07			jcs l_0401
  1217 15C5 A9 04			lda #$04
  1218 15C7 85 58			sta T0B
  1219 15C9 4C D0 15			jmp l_040F
  1220 15CC			l_0401
  1221 15CC A9 08			lda #$08
  1222 15CE 85 58			sta T0B
  1223 15D0			l_040F
  1224 15D0			l_03EC
  1225
  1226 				; optimize OK (ai.inc), line = 35
  1227
  1228 15D0 A5 5D			lda AVAILDIR
  1229 15D2 25 58			and T0B
  1230 15D4 F0 07			jeq l_042D
  1231 15D6 A5 58			lda T0B
  1232 15D8 85 5C			sta NEWDIR
  1233 15DA 4C E0 15			jmp l_043D
  1234 15DD			l_042D
  1235
  1236 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 36
  1237
  1238 15DD 20 E4 14			jsr AISTRAIGHT
  1239 15E0			l_043D
  1240 15E0			@exit
  1241 					.ifdef @new
  1242 					lda <@VarData
  1243 					sta :ztmp
  1244 					lda >@VarData
  1245 					ldy #@VarDataSize-1
  1246 					jmp @FreeMem
  1247 					els
  1248 15E0 60				rts						; ret
  1249 					eif
  1250 				.endl
  1251
  1252 15E1			.local	AIMIRROR					; PROCEDURE
  1253
  1254 				; optimize OK (ai.inc), line = 43
  1255
  1256 15E1 AD 9F 1A			lda PLAYER1.DIR
  1257 15E4 8D CC 1A			sta @CASETMP_0005
  1258 15E7 C9 01			cmp #$01
  1259 15E9 D0 07			jne l_044D
  1260 15EB			@
  1261
  1262 				; optimize OK (ai.inc), line = 44
  1263
  1264 15EB A9 02			lda #$02
  1265 15ED 85 58			sta T0B
  1266
  1267 15EF 4C 10 16			jmp a_0005
  1268 15F2			l_044D
  1269 15F2 C9 02			cmp #$02
  1270 15F4 D0 07			jne l_045A
  1271 15F6			@
  1272
  1273 				; optimize OK (ai.inc), line = 45
  1274
  1275 15F6 A9 01			lda #$01
  1276 15F8 85 58			sta T0B
  1277
  1278 15FA 4C 10 16			jmp a_0005
  1279 15FD			l_045A
  1280 15FD C9 04			cmp #$04
  1281 15FF D0 07			jne l_0467
  1282 1601			@
  1283
  1284 				; optimize OK (ai.inc), line = 46
  1285
  1286 1601 A9 08			lda #$08
  1287 1603 85 58			sta T0B
  1288
  1289 1605 4C 10 16			jmp a_0005
  1290 1608			l_0467
  1291 1608 C9 08			cmp #$08
  1292 160A D0 04			jne l_0474
  1293 160C			@
  1294
  1295 				; optimize OK (ai.inc), line = 47
  1296
  1297 160C A9 04			lda #$04
  1298 160E 85 58			sta T0B
  1299
  1300 1610			l_0474
  1301 1610			a_0005
  1302
  1303 				; optimize OK (ai.inc), line = 50
  1304
  1305 1610 A5 5D			lda AVAILDIR
  1306 1612 25 58			and T0B
  1307 1614 F0 07			jeq l_0498
  1308 1616 A5 58			lda T0B
  1309 1618 85 5C			sta NEWDIR
  1310 161A 4C 20 16			jmp l_04A8
  1311 161D			l_0498
  1312
  1313 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 51
  1314
  1315 161D 20 E4 14			jsr AISTRAIGHT
  1316 1620			l_04A8
  1317
  1318 				; ------------------------------------------------------------
  1319
  1320 = 1ACC			@CASETMP_0005	= DATAORIGIN+$0044
  1321
  1322 = 1ACC			@VarData	= @CASETMP_0005
  1323 = 0001			@VarDataSize	= 1
  1324
  1325 1620			@exit
  1326 					.ifdef @new
  1327 					lda <@VarData
  1328 					sta :ztmp
  1329 					lda >@VarData
  1330 					ldy #@VarDataSize-1
  1331 					jmp @FreeMem
  1332 					els
  1333 1620 60				rts						; ret
  1334 					eif
  1335 				.endl
  1336
  1337 1621			.local	AIRANDOM					; PROCEDURE
  1338
  1339 				; optimize OK (ai.inc), line = 58
  1340
  1341 1621 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1342 162B A0 04			ldy #PLY.DIR-DATAORIGIN
  1343 162D B1 12			lda (:bp2),y
  1344 162F 85 58			sta T0B
  1345
  1346 				; optimize OK (ai.inc), line = 59
  1347
  1348 1631 A9 00			lda #$00
  1349 1633 20 40 11			jsr SYSTEM.RANDOM_006C
  1350 1636 CA				dex
  1351 1637 B5 19			lda :STACKORIGIN+1,x
  1352 1639 29 03			and #$03
  1353 163B D0 0D			jne l_04C8
  1354 163D			@
  1355 163D A9 04			lda #$04
  1356 163F 20 40 11			jsr SYSTEM.RANDOM_006C
  1357 1642 B4 18			ldy :STACKORIGIN,x
  1358 1644 B9 40 10			lda adr.DIRECTION,y
  1359 1647 85 58			sta T0B
  1360 1649 CA				dex
  1361 164A			l_04C8
  1362
  1363 				; optimize OK (ai.inc), line = 61
  1364
  1365 164A A5 5D			lda AVAILDIR
  1366 164C 25 58			and T0B
  1367 164E F0 07			jeq l_04EB
  1368 1650 A5 58			lda T0B
  1369 1652 85 5C			sta NEWDIR
  1370 1654 4C 5A 16			jmp l_04FB
  1371 1657			l_04EB
  1372
  1373 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 62
  1374
  1375 1657 20 E4 14			jsr AISTRAIGHT
  1376 165A			l_04FB
  1377 165A			@exit
  1378 					.ifdef @new
  1379 					lda <@VarData
  1380 					sta :ztmp
  1381 					lda >@VarData
  1382 					ldy #@VarDataSize-1
  1383 					jmp @FreeMem
  1384 					els
  1385 165A 60				rts						; ret
  1386 					eif
  1387 				.endl
  1388
  1389 165B			.local	AIMAD						; PROCEDURE
  1390
  1391 				; optimize OK (ai.inc), line = 69
  1392
  1393 165B A9 04			lda #$04
  1394 165D 20 40 11			jsr SYSTEM.RANDOM_006C
  1395 1660 B5 18			lda :STACKORIGIN,x
  1396 1662 18 69 01			add #$01
  1397 1665 85 58			sta T0B
  1398 1667 CA				dex
  1399
  1400 				; optimize OK (ai.inc), line = 70
  1401
  1402 1668 A5 58			lda T0B
  1403 166A 8D CD 1A			sta @CASETMP_0006
  1404 166D C9 01			cmp #$01
  1405 166F D0 06			jne l_0514
  1406 1671			@
  1407
  1408 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 71
  1409
  1410 1671 20 E4 14			jsr AISTRAIGHT
  1411 1674 4C 92 16			jmp a_0006
  1412 1677			l_0514
  1413 1677 C9 02			cmp #$02
  1414 1679 D0 06			jne l_051E
  1415 167B			@
  1416
  1417 				; optimize FAIL ('AIBULLY', ai.inc), line = 72
  1418
  1419 167B 20 75 15			jsr AIBULLY
  1420 167E 4C 92 16			jmp a_0006
  1421 1681			l_051E
  1422 1681 C9 03			cmp #$03
  1423 1683 D0 06			jne l_0528
  1424 1685			@
  1425
  1426 				; optimize FAIL ('AIMIRROR', ai.inc), line = 73
  1427
  1428 1685 20 E1 15			jsr AIMIRROR
  1429 1688 4C 92 16			jmp a_0006
  1430 168B			l_0528
  1431 168B C9 04			cmp #$04
  1432 168D D0 03			jne l_0532
  1433 168F			@
  1434
  1435 				; optimize FAIL ('AIRANDOM', ai.inc), line = 74
  1436
  1437 168F 20 21 16			jsr AIRANDOM
  1438 1692			l_0532
  1439 1692			a_0006
  1440
  1441 				; ------------------------------------------------------------
  1442
  1443 = 1ACD			@CASETMP_0006	= DATAORIGIN+$0045
  1444
  1445 = 1ACD			@VarData	= @CASETMP_0006
  1446 = 0001			@VarDataSize	= 1
  1447
  1448 1692			@exit
  1449 					.ifdef @new
  1450 					lda <@VarData
  1451 					sta :ztmp
  1452 					lda >@VarData
  1453 					ldy #@VarDataSize-1
  1454 					jmp @FreeMem
  1455 					els
  1456 1692 60				rts						; ret
  1457 					eif
  1458 				.endl
  1459
  1460 1693			.local	HUMAN						; PROCEDURE
  1461
  1462 				; optimize OK (main.pas), line = 14
  1463
  1464 1693 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1465 169D A0 04			ldy #PLY.DIR-DATAORIGIN
  1466 169F B1 12			lda (:bp2),y
  1467 16A1 85 5C			sta NEWDIR
  1468
  1469 				; optimize OK (main.pas), line = 15
  1470
  1471 16A3 A9 02			lda #$02
  1472 16A5 8D 08 FF			sta JOY
  1473 16A8 A9 FF			lda #$FF
  1474 16AA 8D 30 FD			sta KEY_PIO
  1475 16AD AD 08 FF			lda JOY
  1476 16B0 49 FF			eor #$FF
  1477 16B2 85 58			sta T0B
  1478
  1479 				; optimize OK (main.pas), line = 17
  1480
  1481 16B4 8D CE 1A			sta @CASETMP_0007
  1482 16B7 C9 01			cmp #$01
  1483 16B9 D0 19			jne l_0562
  1484 16BB			@
  1485
  1486 				; optimize OK (main.pas), line = 18
  1487
  1488 16BB AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1489 16C5 A0 04			ldy #PLY.DIR-DATAORIGIN
  1490 16C7 B1 12			lda (:bp2),y
  1491 16C9 C9 02			cmp #$02
  1492 16CB F0 04			jeq l_0574
  1493 16CD A9 01			lda #$01
  1494 16CF 85 5C			sta NEWDIR
  1495 16D1			l_0574
  1496
  1497 16D1 4C 28 17			jmp a_0007
  1498 16D4			l_0562
  1499 16D4 C9 02			cmp #$02
  1500 16D6 D0 19			jne l_0584
  1501 16D8			@
  1502
  1503 				; optimize OK (main.pas), line = 19
  1504
  1505 16D8 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1506 16E2 A0 04			ldy #PLY.DIR-DATAORIGIN
  1507 16E4 B1 12			lda (:bp2),y
  1508 16E6 C9 01			cmp #$01
  1509 16E8 F0 04			jeq l_0596
  1510 16EA A9 02			lda #$02
  1511 16EC 85 5C			sta NEWDIR
  1512 16EE			l_0596
  1513
  1514 16EE 4C 28 17			jmp a_0007
  1515 16F1			l_0584
  1516 16F1 C9 04			cmp #$04
  1517 16F3 D0 19			jne l_05A6
  1518 16F5			@
  1519
  1520 				; optimize OK (main.pas), line = 20
  1521
  1522 16F5 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1523 16FF A0 04			ldy #PLY.DIR-DATAORIGIN
  1524 1701 B1 12			lda (:bp2),y
  1525 1703 C9 08			cmp #$08
  1526 1705 F0 04			jeq l_05B8
  1527 1707 A9 04			lda #$04
  1528 1709 85 5C			sta NEWDIR
  1529 170B			l_05B8
  1530
  1531 170B 4C 28 17			jmp a_0007
  1532 170E			l_05A6
  1533 170E C9 08			cmp #$08
  1534 1710 D0 16			jne l_05C8
  1535 1712			@
  1536
  1537 				; optimize OK (main.pas), line = 21
  1538
  1539 1712 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1540 171C A0 04			ldy #PLY.DIR-DATAORIGIN
  1541 171E B1 12			lda (:bp2),y
  1542 1720 C9 04			cmp #$04
  1543 1722 F0 04			jeq l_05DA
  1544 1724 A9 08			lda #$08
  1545 1726 85 5C			sta NEWDIR
  1546 1728			l_05DA
  1547
  1548 1728			l_05C8
  1549 1728			a_0007
  1550
  1551 				; optimize OK (main.pas), line = 24
  1552
  1553 1728 A5 5C			lda NEWDIR
  1554 172A 25 5D			and AVAILDIR
  1555 172C D0 19			jne l_0601
  1556
  1557 				; optimize OK (main.pas), line = 25
  1558
  1559 172E AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1560 1738 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1561 173A A9 01			lda #$01
  1562 173C 91 12			sta (:bp2),y
  1563 173E A0 02			ldy #PLY.HEAD-DATAORIGIN
  1564 1740 A9 2A			lda #$2A
  1565 1742 91 12			sta (:bp2),y
  1566 1744 CE 98 1A			dec ALIVE
  1567 1747			l_0601
  1568
  1569 				; ------------------------------------------------------------
  1570
  1571 = 1ACE			@CASETMP_0007	= DATAORIGIN+$0046
  1572
  1573 = 1ACE			@VarData	= @CASETMP_0007
  1574 = 0001			@VarDataSize	= 1
  1575
  1576 1747			@exit
  1577 					.ifdef @new
  1578 					lda <@VarData
  1579 					sta :ztmp
  1580 					lda >@VarData
  1581 					ldy #@VarDataSize-1
  1582 					jmp @FreeMem
  1583 					els
  1584 1747 60				rts						; ret
  1585 					eif
  1586 				.endl
  1587
  1588 1748			.local	PLAYERMOVE					; PROCEDURE
  1589
  1590 				; optimize OK (main.pas), line = 33
  1591
  1592 1748 AD CF 1A			lda P
  1593 174B 8D 7E 1A			sta PLY
  1594 174E 85 12			sta :bp2
  1595 1750 AD D0 1A			lda P+1
  1596 1753 8D 7F 1A			sta PLY+1
  1597 1756 85 13			sta :bp2+1
  1598 				; optimize OK (main.pas), line = 35
  1599 1758 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1600 175A B1 12			lda (:bp2),y
  1601 175C F0 03 4C 56 19		jne l_0628
  1602
  1603 				; optimize OK (main.pas), line = 37
  1604
  1605 1761 A0 00			ldy #PLY.X-DATAORIGIN
  1606 1763 B1 12			lda (:bp2),y
  1607 1765 8D BF 1A			sta CHECKAVAILDIR.X
  1608 1768 A0 01			ldy #PLY.Y-DATAORIGIN
  1609 176A B1 12			lda (:bp2),y
  1610 176C 8D C0 1A			sta CHECKAVAILDIR.Y
  1611 176F 20 01 12			jsr CHECKAVAILDIR
  1612
  1613 				; optimize OK (main.pas), line = 39
  1614
  1615 1772 A5 5D			lda AVAILDIR
  1616 1774 D0 36			jne l_0642
  1617
  1618 				; optimize OK (main.pas), line = 40
  1619
  1620 1776 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1621 1780 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1622 1782 A9 01			lda #$01
  1623 1784 91 12			sta (:bp2),y
  1624 1786 CE 98 1A			dec ALIVE
  1625
  1626 				; optimize OK (main.pas), line = 41
  1627
  1628 1789 A0 00			ldy #PLY.X-DATAORIGIN
  1629 178B B1 12			lda (:bp2),y
  1630 178D 8D BB 1A			sta PUTCHAR.X
  1631 1790 A0 01			ldy #PLY.Y-DATAORIGIN
  1632 1792 B1 12			lda (:bp2),y
  1633 1794 8D BC 1A			sta PUTCHAR.Y
  1634 1797 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1635 1799 B1 12			lda (:bp2),y
  1636 179B 18 69 80			add #$80
  1637 179E 8D BE 1A			sta PUTCHAR.C
  1638 17A1 A9 57			lda #$57
  1639 17A3 8D BD 1A			sta PUTCHAR.V
  1640 17A6 20 71 11			jsr PUTCHAR
  1641 17A9 4C 56 19			jmp l_0663
  1642 17AC			l_0642
  1643
  1644 				; optimize OK (main.pas), line = 44
  1645
  1646 17AC AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1647 17B6 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1648 17B8 B1 12			lda (:bp2),y
  1649 17BA 8D D1 1A			sta @CASETMP_0008
  1650 17BD C9 00			cmp #$00
  1651 17BF D0 06			jne l_066E
  1652 17C1			@
  1653
  1654 				; optimize FAIL ('HUMAN', main.pas), line = 45
  1655
  1656 17C1 20 93 16			jsr HUMAN
  1657 17C4 4C F6 17			jmp a_0008
  1658 17C7			l_066E
  1659 17C7 C9 01			cmp #$01
  1660 17C9 D0 06			jne l_0678
  1661 17CB			@
  1662
  1663 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 46
  1664
  1665 17CB 20 E4 14			jsr AISTRAIGHT
  1666 17CE 4C F6 17			jmp a_0008
  1667 17D1			l_0678
  1668 17D1 C9 02			cmp #$02
  1669 17D3 D0 06			jne l_0682
  1670 17D5			@
  1671
  1672 				; optimize FAIL ('AIBULLY', main.pas), line = 47
  1673
  1674 17D5 20 75 15			jsr AIBULLY
  1675 17D8 4C F6 17			jmp a_0008
  1676 17DB			l_0682
  1677 17DB C9 03			cmp #$03
  1678 17DD D0 06			jne l_068C
  1679 17DF			@
  1680
  1681 				; optimize FAIL ('AIMIRROR', main.pas), line = 48
  1682
  1683 17DF 20 E1 15			jsr AIMIRROR
  1684 17E2 4C F6 17			jmp a_0008
  1685 17E5			l_068C
  1686 17E5 C9 04			cmp #$04
  1687 17E7 D0 06			jne l_0696
  1688 17E9			@
  1689
  1690 				; optimize FAIL ('AIRANDOM', main.pas), line = 49
  1691
  1692 17E9 20 21 16			jsr AIRANDOM
  1693 17EC 4C F6 17			jmp a_0008
  1694 17EF			l_0696
  1695 17EF C9 07			cmp #$07
  1696 17F1 D0 03			jne l_06A0
  1697 17F3			@
  1698
  1699 				; optimize FAIL ('AIMAD', main.pas), line = 50
  1700
  1701 17F3 20 5B 16			jsr AIMAD
  1702 17F6			l_06A0
  1703 17F6			a_0008
  1704
  1705 				; optimize OK (main.pas), line = 53
  1706
  1707 17F6 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1708 1800 A0 04			ldy #PLY.DIR-DATAORIGIN
  1709 1802 B1 12			lda (:bp2),y
  1710 1804 C5 5C			cmp NEWDIR
  1711 1806 D0 14			jne l_06BF
  1712
  1713 				; optimize OK (main.pas), line = 54
  1714
  1715 1808 A5 5C			lda NEWDIR
  1716 180A 29 0C			and #$0C
  1717 180C F0 07			jeq l_06D6
  1718 180E A9 40			lda #$40
  1719 1810 85 58			sta T0B
  1720 1812 4C 19 18			jmp l_06E4
  1721 1815			l_06D6
  1722 1815 A9 42			lda #$42
  1723 1817 85 58			sta T0B
  1724 1819			l_06E4
  1725 1819 4C 8C 18			jmp l_06F1
  1726 181C			l_06BF
  1727
  1728 				; optimize OK (main.pas), line = 56
  1729
  1730 181C AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1731 1826 A0 04			ldy #PLY.DIR-DATAORIGIN
  1732 1828 B1 12			lda (:bp2),y
  1733 182A 29 0A			and #$0A
  1734 182C F0 0A			jeq l_0717
  1735 182E A5 5C			lda NEWDIR
  1736 1830 29 05			and #$05
  1737 1832 F0 04			jeq l_0717
  1738 1834 A9 7D			lda #$7D
  1739 1836 85 58			sta T0B
  1740 1838			l_0717
  1741
  1742 				; optimize OK (main.pas), line = 57
  1743
  1744 1838 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1745 1842 A0 04			ldy #PLY.DIR-DATAORIGIN
  1746 1844 B1 12			lda (:bp2),y
  1747 1846 29 09			and #$09
  1748 1848 F0 0A			jeq l_0744
  1749 184A A5 5C			lda NEWDIR
  1750 184C 29 06			and #$06
  1751 184E F0 04			jeq l_0744
  1752 1850 A9 6E			lda #$6E
  1753 1852 85 58			sta T0B
  1754 1854			l_0744
  1755
  1756 				; optimize OK (main.pas), line = 58
  1757
  1758 1854 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1759 185E A0 04			ldy #PLY.DIR-DATAORIGIN
  1760 1860 B1 12			lda (:bp2),y
  1761 1862 29 06			and #$06
  1762 1864 F0 0A			jeq l_0771
  1763 1866 A5 5C			lda NEWDIR
  1764 1868 29 09			and #$09
  1765 186A F0 04			jeq l_0771
  1766 186C A9 6D			lda #$6D
  1767 186E 85 58			sta T0B
  1768 1870			l_0771
  1769
  1770 				; optimize OK (main.pas), line = 59
  1771
  1772 1870 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1773 187A A0 04			ldy #PLY.DIR-DATAORIGIN
  1774 187C B1 12			lda (:bp2),y
  1775 187E 29 05			and #$05
  1776 1880 F0 0A			jeq l_079E
  1777 1882 A5 5C			lda NEWDIR
  1778 1884 29 0A			and #$0A
  1779 1886 F0 04			jeq l_079E
  1780 1888 A9 70			lda #$70
  1781 188A 85 58			sta T0B
  1782 188C			l_079E
  1783 188C			l_06F1
  1784
  1785 				; optimize OK (main.pas), line = 61
  1786
  1787 188C AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1788 1896 A0 00			ldy #PLY.X-DATAORIGIN
  1789 1898 B1 12			lda (:bp2),y
  1790 189A 8D BB 1A			sta PUTCHAR.X
  1791 189D A0 01			ldy #PLY.Y-DATAORIGIN
  1792 189F B1 12			lda (:bp2),y
  1793 18A1 8D BC 1A			sta PUTCHAR.Y
  1794 18A4 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1795 18A6 B1 12			lda (:bp2),y
  1796 18A8 8D BE 1A			sta PUTCHAR.C
  1797 18AB A5 58			lda T0B
  1798 18AD 8D BD 1A			sta PUTCHAR.V
  1799 18B0 20 71 11			jsr PUTCHAR
  1800
  1801 				; optimize OK (main.pas), line = 63
  1802
  1803 18B3 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1804 18BD A0 04			ldy #PLY.DIR-DATAORIGIN
  1805 18BF A5 5C			lda NEWDIR
  1806 18C1 91 12			sta (:bp2),y
  1807
  1808 				; optimize OK (main.pas), line = 65
  1809
  1810 18C3 A5 5C			lda NEWDIR
  1811 18C5 8D D2 1A			sta @CASETMP_0009
  1812 18C8 C9 01			cmp #$01
  1813 18CA D0 16			jne l_07C3
  1814 18CC			@
  1815
  1816 				; optimize OK (main.pas), line = 66
  1817
  1818 18CC AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1819 18D6 A0 01			ldy #PLY.Y-DATAORIGIN
  1820 18D8 B1 12			lda (:bp2),y
  1821 18DA 38 E9 01			sub #$01
  1822 18DD 91 12			sta (:bp2),y
  1823
  1824 18DF 4C 2D 19			jmp a_0009
  1825 18E2			l_07C3
  1826 18E2 C9 02			cmp #$02
  1827 18E4 D0 16			jne l_07CD
  1828 18E6			@
  1829
  1830 				; optimize OK (main.pas), line = 67
  1831
  1832 18E6 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1833 18F0 A0 01			ldy #PLY.Y-DATAORIGIN
  1834 18F2 B1 12			lda (:bp2),y
  1835 18F4 18 69 01			add #$01
  1836 18F7 91 12			sta (:bp2),y
  1837
  1838 18F9 4C 2D 19			jmp a_0009
  1839 18FC			l_07CD
  1840 18FC C9 04			cmp #$04
  1841 18FE D0 16			jne l_07D7
  1842 1900			@
  1843
  1844 				; optimize OK (main.pas), line = 68
  1845
  1846 1900 AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1847 190A A0 00			ldy #PLY.X-DATAORIGIN
  1848 190C B1 12			lda (:bp2),y
  1849 190E 38 E9 01			sub #$01
  1850 1911 91 12			sta (:bp2),y
  1851
  1852 1913 4C 2D 19			jmp a_0009
  1853 1916			l_07D7
  1854 1916 C9 08			cmp #$08
  1855 1918 D0 13			jne l_07E1
  1856 191A			@
  1857
  1858 				; optimize OK (main.pas), line = 69
  1859
  1860 191A AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1861 1924 A0 00			ldy #PLY.X-DATAORIGIN
  1862 1926 B1 12			lda (:bp2),y
  1863 1928 18 69 01			add #$01
  1864 192B 91 12			sta (:bp2),y
  1865
  1866 192D			l_07E1
  1867 192D			a_0009
  1868
  1869 				; optimize OK (main.pas), line = 72
  1870
  1871 192D AC 7E 1A 84 12 AC + 	mwy PLY :bp2
  1872 1937 A0 00			ldy #PLY.X-DATAORIGIN
  1873 1939 B1 12			lda (:bp2),y
  1874 193B 8D BB 1A			sta PUTCHAR.X
  1875 193E A0 01			ldy #PLY.Y-DATAORIGIN
  1876 1940 B1 12			lda (:bp2),y
  1877 1942 8D BC 1A			sta PUTCHAR.Y
  1878 1945 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1879 1947 B1 12			lda (:bp2),y
  1880 1949 8D BD 1A			sta PUTCHAR.V
  1881 194C A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1882 194E B1 12			lda (:bp2),y
  1883 1950 8D BE 1A			sta PUTCHAR.C
  1884 1953 20 71 11			jsr PUTCHAR
  1885 1956			l_0663
  1886 1956			l_0628
  1887
  1888 				; ------------------------------------------------------------
  1889
  1890 = 1ACF			P	= DATAORIGIN+$0047
  1891 = 1AD1			@CASETMP_0008	= DATAORIGIN+$0049
  1892 = 1AD2			@CASETMP_0009	= DATAORIGIN+$004A
  1893
  1894 = 1ACF			@VarData	= P
  1895 = 0004			@VarDataSize	= 4
  1896
  1897 1956			@exit
  1898 					.ifdef @new
  1899 					lda <@VarData
  1900 					sta :ztmp
  1901 					lda >@VarData
  1902 					ldy #@VarDataSize-1
  1903 					jmp @FreeMem
  1904 					els
  1905 1956 60				rts						; ret
  1906 					eif
  1907 				.endl
  1908
  1909 1957			.local	STARTSCREEN					; PROCEDURE
  1910
  1911 				; --- RepeatUntilProlog
  1912 1957			l_07FE
  1913
  1914 				; optimize OK (main.pas), line = 84
  1915
  1916 1957 A9 02			lda #$02
  1917 1959 8D 08 FF			sta JOY
  1918 195C A9 FF			lda #$FF
  1919 195E 8D 30 FD			sta KEY_PIO
  1920 1961 AD 08 FF			lda JOY
  1921 1964 49 FF			eor #$FF
  1922 1966 85 58			sta T0B
  1923
  1924 				; optimize OK (main.pas), line = 85
  1925
  1926 1968 C9 40			cmp #$40
  1927 196A D0 EB			jne l_07FE
  1928 196C			@exit
  1929 					.ifdef @new
  1930 					lda <@VarData
  1931 					sta :ztmp
  1932 					lda >@VarData
  1933 					ldy #@VarDataSize-1
  1934 					jmp @FreeMem
  1935 					els
  1936 196C 60				rts						; ret
  1937 					eif
  1938 				.endl
  1939
  1940 196D			.local	MAINLOOP					; PROCEDURE
  1941
  1942 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 92
  1943
  1944 196D 20 BF 12			jsr INITPLAYFIELD
  1945
  1946 				; optimize FAIL ('STARTSCREEN', main.pas), line = 93
  1947
  1948 1970 20 57 19			jsr STARTSCREEN
  1949
  1950 				; optimize OK (main.pas), line = 95
  1951
  1952 1973 A9 FF			lda #$FF
  1953 1975 8D 98 1A			sta ALIVE
  1954
  1955 				; optimize OK (main.pas), line = 96
  1956
  1957 1978 AD A2 1A			lda PLAYER1.ISDEAD
  1958 197B D0 03			jne l_0836
  1959 197D EE 98 1A			inc ALIVE
  1960 1980			l_0836
  1961
  1962 				; optimize OK (main.pas), line = 97
  1963
  1964 1980 AD AA 1A			lda PLAYER2.ISDEAD
  1965 1983 D0 03			jne l_084C
  1966 1985 EE 98 1A			inc ALIVE
  1967 1988			l_084C
  1968
  1969 				; optimize OK (main.pas), line = 98
  1970
  1971 1988 AD B2 1A			lda PLAYER3.ISDEAD
  1972 198B D0 03			jne l_0862
  1973 198D EE 98 1A			inc ALIVE
  1974 1990			l_0862
  1975
  1976 				; optimize OK (main.pas), line = 99
  1977
  1978 1990 AD BA 1A			lda PLAYER4.ISDEAD
  1979 1993 D0 03			jne l_0878
  1980 1995 EE 98 1A			inc ALIVE
  1981 1998			l_0878
  1982
  1983 				; --- RepeatUntilProlog
  1984 1998			l_0880
  1985
  1986 				; optimize OK (main.pas), line = 102
  1987
  1988 1998 A9 03			lda #$03
  1989 199A 8D 94 1A			sta SYSTEM.PAUSE_006B.N
  1990 199D A9 00			lda #$00
  1991 199F 8D 95 1A			sta SYSTEM.PAUSE_006B.N+1
  1992 19A2 20 23 11			jsr SYSTEM.PAUSE_006B
  1993
  1994 				; optimize OK (main.pas), line = 103
  1995
  1996 19A5 AD 80 1A			lda PLAYER1
  1997 19A8 8D CF 1A			sta PLAYERMOVE.P
  1998 19AB AD 81 1A			lda PLAYER1+1
  1999 19AE 8D D0 1A			sta PLAYERMOVE.P+1
  2000 19B1 20 48 17			jsr PLAYERMOVE
  2001 19B4 AD 82 1A			lda PLAYER2
  2002 19B7 8D CF 1A			sta PLAYERMOVE.P
  2003 19BA AD 83 1A			lda PLAYER2+1
  2004 19BD 8D D0 1A			sta PLAYERMOVE.P+1
  2005 19C0 20 48 17			jsr PLAYERMOVE
  2006
  2007 				; optimize OK (main.pas), line = 104
  2008
  2009 19C3 AD 84 1A			lda PLAYER3
  2010 19C6 8D CF 1A			sta PLAYERMOVE.P
  2011 19C9 AD 85 1A			lda PLAYER3+1
  2012 19CC 8D D0 1A			sta PLAYERMOVE.P+1
  2013 19CF 20 48 17			jsr PLAYERMOVE
  2014 19D2 AD 86 1A			lda PLAYER4
  2015 19D5 8D CF 1A			sta PLAYERMOVE.P
  2016 19D8 AD 87 1A			lda PLAYER4+1
  2017 19DB 8D D0 1A			sta PLAYERMOVE.P+1
  2018 19DE 20 48 17			jsr PLAYERMOVE
  2019
  2020 				; optimize OK (main.pas), line = 105
  2021
  2022 19E1 AD 98 1A			lda ALIVE
  2023 19E4 F0 04			jeq l_0880x
  2024 19E6 C9 FF			cmp #$FF
  2025 19E8 D0 AE			jne l_0880
  2026 19EA			l_0880x
  2027
  2028 				; optimize OK (main.pas), line = 107
  2029
  2030 19EA AD A2 1A			lda PLAYER1.ISDEAD
  2031 19ED D0 03			jne l_08B6
  2032 19EF EE A1 1A			inc PLAYER1.SCORE
  2033 19F2			l_08B6
  2034
  2035 				; optimize OK (main.pas), line = 108
  2036
  2037 19F2 AD AA 1A			lda PLAYER2.ISDEAD
  2038 19F5 D0 03			jne l_08CC
  2039 19F7 EE A9 1A			inc PLAYER2.SCORE
  2040 19FA			l_08CC
  2041
  2042 				; optimize OK (main.pas), line = 109
  2043
  2044 19FA AD B2 1A			lda PLAYER3.ISDEAD
  2045 19FD D0 03			jne l_08E2
  2046 19FF EE B1 1A			inc PLAYER3.SCORE
  2047 1A02			l_08E2
  2048
  2049 				; optimize OK (main.pas), line = 110
  2050
  2051 1A02 AD BA 1A			lda PLAYER4.ISDEAD
  2052 1A05 D0 03			jne l_08F8
  2053 1A07 EE B9 1A			inc PLAYER4.SCORE
  2054 1A0A			l_08F8
  2055
  2056 				; optimize OK (main.pas), line = 112
  2057
  2058 1A0A A9 64			lda #$64
  2059 1A0C 8D 94 1A			sta SYSTEM.PAUSE_006B.N
  2060 1A0F A9 00			lda #$00
  2061 1A11 8D 95 1A			sta SYSTEM.PAUSE_006B.N+1
  2062 1A14 20 23 11			jsr SYSTEM.PAUSE_006B
  2063 1A17			@exit
  2064 					.ifdef @new
  2065 					lda <@VarData
  2066 					sta :ztmp
  2067 					lda >@VarData
  2068 					ldy #@VarDataSize-1
  2069 					jmp @FreeMem
  2070 					els
  2071 1A17 60				rts						; ret
  2072 					eif
  2073 				.endl
  2074 1A18			l_0007
  2075
  2076 				; --- RepeatUntilProlog
  2077 1A18			l_0903
  2078
  2079 				; optimize OK (main.pas), line = 119
  2080
  2081 1A18 A9 30			lda #$30
  2082 1A1A 8D A1 1A			sta PLAYER1.SCORE
  2083 1A1D 8D A9 1A			sta PLAYER2.SCORE
  2084
  2085 				; optimize OK (main.pas), line = 120
  2086
  2087 1A20 8D B1 1A			sta PLAYER3.SCORE
  2088 1A23 8D B9 1A			sta PLAYER4.SCORE
  2089
  2090 				; optimize OK (main.pas), line = 122
  2091
  2092 1A26 A9 00			lda #$00
  2093 1A28 8D 9A 1A			sta GAMEOVER
  2094
  2095 				; --- RepeatUntilProlog
  2096 1A2B			l_0918
  2097
  2098 				; optimize FAIL ('MAINLOOP', main.pas), line = 124
  2099
  2100 1A2B 20 6D 19			jsr MAINLOOP
  2101
  2102 				; optimize OK (main.pas), line = 125
  2103
  2104 1A2E AD A1 1A			lda PLAYER1.SCORE
  2105 1A31 C9 39			cmp #$39
  2106 1A33 D0 05			jne l_092B
  2107 1A35 A9 01			lda #$01
  2108 1A37 8D 9A 1A			sta GAMEOVER
  2109 1A3A			l_092B
  2110
  2111 				; optimize OK (main.pas), line = 126
  2112
  2113 1A3A AD A9 1A			lda PLAYER2.SCORE
  2114 1A3D C9 39			cmp #$39
  2115 1A3F D0 05			jne l_0944
  2116 1A41 A9 01			lda #$01
  2117 1A43 8D 9A 1A			sta GAMEOVER
  2118 1A46			l_0944
  2119
  2120 				; optimize OK (main.pas), line = 127
  2121
  2122 1A46 AD B1 1A			lda PLAYER3.SCORE
  2123 1A49 C9 39			cmp #$39
  2124 1A4B D0 05			jne l_095D
  2125 1A4D A9 01			lda #$01
  2126 1A4F 8D 9A 1A			sta GAMEOVER
  2127 1A52			l_095D
  2128
  2129 				; optimize OK (main.pas), line = 128
  2130
  2131 1A52 AD B9 1A			lda PLAYER4.SCORE
  2132 1A55 C9 39			cmp #$39
  2133 1A57 D0 05			jne l_0976
  2134 1A59 A9 01			lda #$01
  2135 1A5B 8D 9A 1A			sta GAMEOVER
  2136 1A5E			l_0976
  2137
  2138 				; optimize OK (main.pas), line = 129
  2139
  2140 1A5E AD 9A 1A			lda GAMEOVER
  2141 1A61 F0 C8			jeq l_0918
  2142
  2143 				; optimize FAIL ('SHOWSCORE', main.pas), line = 130
  2144
  2145 1A63 20 9C 11			jsr SHOWSCORE
  2146
  2147 				; optimize OK (main.pas), line = 132
  2148
  2149 1A66 A9 C8			lda #$C8
  2150 1A68 8D 94 1A			sta SYSTEM.PAUSE_006B.N
  2151 1A6B A9 00			lda #$00
  2152 1A6D 8D 95 1A			sta SYSTEM.PAUSE_006B.N+1
  2153 1A70 20 23 11			jsr SYSTEM.PAUSE_006B
  2154
  2155 				; optimize OK (main.pas), line = 133
  2156
  2157 1A73 4C 18 1A			jmp l_0903
  2158
  2159 				; ------------------------------------------------------------
  2160
  2161 = 0800			ATTRIBUTE_ADDR	= $0800
  2162 = 0C00			SCREEN_ADDR	= $0C00
  2163 = 0020			EMPTY	= $20
  2164 = 00A0			WALL	= $A0
  2165 = 0041			WALL_COLOUR	= $41
  2166 = 0030			ZERO	= $30
  2167 = 0056			OBSTACLE	= $56
  2168 = 0035			OBST_COLOUR	= $35
  2169 = 0051			PLY_HEAD	= $51
  2170 = 0057			PLY_CRASH	= $57
  2171 = 002A			PLY_CRASH_1	= $2A
  2172 = 0042			PLY_TAIL_UD	= $42
  2173 = 0040			PLY_TAIL_LR	= $40
  2174 = 007D			PLY_TAIL_RD	= $7D
  2175 = 006E			PLY_TAIL_RU	= $6E
  2176 = 006D			PLY_TAIL_LD	= $6D
  2177 = 0070			PLY_TAIL_LU	= $70
  2178 = 005F			PLY1_COLOUR	= $5F
  2179 = 005D			PLY2_COLOUR	= $5D
  2180 = 0071			PLY3_COLOUR	= $71
  2181 = 0055			PLY4_COLOUR	= $55
  2182 = 0000			PLY_CTRL	= $00
  2183 = 0001			AI_STRAIGHT	= $01
  2184 = 0002			AI_BULLY	= $02
  2185 = 0003			AI_MIRROR	= $03
  2186 = 0004			AI_RANDOM	= $04
  2187 = 0007			AI_MAD	= $07
  2188 = 0001			JOY_UP	= $01
  2189 = 0002			JOY_DOWN	= $02
  2190 = 0004			JOY_LEFT	= $04
  2191 = 0008			JOY_RIGHT	= $08
  2192 = 0040			JOY_FIRE	= $40
  2193 = 0002			JOY_SELECT_1	= $02
  2194 = 0004			JOY_SELECT_2	= $04
  2195 = 000C			LOOK_AHEAD	= $0C
  2196 = 100E			adr.MUL40	= CODEORIGIN+$0000
  2197 1A76			.var MUL40	= adr.MUL40 .word
  2198 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  2199 1A76			.var DIRECTION	= adr.DIRECTION .word
  2200 = FD30			KEY_PIO	= $FD30
  2201 = FF08			JOY	= $FF08
  2202 = FF15			BORDERCOLOR	= $FF15
  2203 = FF19			BGCOLOR	= $FF19
  2204 = 0058			T0B	= $58
  2205 = 0059			T1B	= $59
  2206 = 005A			I0B	= $5A
  2207 = 005B			I1B	= $5B
  2208 = 005C			NEWDIR	= $5C
  2209 = 005D			AVAILDIR	= $5D
  2210 = 005E			T0W	= $5E
  2211 = 0060			adr.PLY	= $60
  2212 1A76			.var PLY	= adr.PLY .word
  2213 = 1A88			PLY.X	= DATAORIGIN+$0000
  2214 = 1A89			PLY.Y	= DATAORIGIN+$0001
  2215 = 1A8A			PLY.HEAD	= DATAORIGIN+$0002
  2216 = 1A8B			PLY.COLOUR	= DATAORIGIN+$0003
  2217 = 1A8C			PLY.DIR	= DATAORIGIN+$0004
  2218 = 1A8D			PLY.BRAIN	= DATAORIGIN+$0005
  2219 = 1A8E			PLY.SCORE	= DATAORIGIN+$0006
  2220 = 1A8F			PLY.ISDEAD	= DATAORIGIN+$0007
  2221 = 1A98			ALIVE	= DATAORIGIN+$0010
  2222 = 1A99			SPEED	= DATAORIGIN+$0011
  2223 = 1A9A			GAMEOVER	= DATAORIGIN+$0012
  2224 = 1A9B			adr.PLAYER1	= [DATAORIGIN+$0013] .array [6]
  2225 1A76			.var PLAYER1	= adr.PLAYER1 .word
  2226 = 1A9B			PLAYER1.X	= DATAORIGIN+$0013
  2227 = 1A9C			PLAYER1.Y	= DATAORIGIN+$0014
  2228 = 1A9D			PLAYER1.HEAD	= DATAORIGIN+$0015
  2229 = 1A9E			PLAYER1.COLOUR	= DATAORIGIN+$0016
  2230 = 1A9F			PLAYER1.DIR	= DATAORIGIN+$0017
  2231 = 1AA0			PLAYER1.BRAIN	= DATAORIGIN+$0018
  2232 = 1AA1			PLAYER1.SCORE	= DATAORIGIN+$0019
  2233 = 1AA2			PLAYER1.ISDEAD	= DATAORIGIN+$001A
  2234 = 1AA3			adr.PLAYER2	= [DATAORIGIN+$001B] .array [6]
  2235 1A76			.var PLAYER2	= adr.PLAYER2 .word
  2236 = 1AA3			PLAYER2.X	= DATAORIGIN+$001B
  2237 = 1AA4			PLAYER2.Y	= DATAORIGIN+$001C
  2238 = 1AA5			PLAYER2.HEAD	= DATAORIGIN+$001D
  2239 = 1AA6			PLAYER2.COLOUR	= DATAORIGIN+$001E
  2240 = 1AA7			PLAYER2.DIR	= DATAORIGIN+$001F
  2241 = 1AA8			PLAYER2.BRAIN	= DATAORIGIN+$0020
  2242 = 1AA9			PLAYER2.SCORE	= DATAORIGIN+$0021
  2243 = 1AAA			PLAYER2.ISDEAD	= DATAORIGIN+$0022
  2244 = 1AAB			adr.PLAYER3	= [DATAORIGIN+$0023] .array [6]
  2245 1A76			.var PLAYER3	= adr.PLAYER3 .word
  2246 = 1AAB			PLAYER3.X	= DATAORIGIN+$0023
  2247 = 1AAC			PLAYER3.Y	= DATAORIGIN+$0024
  2248 = 1AAD			PLAYER3.HEAD	= DATAORIGIN+$0025
  2249 = 1AAE			PLAYER3.COLOUR	= DATAORIGIN+$0026
  2250 = 1AAF			PLAYER3.DIR	= DATAORIGIN+$0027
  2251 = 1AB0			PLAYER3.BRAIN	= DATAORIGIN+$0028
  2252 = 1AB1			PLAYER3.SCORE	= DATAORIGIN+$0029
  2253 = 1AB2			PLAYER3.ISDEAD	= DATAORIGIN+$002A
  2254 = 1AB3			adr.PLAYER4	= [DATAORIGIN+$002B] .array [6]
  2255 1A76			.var PLAYER4	= adr.PLAYER4 .word
  2256 = 1AB3			PLAYER4.X	= DATAORIGIN+$002B
  2257 = 1AB4			PLAYER4.Y	= DATAORIGIN+$002C
  2258 = 1AB5			PLAYER4.HEAD	= DATAORIGIN+$002D
  2259 = 1AB6			PLAYER4.COLOUR	= DATAORIGIN+$002E
  2260 = 1AB7			PLAYER4.DIR	= DATAORIGIN+$002F
  2261 = 1AB8			PLAYER4.BRAIN	= DATAORIGIN+$0030
  2262 = 1AB9			PLAYER4.SCORE	= DATAORIGIN+$0031
  2263 = 1ABA			PLAYER4.ISDEAD	= DATAORIGIN+$0032
  2264 1A76			@exit
  2265
  2266 1A76 A2 00		@halt	ldx #$00
  2267 1A78 9A				txs
  2268
  2269 1A79 60				rts
  2270
  2271 				; ------------------------------------------------------------
  2272
  2273 				; ------------------------------------------------------------
  2274
  2275 1A7A			.local	@DEFINES
  2276 1A7A			C4P
  2277 				.endl
  2278
  2279 1A7A			.local	@RESOURCE
  2280 				.endl
  2281
  2282 = 1A7A 0E 10		MUL40
  2282 = 1A7C 40 10		DIRECTION
  2282 = 1A7E 60 00		PLY
  2282 = 1A80 9B 1A		PLAYER1
  2282 = 1A82 A3 1A		PLAYER2
  2282 = 1A84 AB 1A		PLAYER3
  2282 = 1A86 B3 1A		PLAYER4
  2282 				.endl							; MAIN
  2283
  2284 				; ------------------------------------------------------------
  2285 				; ------------------------------------------------------------
  2286
  2287 				.macro	UNITINITIALIZATION
  2288 				
  2289 					.ifdef MAIN.SYSTEM.@UnitInit
  2290 					jsr MAIN.SYSTEM.@UnitInit
  2291 					eif
  2292 				.endm
  2293
  2294 				; ------------------------------------------------------------
  2295
  2296 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2297 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2297 				SYSTEM: $10D5..$1170
  2298 					eif
  2299
  2300 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2300 				CODE: $100E..$1A79
  2301
  2302 				; ------------------------------------------------------------
  2303
  2304 1A88				.align $04
  2305
  2306 1A88			DATAORIGIN
  2307 1A88 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  2308
  2309 = 0006			VARINITSIZE	= *-DATAORIGIN
  2310 = 004B			VARDATASIZE	= 75
  2311
  2312 = 1AD3			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2313
  2314 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2314 				DATA: $1A88..$1AD3
  2315
  2316 				; ------------------------------------------------------------
  2317
  2318 				.macro	STATICDATA
  2319 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  2320 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  2321 				.by  $C0 $03 $01 $02 $04 $08
  2322 				.endm
  2323
  2324 					end
