mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E 66 2C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 005D			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 2C82			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 A3			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D DF 2B E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 DF 85 02 A9 2C + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C F3 2B			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 87 2C		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 87 2C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 2C87			RESULT	= DATAORIGIN+$000B
   182
   183 = 2C87			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 034  ---------------------
   304
   305 1123 A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   306
   307 1129			@exit
   308 					.ifdef @new
   309 					lda <@VarData
   310 					sta :ztmp
   311 					lda >@VarData
   312 					ldy #@VarDataSize-1
   313 					jmp @FreeMem
   314 					els
   315 1129 60				rts						; ret
   316 					eif
   317 				.endl
   318
   319 112A			.local	PAUSE_006C					; PROCEDURE | ASSEMBLER | OVERLOAD
   320
   321 				; ---------------------  ASM Block 035  ---------------------
   322
   323
   324 112A AD 88 2C		loop  lda n
   325 112D 0D 89 2C		  ora n+1
   326 1130 F0 14		  beq stop
   327
   328 1132 A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   329
   330 1138 AD 88 2C D0 03 CE +   dew n
   331
   332 1143 4C 2A 11		  jmp loop
   333 1146			stop
   334
   335
   336 				; ------------------------------------------------------------
   337
   338 = 2C88			N	= DATAORIGIN+$000C
   339
   340 = 2C88			@VarData	= N
   341 = 0002			@VarDataSize	= 2
   342
   343 1146			@exit
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					els
   351 1146 60				rts						; ret
   352 					eif
   353 				.endl
   354
   355 1147			.local	RANDOM_006D					; FUNCTION | ASSEMBLER | OVERLOAD
   356 1147 8D 8A 2C			sta RANGE
   357
   358 				; ---------------------  ASM Block 039  ---------------------
   359
   360
   361 114A AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   362 114D 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   363 1150 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   364 1153 6D 1E FF		  adc ted_hcount    //Horizontal counter
   365 1156 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   366 1159 4D 1E FF		  eor ted_hcount    //Horizontal counter
   367 115C A8			  tay
   368
   369 115D AD 8A 2C		  lda range
   370 1160 F0 08		  beq stop
   371
   372 1162 85 0C		  sta ecx
   373 1164 84 04		  sty eax
   374
   375 1166 20 A3 10		  jsr imulCL
   376 1169 A8			  tay
   377
   378 116A 8C 8B 2C		stop  sty Result
   379
   380 116D			@exit
   381
   382 				; ------------------------------------------------------------
   383
   384 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   385 				; as Pointer
   386
   387 116D E8				inx
   388 116E AD 8B 2C 95 18		mva RESULT :STACKORIGIN,x
   389
   390 					.ifdef @new
   391 					lda <@VarData
   392 					sta :ztmp
   393 					lda >@VarData
   394 					ldy #@VarDataSize-1
   395 					jmp @FreeMem
   396 					eif
   397
   398 				; ------------------------------------------------------------
   399
   400 = 2C8A			RANGE	= DATAORIGIN+$000E
   401 = 2C8B			RESULT	= DATAORIGIN+$000F
   402
   403 = 2C8A			@VarData	= RANGE
   404 = 0002			@VarDataSize	= 2
   405
   406 1173 60				rts						; ret
   407 				.endl
   408
   409 				; ------------------------------------------------------------
   410
   411 = 0101			__PORTB_BANKS	= $0101
   412 = 0648			M_PI_2	= $0648
   413 = 0192			D_PI_2	= $0192
   414 = 0004			D_PI_180	= $04
   415 = 0000			MGTIA	= $00
   416 = 0080			MVBXE	= $80
   417 = 0000			VBXE_XDLADR	= $00
   418 = 0100			VBXE_BCBADR	= $0100
   419 = 1000			VBXE_MAPADR	= $1000
   420 = 5000			VBXE_OVRADR	= $5000
   421 = B000			VBXE_WINDOW	= $B000
   422 = 0000			IDLI	= $00
   423 = 0001			IVBL	= $01
   424 = 00FE			CH_DELCHR	= $FE
   425 = 009B			CH_ENTER	= $9B
   426 = 001B			CH_ESC	= $1B
   427 = 001C			CH_CURS_UP	= $1C
   428 = 001D			CH_CURS_DOWN	= $1D
   429 = 001E			CH_CURS_LEFT	= $1E
   430 = 001F			CH_CURS_RIGHT	= $1F
   431 = 007F			CH_TAB	= $7F
   432 = 009B			CH_EOL	= $9B
   433 = 007D			CH_CLR	= $7D
   434 = 00FD			CH_BELL	= $FD
   435 = 007E			CH_DEL	= $7E
   436 = 009C			CH_DELLINE	= $9C
   437 = 009D			CH_INSLINE	= $9D
   438 = 0000			COLOR_BLACK	= $00
   439 = 000E			COLOR_WHITE	= $0E
   440 = 0032			COLOR_RED	= $32
   441 = 0096			COLOR_CYAN	= $96
   442 = 0068			COLOR_VIOLET	= $68
   443 = 00C4			COLOR_GREEN	= $C4
   444 = 0074			COLOR_BLUE	= $74
   445 = 00EE			COLOR_YELLOW	= $EE
   446 = 0028			COLOR_ORANGE	= $28
   447 = 00E4			COLOR_BROWN	= $E4
   448 = 003C			COLOR_LIGHTRED	= $3C
   449 = 0004			COLOR_GRAY1	= $04
   450 = 0006			COLOR_GRAY2	= $06
   451 = 000A			COLOR_GRAY3	= $0A
   452 = 00CC			COLOR_LIGHTGREEN	= $CC
   453 = 007C			COLOR_LIGHTBLUE	= $7C
   454 = 0004			FMOPENREAD	= $04
   455 = 0008			FMOPENWRITE	= $08
   456 = 0009			FMOPENAPPEND	= $09
   457 = 000C			FMOPENREADWRITE	= $0C
   458 = 2C7C			SCREENWIDTH	= DATAORIGIN+$0000
   459 = 2C7E			SCREENHEIGHT	= DATAORIGIN+$0002
   460 = 2C80			DATESEPARATOR	= DATAORIGIN+$0004
   461 = D014			TVSYSTEM	= $D014
   462 = D20A			RND	= $D20A
   463 = 02C0			adr.PALETTE	= $02C0
   464 1174			.var PALETTE	= adr.PALETTE .word
   465 = D012			adr.HPALETTE	= $D012
   466 1174			.var HPALETTE	= adr.HPALETTE .word
   467 = 2C81			FILEMODE	= DATAORIGIN+$0005
   468 = 2C82			GRAPHMODE	= DATAORIGIN+$0006
   469 = 2C83			IORESULT	= DATAORIGIN+$0007
   470 = 2C84			EOLN	= DATAORIGIN+$0008
   471 = 2C85			RNDSEED	= DATAORIGIN+$0009
   472
   473 = 1174 C0 02		PALETTE
   473 = 1176 12 D0		HPALETTE
   473 				.endl							; UNIT SYSTEM
   474
   475 1178			.local	PUTCHAR_0072					; PROCEDURE | OVERLOAD
   476
   477 				; optimize OK (tools.inc), line = 5
   478
   479 1178 AD BF 2C			lda Y
   480 117B 0A				asl @
   481 117C A8				tay
   482 117D B9 0E 10			lda adr.MUL40,y
   483 1180 18 6D BE 2C			add X
   484 1184 85 5D			sta T0W
   485 1186 B9 0F 10			lda adr.MUL40+1,y
   486 1189 69 08			adc #$08
   487 118B 85 5E			sta T0W+1
   488
   489 				; optimize OK (tools.inc), line = 6
   490
   491 118D 85 11			sta :bp+1
   492 118F A4 5D			ldy T0W
   493 1191 AD C1 2C			lda C
   494 1194 91 10			sta (:bp),y
   495 1196 A5 5E			lda T0W+1
   496 1198 18 69 04			add #$04
   497 119B 85 11			sta :bp+1
   498 119D AD C0 2C			lda V
   499 11A0 91 10			sta (:bp),y
   500
   501 				; ------------------------------------------------------------
   502
   503 = 2CBE			X	= DATAORIGIN+$0042
   504 = 2CBF			Y	= DATAORIGIN+$0043
   505 = 2CC0			V	= DATAORIGIN+$0044
   506 = 2CC1			C	= DATAORIGIN+$0045
   507
   508 = 2CBE			@VarData	= X
   509 = 0004			@VarDataSize	= 4
   510
   511 11A2			@exit
   512 					.ifdef @new
   513 					lda <@VarData
   514 					sta :ztmp
   515 					lda >@VarData
   516 					ldy #@VarDataSize-1
   517 					jmp @FreeMem
   518 					els
   519 11A2 60				rts						; ret
   520 					eif
   521 				.endl
   522
   523 11A3			.local	PUTCHAR_0098					; PROCEDURE | OVERLOAD
   524
   525 				; optimize OK (tools.inc), line = 11
   526
   527 11A3 AD C3 2C			lda Y
   528 11A6 0A				asl @
   529 11A7 A8				tay
   530 11A8 B9 0E 10			lda adr.MUL40,y
   531 11AB 18 6D C2 2C			add X
   532 11AF 85 5D			sta T0W
   533 11B1 B9 0F 10			lda adr.MUL40+1,y
   534 11B4 69 0C			adc #$0C
   535 11B6 85 5E			sta T0W+1
   536 11B8 A4 5E			ldy T0W+1
   537 11BA 84 11			sty :bp+1
   538 11BC A4 5D			ldy T0W
   539 11BE AD C4 2C			lda V
   540 11C1 91 10			sta (:bp),y
   541
   542 				; ------------------------------------------------------------
   543
   544 = 2CC2			X	= DATAORIGIN+$0046
   545 = 2CC3			Y	= DATAORIGIN+$0047
   546 = 2CC4			V	= DATAORIGIN+$0048
   547
   548 = 2CC2			@VarData	= X
   549 = 0003			@VarDataSize	= 3
   550
   551 11C3			@exit
   552 					.ifdef @new
   553 					lda <@VarData
   554 					sta :ztmp
   555 					lda >@VarData
   556 					ldy #@VarDataSize-1
   557 					jmp @FreeMem
   558 					els
   559 11C3 60				rts						; ret
   560 					eif
   561 				.endl
   562
   563 11C4			.local	SHOWSCORE					; PROCEDURE
   564
   565 				; optimize OK (tools.inc), line = 18
   566
   567 11C4 AD 91 2C			lda PLAYER1.COLOUR
   568 11C7 8D C1 2C			sta PUTCHAR_0072.C
   569 11CA AD 94 2C			lda PLAYER1.SCORE
   570 11CD 8D C0 2C			sta PUTCHAR_0072.V
   571 11D0 A9 00			lda #$00
   572 11D2 8D BF 2C			sta PUTCHAR_0072.Y
   573 11D5 A9 1E			lda #$1E
   574 11D7 8D BE 2C			sta PUTCHAR_0072.X
   575 11DA 20 78 11			jsr PUTCHAR_0072
   576
   577 				; optimize OK (tools.inc), line = 19
   578
   579 11DD AD 99 2C			lda PLAYER2.COLOUR
   580 11E0 8D C1 2C			sta PUTCHAR_0072.C
   581 11E3 AD 9C 2C			lda PLAYER2.SCORE
   582 11E6 8D C0 2C			sta PUTCHAR_0072.V
   583 11E9 A9 00			lda #$00
   584 11EB 8D BF 2C			sta PUTCHAR_0072.Y
   585 11EE A9 20			lda #$20
   586 11F0 8D BE 2C			sta PUTCHAR_0072.X
   587 11F3 20 78 11			jsr PUTCHAR_0072
   588
   589 				; optimize OK (tools.inc), line = 20
   590
   591 11F6 AD A1 2C			lda PLAYER3.COLOUR
   592 11F9 8D C1 2C			sta PUTCHAR_0072.C
   593 11FC AD A4 2C			lda PLAYER3.SCORE
   594 11FF 8D C0 2C			sta PUTCHAR_0072.V
   595 1202 A9 00			lda #$00
   596 1204 8D BF 2C			sta PUTCHAR_0072.Y
   597 1207 A9 22			lda #$22
   598 1209 8D BE 2C			sta PUTCHAR_0072.X
   599 120C 20 78 11			jsr PUTCHAR_0072
   600
   601 				; optimize OK (tools.inc), line = 21
   602
   603 120F AD A9 2C			lda PLAYER4.COLOUR
   604 1212 8D C1 2C			sta PUTCHAR_0072.C
   605 1215 AD AC 2C			lda PLAYER4.SCORE
   606 1218 8D C0 2C			sta PUTCHAR_0072.V
   607 121B A9 00			lda #$00
   608 121D 8D BF 2C			sta PUTCHAR_0072.Y
   609 1220 A9 24			lda #$24
   610 1222 8D BE 2C			sta PUTCHAR_0072.X
   611 1225 20 78 11			jsr PUTCHAR_0072
   612 1228			@exit
   613 					.ifdef @new
   614 					lda <@VarData
   615 					sta :ztmp
   616 					lda >@VarData
   617 					ldy #@VarDataSize-1
   618 					jmp @FreeMem
   619 					els
   620 1228 60				rts						; ret
   621 					eif
   622 				.endl
   623
   624 1229			.local	CHECKAVAILDIR					; PROCEDURE
   625
   626 				; optimize OK (tools.inc), line = 28
   627
   628 1229 A9 00			lda #$00
   629 122B 85 5C			sta AVAILDIR
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 122D AC 6D 2C 84 12 AC + 	mwy PLY :bp2
   634 1237 A0 01			ldy #PLY.Y-DATAORIGIN
   635 1239 B1 12			lda (:bp2),y
   636 123B 0A				asl @
   637 123C A8				tay
   638 123D A9 00			lda #$00
   639 123F 18 79 0E 10			add adr.MUL40,y
   640 1243 85 21			sta :STACKORIGIN+9
   641 1245 A9 0C			lda #$0C
   642 1247 79 0F 10			adc adr.MUL40+1,y
   643 124A 85 31			sta :STACKORIGIN+STACKWIDTH+9
   644 124C A0 00			ldy #PLY.X-DATAORIGIN
   645 124E A5 21			lda :STACKORIGIN+9
   646 1250 18 71 12			add (:bp2),y
   647 1253 85 5D			sta T0W
   648 1255 A5 31			lda :STACKORIGIN+STACKWIDTH+9
   649 1257 69 00			adc #$00
   650 1259 85 5E			sta T0W+1
   651
   652 				; optimize OK (tools.inc), line = 31
   653
   654 125B A5 5D			lda T0W
   655 125D 38 E9 28			sub #$28
   656 1260 85 21			sta :STACKORIGIN+9
   657 1262 A5 5E			lda T0W+1
   658 1264 E9 00			sbc #$00
   659 1266 85 11			sta :bp+1
   660 1268 A4 21			ldy :STACKORIGIN+9
   661 126A B1 10			lda (:bp),y
   662 126C C9 20			cmp #$20
   663 126E D0 06			jne l_010B
   664 1270 A5 5C			lda AVAILDIR
   665 1272 09 01			ora #$01
   666 1274 85 5C			sta AVAILDIR
   667 1276			l_010B
   668
   669 				; optimize OK (tools.inc), line = 32
   670
   671 1276 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   672 127E A0 28			ldy #$28
   673 1280 B1 12			lda (:bp2),y
   674 1282 C9 20			cmp #$20
   675 1284 D0 06			jne l_012E
   676 1286 A5 5C			lda AVAILDIR
   677 1288 09 02			ora #$02
   678 128A 85 5C			sta AVAILDIR
   679 128C			l_012E
   680
   681 				; optimize OK (tools.inc), line = 33
   682
   683 128C A5 5D			lda T0W
   684 128E 38 E9 01			sub #$01
   685 1291 85 21			sta :STACKORIGIN+9
   686 1293 A5 5E			lda T0W+1
   687 1295 E9 00			sbc #$00
   688 1297 85 11			sta :bp+1
   689 1299 A4 21			ldy :STACKORIGIN+9
   690 129B B1 10			lda (:bp),y
   691 129D C9 20			cmp #$20
   692 129F D0 06			jne l_0151
   693 12A1 A5 5C			lda AVAILDIR
   694 12A3 09 04			ora #$04
   695 12A5 85 5C			sta AVAILDIR
   696 12A7			l_0151
   697
   698 				; optimize OK (tools.inc), line = 34
   699
   700 12A7 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   701 12AF A0 01			ldy #$01
   702 12B1 B1 12			lda (:bp2),y
   703 12B3 C9 20			cmp #$20
   704 12B5 D0 06			jne l_0174
   705 12B7 A5 5C			lda AVAILDIR
   706 12B9 09 08			ora #$08
   707 12BB 85 5C			sta AVAILDIR
   708 12BD			l_0174
   709 12BD			@exit
   710 					.ifdef @new
   711 					lda <@VarData
   712 					sta :ztmp
   713 					lda >@VarData
   714 					ldy #@VarDataSize-1
   715 					jmp @FreeMem
   716 					els
   717 12BD 60				rts						; ret
   718 					eif
   719 				.endl
   720
   721 12BE			.local	ANIMATEOBSTACLES				; PROCEDURE
   722
   723 				; optimize FAIL (0, tools.inc), line = 43
   724
   725 12BE EE C5 2C			inc COUNTER
   726
   727 				; optimize OK (tools.inc), line = 44
   728
   729 12C1 AD C5 2C			lda COUNTER
   730 12C4 29 01			and #$01
   731 12C6 F0 08			jeq l_019F
   732 12C8 A9 56			lda #$56
   733 12CA 8D C6 2C			sta OBST
   734 12CD 4C D5 12			jmp l_01AD
   735 12D0			l_019F
   736 12D0 A9 5B			lda #$5B
   737 12D2 8D C6 2C			sta OBST
   738 12D5			l_01AD
   739
   740 				; optimize OK (tools.inc), line = 45
   741
   742 12D5 A9 07			lda #$07
   743 12D7 85 59			sta I0B
   744
   745 12D9			l_01BA
   746 				; --- ForToDoCondition
   747 12D9 A5 59			lda I0B
   748 12DB 0A				asl @
   749 12DC A8				tay
   750 12DD B9 AE 2C			lda adr.OBSTACLES,y
   751 12E0 85 21			sta :STACKORIGIN+9
   752 12E2 B9 AF 2C			lda adr.OBSTACLES+1,y
   753 12E5 85 11			sta :bp+1
   754 12E7 A4 21			ldy :STACKORIGIN+9
   755 12E9 AD C6 2C			lda OBST
   756 12EC 91 10			sta (:bp),y
   757 12EE C6 59			dec I0B
   758 12F0 10 E7			jpl l_01BA
   759 12F2			l_01C8
   760
   761 				; ------------------------------------------------------------
   762
   763 = 2CC5			COUNTER	= DATAORIGIN+$0049
   764 = 2CC6			OBST	= DATAORIGIN+$004A
   765 = 0000			@FORTMP_01B7	= $00
   766
   767 = 2CC5			@VarData	= COUNTER
   768 = 0002			@VarDataSize	= 2
   769
   770 12F2			@exit
   771 					.ifdef @new
   772 					lda <@VarData
   773 					sta :ztmp
   774 					lda >@VarData
   775 					ldy #@VarDataSize-1
   776 					jmp @FreeMem
   777 					els
   778 12F2 60				rts						; ret
   779 					eif
   780 				.endl
   781
   782 12F3			.local	CALCOBSTACLEADDR				; FUNCTION
   783
   784 				; optimize OK (tools.inc), line = 52
   785
   786 12F3 AD C8 2C			lda Y
   787 12F6 0A				asl @
   788 12F7 A8				tay
   789 12F8 AD C7 2C			lda X
   790 12FB 18 79 0E 10			add adr.MUL40,y
   791 12FF 8D C9 2C			sta RESULT
   792 1302 A9 0C			lda #$0C
   793 1304 79 0F 10			adc adr.MUL40+1,y
   794 1307 8D CA 2C			sta RESULT+1
   795 130A			@exit
   796
   797 				; ------------------------------------------------------------
   798
   799 				; Push WORD / SMALLINT / SHORTREAL / POINTER
   800 				; as Pointer
   801
   802 130A E8				inx
   803 130B AD C9 2C 95 18		mva RESULT :STACKORIGIN,x
   804 1310 AD CA 2C 95 28		mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
   805
   806 					.ifdef @new
   807 					lda <@VarData
   808 					sta :ztmp
   809 					lda >@VarData
   810 					ldy #@VarDataSize-1
   811 					jmp @FreeMem
   812 					eif
   813
   814 				; ------------------------------------------------------------
   815
   816 = 2CC7			X	= DATAORIGIN+$004B
   817 = 2CC8			Y	= DATAORIGIN+$004C
   818 = 2CC9			RESULT	= DATAORIGIN+$004D
   819
   820 = 2CC7			@VarData	= X
   821 = 0004			@VarDataSize	= 4
   822
   823 1315 60				rts						; ret
   824 				.endl
   825
   826 1316			.local	SAVEOBSTACLES					; PROCEDURE
   827
   828 				; optimize OK (tools.inc), line = 59
   829
   830 1316 A9 07			lda #$07
   831 1318 85 59			sta I0B
   832
   833 131A			l_01FB
   834 				; --- ForToDoCondition
   835
   836 				; optimize OK (tools.inc), line = 60
   837
   838 131A A5 59			lda I0B
   839 131C 0A				asl @
   840 131D A8				tay
   841 131E B9 AF 2C			lda adr.OBSTACLES+1,y
   842 1321 C9 00			cmp #$00
   843 1323 D0 05			bne @+
   844 1325 B9 AE 2C			lda adr.OBSTACLES,y
   845 1328 C9 7E			cmp #$7E
   846 132A			@
   847 132A F0 29			jeq l_021D
   848
   849 				; optimize OK (tools.inc), line = 61
   850
   851 132C B9 AE 2C			lda adr.OBSTACLES,y
   852 132F 85 21			sta :STACKORIGIN+9
   853 1331 B9 AF 2C			lda adr.OBSTACLES+1,y
   854 1334 85 11			sta :bp+1
   855 1336 A4 21			ldy :STACKORIGIN+9
   856 1338 A9 56			lda #$56
   857 133A 91 10			sta (:bp),y
   858
   859 				; optimize OK (tools.inc), line = 62
   860
   861 133C A5 59			lda I0B
   862 133E 0A				asl @
   863 133F A8				tay
   864 1340 B9 AE 2C			lda adr.OBSTACLES,y
   865 1343 38 E9 00			sub #$00
   866 1346 85 21			sta :STACKORIGIN+9
   867 1348 B9 AF 2C			lda adr.OBSTACLES+1,y
   868 134B E9 04			sbc #$04
   869 134D 85 11			sta :bp+1
   870 134F A4 21			ldy :STACKORIGIN+9
   871 1351 A9 35			lda #$35
   872 1353 91 10			sta (:bp),y
   873 1355			l_021D
   874
   875 				; --- ForToDoEpilog
   876 1355 C6 59			dec I0B
   877 1357 10 C1			jpl l_01FB
   878 1359			l_0209
   879
   880 				; ------------------------------------------------------------
   881
   882 = 0000			@FORTMP_01F8	= $00
   883 1359			@exit
   884 					.ifdef @new
   885 					lda <@VarData
   886 					sta :ztmp
   887 					lda >@VarData
   888 					ldy #@VarDataSize-1
   889 					jmp @FreeMem
   890 					els
   891 1359 60				rts						; ret
   892 					eif
   893 				.endl
   894
   895 135A			.local	DRAWTAIL					; PROCEDURE
   896
   897 				; optimize OK (tools.inc), line = 71
   898
   899 135A AC 6D 2C 84 12 AC + 	mwy PLY :bp2
   900 1364 A0 04			ldy #PLY.DIR-DATAORIGIN
   901 1366 B1 12			lda (:bp2),y
   902 1368 C5 5B			cmp NEWDIR
   903 136A D0 14			jne l_024F
   904
   905 				; optimize OK (tools.inc), line = 72
   906
   907 136C A5 5B			lda NEWDIR
   908 136E 29 0C			and #$0C
   909 1370 F0 07			jeq l_0266
   910 1372 A9 40			lda #$40
   911 1374 85 58			sta T0B
   912 1376 4C 7D 13			jmp l_0274
   913 1379			l_0266
   914 1379 A9 42			lda #$42
   915 137B 85 58			sta T0B
   916 137D			l_0274
   917 137D 4C F0 13			jmp l_0281
   918 1380			l_024F
   919
   920 				; optimize OK (tools.inc), line = 74
   921
   922 1380 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
   923 138A A0 04			ldy #PLY.DIR-DATAORIGIN
   924 138C B1 12			lda (:bp2),y
   925 138E 29 0A			and #$0A
   926 1390 F0 0A			jeq l_02A7
   927 1392 A5 5B			lda NEWDIR
   928 1394 29 05			and #$05
   929 1396 F0 04			jeq l_02A7
   930 1398 A9 7D			lda #$7D
   931 139A 85 58			sta T0B
   932 139C			l_02A7
   933
   934 				; optimize OK (tools.inc), line = 75
   935
   936 139C AC 6D 2C 84 12 AC + 	mwy PLY :bp2
   937 13A6 A0 04			ldy #PLY.DIR-DATAORIGIN
   938 13A8 B1 12			lda (:bp2),y
   939 13AA 29 09			and #$09
   940 13AC F0 0A			jeq l_02D4
   941 13AE A5 5B			lda NEWDIR
   942 13B0 29 06			and #$06
   943 13B2 F0 04			jeq l_02D4
   944 13B4 A9 6E			lda #$6E
   945 13B6 85 58			sta T0B
   946 13B8			l_02D4
   947
   948 				; optimize OK (tools.inc), line = 76
   949
   950 13B8 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
   951 13C2 A0 04			ldy #PLY.DIR-DATAORIGIN
   952 13C4 B1 12			lda (:bp2),y
   953 13C6 29 06			and #$06
   954 13C8 F0 0A			jeq l_0301
   955 13CA A5 5B			lda NEWDIR
   956 13CC 29 09			and #$09
   957 13CE F0 04			jeq l_0301
   958 13D0 A9 6D			lda #$6D
   959 13D2 85 58			sta T0B
   960 13D4			l_0301
   961
   962 				; optimize OK (tools.inc), line = 77
   963
   964 13D4 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
   965 13DE A0 04			ldy #PLY.DIR-DATAORIGIN
   966 13E0 B1 12			lda (:bp2),y
   967 13E2 29 05			and #$05
   968 13E4 F0 0A			jeq l_032E
   969 13E6 A5 5B			lda NEWDIR
   970 13E8 29 0A			and #$0A
   971 13EA F0 04			jeq l_032E
   972 13EC A9 70			lda #$70
   973 13EE 85 58			sta T0B
   974 13F0			l_032E
   975 13F0			l_0281
   976
   977 				; optimize OK (tools.inc), line = 79
   978
   979 13F0 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
   980 13FA A0 00			ldy #PLY.X-DATAORIGIN
   981 13FC B1 12			lda (:bp2),y
   982 13FE 8D C2 2C			sta PUTCHAR_0098.X
   983 1401 A0 01			ldy #PLY.Y-DATAORIGIN
   984 1403 B1 12			lda (:bp2),y
   985 1405 8D C3 2C			sta PUTCHAR_0098.Y
   986 1408 A5 58			lda T0B
   987 140A 8D C4 2C			sta PUTCHAR_0098.V
   988 140D 20 A3 11			jsr PUTCHAR_0098
   989 1410			@exit
   990 					.ifdef @new
   991 					lda <@VarData
   992 					sta :ztmp
   993 					lda >@VarData
   994 					ldy #@VarDataSize-1
   995 					jmp @FreeMem
   996 					els
   997 1410 60				rts						; ret
   998 					eif
   999 				.endl
  1000
  1001 1411			.local	CHECKJOYSTATUS					; PROCEDURE
  1002
  1003 				; optimize OK (tools.inc), line = 86
  1004
  1005 1411 A9 02			lda #$02
  1006 1413 8D 08 FF			sta JOY
  1007 1416 A9 FF			lda #$FF
  1008 1418 8D 30 FD			sta KEYSCAN
  1009
  1010 				; optimize OK (tools.inc), line = 87
  1011
  1012 141B AD 08 FF			lda JOY
  1013 141E 49 FF			eor #$FF
  1014 1420 85 63			sta JOYSTATUS
  1015 1422			@exit
  1016 					.ifdef @new
  1017 					lda <@VarData
  1018 					sta :ztmp
  1019 					lda >@VarData
  1020 					ldy #@VarDataSize-1
  1021 					jmp @FreeMem
  1022 					els
  1023 1422 60				rts						; ret
  1024 					eif
  1025 				.endl
  1026
  1027 1423			.local	SETPLAYER					; PROCEDURE
  1028
  1029 				; optimize OK (tools.inc), line = 94
  1030
  1031 1423 AD CB 2C			lda P
  1032 1426 8D 6D 2C			sta PLY
  1033 1429 85 12			sta :bp2
  1034 142B AD CC 2C			lda P+1
  1035 142E 8D 6E 2C			sta PLY+1
  1036 1431 85 13			sta :bp2+1
  1037 				; optimize OK (tools.inc), line = 95
  1038 1433 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1039 1435 AD D0 2C			lda BRAIN
  1040 1438 91 12			sta (:bp2),y
  1041 143A A0 00			ldy #PLY.X-DATAORIGIN
  1042 143C AD CD 2C			lda X
  1043 143F 91 12			sta (:bp2),y
  1044 1441 A0 01			ldy #PLY.Y-DATAORIGIN
  1045 1443 AD CE 2C			lda Y
  1046 1446 91 12			sta (:bp2),y
  1047 1448 A0 04			ldy #PLY.DIR-DATAORIGIN
  1048 144A AD CF 2C			lda DIR
  1049 144D 91 12			sta (:bp2),y
  1050
  1051 				; optimize OK (tools.inc), line = 96
  1052
  1053 144F A0 02			ldy #PLY.HEAD-DATAORIGIN
  1054 1451 AD D1 2C			lda HEAD
  1055 1454 91 12			sta (:bp2),y
  1056 1456 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1057 1458 AD D2 2C			lda COLOUR
  1058 145B 91 12			sta (:bp2),y
  1059 145D A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1060 145F AD D3 2C			lda ISALIVE
  1061 1462 91 12			sta (:bp2),y
  1062
  1063 				; optimize OK (tools.inc), line = 97
  1064
  1065 1464 AD D3 2C			lda ISALIVE
  1066 1467 F0 1D			jeq l_0394
  1067
  1068 				; optimize FAIL (0, tools.inc), line = 98
  1069
  1070 1469 E6 5A			inc ALIVE
  1071 146B AD D2 2C			lda COLOUR
  1072 146E 8D C1 2C			sta PUTCHAR_0072.C
  1073 1471 AD D1 2C			lda HEAD
  1074 1474 8D C0 2C			sta PUTCHAR_0072.V
  1075 1477 AD CE 2C			lda Y
  1076 147A 8D BF 2C			sta PUTCHAR_0072.Y
  1077 147D AD CD 2C			lda X
  1078 1480 8D BE 2C			sta PUTCHAR_0072.X
  1079 1483 20 78 11			jsr PUTCHAR_0072
  1080 1486			l_0394
  1081
  1082 				; ------------------------------------------------------------
  1083
  1084 = 2CCB			P	= DATAORIGIN+$004F
  1085 = 2CCD			X	= DATAORIGIN+$0051
  1086 = 2CCE			Y	= DATAORIGIN+$0052
  1087 = 2CCF			DIR	= DATAORIGIN+$0053
  1088 = 2CD0			BRAIN	= DATAORIGIN+$0054
  1089 = 2CD1			HEAD	= DATAORIGIN+$0055
  1090 = 2CD2			COLOUR	= DATAORIGIN+$0056
  1091 = 2CD3			ISALIVE	= DATAORIGIN+$0057
  1092
  1093 = 2CCB			@VarData	= P
  1094 = 0009			@VarDataSize	= 9
  1095
  1096 1486			@exit
  1097 					.ifdef @new
  1098 					lda <@VarData
  1099 					sta :ztmp
  1100 					lda >@VarData
  1101 					ldy #@VarDataSize-1
  1102 					jmp @FreeMem
  1103 					els
  1104 1486 60				rts						; ret
  1105 					eif
  1106 				.endl
  1107
  1108 1487			.local	INITPLAYFIELD					; PROCEDURE
  1109
  1110 				; optimize OK (init.inc), line = 5
  1111
  1112 1487 A9 1F			lda #$1F
  1113 1489 8D 15 FF			sta BACKGROUND
  1114 148C A9 00			lda #$00
  1115 148E 8D 19 FF			sta BOREDER
  1116
  1117 				; optimize OK (init.inc), line = 6
  1118
  1119 1491 A9 20			lda #$20
  1120 1493 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
  1121 1495 A9 C0			lda #$C0
  1122 1497 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
  1123 1499 A9 03			lda #$03
  1124 149B 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
  1125 149D A9 00			lda #$00
  1126 149F 85 08			sta SYSTEM.FILLCHAR_0056.A
  1127 14A1 A9 0C			lda #$0C
  1128 14A3 85 09			sta SYSTEM.FILLCHAR_0056.A+1
  1129 14A5 20 1F 11			jsr SYSTEM.FILLCHAR_0056
  1130
  1131 				; optimize OK (init.inc), line = 8
  1132
  1133 14A8 A9 27			lda #$27
  1134 14AA 85 58			sta T0B
  1135
  1136 14AC			l_03C1
  1137 				; --- ForToDoCondition
  1138
  1139 				; optimize OK (init.inc), line = 9
  1140
  1141 14AC A4 58			ldy T0B
  1142 14AE A9 A0			lda #$A0
  1143 14B0 99 00 0C			sta $0C00,y
  1144
  1145 				; optimize OK (init.inc), line = 10
  1146
  1147 14B3 99 C0 0F			sta $0FC0,y
  1148
  1149 				; optimize OK (init.inc), line = 11
  1150
  1151 14B6 A9 41			lda #$41
  1152 14B8 99 00 08			sta $0800,y
  1153
  1154 				; optimize OK (init.inc), line = 12
  1155
  1156 14BB 99 C0 0B			sta $0BC0,y
  1157
  1158 				; --- ForToDoEpilog
  1159 14BE C6 58			dec T0B
  1160 14C0 10 EA			jpl l_03C1
  1161 14C2			l_03CF
  1162
  1163 				; optimize OK (init.inc), line = 15
  1164
  1165 14C2 A9 18			lda #$18
  1166 14C4 85 58			sta T0B
  1167
  1168 14C6			l_0401
  1169 				; --- ForToDoCondition
  1170 14C6 A5 58			lda T0B
  1171 14C8 C9 01			cmp #$01
  1172 14CA 90 3A			jcc l_040F
  1173
  1174 				; optimize OK (init.inc), line = 16
  1175
  1176 14CC 0A				asl @
  1177 14CD A8				tay
  1178 14CE A9 FF			lda #$FF
  1179 14D0 18 79 0E 10			add adr.MUL40,y
  1180 14D4 85 12			sta :bp2
  1181 14D6 A9 0B			lda #$0B
  1182 14D8 79 0F 10			adc adr.MUL40+1,y
  1183 14DB 85 13			sta :bp2+1
  1184 14DD A0 00			ldy #$00
  1185 14DF A9 A0			lda #$A0
  1186 14E1 91 12			sta (:bp2),y
  1187 14E3 C8				iny
  1188 14E4 91 12			sta (:bp2),y
  1189
  1190 				; optimize OK (init.inc), line = 17
  1191
  1192 14E6 A5 58			lda T0B
  1193 14E8 0A				asl @
  1194 14E9 A8				tay
  1195 14EA A9 FF			lda #$FF
  1196 14EC 18 79 0E 10			add adr.MUL40,y
  1197 14F0 85 12			sta :bp2
  1198 14F2 A9 07			lda #$07
  1199 14F4 79 0F 10			adc adr.MUL40+1,y
  1200 14F7 85 13			sta :bp2+1
  1201 14F9 A0 00			ldy #$00
  1202 14FB A9 41			lda #$41
  1203 14FD 91 12			sta (:bp2),y
  1204 14FF C8				iny
  1205 1500 91 12			sta (:bp2),y
  1206
  1207 				; --- ForToDoEpilog
  1208 1502 C6 58			dec T0B
  1209 1504 10 C0			jpl l_0401
  1210 1506			l_040F
  1211
  1212 				; optimize OK (init.inc), line = 20
  1213
  1214 1506 A9 07			lda #$07
  1215 1508 85 59			sta I0B
  1216
  1217 150A			l_0433
  1218 				; --- ForToDoCondition
  1219 150A A5 59			lda I0B
  1220 150C 0A				asl @
  1221 150D A8				tay
  1222 150E A9 7E			lda #$7E
  1223 1510 99 AE 2C			sta adr.OBSTACLES,y
  1224 1513 A9 00			lda #$00
  1225 1515 99 AF 2C			sta adr.OBSTACLES+1,y
  1226
  1227 				; --- ForToDoEpilog
  1228 1518 C6 59			dec I0B
  1229 151A 10 EE			jpl l_0433
  1230 151C			l_0441
  1231
  1232 				; ------------------------------------------------------------
  1233
  1234 = 0000			@FORTMP_03BE	= $00
  1235 = 0001			@FORTMP_03FE	= $01
  1236 = 0000			@FORTMP_0430	= $00
  1237 151C			@exit
  1238 					.ifdef @new
  1239 					lda <@VarData
  1240 					sta :ztmp
  1241 					lda >@VarData
  1242 					ldy #@VarDataSize-1
  1243 					jmp @FreeMem
  1244 					els
  1245 151C 60				rts						; ret
  1246 					eif
  1247 				.endl
  1248
  1249 151D			.local	AISTRAIGHT					; PROCEDURE
  1250
  1251 				; optimize OK (ai.inc), line = 5
  1252
  1253 151D AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  1254 1527 A0 04			ldy #PLY.DIR-DATAORIGIN
  1255 1529 B1 12			lda (:bp2),y
  1256 152B 25 5C			and AVAILDIR
  1257 152D F0 07			jeq l_0469
  1258 152F B1 12			lda (:bp2),y
  1259 1531 85 5B			sta NEWDIR
  1260 1533 4C A1 15			jmp l_0479
  1261 1536			l_0469
  1262
  1263 				; optimize OK (ai.inc), line = 7
  1264
  1265 1536 A5 5C			lda AVAILDIR
  1266 1538 C9 03			cmp #$03
  1267 153A D0 10			jne l_048B
  1268 153C A9 02			lda #$02
  1269 153E 20 47 11			jsr SYSTEM.RANDOM_006D
  1270 1541 B4 18			ldy :STACKORIGIN,x
  1271 1543 B9 40 10			lda adr.DIRECTION,y
  1272 1546 85 5B			sta NEWDIR
  1273 1548 CA				dex
  1274 1549 4C 64 15			jmp l_049D
  1275 154C			l_048B
  1276
  1277 				; optimize OK (ai.inc), line = 9
  1278
  1279 154C A5 5C			lda AVAILDIR
  1280 154E 8D D4 2C			sta @CASETMP_0003
  1281 1551 C9 01			cmp #$01
  1282 1553 D0 07			jne l_04A8
  1283 1555			@
  1284
  1285 				; optimize OK (ai.inc), line = 10
  1286
  1287 1555 A9 01			lda #$01
  1288 1557 85 5B			sta NEWDIR
  1289
  1290 1559 4C 64 15			jmp a_0003
  1291 155C			l_04A8
  1292 155C C9 02			cmp #$02
  1293 155E D0 04			jne l_04B5
  1294 1560			@
  1295
  1296 				; optimize OK (ai.inc), line = 11
  1297
  1298 1560 A9 02			lda #$02
  1299 1562 85 5B			sta NEWDIR
  1300
  1301 1564			l_04B5
  1302 1564			a_0003
  1303 1564			l_049D
  1304
  1305 				; optimize OK (ai.inc), line = 14
  1306
  1307 1564 A5 5C			lda AVAILDIR
  1308 1566 C9 0C			cmp #$0C
  1309 1568 D0 1F			jne l_04D1
  1310 156A A9 02			lda #$02
  1311 156C 20 47 11			jsr SYSTEM.RANDOM_006D
  1312 156F E8				inx
  1313 1570 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1314 1574 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1315 1578 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1316 157A 20 44 10			jsr addAX_CX
  1317 157D CA				dex
  1318 157E B4 18			ldy :STACKORIGIN,x
  1319 1580 B9 40 10			lda adr.DIRECTION,y
  1320 1583 85 5B			sta NEWDIR
  1321 1585 CA				dex
  1322 1586 4C A1 15			jmp l_04E7
  1323 1589			l_04D1
  1324
  1325 				; optimize OK (ai.inc), line = 16
  1326
  1327 1589 A5 5C			lda AVAILDIR
  1328 158B 8D D5 2C			sta @CASETMP_0004
  1329 158E C9 04			cmp #$04
  1330 1590 D0 07			jne l_04F2
  1331 1592			@
  1332
  1333 				; optimize OK (ai.inc), line = 17
  1334
  1335 1592 A9 04			lda #$04
  1336 1594 85 5B			sta NEWDIR
  1337
  1338 1596 4C A1 15			jmp a_0004
  1339 1599			l_04F2
  1340 1599 C9 08			cmp #$08
  1341 159B D0 04			jne l_04FF
  1342 159D			@
  1343
  1344 				; optimize OK (ai.inc), line = 18
  1345
  1346 159D A9 08			lda #$08
  1347 159F 85 5B			sta NEWDIR
  1348
  1349 15A1			l_04FF
  1350 15A1			a_0004
  1351 15A1			l_04E7
  1352 15A1			l_0479
  1353
  1354 				; ------------------------------------------------------------
  1355
  1356 = 2CD4			@CASETMP_0003	= DATAORIGIN+$0058
  1357 = 2CD5			@CASETMP_0004	= DATAORIGIN+$0059
  1358
  1359 = 2CD4			@VarData	= @CASETMP_0003
  1360 = 0002			@VarDataSize	= 2
  1361
  1362 15A1			@exit
  1363 					.ifdef @new
  1364 					lda <@VarData
  1365 					sta :ztmp
  1366 					lda >@VarData
  1367 					ldy #@VarDataSize-1
  1368 					jmp @FreeMem
  1369 					els
  1370 15A1 60				rts						; ret
  1371 					eif
  1372 				.endl
  1373
  1374 15A2			.local	AISAPPER					; PROCEDURE
  1375
  1376 				; optimize OK (ai.inc), line = 31
  1377
  1378 15A2 A9 00			lda #$00
  1379 15A4 8D D6 2C			sta L
  1380 15A7 8D D7 2C			sta R
  1381 15AA 8D D8 2C			sta U
  1382 15AD 8D D9 2C			sta D
  1383
  1384 				; optimize OK (ai.inc), line = 32
  1385
  1386 15B0 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  1387 15BA A0 01			ldy #PLY.Y-DATAORIGIN
  1388 15BC B1 12			lda (:bp2),y
  1389 15BE 0A				asl @
  1390 15BF A8				tay
  1391 15C0 A9 00			lda #$00
  1392 15C2 18 79 0E 10			add adr.MUL40,y
  1393 15C6 85 21			sta :STACKORIGIN+9
  1394 15C8 A9 0C			lda #$0C
  1395 15CA 79 0F 10			adc adr.MUL40+1,y
  1396 15CD 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1397 15CF A0 00			ldy #PLY.X-DATAORIGIN
  1398 15D1 A5 21			lda :STACKORIGIN+9
  1399 15D3 18 71 12			add (:bp2),y
  1400 15D6 85 5D			sta T0W
  1401 15D8 A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1402 15DA 69 00			adc #$00
  1403 15DC 85 5E			sta T0W+1
  1404
  1405 				; optimize OK (ai.inc), line = 34
  1406
  1407 15DE A5 5C			lda AVAILDIR
  1408 15E0 29 01			and #$01
  1409 15E2 F0 73			jeq l_0545
  1410
  1411 				; optimize OK (ai.inc), line = 35
  1412
  1413 15E4 A9 05			lda #$05
  1414 15E6 85 59			sta I0B
  1415
  1416 15E8			l_054F
  1417 				; --- ForToDoCondition
  1418 15E8 A5 59			lda I0B
  1419 15EA C9 01			cmp #$01
  1420 15EC 90 69			jcc l_055D
  1421
  1422 				; optimize OK (ai.inc), line = 36
  1423
  1424 15EE 0A				asl @
  1425 15EF A8				tay
  1426 15F0 A5 5D			lda T0W
  1427 15F2 38 F9 0E 10			sub adr.MUL40,y
  1428 15F6 85 21			sta :STACKORIGIN+9
  1429 15F8 A5 5E			lda T0W+1
  1430 15FA F9 0F 10			sbc adr.MUL40+1,y
  1431 15FD 85 11			sta :bp+1
  1432 15FF A4 21			ldy :STACKORIGIN+9
  1433 1601 B1 10			lda (:bp),y
  1434 1603 C9 20			cmp #$20
  1435 1605 D0 03			jne l_0577
  1436 1607 EE D8 2C			inc U
  1437 160A			l_0577
  1438
  1439 				; optimize OK (ai.inc), line = 37
  1440
  1441 160A A5 59			lda I0B
  1442 160C 0A				asl @
  1443 160D A8				tay
  1444 160E A5 5D			lda T0W
  1445 1610 38 F9 0E 10			sub adr.MUL40,y
  1446 1614 85 21			sta :STACKORIGIN+9
  1447 1616 A5 5E			lda T0W+1
  1448 1618 F9 0F 10			sbc adr.MUL40+1,y
  1449 161B 85 11			sta :bp+1
  1450 161D A5 21			lda :STACKORIGIN+9
  1451 161F 18 69 01			add #$01
  1452 1622 A8				tay
  1453 1623 90 02			scc
  1454 1625 E6 11			inc :bp+1
  1455 1627 B1 10			lda (:bp),y
  1456 1629 C9 20			cmp #$20
  1457 162B D0 03			jne l_059C
  1458 162D EE D8 2C			inc U
  1459 1630			l_059C
  1460
  1461 				; optimize OK (ai.inc), line = 38
  1462
  1463 1630 A5 59			lda I0B
  1464 1632 0A				asl @
  1465 1633 A8				tay
  1466 1634 A5 5D			lda T0W
  1467 1636 38 F9 0E 10			sub adr.MUL40,y
  1468 163A 85 21			sta :STACKORIGIN+9
  1469 163C A5 5E			lda T0W+1
  1470 163E F9 0F 10			sbc adr.MUL40+1,y
  1471 1641 85 11			sta :bp+1
  1472 1643 A4 21			ldy :STACKORIGIN+9
  1473 1645 88				dey
  1474 1646 B0 02			scs
  1475 1648 C6 11			dec :bp+1
  1476 164A B1 10			lda (:bp),y
  1477 164C C9 20			cmp #$20
  1478 164E D0 03			jne l_05C1
  1479 1650 EE D8 2C			inc U
  1480 1653			l_05C1
  1481
  1482 				; --- ForToDoEpilog
  1483 1653 C6 59			dec I0B
  1484 1655 10 91			jpl l_054F
  1485 1657			l_055D
  1486 1657			l_0545
  1487
  1488 				; optimize OK (ai.inc), line = 42
  1489
  1490 1657 A5 5C			lda AVAILDIR
  1491 1659 29 02			and #$02
  1492 165B F0 73			jeq l_05E5
  1493
  1494 				; optimize OK (ai.inc), line = 43
  1495
  1496 165D A9 05			lda #$05
  1497 165F 85 59			sta I0B
  1498
  1499 1661			l_05EF
  1500 				; --- ForToDoCondition
  1501 1661 A5 59			lda I0B
  1502 1663 C9 01			cmp #$01
  1503 1665 90 69			jcc l_05FD
  1504
  1505 				; optimize OK (ai.inc), line = 44
  1506
  1507 1667 0A				asl @
  1508 1668 A8				tay
  1509 1669 A5 5D			lda T0W
  1510 166B 18 79 0E 10			add adr.MUL40,y
  1511 166F 85 21			sta :STACKORIGIN+9
  1512 1671 A5 5E			lda T0W+1
  1513 1673 79 0F 10			adc adr.MUL40+1,y
  1514 1676 85 11			sta :bp+1
  1515 1678 A4 21			ldy :STACKORIGIN+9
  1516 167A B1 10			lda (:bp),y
  1517 167C C9 20			cmp #$20
  1518 167E D0 03			jne l_0617
  1519 1680 EE D9 2C			inc D
  1520 1683			l_0617
  1521
  1522 				; optimize OK (ai.inc), line = 45
  1523
  1524 1683 A5 59			lda I0B
  1525 1685 0A				asl @
  1526 1686 A8				tay
  1527 1687 A5 5D			lda T0W
  1528 1689 18 79 0E 10			add adr.MUL40,y
  1529 168D 85 21			sta :STACKORIGIN+9
  1530 168F A5 5E			lda T0W+1
  1531 1691 79 0F 10			adc adr.MUL40+1,y
  1532 1694 85 11			sta :bp+1
  1533 1696 A5 21			lda :STACKORIGIN+9
  1534 1698 18 69 01			add #$01
  1535 169B A8				tay
  1536 169C 90 02			scc
  1537 169E E6 11			inc :bp+1
  1538 16A0 B1 10			lda (:bp),y
  1539 16A2 C9 20			cmp #$20
  1540 16A4 D0 03			jne l_063C
  1541 16A6 EE D9 2C			inc D
  1542 16A9			l_063C
  1543
  1544 				; optimize OK (ai.inc), line = 46
  1545
  1546 16A9 A5 59			lda I0B
  1547 16AB 0A				asl @
  1548 16AC A8				tay
  1549 16AD A5 5D			lda T0W
  1550 16AF 18 79 0E 10			add adr.MUL40,y
  1551 16B3 85 21			sta :STACKORIGIN+9
  1552 16B5 A5 5E			lda T0W+1
  1553 16B7 79 0F 10			adc adr.MUL40+1,y
  1554 16BA 85 11			sta :bp+1
  1555 16BC A4 21			ldy :STACKORIGIN+9
  1556 16BE 88				dey
  1557 16BF B0 02			scs
  1558 16C1 C6 11			dec :bp+1
  1559 16C3 B1 10			lda (:bp),y
  1560 16C5 C9 20			cmp #$20
  1561 16C7 D0 03			jne l_0661
  1562 16C9 EE D9 2C			inc D
  1563 16CC			l_0661
  1564
  1565 				; --- ForToDoEpilog
  1566 16CC C6 59			dec I0B
  1567 16CE 10 91			jpl l_05EF
  1568 16D0			l_05FD
  1569 16D0			l_05E5
  1570
  1571 				; optimize OK (ai.inc), line = 50
  1572
  1573 16D0 A5 5C			lda AVAILDIR
  1574 16D2 29 04			and #$04
  1575 16D4 F0 5F			jeq l_0685
  1576
  1577 				; optimize OK (ai.inc), line = 51
  1578
  1579 16D6 A9 05			lda #$05
  1580 16D8 85 59			sta I0B
  1581
  1582 16DA			l_068F
  1583 				; --- ForToDoCondition
  1584 16DA A5 59			lda I0B
  1585 16DC C9 01			cmp #$01
  1586 16DE 90 55			jcc l_069D
  1587
  1588 				; optimize OK (ai.inc), line = 52
  1589
  1590 16E0 A5 5D			lda T0W
  1591 16E2 38 E5 59			sub I0B
  1592 16E5 A8				tay
  1593 16E6 A5 5E			lda T0W+1
  1594 16E8 E9 00			sbc #$00
  1595 16EA 85 11			sta :bp+1
  1596 16EC B1 10			lda (:bp),y
  1597 16EE C9 20			cmp #$20
  1598 16F0 D0 03			jne l_06B5
  1599 16F2 EE D6 2C			inc L
  1600 16F5			l_06B5
  1601
  1602 				; optimize OK (ai.inc), line = 53
  1603
  1604 16F5 A5 5D			lda T0W
  1605 16F7 38 E5 59			sub I0B
  1606 16FA A8				tay
  1607 16FB A5 5E			lda T0W+1
  1608 16FD E9 00			sbc #$00
  1609 16FF 85 11			sta :bp+1
  1610 1701 98				tya
  1611 1702 18 69 28			add #$28
  1612 1705 A8				tay
  1613 1706 90 02			scc
  1614 1708 E6 11			inc :bp+1
  1615 170A B1 10			lda (:bp),y
  1616 170C C9 20			cmp #$20
  1617 170E D0 03			jne l_06D8
  1618 1710 EE D6 2C			inc L
  1619 1713			l_06D8
  1620
  1621 				; optimize OK (ai.inc), line = 54
  1622
  1623 1713 A5 5D			lda T0W
  1624 1715 38 E5 59			sub I0B
  1625 1718 A8				tay
  1626 1719 A5 5E			lda T0W+1
  1627 171B E9 00			sbc #$00
  1628 171D 85 11			sta :bp+1
  1629 171F 98				tya
  1630 1720 38 E9 28			sub #$28
  1631 1723 A8				tay
  1632 1724 B0 02			scs
  1633 1726 C6 11			dec :bp+1
  1634 1728 B1 10			lda (:bp),y
  1635 172A C9 20			cmp #$20
  1636 172C D0 03			jne l_06FB
  1637 172E EE D6 2C			inc L
  1638 1731			l_06FB
  1639
  1640 				; --- ForToDoEpilog
  1641 1731 C6 59			dec I0B
  1642 1733 10 A5			jpl l_068F
  1643 1735			l_069D
  1644 1735			l_0685
  1645
  1646 				; optimize OK (ai.inc), line = 58
  1647
  1648 1735 A5 5C			lda AVAILDIR
  1649 1737 29 08			and #$08
  1650 1739 F0 5D			jeq l_071F
  1651
  1652 				; optimize OK (ai.inc), line = 59
  1653
  1654 173B A9 05			lda #$05
  1655 173D 85 59			sta I0B
  1656
  1657 173F			l_0729
  1658 				; --- ForToDoCondition
  1659 173F A5 59			lda I0B
  1660 1741 C9 01			cmp #$01
  1661 1743 90 53			jcc l_0737
  1662
  1663 				; optimize OK (ai.inc), line = 60
  1664
  1665 1745 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1666 174D A4 59			ldy I0B
  1667 174F B1 12			lda (:bp2),y
  1668 1751 C9 20			cmp #$20
  1669 1753 D0 03			jne l_074F
  1670 1755 EE D7 2C			inc R
  1671 1758			l_074F
  1672
  1673 				; optimize OK (ai.inc), line = 61
  1674
  1675 1758 A5 5D			lda T0W
  1676 175A 18 65 59			add I0B
  1677 175D A8				tay
  1678 175E A5 5E			lda T0W+1
  1679 1760 69 00			adc #$00
  1680 1762 85 11			sta :bp+1
  1681 1764 98				tya
  1682 1765 18 69 28			add #$28
  1683 1768 A8				tay
  1684 1769 90 02			scc
  1685 176B E6 11			inc :bp+1
  1686 176D B1 10			lda (:bp),y
  1687 176F C9 20			cmp #$20
  1688 1771 D0 03			jne l_0772
  1689 1773 EE D7 2C			inc R
  1690 1776			l_0772
  1691
  1692 				; optimize OK (ai.inc), line = 62
  1693
  1694 1776 A5 5D			lda T0W
  1695 1778 18 65 59			add I0B
  1696 177B A8				tay
  1697 177C A5 5E			lda T0W+1
  1698 177E 69 00			adc #$00
  1699 1780 85 11			sta :bp+1
  1700 1782 98				tya
  1701 1783 38 E9 28			sub #$28
  1702 1786 A8				tay
  1703 1787 B0 02			scs
  1704 1789 C6 11			dec :bp+1
  1705 178B B1 10			lda (:bp),y
  1706 178D C9 20			cmp #$20
  1707 178F D0 03			jne l_0795
  1708 1791 EE D7 2C			inc R
  1709 1794			l_0795
  1710
  1711 				; --- ForToDoEpilog
  1712 1794 C6 59			dec I0B
  1713 1796 10 A7			jpl l_0729
  1714 1798			l_0737
  1715 1798			l_071F
  1716
  1717 				; optimize OK (ai.inc), line = 66
  1718
  1719 1798 AD D9 2C			lda D
  1720 179B 85 58			sta T0B
  1721
  1722 				; optimize OK (ai.inc), line = 67
  1723
  1724 179D CD D8 2C			cmp U
  1725 17A0 B0 05			jcs l_07BD
  1726 17A2 AD D8 2C			lda U
  1727 17A5 85 58			sta T0B
  1728 17A7			l_07BD
  1729
  1730 				; optimize OK (ai.inc), line = 68
  1731
  1732 17A7 A5 58			lda T0B
  1733 17A9 CD D6 2C			cmp L
  1734 17AC B0 05			jcs l_07DA
  1735 17AE AD D6 2C			lda L
  1736 17B1 85 58			sta T0B
  1737 17B3			l_07DA
  1738
  1739 				; optimize OK (ai.inc), line = 69
  1740
  1741 17B3 A5 58			lda T0B
  1742 17B5 CD D7 2C			cmp R
  1743 17B8 B0 05			jcs l_07F7
  1744 17BA AD D7 2C			lda R
  1745 17BD 85 58			sta T0B
  1746 17BF			l_07F7
  1747
  1748 				; optimize OK (ai.inc), line = 71
  1749
  1750 17BF A5 58			lda T0B
  1751 17C1 CD D9 2C			cmp D
  1752 17C4 D0 04			jne l_0814
  1753 17C6 A9 02			lda #$02
  1754 17C8 85 58			sta T0B
  1755 17CA			l_0814
  1756
  1757 				; optimize OK (ai.inc), line = 72
  1758
  1759 17CA A5 58			lda T0B
  1760 17CC CD D8 2C			cmp U
  1761 17CF D0 04			jne l_082F
  1762 17D1 A9 01			lda #$01
  1763 17D3 85 58			sta T0B
  1764 17D5			l_082F
  1765
  1766 				; optimize OK (ai.inc), line = 73
  1767
  1768 17D5 A5 58			lda T0B
  1769 17D7 CD D6 2C			cmp L
  1770 17DA D0 04			jne l_084A
  1771 17DC A9 04			lda #$04
  1772 17DE 85 58			sta T0B
  1773 17E0			l_084A
  1774
  1775 				; optimize OK (ai.inc), line = 74
  1776
  1777 17E0 A5 58			lda T0B
  1778 17E2 CD D7 2C			cmp R
  1779 17E5 D0 04			jne l_0865
  1780 17E7 A9 08			lda #$08
  1781 17E9 85 58			sta T0B
  1782 17EB			l_0865
  1783
  1784 				; optimize OK (ai.inc), line = 76
  1785
  1786 17EB A5 5C			lda AVAILDIR
  1787 17ED 25 58			and T0B
  1788 17EF F0 07			jeq l_0884
  1789 17F1 A5 58			lda T0B
  1790 17F3 85 5B			sta NEWDIR
  1791 17F5 4C FB 17			jmp l_0894
  1792 17F8			l_0884
  1793
  1794 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1795
  1796 17F8 20 1D 15			jsr AISTRAIGHT
  1797 17FB			l_0894
  1798
  1799 				; ------------------------------------------------------------
  1800
  1801 = 2CD6			L	= DATAORIGIN+$005A
  1802 = 2CD7			R	= DATAORIGIN+$005B
  1803 = 2CD8			U	= DATAORIGIN+$005C
  1804 = 2CD9			D	= DATAORIGIN+$005D
  1805 = 0001			@FORTMP_054C	= $01
  1806 = 0001			@FORTMP_05EC	= $01
  1807 = 0001			@FORTMP_068C	= $01
  1808 = 0001			@FORTMP_0726	= $01
  1809
  1810 = 2CD6			@VarData	= L
  1811 = 0004			@VarDataSize	= 4
  1812
  1813 17FB			@exit
  1814 					.ifdef @new
  1815 					lda <@VarData
  1816 					sta :ztmp
  1817 					lda >@VarData
  1818 					ldy #@VarDataSize-1
  1819 					jmp @FreeMem
  1820 					els
  1821 17FB 60				rts						; ret
  1822 					eif
  1823 				.endl
  1824
  1825 17FC			.local	AIBULLY						; PROCEDURE
  1826
  1827 				; optimize OK (ai.inc), line = 84
  1828
  1829 17FC AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  1830 1806 A0 04			ldy #PLY.DIR-DATAORIGIN
  1831 1808 B1 12			lda (:bp2),y
  1832 180A 85 58			sta T0B
  1833
  1834 				; optimize OK (ai.inc), line = 86
  1835
  1836 180C AD 95 2C			lda PLAYER1.ISALIVE
  1837 180F 0D 9D 2C			ora PLAYER2.ISALIVE
  1838 1812 D0 03 4C B9 18		jeq l_08B1
  1839
  1840 				; optimize OK (ai.inc), line = 88
  1841
  1842 1817 AD 95 2C			lda PLAYER1.ISALIVE
  1843 181A F0 0F			jeq l_08BE
  1844 181C AD 71 2C			lda PLAYER1
  1845 181F 8D 6F 2C			sta TMPPLY
  1846 1822 AD 72 2C			lda PLAYER1+1
  1847 1825 8D 70 2C			sta TMPPLY+1
  1848 1828 4C 37 18			jmp l_08CD
  1849 182B			l_08BE
  1850 182B AD 73 2C			lda PLAYER2
  1851 182E 8D 6F 2C			sta TMPPLY
  1852 1831 AD 74 2C			lda PLAYER2+1
  1853 1834 8D 70 2C			sta TMPPLY+1
  1854 1837			l_08CD
  1855
  1856 				; optimize OK (ai.inc), line = 90
  1857
  1858 1837 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  1859 1841 A0 01			ldy #PLY.Y-DATAORIGIN
  1860 1843 B1 12			lda (:bp2),y
  1861 1845 85 21			sta :STACKORIGIN+9
  1862 1847 AC 6F 2C 84 12 AC + 	mwy TMPPLY :bp2
  1863 1851 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1864 1853 B1 12			lda (:bp2),y
  1865 1855 C5 21			cmp :STACKORIGIN+9
  1866 1857 B0 07			jcs l_08E6
  1867 1859 A9 01			lda #$01
  1868 185B 85 58			sta T0B
  1869 185D 4C 64 18			jmp l_08F4
  1870 1860			l_08E6
  1871 1860 A9 02			lda #$02
  1872 1862 85 58			sta T0B
  1873 1864			l_08F4
  1874
  1875 				; optimize OK (ai.inc), line = 91
  1876
  1877 1864 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  1878 186E A0 01			ldy #PLY.Y-DATAORIGIN
  1879 1870 B1 12			lda (:bp2),y
  1880 1872 85 21			sta :STACKORIGIN+9
  1881 1874 AC 6F 2C 84 12 AC + 	mwy TMPPLY :bp2
  1882 187E A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1883 1880 B1 12			lda (:bp2),y
  1884 1882 C5 21			cmp :STACKORIGIN+9
  1885 1884 F0 06			jeq l_091Ex
  1886 1886 A5 5C			lda AVAILDIR
  1887 1888 25 58			and T0B
  1888 188A D0 2D			jne l_091E
  1889 188C			l_091Ex
  1890
  1891 				; optimize OK (ai.inc), line = 92
  1892
  1893 188C AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  1894 1896 A0 00			ldy #PLY.X-DATAORIGIN
  1895 1898 B1 12			lda (:bp2),y
  1896 189A 85 21			sta :STACKORIGIN+9
  1897 189C AC 6F 2C 84 12 AC + 	mwy TMPPLY :bp2
  1898 18A6 A0 00			ldy #TMPPLY.X-DATAORIGIN
  1899 18A8 B1 12			lda (:bp2),y
  1900 18AA C5 21			cmp :STACKORIGIN+9
  1901 18AC B0 07			jcs l_0933
  1902 18AE A9 04			lda #$04
  1903 18B0 85 58			sta T0B
  1904 18B2 4C B9 18			jmp l_0941
  1905 18B5			l_0933
  1906 18B5 A9 08			lda #$08
  1907 18B7 85 58			sta T0B
  1908 18B9			l_0941
  1909 18B9			l_091E
  1910 18B9			l_08B1
  1911
  1912 				; optimize OK (ai.inc), line = 96
  1913
  1914 18B9 A5 5C			lda AVAILDIR
  1915 18BB 25 58			and T0B
  1916 18BD F0 07			jeq l_0961
  1917 18BF A5 58			lda T0B
  1918 18C1 85 5B			sta NEWDIR
  1919 18C3 4C C9 18			jmp l_0971
  1920 18C6			l_0961
  1921
  1922 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  1923
  1924 18C6 20 A2 15			jsr AISAPPER
  1925 18C9			l_0971
  1926 18C9			@exit
  1927 					.ifdef @new
  1928 					lda <@VarData
  1929 					sta :ztmp
  1930 					lda >@VarData
  1931 					ldy #@VarDataSize-1
  1932 					jmp @FreeMem
  1933 					els
  1934 18C9 60				rts						; ret
  1935 					eif
  1936 				.endl
  1937
  1938 18CA			.local	AIMIRROR					; PROCEDURE
  1939
  1940 				; optimize OK (ai.inc), line = 105
  1941
  1942 18CA AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  1943 18D4 A0 04			ldy #PLY.DIR-DATAORIGIN
  1944 18D6 B1 12			lda (:bp2),y
  1945 18D8 85 58			sta T0B
  1946
  1947 				; optimize OK (ai.inc), line = 107
  1948
  1949 18DA AD 95 2C			lda PLAYER1.ISALIVE
  1950 18DD F0 2F			jeq l_0988
  1951
  1952 				; optimize OK (ai.inc), line = 108
  1953
  1954 18DF AD 92 2C			lda PLAYER1.DIR
  1955 18E2 8D DA 2C			sta @CASETMP_0005
  1956 18E5 C9 01			cmp #$01
  1957 18E7 D0 07			jne l_0994
  1958 18E9			@
  1959
  1960 				; optimize OK (ai.inc), line = 109
  1961
  1962 18E9 A9 02			lda #$02
  1963 18EB 85 58			sta T0B
  1964
  1965 18ED 4C 0E 19			jmp a_0005
  1966 18F0			l_0994
  1967 18F0 C9 02			cmp #$02
  1968 18F2 D0 07			jne l_09A1
  1969 18F4			@
  1970
  1971 				; optimize OK (ai.inc), line = 110
  1972
  1973 18F4 A9 01			lda #$01
  1974 18F6 85 58			sta T0B
  1975
  1976 18F8 4C 0E 19			jmp a_0005
  1977 18FB			l_09A1
  1978 18FB C9 04			cmp #$04
  1979 18FD D0 07			jne l_09AE
  1980 18FF			@
  1981
  1982 				; optimize OK (ai.inc), line = 111
  1983
  1984 18FF A9 08			lda #$08
  1985 1901 85 58			sta T0B
  1986
  1987 1903 4C 0E 19			jmp a_0005
  1988 1906			l_09AE
  1989 1906 C9 08			cmp #$08
  1990 1908 D0 04			jne l_09BB
  1991 190A			@
  1992
  1993 				; optimize OK (ai.inc), line = 112
  1994
  1995 190A A9 04			lda #$04
  1996 190C 85 58			sta T0B
  1997
  1998 190E			l_09BB
  1999 190E			a_0005
  2000 190E			l_0988
  2001
  2002 				; optimize OK (ai.inc), line = 116
  2003
  2004 190E A5 5C			lda AVAILDIR
  2005 1910 25 58			and T0B
  2006 1912 F0 07			jeq l_09E1
  2007 1914 A5 58			lda T0B
  2008 1916 85 5B			sta NEWDIR
  2009 1918 4C 1E 19			jmp l_09F1
  2010 191B			l_09E1
  2011
  2012 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  2013
  2014 191B 20 A2 15			jsr AISAPPER
  2015 191E			l_09F1
  2016
  2017 				; ------------------------------------------------------------
  2018
  2019 = 2CDA			@CASETMP_0005	= DATAORIGIN+$005E
  2020
  2021 = 2CDA			@VarData	= @CASETMP_0005
  2022 = 0001			@VarDataSize	= 1
  2023
  2024 191E			@exit
  2025 					.ifdef @new
  2026 					lda <@VarData
  2027 					sta :ztmp
  2028 					lda >@VarData
  2029 					ldy #@VarDataSize-1
  2030 					jmp @FreeMem
  2031 					els
  2032 191E 60				rts						; ret
  2033 					eif
  2034 				.endl
  2035
  2036 191F			.local	SETLEVEL00					; PROCEDURE
  2037
  2038 				; optimize OK (levels.inc), line = 5
  2039
  2040 191F A9 01			lda #$01
  2041 1921 8D D3 2C			sta SETPLAYER.ISALIVE
  2042 1924 A9 62			lda #$62
  2043 1926 8D D2 2C			sta SETPLAYER.COLOUR
  2044 1929 A9 51			lda #$51
  2045 192B 8D D1 2C			sta SETPLAYER.HEAD
  2046 192E A9 00			lda #$00
  2047 1930 8D D0 2C			sta SETPLAYER.BRAIN
  2048 1933 A9 08			lda #$08
  2049 1935 8D CF 2C			sta SETPLAYER.DIR
  2050 1938 A9 0C			lda #$0C
  2051 193A 8D CE 2C			sta SETPLAYER.Y
  2052 193D A9 0A			lda #$0A
  2053 193F 8D CD 2C			sta SETPLAYER.X
  2054 1942 AD 71 2C			lda PLAYER1
  2055 1945 8D CB 2C			sta SETPLAYER.P
  2056 1948 AD 72 2C			lda PLAYER1+1
  2057 194B 8D CC 2C			sta SETPLAYER.P+1
  2058 194E 20 23 14			jsr SETPLAYER
  2059
  2060 				; optimize OK (levels.inc), line = 6
  2061
  2062 1951 A9 01			lda #$01
  2063 1953 8D D3 2C			sta SETPLAYER.ISALIVE
  2064 1956 A9 5D			lda #$5D
  2065 1958 8D D2 2C			sta SETPLAYER.COLOUR
  2066 195B A9 51			lda #$51
  2067 195D 8D D1 2C			sta SETPLAYER.HEAD
  2068 1960 A9 01			lda #$01
  2069 1962 8D D0 2C			sta SETPLAYER.BRAIN
  2070 1965 A9 04			lda #$04
  2071 1967 8D CF 2C			sta SETPLAYER.DIR
  2072 196A A9 0C			lda #$0C
  2073 196C 8D CE 2C			sta SETPLAYER.Y
  2074 196F A9 1E			lda #$1E
  2075 1971 8D CD 2C			sta SETPLAYER.X
  2076 1974 AD 73 2C			lda PLAYER2
  2077 1977 8D CB 2C			sta SETPLAYER.P
  2078 197A AD 74 2C			lda PLAYER2+1
  2079 197D 8D CC 2C			sta SETPLAYER.P+1
  2080 1980 20 23 14			jsr SETPLAYER
  2081
  2082 				; optimize OK (levels.inc), line = 7
  2083
  2084 1983 A9 00			lda #$00
  2085 1985 8D D3 2C			sta SETPLAYER.ISALIVE
  2086 1988 A9 71			lda #$71
  2087 198A 8D D2 2C			sta SETPLAYER.COLOUR
  2088 198D A9 51			lda #$51
  2089 198F 8D D1 2C			sta SETPLAYER.HEAD
  2090 1992 A9 03			lda #$03
  2091 1994 8D D0 2C			sta SETPLAYER.BRAIN
  2092 1997 A9 02			lda #$02
  2093 1999 8D CF 2C			sta SETPLAYER.DIR
  2094 199C A9 04			lda #$04
  2095 199E 8D CE 2C			sta SETPLAYER.Y
  2096 19A1 A9 14			lda #$14
  2097 19A3 8D CD 2C			sta SETPLAYER.X
  2098 19A6 AD 75 2C			lda PLAYER3
  2099 19A9 8D CB 2C			sta SETPLAYER.P
  2100 19AC AD 76 2C			lda PLAYER3+1
  2101 19AF 8D CC 2C			sta SETPLAYER.P+1
  2102 19B2 20 23 14			jsr SETPLAYER
  2103
  2104 				; optimize OK (levels.inc), line = 8
  2105
  2106 19B5 A9 00			lda #$00
  2107 19B7 8D D3 2C			sta SETPLAYER.ISALIVE
  2108 19BA A9 55			lda #$55
  2109 19BC 8D D2 2C			sta SETPLAYER.COLOUR
  2110 19BF A9 51			lda #$51
  2111 19C1 8D D1 2C			sta SETPLAYER.HEAD
  2112 19C4 A9 02			lda #$02
  2113 19C6 8D D0 2C			sta SETPLAYER.BRAIN
  2114 19C9 A9 01			lda #$01
  2115 19CB 8D CF 2C			sta SETPLAYER.DIR
  2116 19CE A9 12			lda #$12
  2117 19D0 8D CE 2C			sta SETPLAYER.Y
  2118 19D3 A9 14			lda #$14
  2119 19D5 8D CD 2C			sta SETPLAYER.X
  2120 19D8 AD 77 2C			lda PLAYER4
  2121 19DB 8D CB 2C			sta SETPLAYER.P
  2122 19DE AD 78 2C			lda PLAYER4+1
  2123 19E1 8D CC 2C			sta SETPLAYER.P+1
  2124 19E4 20 23 14			jsr SETPLAYER
  2125
  2126 				; optimize FAIL (1, levels.inc), line = 10
  2127
  2128 19E7 E8				inx
  2129 19E8 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2130 19EC 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2131 19EE A9 06			lda #$06
  2132 19F0 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2133 19F3 A9 0A			lda #$0A
  2134 19F5 8D C7 2C			sta CALCOBSTACLEADDR.X
  2135 19F8 20 F3 12			jsr CALCOBSTACLEADDR
  2136 19FB B4 17			ldy :STACKORIGIN-1,x
  2137 19FD B5 18			lda :STACKORIGIN,x
  2138 19FF 99 AE 2C			sta adr.OBSTACLES,y
  2139 1A02 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2140 1A04 99 AF 2C			sta adr.OBSTACLES+1,y
  2141 1A07 CA				dex
  2142
  2143 				; optimize FAIL (1, levels.inc), line = 11
  2144
  2145 1A08 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2146 1A0C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2147 1A10 A9 06			lda #$06
  2148 1A12 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2149 1A15 A9 1E			lda #$1E
  2150 1A17 8D C7 2C			sta CALCOBSTACLEADDR.X
  2151 1A1A 20 F3 12			jsr CALCOBSTACLEADDR
  2152 1A1D B4 17			ldy :STACKORIGIN-1,x
  2153 1A1F B5 18			lda :STACKORIGIN,x
  2154 1A21 99 AE 2C			sta adr.OBSTACLES,y
  2155 1A24 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2156 1A26 99 AF 2C			sta adr.OBSTACLES+1,y
  2157 1A29 CA				dex
  2158
  2159 				; optimize FAIL (1, levels.inc), line = 12
  2160
  2161 1A2A A9 04 95 18			mva #$04 :STACKORIGIN,x
  2162 1A2E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2163 1A32 A9 12			lda #$12
  2164 1A34 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2165 1A37 A9 0A			lda #$0A
  2166 1A39 8D C7 2C			sta CALCOBSTACLEADDR.X
  2167 1A3C 20 F3 12			jsr CALCOBSTACLEADDR
  2168 1A3F B4 17			ldy :STACKORIGIN-1,x
  2169 1A41 B5 18			lda :STACKORIGIN,x
  2170 1A43 99 AE 2C			sta adr.OBSTACLES,y
  2171 1A46 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2172 1A48 99 AF 2C			sta adr.OBSTACLES+1,y
  2173 1A4B CA				dex
  2174
  2175 				; optimize FAIL (1, levels.inc), line = 13
  2176
  2177 1A4C A9 06 95 18			mva #$06 :STACKORIGIN,x
  2178 1A50 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2179 1A54 A9 12			lda #$12
  2180 1A56 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2181 1A59 A9 1E			lda #$1E
  2182 1A5B 8D C7 2C			sta CALCOBSTACLEADDR.X
  2183 1A5E 20 F3 12			jsr CALCOBSTACLEADDR
  2184 1A61 B4 17			ldy :STACKORIGIN-1,x
  2185 1A63 B5 18			lda :STACKORIGIN,x
  2186 1A65 99 AE 2C			sta adr.OBSTACLES,y
  2187 1A68 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2188 1A6A 99 AF 2C			sta adr.OBSTACLES+1,y
  2189 1A6D CA				dex
  2190
  2191 				; optimize FAIL (1, levels.inc), line = 14
  2192
  2193 1A6E A9 08 95 18			mva #$08 :STACKORIGIN,x
  2194 1A72 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2195 1A76 A9 02			lda #$02
  2196 1A78 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2197 1A7B A9 14			lda #$14
  2198 1A7D 8D C7 2C			sta CALCOBSTACLEADDR.X
  2199 1A80 20 F3 12			jsr CALCOBSTACLEADDR
  2200 1A83 B4 17			ldy :STACKORIGIN-1,x
  2201 1A85 B5 18			lda :STACKORIGIN,x
  2202 1A87 99 AE 2C			sta adr.OBSTACLES,y
  2203 1A8A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2204 1A8C 99 AF 2C			sta adr.OBSTACLES+1,y
  2205 1A8F CA				dex
  2206
  2207 				; optimize FAIL (1, levels.inc), line = 15
  2208
  2209 1A90 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2210 1A94 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2211 1A98 A9 16			lda #$16
  2212 1A9A 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2213 1A9D A9 14			lda #$14
  2214 1A9F 8D C7 2C			sta CALCOBSTACLEADDR.X
  2215 1AA2 20 F3 12			jsr CALCOBSTACLEADDR
  2216 1AA5 B4 17			ldy :STACKORIGIN-1,x
  2217 1AA7 B5 18			lda :STACKORIGIN,x
  2218 1AA9 99 AE 2C			sta adr.OBSTACLES,y
  2219 1AAC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2220 1AAE 99 AF 2C			sta adr.OBSTACLES+1,y
  2221 1AB1 CA				dex
  2222 1AB2 CA				dex
  2223
  2224 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 17
  2225
  2226 1AB3 20 16 13			jsr SAVEOBSTACLES
  2227 1AB6			@exit
  2228 					.ifdef @new
  2229 					lda <@VarData
  2230 					sta :ztmp
  2231 					lda >@VarData
  2232 					ldy #@VarDataSize-1
  2233 					jmp @FreeMem
  2234 					els
  2235 1AB6 60				rts						; ret
  2236 					eif
  2237 				.endl
  2238
  2239 1AB7			.local	SETLEVEL01					; PROCEDURE
  2240
  2241 				; optimize OK (levels.inc), line = 24
  2242
  2243 1AB7 A9 01			lda #$01
  2244 1AB9 8D D3 2C			sta SETPLAYER.ISALIVE
  2245 1ABC A9 62			lda #$62
  2246 1ABE 8D D2 2C			sta SETPLAYER.COLOUR
  2247 1AC1 A9 51			lda #$51
  2248 1AC3 8D D1 2C			sta SETPLAYER.HEAD
  2249 1AC6 A9 00			lda #$00
  2250 1AC8 8D D0 2C			sta SETPLAYER.BRAIN
  2251 1ACB A9 08			lda #$08
  2252 1ACD 8D CF 2C			sta SETPLAYER.DIR
  2253 1AD0 A9 0C			lda #$0C
  2254 1AD2 8D CE 2C			sta SETPLAYER.Y
  2255 1AD5 A9 0A			lda #$0A
  2256 1AD7 8D CD 2C			sta SETPLAYER.X
  2257 1ADA AD 71 2C			lda PLAYER1
  2258 1ADD 8D CB 2C			sta SETPLAYER.P
  2259 1AE0 AD 72 2C			lda PLAYER1+1
  2260 1AE3 8D CC 2C			sta SETPLAYER.P+1
  2261 1AE6 20 23 14			jsr SETPLAYER
  2262
  2263 				; optimize OK (levels.inc), line = 25
  2264
  2265 1AE9 A9 01			lda #$01
  2266 1AEB 8D D3 2C			sta SETPLAYER.ISALIVE
  2267 1AEE A9 5D			lda #$5D
  2268 1AF0 8D D2 2C			sta SETPLAYER.COLOUR
  2269 1AF3 A9 51			lda #$51
  2270 1AF5 8D D1 2C			sta SETPLAYER.HEAD
  2271 1AF8 A9 01			lda #$01
  2272 1AFA 8D D0 2C			sta SETPLAYER.BRAIN
  2273 1AFD A9 04			lda #$04
  2274 1AFF 8D CF 2C			sta SETPLAYER.DIR
  2275 1B02 A9 0C			lda #$0C
  2276 1B04 8D CE 2C			sta SETPLAYER.Y
  2277 1B07 A9 1E			lda #$1E
  2278 1B09 8D CD 2C			sta SETPLAYER.X
  2279 1B0C AD 73 2C			lda PLAYER2
  2280 1B0F 8D CB 2C			sta SETPLAYER.P
  2281 1B12 AD 74 2C			lda PLAYER2+1
  2282 1B15 8D CC 2C			sta SETPLAYER.P+1
  2283 1B18 20 23 14			jsr SETPLAYER
  2284
  2285 				; optimize OK (levels.inc), line = 26
  2286
  2287 1B1B A9 00			lda #$00
  2288 1B1D 8D D3 2C			sta SETPLAYER.ISALIVE
  2289 1B20 A9 71			lda #$71
  2290 1B22 8D D2 2C			sta SETPLAYER.COLOUR
  2291 1B25 A9 51			lda #$51
  2292 1B27 8D D1 2C			sta SETPLAYER.HEAD
  2293 1B2A A9 03			lda #$03
  2294 1B2C 8D D0 2C			sta SETPLAYER.BRAIN
  2295 1B2F A9 02			lda #$02
  2296 1B31 8D CF 2C			sta SETPLAYER.DIR
  2297 1B34 A9 04			lda #$04
  2298 1B36 8D CE 2C			sta SETPLAYER.Y
  2299 1B39 A9 14			lda #$14
  2300 1B3B 8D CD 2C			sta SETPLAYER.X
  2301 1B3E AD 75 2C			lda PLAYER3
  2302 1B41 8D CB 2C			sta SETPLAYER.P
  2303 1B44 AD 76 2C			lda PLAYER3+1
  2304 1B47 8D CC 2C			sta SETPLAYER.P+1
  2305 1B4A 20 23 14			jsr SETPLAYER
  2306
  2307 				; optimize OK (levels.inc), line = 27
  2308
  2309 1B4D A9 00			lda #$00
  2310 1B4F 8D D3 2C			sta SETPLAYER.ISALIVE
  2311 1B52 A9 55			lda #$55
  2312 1B54 8D D2 2C			sta SETPLAYER.COLOUR
  2313 1B57 A9 51			lda #$51
  2314 1B59 8D D1 2C			sta SETPLAYER.HEAD
  2315 1B5C A9 02			lda #$02
  2316 1B5E 8D D0 2C			sta SETPLAYER.BRAIN
  2317 1B61 A9 01			lda #$01
  2318 1B63 8D CF 2C			sta SETPLAYER.DIR
  2319 1B66 A9 12			lda #$12
  2320 1B68 8D CE 2C			sta SETPLAYER.Y
  2321 1B6B A9 14			lda #$14
  2322 1B6D 8D CD 2C			sta SETPLAYER.X
  2323 1B70 AD 77 2C			lda PLAYER4
  2324 1B73 8D CB 2C			sta SETPLAYER.P
  2325 1B76 AD 78 2C			lda PLAYER4+1
  2326 1B79 8D CC 2C			sta SETPLAYER.P+1
  2327 1B7C 20 23 14			jsr SETPLAYER
  2328
  2329 				; optimize FAIL (1, levels.inc), line = 29
  2330
  2331 1B7F E8				inx
  2332 1B80 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2333 1B84 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2334 1B86 A9 06			lda #$06
  2335 1B88 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2336 1B8B A9 0A			lda #$0A
  2337 1B8D 8D C7 2C			sta CALCOBSTACLEADDR.X
  2338 1B90 20 F3 12			jsr CALCOBSTACLEADDR
  2339 1B93 B4 17			ldy :STACKORIGIN-1,x
  2340 1B95 B5 18			lda :STACKORIGIN,x
  2341 1B97 99 AE 2C			sta adr.OBSTACLES,y
  2342 1B9A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2343 1B9C 99 AF 2C			sta adr.OBSTACLES+1,y
  2344 1B9F CA				dex
  2345
  2346 				; optimize FAIL (1, levels.inc), line = 30
  2347
  2348 1BA0 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2349 1BA4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2350 1BA8 A9 06			lda #$06
  2351 1BAA 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2352 1BAD A9 1E			lda #$1E
  2353 1BAF 8D C7 2C			sta CALCOBSTACLEADDR.X
  2354 1BB2 20 F3 12			jsr CALCOBSTACLEADDR
  2355 1BB5 B4 17			ldy :STACKORIGIN-1,x
  2356 1BB7 B5 18			lda :STACKORIGIN,x
  2357 1BB9 99 AE 2C			sta adr.OBSTACLES,y
  2358 1BBC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2359 1BBE 99 AF 2C			sta adr.OBSTACLES+1,y
  2360 1BC1 CA				dex
  2361
  2362 				; optimize FAIL (1, levels.inc), line = 31
  2363
  2364 1BC2 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2365 1BC6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2366 1BCA A9 12			lda #$12
  2367 1BCC 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2368 1BCF A9 0A			lda #$0A
  2369 1BD1 8D C7 2C			sta CALCOBSTACLEADDR.X
  2370 1BD4 20 F3 12			jsr CALCOBSTACLEADDR
  2371 1BD7 B4 17			ldy :STACKORIGIN-1,x
  2372 1BD9 B5 18			lda :STACKORIGIN,x
  2373 1BDB 99 AE 2C			sta adr.OBSTACLES,y
  2374 1BDE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2375 1BE0 99 AF 2C			sta adr.OBSTACLES+1,y
  2376 1BE3 CA				dex
  2377
  2378 				; optimize FAIL (1, levels.inc), line = 32
  2379
  2380 1BE4 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2381 1BE8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2382 1BEC A9 12			lda #$12
  2383 1BEE 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2384 1BF1 A9 1E			lda #$1E
  2385 1BF3 8D C7 2C			sta CALCOBSTACLEADDR.X
  2386 1BF6 20 F3 12			jsr CALCOBSTACLEADDR
  2387 1BF9 B4 17			ldy :STACKORIGIN-1,x
  2388 1BFB B5 18			lda :STACKORIGIN,x
  2389 1BFD 99 AE 2C			sta adr.OBSTACLES,y
  2390 1C00 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2391 1C02 99 AF 2C			sta adr.OBSTACLES+1,y
  2392 1C05 CA				dex
  2393
  2394 				; optimize FAIL (1, levels.inc), line = 33
  2395
  2396 1C06 A9 08 95 18			mva #$08 :STACKORIGIN,x
  2397 1C0A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2398 1C0E A9 02			lda #$02
  2399 1C10 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2400 1C13 A9 14			lda #$14
  2401 1C15 8D C7 2C			sta CALCOBSTACLEADDR.X
  2402 1C18 20 F3 12			jsr CALCOBSTACLEADDR
  2403 1C1B B4 17			ldy :STACKORIGIN-1,x
  2404 1C1D B5 18			lda :STACKORIGIN,x
  2405 1C1F 99 AE 2C			sta adr.OBSTACLES,y
  2406 1C22 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2407 1C24 99 AF 2C			sta adr.OBSTACLES+1,y
  2408 1C27 CA				dex
  2409
  2410 				; optimize FAIL (1, levels.inc), line = 34
  2411
  2412 1C28 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2413 1C2C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2414 1C30 A9 16			lda #$16
  2415 1C32 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2416 1C35 A9 14			lda #$14
  2417 1C37 8D C7 2C			sta CALCOBSTACLEADDR.X
  2418 1C3A 20 F3 12			jsr CALCOBSTACLEADDR
  2419 1C3D B4 17			ldy :STACKORIGIN-1,x
  2420 1C3F B5 18			lda :STACKORIGIN,x
  2421 1C41 99 AE 2C			sta adr.OBSTACLES,y
  2422 1C44 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2423 1C46 99 AF 2C			sta adr.OBSTACLES+1,y
  2424 1C49 CA				dex
  2425 1C4A CA				dex
  2426
  2427 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 36
  2428
  2429 1C4B 20 16 13			jsr SAVEOBSTACLES
  2430 1C4E			@exit
  2431 					.ifdef @new
  2432 					lda <@VarData
  2433 					sta :ztmp
  2434 					lda >@VarData
  2435 					ldy #@VarDataSize-1
  2436 					jmp @FreeMem
  2437 					els
  2438 1C4E 60				rts						; ret
  2439 					eif
  2440 				.endl
  2441
  2442 1C4F			.local	SETLEVEL02					; PROCEDURE
  2443
  2444 				; optimize OK (levels.inc), line = 43
  2445
  2446 1C4F A9 01			lda #$01
  2447 1C51 8D D3 2C			sta SETPLAYER.ISALIVE
  2448 1C54 A9 62			lda #$62
  2449 1C56 8D D2 2C			sta SETPLAYER.COLOUR
  2450 1C59 A9 51			lda #$51
  2451 1C5B 8D D1 2C			sta SETPLAYER.HEAD
  2452 1C5E A9 00			lda #$00
  2453 1C60 8D D0 2C			sta SETPLAYER.BRAIN
  2454 1C63 A9 08			lda #$08
  2455 1C65 8D CF 2C			sta SETPLAYER.DIR
  2456 1C68 A9 0C			lda #$0C
  2457 1C6A 8D CE 2C			sta SETPLAYER.Y
  2458 1C6D A9 0A			lda #$0A
  2459 1C6F 8D CD 2C			sta SETPLAYER.X
  2460 1C72 AD 71 2C			lda PLAYER1
  2461 1C75 8D CB 2C			sta SETPLAYER.P
  2462 1C78 AD 72 2C			lda PLAYER1+1
  2463 1C7B 8D CC 2C			sta SETPLAYER.P+1
  2464 1C7E 20 23 14			jsr SETPLAYER
  2465
  2466 				; optimize OK (levels.inc), line = 44
  2467
  2468 1C81 A9 01			lda #$01
  2469 1C83 8D D3 2C			sta SETPLAYER.ISALIVE
  2470 1C86 A9 5D			lda #$5D
  2471 1C88 8D D2 2C			sta SETPLAYER.COLOUR
  2472 1C8B A9 51			lda #$51
  2473 1C8D 8D D1 2C			sta SETPLAYER.HEAD
  2474 1C90 A9 03			lda #$03
  2475 1C92 8D D0 2C			sta SETPLAYER.BRAIN
  2476 1C95 A9 04			lda #$04
  2477 1C97 8D CF 2C			sta SETPLAYER.DIR
  2478 1C9A A9 0C			lda #$0C
  2479 1C9C 8D CE 2C			sta SETPLAYER.Y
  2480 1C9F A9 1E			lda #$1E
  2481 1CA1 8D CD 2C			sta SETPLAYER.X
  2482 1CA4 AD 73 2C			lda PLAYER2
  2483 1CA7 8D CB 2C			sta SETPLAYER.P
  2484 1CAA AD 74 2C			lda PLAYER2+1
  2485 1CAD 8D CC 2C			sta SETPLAYER.P+1
  2486 1CB0 20 23 14			jsr SETPLAYER
  2487
  2488 				; optimize OK (levels.inc), line = 45
  2489
  2490 1CB3 A9 00			lda #$00
  2491 1CB5 8D D3 2C			sta SETPLAYER.ISALIVE
  2492 1CB8 A9 71			lda #$71
  2493 1CBA 8D D2 2C			sta SETPLAYER.COLOUR
  2494 1CBD A9 51			lda #$51
  2495 1CBF 8D D1 2C			sta SETPLAYER.HEAD
  2496 1CC2 A9 03			lda #$03
  2497 1CC4 8D D0 2C			sta SETPLAYER.BRAIN
  2498 1CC7 A9 02			lda #$02
  2499 1CC9 8D CF 2C			sta SETPLAYER.DIR
  2500 1CCC A9 04			lda #$04
  2501 1CCE 8D CE 2C			sta SETPLAYER.Y
  2502 1CD1 A9 14			lda #$14
  2503 1CD3 8D CD 2C			sta SETPLAYER.X
  2504 1CD6 AD 75 2C			lda PLAYER3
  2505 1CD9 8D CB 2C			sta SETPLAYER.P
  2506 1CDC AD 76 2C			lda PLAYER3+1
  2507 1CDF 8D CC 2C			sta SETPLAYER.P+1
  2508 1CE2 20 23 14			jsr SETPLAYER
  2509
  2510 				; optimize OK (levels.inc), line = 46
  2511
  2512 1CE5 A9 00			lda #$00
  2513 1CE7 8D D3 2C			sta SETPLAYER.ISALIVE
  2514 1CEA A9 55			lda #$55
  2515 1CEC 8D D2 2C			sta SETPLAYER.COLOUR
  2516 1CEF A9 51			lda #$51
  2517 1CF1 8D D1 2C			sta SETPLAYER.HEAD
  2518 1CF4 A9 02			lda #$02
  2519 1CF6 8D D0 2C			sta SETPLAYER.BRAIN
  2520 1CF9 A9 01			lda #$01
  2521 1CFB 8D CF 2C			sta SETPLAYER.DIR
  2522 1CFE A9 12			lda #$12
  2523 1D00 8D CE 2C			sta SETPLAYER.Y
  2524 1D03 A9 14			lda #$14
  2525 1D05 8D CD 2C			sta SETPLAYER.X
  2526 1D08 AD 77 2C			lda PLAYER4
  2527 1D0B 8D CB 2C			sta SETPLAYER.P
  2528 1D0E AD 78 2C			lda PLAYER4+1
  2529 1D11 8D CC 2C			sta SETPLAYER.P+1
  2530 1D14 20 23 14			jsr SETPLAYER
  2531
  2532 				; optimize FAIL (1, levels.inc), line = 48
  2533
  2534 1D17 E8				inx
  2535 1D18 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2536 1D1C 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2537 1D1E A9 06			lda #$06
  2538 1D20 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2539 1D23 A9 0A			lda #$0A
  2540 1D25 8D C7 2C			sta CALCOBSTACLEADDR.X
  2541 1D28 20 F3 12			jsr CALCOBSTACLEADDR
  2542 1D2B B4 17			ldy :STACKORIGIN-1,x
  2543 1D2D B5 18			lda :STACKORIGIN,x
  2544 1D2F 99 AE 2C			sta adr.OBSTACLES,y
  2545 1D32 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2546 1D34 99 AF 2C			sta adr.OBSTACLES+1,y
  2547 1D37 CA				dex
  2548
  2549 				; optimize FAIL (1, levels.inc), line = 49
  2550
  2551 1D38 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2552 1D3C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2553 1D40 A9 06			lda #$06
  2554 1D42 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2555 1D45 A9 1E			lda #$1E
  2556 1D47 8D C7 2C			sta CALCOBSTACLEADDR.X
  2557 1D4A 20 F3 12			jsr CALCOBSTACLEADDR
  2558 1D4D B4 17			ldy :STACKORIGIN-1,x
  2559 1D4F B5 18			lda :STACKORIGIN,x
  2560 1D51 99 AE 2C			sta adr.OBSTACLES,y
  2561 1D54 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2562 1D56 99 AF 2C			sta adr.OBSTACLES+1,y
  2563 1D59 CA				dex
  2564
  2565 				; optimize FAIL (1, levels.inc), line = 50
  2566
  2567 1D5A A9 04 95 18			mva #$04 :STACKORIGIN,x
  2568 1D5E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2569 1D62 A9 12			lda #$12
  2570 1D64 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2571 1D67 A9 0A			lda #$0A
  2572 1D69 8D C7 2C			sta CALCOBSTACLEADDR.X
  2573 1D6C 20 F3 12			jsr CALCOBSTACLEADDR
  2574 1D6F B4 17			ldy :STACKORIGIN-1,x
  2575 1D71 B5 18			lda :STACKORIGIN,x
  2576 1D73 99 AE 2C			sta adr.OBSTACLES,y
  2577 1D76 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2578 1D78 99 AF 2C			sta adr.OBSTACLES+1,y
  2579 1D7B CA				dex
  2580
  2581 				; optimize FAIL (1, levels.inc), line = 51
  2582
  2583 1D7C A9 06 95 18			mva #$06 :STACKORIGIN,x
  2584 1D80 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2585 1D84 A9 12			lda #$12
  2586 1D86 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2587 1D89 A9 1E			lda #$1E
  2588 1D8B 8D C7 2C			sta CALCOBSTACLEADDR.X
  2589 1D8E 20 F3 12			jsr CALCOBSTACLEADDR
  2590 1D91 B4 17			ldy :STACKORIGIN-1,x
  2591 1D93 B5 18			lda :STACKORIGIN,x
  2592 1D95 99 AE 2C			sta adr.OBSTACLES,y
  2593 1D98 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2594 1D9A 99 AF 2C			sta adr.OBSTACLES+1,y
  2595 1D9D CA				dex
  2596
  2597 				; optimize FAIL (1, levels.inc), line = 52
  2598
  2599 1D9E A9 08 95 18			mva #$08 :STACKORIGIN,x
  2600 1DA2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2601 1DA6 A9 02			lda #$02
  2602 1DA8 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2603 1DAB A9 14			lda #$14
  2604 1DAD 8D C7 2C			sta CALCOBSTACLEADDR.X
  2605 1DB0 20 F3 12			jsr CALCOBSTACLEADDR
  2606 1DB3 B4 17			ldy :STACKORIGIN-1,x
  2607 1DB5 B5 18			lda :STACKORIGIN,x
  2608 1DB7 99 AE 2C			sta adr.OBSTACLES,y
  2609 1DBA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2610 1DBC 99 AF 2C			sta adr.OBSTACLES+1,y
  2611 1DBF CA				dex
  2612
  2613 				; optimize FAIL (1, levels.inc), line = 53
  2614
  2615 1DC0 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2616 1DC4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2617 1DC8 A9 16			lda #$16
  2618 1DCA 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2619 1DCD A9 14			lda #$14
  2620 1DCF 8D C7 2C			sta CALCOBSTACLEADDR.X
  2621 1DD2 20 F3 12			jsr CALCOBSTACLEADDR
  2622 1DD5 B4 17			ldy :STACKORIGIN-1,x
  2623 1DD7 B5 18			lda :STACKORIGIN,x
  2624 1DD9 99 AE 2C			sta adr.OBSTACLES,y
  2625 1DDC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2626 1DDE 99 AF 2C			sta adr.OBSTACLES+1,y
  2627 1DE1 CA				dex
  2628 1DE2 CA				dex
  2629
  2630 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 55
  2631
  2632 1DE3 20 16 13			jsr SAVEOBSTACLES
  2633 1DE6			@exit
  2634 					.ifdef @new
  2635 					lda <@VarData
  2636 					sta :ztmp
  2637 					lda >@VarData
  2638 					ldy #@VarDataSize-1
  2639 					jmp @FreeMem
  2640 					els
  2641 1DE6 60				rts						; ret
  2642 					eif
  2643 				.endl
  2644
  2645 1DE7			.local	SETLEVEL03					; PROCEDURE
  2646
  2647 				; optimize OK (levels.inc), line = 62
  2648
  2649 1DE7 A9 01			lda #$01
  2650 1DE9 8D D3 2C			sta SETPLAYER.ISALIVE
  2651 1DEC A9 62			lda #$62
  2652 1DEE 8D D2 2C			sta SETPLAYER.COLOUR
  2653 1DF1 A9 51			lda #$51
  2654 1DF3 8D D1 2C			sta SETPLAYER.HEAD
  2655 1DF6 A9 00			lda #$00
  2656 1DF8 8D D0 2C			sta SETPLAYER.BRAIN
  2657 1DFB A9 08			lda #$08
  2658 1DFD 8D CF 2C			sta SETPLAYER.DIR
  2659 1E00 A9 0C			lda #$0C
  2660 1E02 8D CE 2C			sta SETPLAYER.Y
  2661 1E05 A9 0A			lda #$0A
  2662 1E07 8D CD 2C			sta SETPLAYER.X
  2663 1E0A AD 71 2C			lda PLAYER1
  2664 1E0D 8D CB 2C			sta SETPLAYER.P
  2665 1E10 AD 72 2C			lda PLAYER1+1
  2666 1E13 8D CC 2C			sta SETPLAYER.P+1
  2667 1E16 20 23 14			jsr SETPLAYER
  2668
  2669 				; optimize OK (levels.inc), line = 63
  2670
  2671 1E19 A9 01			lda #$01
  2672 1E1B 8D D3 2C			sta SETPLAYER.ISALIVE
  2673 1E1E A9 5D			lda #$5D
  2674 1E20 8D D2 2C			sta SETPLAYER.COLOUR
  2675 1E23 A9 51			lda #$51
  2676 1E25 8D D1 2C			sta SETPLAYER.HEAD
  2677 1E28 A9 02			lda #$02
  2678 1E2A 8D D0 2C			sta SETPLAYER.BRAIN
  2679 1E2D A9 04			lda #$04
  2680 1E2F 8D CF 2C			sta SETPLAYER.DIR
  2681 1E32 A9 0C			lda #$0C
  2682 1E34 8D CE 2C			sta SETPLAYER.Y
  2683 1E37 A9 1E			lda #$1E
  2684 1E39 8D CD 2C			sta SETPLAYER.X
  2685 1E3C AD 73 2C			lda PLAYER2
  2686 1E3F 8D CB 2C			sta SETPLAYER.P
  2687 1E42 AD 74 2C			lda PLAYER2+1
  2688 1E45 8D CC 2C			sta SETPLAYER.P+1
  2689 1E48 20 23 14			jsr SETPLAYER
  2690
  2691 				; optimize OK (levels.inc), line = 64
  2692
  2693 1E4B A9 00			lda #$00
  2694 1E4D 8D D3 2C			sta SETPLAYER.ISALIVE
  2695 1E50 A9 71			lda #$71
  2696 1E52 8D D2 2C			sta SETPLAYER.COLOUR
  2697 1E55 A9 51			lda #$51
  2698 1E57 8D D1 2C			sta SETPLAYER.HEAD
  2699 1E5A A9 03			lda #$03
  2700 1E5C 8D D0 2C			sta SETPLAYER.BRAIN
  2701 1E5F A9 02			lda #$02
  2702 1E61 8D CF 2C			sta SETPLAYER.DIR
  2703 1E64 A9 04			lda #$04
  2704 1E66 8D CE 2C			sta SETPLAYER.Y
  2705 1E69 A9 14			lda #$14
  2706 1E6B 8D CD 2C			sta SETPLAYER.X
  2707 1E6E AD 75 2C			lda PLAYER3
  2708 1E71 8D CB 2C			sta SETPLAYER.P
  2709 1E74 AD 76 2C			lda PLAYER3+1
  2710 1E77 8D CC 2C			sta SETPLAYER.P+1
  2711 1E7A 20 23 14			jsr SETPLAYER
  2712
  2713 				; optimize OK (levels.inc), line = 65
  2714
  2715 1E7D A9 00			lda #$00
  2716 1E7F 8D D3 2C			sta SETPLAYER.ISALIVE
  2717 1E82 A9 55			lda #$55
  2718 1E84 8D D2 2C			sta SETPLAYER.COLOUR
  2719 1E87 A9 51			lda #$51
  2720 1E89 8D D1 2C			sta SETPLAYER.HEAD
  2721 1E8C A9 03			lda #$03
  2722 1E8E 8D D0 2C			sta SETPLAYER.BRAIN
  2723 1E91 A9 01			lda #$01
  2724 1E93 8D CF 2C			sta SETPLAYER.DIR
  2725 1E96 A9 12			lda #$12
  2726 1E98 8D CE 2C			sta SETPLAYER.Y
  2727 1E9B A9 14			lda #$14
  2728 1E9D 8D CD 2C			sta SETPLAYER.X
  2729 1EA0 AD 77 2C			lda PLAYER4
  2730 1EA3 8D CB 2C			sta SETPLAYER.P
  2731 1EA6 AD 78 2C			lda PLAYER4+1
  2732 1EA9 8D CC 2C			sta SETPLAYER.P+1
  2733 1EAC 20 23 14			jsr SETPLAYER
  2734
  2735 				; optimize FAIL (1, levels.inc), line = 67
  2736
  2737 1EAF E8				inx
  2738 1EB0 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2739 1EB4 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2740 1EB6 A9 06			lda #$06
  2741 1EB8 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2742 1EBB A9 0A			lda #$0A
  2743 1EBD 8D C7 2C			sta CALCOBSTACLEADDR.X
  2744 1EC0 20 F3 12			jsr CALCOBSTACLEADDR
  2745 1EC3 B4 17			ldy :STACKORIGIN-1,x
  2746 1EC5 B5 18			lda :STACKORIGIN,x
  2747 1EC7 99 AE 2C			sta adr.OBSTACLES,y
  2748 1ECA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2749 1ECC 99 AF 2C			sta adr.OBSTACLES+1,y
  2750 1ECF CA				dex
  2751
  2752 				; optimize FAIL (1, levels.inc), line = 68
  2753
  2754 1ED0 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2755 1ED4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2756 1ED8 A9 06			lda #$06
  2757 1EDA 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2758 1EDD A9 1E			lda #$1E
  2759 1EDF 8D C7 2C			sta CALCOBSTACLEADDR.X
  2760 1EE2 20 F3 12			jsr CALCOBSTACLEADDR
  2761 1EE5 B4 17			ldy :STACKORIGIN-1,x
  2762 1EE7 B5 18			lda :STACKORIGIN,x
  2763 1EE9 99 AE 2C			sta adr.OBSTACLES,y
  2764 1EEC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2765 1EEE 99 AF 2C			sta adr.OBSTACLES+1,y
  2766 1EF1 CA				dex
  2767
  2768 				; optimize FAIL (1, levels.inc), line = 69
  2769
  2770 1EF2 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2771 1EF6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2772 1EFA A9 12			lda #$12
  2773 1EFC 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2774 1EFF A9 0A			lda #$0A
  2775 1F01 8D C7 2C			sta CALCOBSTACLEADDR.X
  2776 1F04 20 F3 12			jsr CALCOBSTACLEADDR
  2777 1F07 B4 17			ldy :STACKORIGIN-1,x
  2778 1F09 B5 18			lda :STACKORIGIN,x
  2779 1F0B 99 AE 2C			sta adr.OBSTACLES,y
  2780 1F0E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2781 1F10 99 AF 2C			sta adr.OBSTACLES+1,y
  2782 1F13 CA				dex
  2783
  2784 				; optimize FAIL (1, levels.inc), line = 70
  2785
  2786 1F14 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2787 1F18 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2788 1F1C A9 12			lda #$12
  2789 1F1E 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2790 1F21 A9 1E			lda #$1E
  2791 1F23 8D C7 2C			sta CALCOBSTACLEADDR.X
  2792 1F26 20 F3 12			jsr CALCOBSTACLEADDR
  2793 1F29 B4 17			ldy :STACKORIGIN-1,x
  2794 1F2B B5 18			lda :STACKORIGIN,x
  2795 1F2D 99 AE 2C			sta adr.OBSTACLES,y
  2796 1F30 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2797 1F32 99 AF 2C			sta adr.OBSTACLES+1,y
  2798 1F35 CA				dex
  2799
  2800 				; optimize FAIL (1, levels.inc), line = 71
  2801
  2802 1F36 A9 08 95 18			mva #$08 :STACKORIGIN,x
  2803 1F3A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2804 1F3E A9 0C			lda #$0C
  2805 1F40 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2806 1F43 A9 01			lda #$01
  2807 1F45 8D C7 2C			sta CALCOBSTACLEADDR.X
  2808 1F48 20 F3 12			jsr CALCOBSTACLEADDR
  2809 1F4B B4 17			ldy :STACKORIGIN-1,x
  2810 1F4D B5 18			lda :STACKORIGIN,x
  2811 1F4F 99 AE 2C			sta adr.OBSTACLES,y
  2812 1F52 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2813 1F54 99 AF 2C			sta adr.OBSTACLES+1,y
  2814 1F57 CA				dex
  2815
  2816 				; optimize FAIL (1, levels.inc), line = 72
  2817
  2818 1F58 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2819 1F5C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2820 1F60 A9 02			lda #$02
  2821 1F62 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2822 1F65 A9 14			lda #$14
  2823 1F67 8D C7 2C			sta CALCOBSTACLEADDR.X
  2824 1F6A 20 F3 12			jsr CALCOBSTACLEADDR
  2825 1F6D B4 17			ldy :STACKORIGIN-1,x
  2826 1F6F B5 18			lda :STACKORIGIN,x
  2827 1F71 99 AE 2C			sta adr.OBSTACLES,y
  2828 1F74 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2829 1F76 99 AF 2C			sta adr.OBSTACLES+1,y
  2830 1F79 CA				dex
  2831
  2832 				; optimize FAIL (1, levels.inc), line = 73
  2833
  2834 1F7A A9 0C 95 18			mva #$0C :STACKORIGIN,x
  2835 1F7E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2836 1F82 A9 16			lda #$16
  2837 1F84 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2838 1F87 A9 14			lda #$14
  2839 1F89 8D C7 2C			sta CALCOBSTACLEADDR.X
  2840 1F8C 20 F3 12			jsr CALCOBSTACLEADDR
  2841 1F8F B4 17			ldy :STACKORIGIN-1,x
  2842 1F91 B5 18			lda :STACKORIGIN,x
  2843 1F93 99 AE 2C			sta adr.OBSTACLES,y
  2844 1F96 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2845 1F98 99 AF 2C			sta adr.OBSTACLES+1,y
  2846 1F9B CA				dex
  2847 1F9C CA				dex
  2848
  2849 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 75
  2850
  2851 1F9D 20 16 13			jsr SAVEOBSTACLES
  2852 1FA0			@exit
  2853 					.ifdef @new
  2854 					lda <@VarData
  2855 					sta :ztmp
  2856 					lda >@VarData
  2857 					ldy #@VarDataSize-1
  2858 					jmp @FreeMem
  2859 					els
  2860 1FA0 60				rts						; ret
  2861 					eif
  2862 				.endl
  2863
  2864 1FA1			.local	SETLEVEL04					; PROCEDURE
  2865
  2866 				; optimize OK (levels.inc), line = 82
  2867
  2868 1FA1 A9 01			lda #$01
  2869 1FA3 8D D3 2C			sta SETPLAYER.ISALIVE
  2870 1FA6 A9 62			lda #$62
  2871 1FA8 8D D2 2C			sta SETPLAYER.COLOUR
  2872 1FAB A9 51			lda #$51
  2873 1FAD 8D D1 2C			sta SETPLAYER.HEAD
  2874 1FB0 A9 00			lda #$00
  2875 1FB2 8D D0 2C			sta SETPLAYER.BRAIN
  2876 1FB5 A9 04			lda #$04
  2877 1FB7 8D CF 2C			sta SETPLAYER.DIR
  2878 1FBA A9 0C			lda #$0C
  2879 1FBC 8D CE 2C			sta SETPLAYER.Y
  2880 1FBF A9 12			lda #$12
  2881 1FC1 8D CD 2C			sta SETPLAYER.X
  2882 1FC4 AD 71 2C			lda PLAYER1
  2883 1FC7 8D CB 2C			sta SETPLAYER.P
  2884 1FCA AD 72 2C			lda PLAYER1+1
  2885 1FCD 8D CC 2C			sta SETPLAYER.P+1
  2886 1FD0 20 23 14			jsr SETPLAYER
  2887
  2888 				; optimize OK (levels.inc), line = 83
  2889
  2890 1FD3 A9 01			lda #$01
  2891 1FD5 8D D3 2C			sta SETPLAYER.ISALIVE
  2892 1FD8 A9 5D			lda #$5D
  2893 1FDA 8D D2 2C			sta SETPLAYER.COLOUR
  2894 1FDD A9 51			lda #$51
  2895 1FDF 8D D1 2C			sta SETPLAYER.HEAD
  2896 1FE2 A9 04			lda #$04
  2897 1FE4 8D D0 2C			sta SETPLAYER.BRAIN
  2898 1FE7 A9 08			lda #$08
  2899 1FE9 8D CF 2C			sta SETPLAYER.DIR
  2900 1FEC A9 0C			lda #$0C
  2901 1FEE 8D CE 2C			sta SETPLAYER.Y
  2902 1FF1 A9 16			lda #$16
  2903 1FF3 8D CD 2C			sta SETPLAYER.X
  2904 1FF6 AD 73 2C			lda PLAYER2
  2905 1FF9 8D CB 2C			sta SETPLAYER.P
  2906 1FFC AD 74 2C			lda PLAYER2+1
  2907 1FFF 8D CC 2C			sta SETPLAYER.P+1
  2908 2002 20 23 14			jsr SETPLAYER
  2909
  2910 				; optimize OK (levels.inc), line = 84
  2911
  2912 2005 A9 00			lda #$00
  2913 2007 8D D3 2C			sta SETPLAYER.ISALIVE
  2914 200A A9 71			lda #$71
  2915 200C 8D D2 2C			sta SETPLAYER.COLOUR
  2916 200F A9 51			lda #$51
  2917 2011 8D D1 2C			sta SETPLAYER.HEAD
  2918 2014 A9 03			lda #$03
  2919 2016 8D D0 2C			sta SETPLAYER.BRAIN
  2920 2019 A9 02			lda #$02
  2921 201B 8D CF 2C			sta SETPLAYER.DIR
  2922 201E A9 04			lda #$04
  2923 2020 8D CE 2C			sta SETPLAYER.Y
  2924 2023 A9 14			lda #$14
  2925 2025 8D CD 2C			sta SETPLAYER.X
  2926 2028 AD 75 2C			lda PLAYER3
  2927 202B 8D CB 2C			sta SETPLAYER.P
  2928 202E AD 76 2C			lda PLAYER3+1
  2929 2031 8D CC 2C			sta SETPLAYER.P+1
  2930 2034 20 23 14			jsr SETPLAYER
  2931
  2932 				; optimize OK (levels.inc), line = 85
  2933
  2934 2037 A9 00			lda #$00
  2935 2039 8D D3 2C			sta SETPLAYER.ISALIVE
  2936 203C A9 55			lda #$55
  2937 203E 8D D2 2C			sta SETPLAYER.COLOUR
  2938 2041 A9 51			lda #$51
  2939 2043 8D D1 2C			sta SETPLAYER.HEAD
  2940 2046 A9 03			lda #$03
  2941 2048 8D D0 2C			sta SETPLAYER.BRAIN
  2942 204B A9 01			lda #$01
  2943 204D 8D CF 2C			sta SETPLAYER.DIR
  2944 2050 A9 12			lda #$12
  2945 2052 8D CE 2C			sta SETPLAYER.Y
  2946 2055 A9 14			lda #$14
  2947 2057 8D CD 2C			sta SETPLAYER.X
  2948 205A AD 77 2C			lda PLAYER4
  2949 205D 8D CB 2C			sta SETPLAYER.P
  2950 2060 AD 78 2C			lda PLAYER4+1
  2951 2063 8D CC 2C			sta SETPLAYER.P+1
  2952 2066 20 23 14			jsr SETPLAYER
  2953
  2954 				; optimize FAIL (1, levels.inc), line = 87
  2955
  2956 2069 E8				inx
  2957 206A A9 00 95 18			mva #$00 :STACKORIGIN,x
  2958 206E 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2959 2070 A9 06			lda #$06
  2960 2072 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2961 2075 A9 0A			lda #$0A
  2962 2077 8D C7 2C			sta CALCOBSTACLEADDR.X
  2963 207A 20 F3 12			jsr CALCOBSTACLEADDR
  2964 207D B4 17			ldy :STACKORIGIN-1,x
  2965 207F B5 18			lda :STACKORIGIN,x
  2966 2081 99 AE 2C			sta adr.OBSTACLES,y
  2967 2084 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2968 2086 99 AF 2C			sta adr.OBSTACLES+1,y
  2969 2089 CA				dex
  2970
  2971 				; optimize FAIL (1, levels.inc), line = 88
  2972
  2973 208A A9 02 95 18			mva #$02 :STACKORIGIN,x
  2974 208E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2975 2092 A9 06			lda #$06
  2976 2094 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2977 2097 A9 1E			lda #$1E
  2978 2099 8D C7 2C			sta CALCOBSTACLEADDR.X
  2979 209C 20 F3 12			jsr CALCOBSTACLEADDR
  2980 209F B4 17			ldy :STACKORIGIN-1,x
  2981 20A1 B5 18			lda :STACKORIGIN,x
  2982 20A3 99 AE 2C			sta adr.OBSTACLES,y
  2983 20A6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2984 20A8 99 AF 2C			sta adr.OBSTACLES+1,y
  2985 20AB CA				dex
  2986
  2987 				; optimize FAIL (1, levels.inc), line = 89
  2988
  2989 20AC A9 04 95 18			mva #$04 :STACKORIGIN,x
  2990 20B0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2991 20B4 A9 12			lda #$12
  2992 20B6 8D C8 2C			sta CALCOBSTACLEADDR.Y
  2993 20B9 A9 0A			lda #$0A
  2994 20BB 8D C7 2C			sta CALCOBSTACLEADDR.X
  2995 20BE 20 F3 12			jsr CALCOBSTACLEADDR
  2996 20C1 B4 17			ldy :STACKORIGIN-1,x
  2997 20C3 B5 18			lda :STACKORIGIN,x
  2998 20C5 99 AE 2C			sta adr.OBSTACLES,y
  2999 20C8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3000 20CA 99 AF 2C			sta adr.OBSTACLES+1,y
  3001 20CD CA				dex
  3002
  3003 				; optimize FAIL (1, levels.inc), line = 90
  3004
  3005 20CE A9 06 95 18			mva #$06 :STACKORIGIN,x
  3006 20D2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3007 20D6 A9 12			lda #$12
  3008 20D8 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3009 20DB A9 1E			lda #$1E
  3010 20DD 8D C7 2C			sta CALCOBSTACLEADDR.X
  3011 20E0 20 F3 12			jsr CALCOBSTACLEADDR
  3012 20E3 B4 17			ldy :STACKORIGIN-1,x
  3013 20E5 B5 18			lda :STACKORIGIN,x
  3014 20E7 99 AE 2C			sta adr.OBSTACLES,y
  3015 20EA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3016 20EC 99 AF 2C			sta adr.OBSTACLES+1,y
  3017 20EF CA				dex
  3018
  3019 				; optimize FAIL (1, levels.inc), line = 91
  3020
  3021 20F0 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3022 20F4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3023 20F8 A9 0C			lda #$0C
  3024 20FA 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3025 20FD A9 01			lda #$01
  3026 20FF 8D C7 2C			sta CALCOBSTACLEADDR.X
  3027 2102 20 F3 12			jsr CALCOBSTACLEADDR
  3028 2105 B4 17			ldy :STACKORIGIN-1,x
  3029 2107 B5 18			lda :STACKORIGIN,x
  3030 2109 99 AE 2C			sta adr.OBSTACLES,y
  3031 210C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3032 210E 99 AF 2C			sta adr.OBSTACLES+1,y
  3033 2111 CA				dex
  3034
  3035 				; optimize FAIL (1, levels.inc), line = 92
  3036
  3037 2112 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3038 2116 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3039 211A A9 02			lda #$02
  3040 211C 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3041 211F A9 14			lda #$14
  3042 2121 8D C7 2C			sta CALCOBSTACLEADDR.X
  3043 2124 20 F3 12			jsr CALCOBSTACLEADDR
  3044 2127 B4 17			ldy :STACKORIGIN-1,x
  3045 2129 B5 18			lda :STACKORIGIN,x
  3046 212B 99 AE 2C			sta adr.OBSTACLES,y
  3047 212E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3048 2130 99 AF 2C			sta adr.OBSTACLES+1,y
  3049 2133 CA				dex
  3050
  3051 				; optimize FAIL (1, levels.inc), line = 93
  3052
  3053 2134 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3054 2138 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3055 213C A9 16			lda #$16
  3056 213E 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3057 2141 A9 14			lda #$14
  3058 2143 8D C7 2C			sta CALCOBSTACLEADDR.X
  3059 2146 20 F3 12			jsr CALCOBSTACLEADDR
  3060 2149 B4 17			ldy :STACKORIGIN-1,x
  3061 214B B5 18			lda :STACKORIGIN,x
  3062 214D 99 AE 2C			sta adr.OBSTACLES,y
  3063 2150 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3064 2152 99 AF 2C			sta adr.OBSTACLES+1,y
  3065 2155 CA				dex
  3066
  3067 				; optimize FAIL (1, levels.inc), line = 94
  3068
  3069 2156 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3070 215A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3071 215E A9 0C			lda #$0C
  3072 2160 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3073 2163 A9 14			lda #$14
  3074 2165 8D C7 2C			sta CALCOBSTACLEADDR.X
  3075 2168 20 F3 12			jsr CALCOBSTACLEADDR
  3076 216B B4 17			ldy :STACKORIGIN-1,x
  3077 216D B5 18			lda :STACKORIGIN,x
  3078 216F 99 AE 2C			sta adr.OBSTACLES,y
  3079 2172 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3080 2174 99 AF 2C			sta adr.OBSTACLES+1,y
  3081 2177 CA				dex
  3082 2178 CA				dex
  3083
  3084 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 96
  3085
  3086 2179 20 16 13			jsr SAVEOBSTACLES
  3087 217C			@exit
  3088 					.ifdef @new
  3089 					lda <@VarData
  3090 					sta :ztmp
  3091 					lda >@VarData
  3092 					ldy #@VarDataSize-1
  3093 					jmp @FreeMem
  3094 					els
  3095 217C 60				rts						; ret
  3096 					eif
  3097 				.endl
  3098
  3099 217D			.local	SETLEVEL05					; PROCEDURE
  3100
  3101 				; optimize OK (levels.inc), line = 103
  3102
  3103 217D A9 01			lda #$01
  3104 217F 8D D3 2C			sta SETPLAYER.ISALIVE
  3105 2182 A9 62			lda #$62
  3106 2184 8D D2 2C			sta SETPLAYER.COLOUR
  3107 2187 A9 51			lda #$51
  3108 2189 8D D1 2C			sta SETPLAYER.HEAD
  3109 218C A9 00			lda #$00
  3110 218E 8D D0 2C			sta SETPLAYER.BRAIN
  3111 2191 A9 08			lda #$08
  3112 2193 8D CF 2C			sta SETPLAYER.DIR
  3113 2196 A9 0C			lda #$0C
  3114 2198 8D CE 2C			sta SETPLAYER.Y
  3115 219B A9 0A			lda #$0A
  3116 219D 8D CD 2C			sta SETPLAYER.X
  3117 21A0 AD 71 2C			lda PLAYER1
  3118 21A3 8D CB 2C			sta SETPLAYER.P
  3119 21A6 AD 72 2C			lda PLAYER1+1
  3120 21A9 8D CC 2C			sta SETPLAYER.P+1
  3121 21AC 20 23 14			jsr SETPLAYER
  3122
  3123 				; optimize OK (levels.inc), line = 104
  3124
  3125 21AF A9 01			lda #$01
  3126 21B1 8D D3 2C			sta SETPLAYER.ISALIVE
  3127 21B4 A9 5D			lda #$5D
  3128 21B6 8D D2 2C			sta SETPLAYER.COLOUR
  3129 21B9 A9 51			lda #$51
  3130 21BB 8D D1 2C			sta SETPLAYER.HEAD
  3131 21BE A9 04			lda #$04
  3132 21C0 8D D0 2C			sta SETPLAYER.BRAIN
  3133 21C3 8D CF 2C			sta SETPLAYER.DIR
  3134 21C6 A9 0C			lda #$0C
  3135 21C8 8D CE 2C			sta SETPLAYER.Y
  3136 21CB A9 1E			lda #$1E
  3137 21CD 8D CD 2C			sta SETPLAYER.X
  3138 21D0 AD 73 2C			lda PLAYER2
  3139 21D3 8D CB 2C			sta SETPLAYER.P
  3140 21D6 AD 74 2C			lda PLAYER2+1
  3141 21D9 8D CC 2C			sta SETPLAYER.P+1
  3142 21DC 20 23 14			jsr SETPLAYER
  3143
  3144 				; optimize OK (levels.inc), line = 105
  3145
  3146 21DF A9 01			lda #$01
  3147 21E1 8D D3 2C			sta SETPLAYER.ISALIVE
  3148 21E4 A9 71			lda #$71
  3149 21E6 8D D2 2C			sta SETPLAYER.COLOUR
  3150 21E9 A9 51			lda #$51
  3151 21EB 8D D1 2C			sta SETPLAYER.HEAD
  3152 21EE A9 03			lda #$03
  3153 21F0 8D D0 2C			sta SETPLAYER.BRAIN
  3154 21F3 A9 02			lda #$02
  3155 21F5 8D CF 2C			sta SETPLAYER.DIR
  3156 21F8 A9 04			lda #$04
  3157 21FA 8D CE 2C			sta SETPLAYER.Y
  3158 21FD A9 14			lda #$14
  3159 21FF 8D CD 2C			sta SETPLAYER.X
  3160 2202 AD 75 2C			lda PLAYER3
  3161 2205 8D CB 2C			sta SETPLAYER.P
  3162 2208 AD 76 2C			lda PLAYER3+1
  3163 220B 8D CC 2C			sta SETPLAYER.P+1
  3164 220E 20 23 14			jsr SETPLAYER
  3165
  3166 				; optimize OK (levels.inc), line = 106
  3167
  3168 2211 A9 01			lda #$01
  3169 2213 8D D3 2C			sta SETPLAYER.ISALIVE
  3170 2216 A9 55			lda #$55
  3171 2218 8D D2 2C			sta SETPLAYER.COLOUR
  3172 221B A9 51			lda #$51
  3173 221D 8D D1 2C			sta SETPLAYER.HEAD
  3174 2220 A9 02			lda #$02
  3175 2222 8D D0 2C			sta SETPLAYER.BRAIN
  3176 2225 A9 01			lda #$01
  3177 2227 8D CF 2C			sta SETPLAYER.DIR
  3178 222A A9 12			lda #$12
  3179 222C 8D CE 2C			sta SETPLAYER.Y
  3180 222F A9 14			lda #$14
  3181 2231 8D CD 2C			sta SETPLAYER.X
  3182 2234 AD 77 2C			lda PLAYER4
  3183 2237 8D CB 2C			sta SETPLAYER.P
  3184 223A AD 78 2C			lda PLAYER4+1
  3185 223D 8D CC 2C			sta SETPLAYER.P+1
  3186 2240 20 23 14			jsr SETPLAYER
  3187
  3188 				; optimize FAIL (1, levels.inc), line = 108
  3189
  3190 2243 E8				inx
  3191 2244 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3192 2248 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3193 224A A9 06			lda #$06
  3194 224C 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3195 224F A9 0A			lda #$0A
  3196 2251 8D C7 2C			sta CALCOBSTACLEADDR.X
  3197 2254 20 F3 12			jsr CALCOBSTACLEADDR
  3198 2257 B4 17			ldy :STACKORIGIN-1,x
  3199 2259 B5 18			lda :STACKORIGIN,x
  3200 225B 99 AE 2C			sta adr.OBSTACLES,y
  3201 225E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3202 2260 99 AF 2C			sta adr.OBSTACLES+1,y
  3203 2263 CA				dex
  3204
  3205 				; optimize FAIL (1, levels.inc), line = 109
  3206
  3207 2264 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3208 2268 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3209 226C A9 06			lda #$06
  3210 226E 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3211 2271 A9 1E			lda #$1E
  3212 2273 8D C7 2C			sta CALCOBSTACLEADDR.X
  3213 2276 20 F3 12			jsr CALCOBSTACLEADDR
  3214 2279 B4 17			ldy :STACKORIGIN-1,x
  3215 227B B5 18			lda :STACKORIGIN,x
  3216 227D 99 AE 2C			sta adr.OBSTACLES,y
  3217 2280 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3218 2282 99 AF 2C			sta adr.OBSTACLES+1,y
  3219 2285 CA				dex
  3220
  3221 				; optimize FAIL (1, levels.inc), line = 110
  3222
  3223 2286 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3224 228A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3225 228E A9 12			lda #$12
  3226 2290 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3227 2293 A9 0A			lda #$0A
  3228 2295 8D C7 2C			sta CALCOBSTACLEADDR.X
  3229 2298 20 F3 12			jsr CALCOBSTACLEADDR
  3230 229B B4 17			ldy :STACKORIGIN-1,x
  3231 229D B5 18			lda :STACKORIGIN,x
  3232 229F 99 AE 2C			sta adr.OBSTACLES,y
  3233 22A2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3234 22A4 99 AF 2C			sta adr.OBSTACLES+1,y
  3235 22A7 CA				dex
  3236
  3237 				; optimize FAIL (1, levels.inc), line = 111
  3238
  3239 22A8 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3240 22AC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3241 22B0 A9 12			lda #$12
  3242 22B2 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3243 22B5 A9 1E			lda #$1E
  3244 22B7 8D C7 2C			sta CALCOBSTACLEADDR.X
  3245 22BA 20 F3 12			jsr CALCOBSTACLEADDR
  3246 22BD B4 17			ldy :STACKORIGIN-1,x
  3247 22BF B5 18			lda :STACKORIGIN,x
  3248 22C1 99 AE 2C			sta adr.OBSTACLES,y
  3249 22C4 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3250 22C6 99 AF 2C			sta adr.OBSTACLES+1,y
  3251 22C9 CA				dex
  3252
  3253 				; optimize FAIL (1, levels.inc), line = 112
  3254
  3255 22CA A9 08 95 18			mva #$08 :STACKORIGIN,x
  3256 22CE A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3257 22D2 A9 0C			lda #$0C
  3258 22D4 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3259 22D7 A9 01			lda #$01
  3260 22D9 8D C7 2C			sta CALCOBSTACLEADDR.X
  3261 22DC 20 F3 12			jsr CALCOBSTACLEADDR
  3262 22DF B4 17			ldy :STACKORIGIN-1,x
  3263 22E1 B5 18			lda :STACKORIGIN,x
  3264 22E3 99 AE 2C			sta adr.OBSTACLES,y
  3265 22E6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3266 22E8 99 AF 2C			sta adr.OBSTACLES+1,y
  3267 22EB CA				dex
  3268
  3269 				; optimize FAIL (1, levels.inc), line = 113
  3270
  3271 22EC A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3272 22F0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3273 22F4 A9 02			lda #$02
  3274 22F6 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3275 22F9 A9 14			lda #$14
  3276 22FB 8D C7 2C			sta CALCOBSTACLEADDR.X
  3277 22FE 20 F3 12			jsr CALCOBSTACLEADDR
  3278 2301 B4 17			ldy :STACKORIGIN-1,x
  3279 2303 B5 18			lda :STACKORIGIN,x
  3280 2305 99 AE 2C			sta adr.OBSTACLES,y
  3281 2308 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3282 230A 99 AF 2C			sta adr.OBSTACLES+1,y
  3283 230D CA				dex
  3284
  3285 				; optimize FAIL (1, levels.inc), line = 114
  3286
  3287 230E A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3288 2312 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3289 2316 A9 16			lda #$16
  3290 2318 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3291 231B A9 14			lda #$14
  3292 231D 8D C7 2C			sta CALCOBSTACLEADDR.X
  3293 2320 20 F3 12			jsr CALCOBSTACLEADDR
  3294 2323 B4 17			ldy :STACKORIGIN-1,x
  3295 2325 B5 18			lda :STACKORIGIN,x
  3296 2327 99 AE 2C			sta adr.OBSTACLES,y
  3297 232A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3298 232C 99 AF 2C			sta adr.OBSTACLES+1,y
  3299 232F CA				dex
  3300 2330 CA				dex
  3301
  3302 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 116
  3303
  3304 2331 20 16 13			jsr SAVEOBSTACLES
  3305 2334			@exit
  3306 					.ifdef @new
  3307 					lda <@VarData
  3308 					sta :ztmp
  3309 					lda >@VarData
  3310 					ldy #@VarDataSize-1
  3311 					jmp @FreeMem
  3312 					els
  3313 2334 60				rts						; ret
  3314 					eif
  3315 				.endl
  3316
  3317 2335			.local	SETLEVEL06					; PROCEDURE
  3318
  3319 				; optimize OK (levels.inc), line = 123
  3320
  3321 2335 A9 01			lda #$01
  3322 2337 8D D3 2C			sta SETPLAYER.ISALIVE
  3323 233A A9 62			lda #$62
  3324 233C 8D D2 2C			sta SETPLAYER.COLOUR
  3325 233F A9 51			lda #$51
  3326 2341 8D D1 2C			sta SETPLAYER.HEAD
  3327 2344 A9 00			lda #$00
  3328 2346 8D D0 2C			sta SETPLAYER.BRAIN
  3329 2349 A9 04			lda #$04
  3330 234B 8D CF 2C			sta SETPLAYER.DIR
  3331 234E A9 0C			lda #$0C
  3332 2350 8D CE 2C			sta SETPLAYER.Y
  3333 2353 A9 12			lda #$12
  3334 2355 8D CD 2C			sta SETPLAYER.X
  3335 2358 AD 71 2C			lda PLAYER1
  3336 235B 8D CB 2C			sta SETPLAYER.P
  3337 235E AD 72 2C			lda PLAYER1+1
  3338 2361 8D CC 2C			sta SETPLAYER.P+1
  3339 2364 20 23 14			jsr SETPLAYER
  3340
  3341 				; optimize OK (levels.inc), line = 124
  3342
  3343 2367 A9 01			lda #$01
  3344 2369 8D D3 2C			sta SETPLAYER.ISALIVE
  3345 236C A9 5D			lda #$5D
  3346 236E 8D D2 2C			sta SETPLAYER.COLOUR
  3347 2371 A9 51			lda #$51
  3348 2373 8D D1 2C			sta SETPLAYER.HEAD
  3349 2376 A9 02			lda #$02
  3350 2378 8D D0 2C			sta SETPLAYER.BRAIN
  3351 237B A9 08			lda #$08
  3352 237D 8D CF 2C			sta SETPLAYER.DIR
  3353 2380 A9 0C			lda #$0C
  3354 2382 8D CE 2C			sta SETPLAYER.Y
  3355 2385 A9 16			lda #$16
  3356 2387 8D CD 2C			sta SETPLAYER.X
  3357 238A AD 73 2C			lda PLAYER2
  3358 238D 8D CB 2C			sta SETPLAYER.P
  3359 2390 AD 74 2C			lda PLAYER2+1
  3360 2393 8D CC 2C			sta SETPLAYER.P+1
  3361 2396 20 23 14			jsr SETPLAYER
  3362
  3363 				; optimize OK (levels.inc), line = 125
  3364
  3365 2399 A9 01			lda #$01
  3366 239B 8D D3 2C			sta SETPLAYER.ISALIVE
  3367 239E A9 71			lda #$71
  3368 23A0 8D D2 2C			sta SETPLAYER.COLOUR
  3369 23A3 A9 51			lda #$51
  3370 23A5 8D D1 2C			sta SETPLAYER.HEAD
  3371 23A8 A9 02			lda #$02
  3372 23AA 8D D0 2C			sta SETPLAYER.BRAIN
  3373 23AD 8D CF 2C			sta SETPLAYER.DIR
  3374 23B0 A9 06			lda #$06
  3375 23B2 8D CE 2C			sta SETPLAYER.Y
  3376 23B5 8D CD 2C			sta SETPLAYER.X
  3377 23B8 AD 75 2C			lda PLAYER3
  3378 23BB 8D CB 2C			sta SETPLAYER.P
  3379 23BE AD 76 2C			lda PLAYER3+1
  3380 23C1 8D CC 2C			sta SETPLAYER.P+1
  3381 23C4 20 23 14			jsr SETPLAYER
  3382
  3383 				; optimize OK (levels.inc), line = 126
  3384
  3385 23C7 A9 01			lda #$01
  3386 23C9 8D D3 2C			sta SETPLAYER.ISALIVE
  3387 23CC A9 55			lda #$55
  3388 23CE 8D D2 2C			sta SETPLAYER.COLOUR
  3389 23D1 A9 51			lda #$51
  3390 23D3 8D D1 2C			sta SETPLAYER.HEAD
  3391 23D6 A9 03			lda #$03
  3392 23D8 8D D0 2C			sta SETPLAYER.BRAIN
  3393 23DB A9 08			lda #$08
  3394 23DD 8D CF 2C			sta SETPLAYER.DIR
  3395 23E0 A9 12			lda #$12
  3396 23E2 8D CE 2C			sta SETPLAYER.Y
  3397 23E5 A9 24			lda #$24
  3398 23E7 8D CD 2C			sta SETPLAYER.X
  3399 23EA AD 77 2C			lda PLAYER4
  3400 23ED 8D CB 2C			sta SETPLAYER.P
  3401 23F0 AD 78 2C			lda PLAYER4+1
  3402 23F3 8D CC 2C			sta SETPLAYER.P+1
  3403 23F6 20 23 14			jsr SETPLAYER
  3404
  3405 				; optimize FAIL (1, levels.inc), line = 128
  3406
  3407 23F9 E8				inx
  3408 23FA A9 00 95 18			mva #$00 :STACKORIGIN,x
  3409 23FE 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3410 2400 A9 06			lda #$06
  3411 2402 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3412 2405 A9 0A			lda #$0A
  3413 2407 8D C7 2C			sta CALCOBSTACLEADDR.X
  3414 240A 20 F3 12			jsr CALCOBSTACLEADDR
  3415 240D B4 17			ldy :STACKORIGIN-1,x
  3416 240F B5 18			lda :STACKORIGIN,x
  3417 2411 99 AE 2C			sta adr.OBSTACLES,y
  3418 2414 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3419 2416 99 AF 2C			sta adr.OBSTACLES+1,y
  3420 2419 CA				dex
  3421
  3422 				; optimize FAIL (1, levels.inc), line = 129
  3423
  3424 241A A9 02 95 18			mva #$02 :STACKORIGIN,x
  3425 241E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3426 2422 A9 06			lda #$06
  3427 2424 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3428 2427 A9 1E			lda #$1E
  3429 2429 8D C7 2C			sta CALCOBSTACLEADDR.X
  3430 242C 20 F3 12			jsr CALCOBSTACLEADDR
  3431 242F B4 17			ldy :STACKORIGIN-1,x
  3432 2431 B5 18			lda :STACKORIGIN,x
  3433 2433 99 AE 2C			sta adr.OBSTACLES,y
  3434 2436 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3435 2438 99 AF 2C			sta adr.OBSTACLES+1,y
  3436 243B CA				dex
  3437
  3438 				; optimize FAIL (1, levels.inc), line = 130
  3439
  3440 243C A9 04 95 18			mva #$04 :STACKORIGIN,x
  3441 2440 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3442 2444 A9 12			lda #$12
  3443 2446 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3444 2449 A9 0A			lda #$0A
  3445 244B 8D C7 2C			sta CALCOBSTACLEADDR.X
  3446 244E 20 F3 12			jsr CALCOBSTACLEADDR
  3447 2451 B4 17			ldy :STACKORIGIN-1,x
  3448 2453 B5 18			lda :STACKORIGIN,x
  3449 2455 99 AE 2C			sta adr.OBSTACLES,y
  3450 2458 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3451 245A 99 AF 2C			sta adr.OBSTACLES+1,y
  3452 245D CA				dex
  3453
  3454 				; optimize FAIL (1, levels.inc), line = 131
  3455
  3456 245E A9 06 95 18			mva #$06 :STACKORIGIN,x
  3457 2462 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3458 2466 A9 12			lda #$12
  3459 2468 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3460 246B A9 1E			lda #$1E
  3461 246D 8D C7 2C			sta CALCOBSTACLEADDR.X
  3462 2470 20 F3 12			jsr CALCOBSTACLEADDR
  3463 2473 B4 17			ldy :STACKORIGIN-1,x
  3464 2475 B5 18			lda :STACKORIGIN,x
  3465 2477 99 AE 2C			sta adr.OBSTACLES,y
  3466 247A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3467 247C 99 AF 2C			sta adr.OBSTACLES+1,y
  3468 247F CA				dex
  3469
  3470 				; optimize FAIL (1, levels.inc), line = 132
  3471
  3472 2480 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3473 2484 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3474 2488 A9 0C			lda #$0C
  3475 248A 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3476 248D A9 01			lda #$01
  3477 248F 8D C7 2C			sta CALCOBSTACLEADDR.X
  3478 2492 20 F3 12			jsr CALCOBSTACLEADDR
  3479 2495 B4 17			ldy :STACKORIGIN-1,x
  3480 2497 B5 18			lda :STACKORIGIN,x
  3481 2499 99 AE 2C			sta adr.OBSTACLES,y
  3482 249C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3483 249E 99 AF 2C			sta adr.OBSTACLES+1,y
  3484 24A1 CA				dex
  3485
  3486 				; optimize FAIL (1, levels.inc), line = 133
  3487
  3488 24A2 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3489 24A6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3490 24AA A9 02			lda #$02
  3491 24AC 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3492 24AF A9 14			lda #$14
  3493 24B1 8D C7 2C			sta CALCOBSTACLEADDR.X
  3494 24B4 20 F3 12			jsr CALCOBSTACLEADDR
  3495 24B7 B4 17			ldy :STACKORIGIN-1,x
  3496 24B9 B5 18			lda :STACKORIGIN,x
  3497 24BB 99 AE 2C			sta adr.OBSTACLES,y
  3498 24BE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3499 24C0 99 AF 2C			sta adr.OBSTACLES+1,y
  3500 24C3 CA				dex
  3501
  3502 				; optimize FAIL (1, levels.inc), line = 134
  3503
  3504 24C4 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3505 24C8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3506 24CC A9 16			lda #$16
  3507 24CE 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3508 24D1 A9 14			lda #$14
  3509 24D3 8D C7 2C			sta CALCOBSTACLEADDR.X
  3510 24D6 20 F3 12			jsr CALCOBSTACLEADDR
  3511 24D9 B4 17			ldy :STACKORIGIN-1,x
  3512 24DB B5 18			lda :STACKORIGIN,x
  3513 24DD 99 AE 2C			sta adr.OBSTACLES,y
  3514 24E0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3515 24E2 99 AF 2C			sta adr.OBSTACLES+1,y
  3516 24E5 CA				dex
  3517
  3518 				; optimize FAIL (1, levels.inc), line = 135
  3519
  3520 24E6 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3521 24EA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3522 24EE A9 0C			lda #$0C
  3523 24F0 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3524 24F3 A9 14			lda #$14
  3525 24F5 8D C7 2C			sta CALCOBSTACLEADDR.X
  3526 24F8 20 F3 12			jsr CALCOBSTACLEADDR
  3527 24FB B4 17			ldy :STACKORIGIN-1,x
  3528 24FD B5 18			lda :STACKORIGIN,x
  3529 24FF 99 AE 2C			sta adr.OBSTACLES,y
  3530 2502 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3531 2504 99 AF 2C			sta adr.OBSTACLES+1,y
  3532 2507 CA				dex
  3533 2508 CA				dex
  3534
  3535 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 137
  3536
  3537 2509 20 16 13			jsr SAVEOBSTACLES
  3538 250C			@exit
  3539 					.ifdef @new
  3540 					lda <@VarData
  3541 					sta :ztmp
  3542 					lda >@VarData
  3543 					ldy #@VarDataSize-1
  3544 					jmp @FreeMem
  3545 					els
  3546 250C 60				rts						; ret
  3547 					eif
  3548 				.endl
  3549
  3550 250D			.local	SETLEVEL07					; PROCEDURE
  3551
  3552 				; optimize OK (levels.inc), line = 144
  3553
  3554 250D A9 01			lda #$01
  3555 250F 8D D3 2C			sta SETPLAYER.ISALIVE
  3556 2512 A9 62			lda #$62
  3557 2514 8D D2 2C			sta SETPLAYER.COLOUR
  3558 2517 A9 51			lda #$51
  3559 2519 8D D1 2C			sta SETPLAYER.HEAD
  3560 251C A9 00			lda #$00
  3561 251E 8D D0 2C			sta SETPLAYER.BRAIN
  3562 2521 A9 04			lda #$04
  3563 2523 8D CF 2C			sta SETPLAYER.DIR
  3564 2526 A9 0C			lda #$0C
  3565 2528 8D CE 2C			sta SETPLAYER.Y
  3566 252B A9 12			lda #$12
  3567 252D 8D CD 2C			sta SETPLAYER.X
  3568 2530 AD 71 2C			lda PLAYER1
  3569 2533 8D CB 2C			sta SETPLAYER.P
  3570 2536 AD 72 2C			lda PLAYER1+1
  3571 2539 8D CC 2C			sta SETPLAYER.P+1
  3572 253C 20 23 14			jsr SETPLAYER
  3573
  3574 				; optimize OK (levels.inc), line = 145
  3575
  3576 253F A9 01			lda #$01
  3577 2541 8D D3 2C			sta SETPLAYER.ISALIVE
  3578 2544 A9 5D			lda #$5D
  3579 2546 8D D2 2C			sta SETPLAYER.COLOUR
  3580 2549 A9 51			lda #$51
  3581 254B 8D D1 2C			sta SETPLAYER.HEAD
  3582 254E A9 03			lda #$03
  3583 2550 8D D0 2C			sta SETPLAYER.BRAIN
  3584 2553 A9 08			lda #$08
  3585 2555 8D CF 2C			sta SETPLAYER.DIR
  3586 2558 A9 17			lda #$17
  3587 255A 8D CE 2C			sta SETPLAYER.Y
  3588 255D A9 01			lda #$01
  3589 255F 8D CD 2C			sta SETPLAYER.X
  3590 2562 AD 73 2C			lda PLAYER2
  3591 2565 8D CB 2C			sta SETPLAYER.P
  3592 2568 AD 74 2C			lda PLAYER2+1
  3593 256B 8D CC 2C			sta SETPLAYER.P+1
  3594 256E 20 23 14			jsr SETPLAYER
  3595
  3596 				; optimize OK (levels.inc), line = 146
  3597
  3598 2571 A9 01			lda #$01
  3599 2573 8D D3 2C			sta SETPLAYER.ISALIVE
  3600 2576 A9 71			lda #$71
  3601 2578 8D D2 2C			sta SETPLAYER.COLOUR
  3602 257B A9 51			lda #$51
  3603 257D 8D D1 2C			sta SETPLAYER.HEAD
  3604 2580 A9 03			lda #$03
  3605 2582 8D D0 2C			sta SETPLAYER.BRAIN
  3606 2585 A9 02			lda #$02
  3607 2587 8D CF 2C			sta SETPLAYER.DIR
  3608 258A A9 04			lda #$04
  3609 258C 8D CE 2C			sta SETPLAYER.Y
  3610 258F A9 1E			lda #$1E
  3611 2591 8D CD 2C			sta SETPLAYER.X
  3612 2594 AD 75 2C			lda PLAYER3
  3613 2597 8D CB 2C			sta SETPLAYER.P
  3614 259A AD 76 2C			lda PLAYER3+1
  3615 259D 8D CC 2C			sta SETPLAYER.P+1
  3616 25A0 20 23 14			jsr SETPLAYER
  3617
  3618 				; optimize OK (levels.inc), line = 147
  3619
  3620 25A3 A9 01			lda #$01
  3621 25A5 8D D3 2C			sta SETPLAYER.ISALIVE
  3622 25A8 A9 55			lda #$55
  3623 25AA 8D D2 2C			sta SETPLAYER.COLOUR
  3624 25AD A9 51			lda #$51
  3625 25AF 8D D1 2C			sta SETPLAYER.HEAD
  3626 25B2 A9 02			lda #$02
  3627 25B4 8D D0 2C			sta SETPLAYER.BRAIN
  3628 25B7 A9 01			lda #$01
  3629 25B9 8D CF 2C			sta SETPLAYER.DIR
  3630 25BC A9 15			lda #$15
  3631 25BE 8D CE 2C			sta SETPLAYER.Y
  3632 25C1 A9 24			lda #$24
  3633 25C3 8D CD 2C			sta SETPLAYER.X
  3634 25C6 AD 77 2C			lda PLAYER4
  3635 25C9 8D CB 2C			sta SETPLAYER.P
  3636 25CC AD 78 2C			lda PLAYER4+1
  3637 25CF 8D CC 2C			sta SETPLAYER.P+1
  3638 25D2 20 23 14			jsr SETPLAYER
  3639
  3640 				; optimize FAIL (1, levels.inc), line = 149
  3641
  3642 25D5 E8				inx
  3643 25D6 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3644 25DA 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3645 25DC A9 06			lda #$06
  3646 25DE 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3647 25E1 A9 0A			lda #$0A
  3648 25E3 8D C7 2C			sta CALCOBSTACLEADDR.X
  3649 25E6 20 F3 12			jsr CALCOBSTACLEADDR
  3650 25E9 B4 17			ldy :STACKORIGIN-1,x
  3651 25EB B5 18			lda :STACKORIGIN,x
  3652 25ED 99 AE 2C			sta adr.OBSTACLES,y
  3653 25F0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3654 25F2 99 AF 2C			sta adr.OBSTACLES+1,y
  3655 25F5 CA				dex
  3656
  3657 				; optimize FAIL (1, levels.inc), line = 150
  3658
  3659 25F6 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3660 25FA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3661 25FE A9 06			lda #$06
  3662 2600 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3663 2603 A9 1E			lda #$1E
  3664 2605 8D C7 2C			sta CALCOBSTACLEADDR.X
  3665 2608 20 F3 12			jsr CALCOBSTACLEADDR
  3666 260B B4 17			ldy :STACKORIGIN-1,x
  3667 260D B5 18			lda :STACKORIGIN,x
  3668 260F 99 AE 2C			sta adr.OBSTACLES,y
  3669 2612 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3670 2614 99 AF 2C			sta adr.OBSTACLES+1,y
  3671 2617 CA				dex
  3672
  3673 				; optimize FAIL (1, levels.inc), line = 151
  3674
  3675 2618 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3676 261C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3677 2620 A9 12			lda #$12
  3678 2622 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3679 2625 A9 0A			lda #$0A
  3680 2627 8D C7 2C			sta CALCOBSTACLEADDR.X
  3681 262A 20 F3 12			jsr CALCOBSTACLEADDR
  3682 262D B4 17			ldy :STACKORIGIN-1,x
  3683 262F B5 18			lda :STACKORIGIN,x
  3684 2631 99 AE 2C			sta adr.OBSTACLES,y
  3685 2634 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3686 2636 99 AF 2C			sta adr.OBSTACLES+1,y
  3687 2639 CA				dex
  3688
  3689 				; optimize FAIL (1, levels.inc), line = 152
  3690
  3691 263A A9 06 95 18			mva #$06 :STACKORIGIN,x
  3692 263E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3693 2642 A9 12			lda #$12
  3694 2644 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3695 2647 A9 1E			lda #$1E
  3696 2649 8D C7 2C			sta CALCOBSTACLEADDR.X
  3697 264C 20 F3 12			jsr CALCOBSTACLEADDR
  3698 264F B4 17			ldy :STACKORIGIN-1,x
  3699 2651 B5 18			lda :STACKORIGIN,x
  3700 2653 99 AE 2C			sta adr.OBSTACLES,y
  3701 2656 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3702 2658 99 AF 2C			sta adr.OBSTACLES+1,y
  3703 265B CA				dex
  3704
  3705 				; optimize FAIL (1, levels.inc), line = 153
  3706
  3707 265C A9 08 95 18			mva #$08 :STACKORIGIN,x
  3708 2660 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3709 2664 A9 0C			lda #$0C
  3710 2666 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3711 2669 A9 01			lda #$01
  3712 266B 8D C7 2C			sta CALCOBSTACLEADDR.X
  3713 266E 20 F3 12			jsr CALCOBSTACLEADDR
  3714 2671 B4 17			ldy :STACKORIGIN-1,x
  3715 2673 B5 18			lda :STACKORIGIN,x
  3716 2675 99 AE 2C			sta adr.OBSTACLES,y
  3717 2678 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3718 267A 99 AF 2C			sta adr.OBSTACLES+1,y
  3719 267D CA				dex
  3720
  3721 				; optimize FAIL (1, levels.inc), line = 154
  3722
  3723 267E A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3724 2682 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3725 2686 A9 02			lda #$02
  3726 2688 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3727 268B A9 14			lda #$14
  3728 268D 8D C7 2C			sta CALCOBSTACLEADDR.X
  3729 2690 20 F3 12			jsr CALCOBSTACLEADDR
  3730 2693 B4 17			ldy :STACKORIGIN-1,x
  3731 2695 B5 18			lda :STACKORIGIN,x
  3732 2697 99 AE 2C			sta adr.OBSTACLES,y
  3733 269A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3734 269C 99 AF 2C			sta adr.OBSTACLES+1,y
  3735 269F CA				dex
  3736
  3737 				; optimize FAIL (1, levels.inc), line = 155
  3738
  3739 26A0 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3740 26A4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3741 26A8 A9 16			lda #$16
  3742 26AA 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3743 26AD A9 14			lda #$14
  3744 26AF 8D C7 2C			sta CALCOBSTACLEADDR.X
  3745 26B2 20 F3 12			jsr CALCOBSTACLEADDR
  3746 26B5 B4 17			ldy :STACKORIGIN-1,x
  3747 26B7 B5 18			lda :STACKORIGIN,x
  3748 26B9 99 AE 2C			sta adr.OBSTACLES,y
  3749 26BC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3750 26BE 99 AF 2C			sta adr.OBSTACLES+1,y
  3751 26C1 CA				dex
  3752
  3753 				; optimize FAIL (1, levels.inc), line = 156
  3754
  3755 26C2 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3756 26C6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3757 26CA A9 0C			lda #$0C
  3758 26CC 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3759 26CF A9 14			lda #$14
  3760 26D1 8D C7 2C			sta CALCOBSTACLEADDR.X
  3761 26D4 20 F3 12			jsr CALCOBSTACLEADDR
  3762 26D7 B4 17			ldy :STACKORIGIN-1,x
  3763 26D9 B5 18			lda :STACKORIGIN,x
  3764 26DB 99 AE 2C			sta adr.OBSTACLES,y
  3765 26DE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3766 26E0 99 AF 2C			sta adr.OBSTACLES+1,y
  3767 26E3 CA				dex
  3768 26E4 CA				dex
  3769
  3770 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 158
  3771
  3772 26E5 20 16 13			jsr SAVEOBSTACLES
  3773 26E8			@exit
  3774 					.ifdef @new
  3775 					lda <@VarData
  3776 					sta :ztmp
  3777 					lda >@VarData
  3778 					ldy #@VarDataSize-1
  3779 					jmp @FreeMem
  3780 					els
  3781 26E8 60				rts						; ret
  3782 					eif
  3783 				.endl
  3784
  3785 26E9			.local	SETLEVEL08					; PROCEDURE
  3786
  3787 				; optimize OK (levels.inc), line = 165
  3788
  3789 26E9 A9 01			lda #$01
  3790 26EB 8D D3 2C			sta SETPLAYER.ISALIVE
  3791 26EE A9 62			lda #$62
  3792 26F0 8D D2 2C			sta SETPLAYER.COLOUR
  3793 26F3 A9 51			lda #$51
  3794 26F5 8D D1 2C			sta SETPLAYER.HEAD
  3795 26F8 A9 00			lda #$00
  3796 26FA 8D D0 2C			sta SETPLAYER.BRAIN
  3797 26FD A9 08			lda #$08
  3798 26FF 8D CF 2C			sta SETPLAYER.DIR
  3799 2702 A9 17			lda #$17
  3800 2704 8D CE 2C			sta SETPLAYER.Y
  3801 2707 A9 01			lda #$01
  3802 2709 8D CD 2C			sta SETPLAYER.X
  3803 270C AD 71 2C			lda PLAYER1
  3804 270F 8D CB 2C			sta SETPLAYER.P
  3805 2712 AD 72 2C			lda PLAYER1+1
  3806 2715 8D CC 2C			sta SETPLAYER.P+1
  3807 2718 20 23 14			jsr SETPLAYER
  3808
  3809 				; optimize OK (levels.inc), line = 166
  3810
  3811 271B A9 01			lda #$01
  3812 271D 8D D3 2C			sta SETPLAYER.ISALIVE
  3813 2720 A9 5D			lda #$5D
  3814 2722 8D D2 2C			sta SETPLAYER.COLOUR
  3815 2725 A9 51			lda #$51
  3816 2727 8D D1 2C			sta SETPLAYER.HEAD
  3817 272A A9 03			lda #$03
  3818 272C 8D D0 2C			sta SETPLAYER.BRAIN
  3819 272F A9 04			lda #$04
  3820 2731 8D CF 2C			sta SETPLAYER.DIR
  3821 2734 A9 17			lda #$17
  3822 2736 8D CE 2C			sta SETPLAYER.Y
  3823 2739 A9 26			lda #$26
  3824 273B 8D CD 2C			sta SETPLAYER.X
  3825 273E AD 73 2C			lda PLAYER2
  3826 2741 8D CB 2C			sta SETPLAYER.P
  3827 2744 AD 74 2C			lda PLAYER2+1
  3828 2747 8D CC 2C			sta SETPLAYER.P+1
  3829 274A 20 23 14			jsr SETPLAYER
  3830
  3831 				; optimize OK (levels.inc), line = 167
  3832
  3833 274D A9 01			lda #$01
  3834 274F 8D D3 2C			sta SETPLAYER.ISALIVE
  3835 2752 A9 71			lda #$71
  3836 2754 8D D2 2C			sta SETPLAYER.COLOUR
  3837 2757 A9 51			lda #$51
  3838 2759 8D D1 2C			sta SETPLAYER.HEAD
  3839 275C A9 02			lda #$02
  3840 275E 8D D0 2C			sta SETPLAYER.BRAIN
  3841 2761 8D CF 2C			sta SETPLAYER.DIR
  3842 2764 A9 01			lda #$01
  3843 2766 8D CE 2C			sta SETPLAYER.Y
  3844 2769 A9 0A			lda #$0A
  3845 276B 8D CD 2C			sta SETPLAYER.X
  3846 276E AD 75 2C			lda PLAYER3
  3847 2771 8D CB 2C			sta SETPLAYER.P
  3848 2774 AD 76 2C			lda PLAYER3+1
  3849 2777 8D CC 2C			sta SETPLAYER.P+1
  3850 277A 20 23 14			jsr SETPLAYER
  3851
  3852 				; optimize OK (levels.inc), line = 168
  3853
  3854 277D A9 01			lda #$01
  3855 277F 8D D3 2C			sta SETPLAYER.ISALIVE
  3856 2782 A9 55			lda #$55
  3857 2784 8D D2 2C			sta SETPLAYER.COLOUR
  3858 2787 A9 51			lda #$51
  3859 2789 8D D1 2C			sta SETPLAYER.HEAD
  3860 278C A9 04			lda #$04
  3861 278E 8D D0 2C			sta SETPLAYER.BRAIN
  3862 2791 8D CF 2C			sta SETPLAYER.DIR
  3863 2794 A9 01			lda #$01
  3864 2796 8D CE 2C			sta SETPLAYER.Y
  3865 2799 A9 26			lda #$26
  3866 279B 8D CD 2C			sta SETPLAYER.X
  3867 279E AD 77 2C			lda PLAYER4
  3868 27A1 8D CB 2C			sta SETPLAYER.P
  3869 27A4 AD 78 2C			lda PLAYER4+1
  3870 27A7 8D CC 2C			sta SETPLAYER.P+1
  3871 27AA 20 23 14			jsr SETPLAYER
  3872
  3873 				; optimize FAIL (1, levels.inc), line = 170
  3874
  3875 27AD E8				inx
  3876 27AE A9 00 95 18			mva #$00 :STACKORIGIN,x
  3877 27B2 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3878 27B4 A9 06			lda #$06
  3879 27B6 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3880 27B9 A9 0A			lda #$0A
  3881 27BB 8D C7 2C			sta CALCOBSTACLEADDR.X
  3882 27BE 20 F3 12			jsr CALCOBSTACLEADDR
  3883 27C1 B4 17			ldy :STACKORIGIN-1,x
  3884 27C3 B5 18			lda :STACKORIGIN,x
  3885 27C5 99 AE 2C			sta adr.OBSTACLES,y
  3886 27C8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3887 27CA 99 AF 2C			sta adr.OBSTACLES+1,y
  3888 27CD CA				dex
  3889
  3890 				; optimize FAIL (1, levels.inc), line = 171
  3891
  3892 27CE A9 02 95 18			mva #$02 :STACKORIGIN,x
  3893 27D2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3894 27D6 A9 06			lda #$06
  3895 27D8 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3896 27DB A9 1E			lda #$1E
  3897 27DD 8D C7 2C			sta CALCOBSTACLEADDR.X
  3898 27E0 20 F3 12			jsr CALCOBSTACLEADDR
  3899 27E3 B4 17			ldy :STACKORIGIN-1,x
  3900 27E5 B5 18			lda :STACKORIGIN,x
  3901 27E7 99 AE 2C			sta adr.OBSTACLES,y
  3902 27EA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3903 27EC 99 AF 2C			sta adr.OBSTACLES+1,y
  3904 27EF CA				dex
  3905
  3906 				; optimize FAIL (1, levels.inc), line = 172
  3907
  3908 27F0 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3909 27F4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3910 27F8 A9 12			lda #$12
  3911 27FA 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3912 27FD A9 0A			lda #$0A
  3913 27FF 8D C7 2C			sta CALCOBSTACLEADDR.X
  3914 2802 20 F3 12			jsr CALCOBSTACLEADDR
  3915 2805 B4 17			ldy :STACKORIGIN-1,x
  3916 2807 B5 18			lda :STACKORIGIN,x
  3917 2809 99 AE 2C			sta adr.OBSTACLES,y
  3918 280C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3919 280E 99 AF 2C			sta adr.OBSTACLES+1,y
  3920 2811 CA				dex
  3921
  3922 				; optimize FAIL (1, levels.inc), line = 173
  3923
  3924 2812 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3925 2816 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3926 281A A9 12			lda #$12
  3927 281C 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3928 281F A9 1E			lda #$1E
  3929 2821 8D C7 2C			sta CALCOBSTACLEADDR.X
  3930 2824 20 F3 12			jsr CALCOBSTACLEADDR
  3931 2827 B4 17			ldy :STACKORIGIN-1,x
  3932 2829 B5 18			lda :STACKORIGIN,x
  3933 282B 99 AE 2C			sta adr.OBSTACLES,y
  3934 282E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3935 2830 99 AF 2C			sta adr.OBSTACLES+1,y
  3936 2833 CA				dex
  3937
  3938 				; optimize FAIL (1, levels.inc), line = 174
  3939
  3940 2834 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3941 2838 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3942 283C A9 0C			lda #$0C
  3943 283E 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3944 2841 A9 01			lda #$01
  3945 2843 8D C7 2C			sta CALCOBSTACLEADDR.X
  3946 2846 20 F3 12			jsr CALCOBSTACLEADDR
  3947 2849 B4 17			ldy :STACKORIGIN-1,x
  3948 284B B5 18			lda :STACKORIGIN,x
  3949 284D 99 AE 2C			sta adr.OBSTACLES,y
  3950 2850 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3951 2852 99 AF 2C			sta adr.OBSTACLES+1,y
  3952 2855 CA				dex
  3953
  3954 				; optimize FAIL (1, levels.inc), line = 175
  3955
  3956 2856 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3957 285A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3958 285E A9 02			lda #$02
  3959 2860 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3960 2863 A9 14			lda #$14
  3961 2865 8D C7 2C			sta CALCOBSTACLEADDR.X
  3962 2868 20 F3 12			jsr CALCOBSTACLEADDR
  3963 286B B4 17			ldy :STACKORIGIN-1,x
  3964 286D B5 18			lda :STACKORIGIN,x
  3965 286F 99 AE 2C			sta adr.OBSTACLES,y
  3966 2872 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3967 2874 99 AF 2C			sta adr.OBSTACLES+1,y
  3968 2877 CA				dex
  3969
  3970 				; optimize FAIL (1, levels.inc), line = 176
  3971
  3972 2878 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3973 287C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3974 2880 A9 16			lda #$16
  3975 2882 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3976 2885 A9 14			lda #$14
  3977 2887 8D C7 2C			sta CALCOBSTACLEADDR.X
  3978 288A 20 F3 12			jsr CALCOBSTACLEADDR
  3979 288D B4 17			ldy :STACKORIGIN-1,x
  3980 288F B5 18			lda :STACKORIGIN,x
  3981 2891 99 AE 2C			sta adr.OBSTACLES,y
  3982 2894 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3983 2896 99 AF 2C			sta adr.OBSTACLES+1,y
  3984 2899 CA				dex
  3985
  3986 				; optimize FAIL (1, levels.inc), line = 177
  3987
  3988 289A A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3989 289E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3990 28A2 A9 0C			lda #$0C
  3991 28A4 8D C8 2C			sta CALCOBSTACLEADDR.Y
  3992 28A7 A9 14			lda #$14
  3993 28A9 8D C7 2C			sta CALCOBSTACLEADDR.X
  3994 28AC 20 F3 12			jsr CALCOBSTACLEADDR
  3995 28AF B4 17			ldy :STACKORIGIN-1,x
  3996 28B1 B5 18			lda :STACKORIGIN,x
  3997 28B3 99 AE 2C			sta adr.OBSTACLES,y
  3998 28B6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3999 28B8 99 AF 2C			sta adr.OBSTACLES+1,y
  4000 28BB CA				dex
  4001 28BC CA				dex
  4002
  4003 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 179
  4004
  4005 28BD 20 16 13			jsr SAVEOBSTACLES
  4006 28C0			@exit
  4007 					.ifdef @new
  4008 					lda <@VarData
  4009 					sta :ztmp
  4010 					lda >@VarData
  4011 					ldy #@VarDataSize-1
  4012 					jmp @FreeMem
  4013 					els
  4014 28C0 60				rts						; ret
  4015 					eif
  4016 				.endl
  4017
  4018 28C1			.local	HUMAN						; PROCEDURE
  4019
  4020 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 15
  4021
  4022 28C1 20 11 14			jsr CHECKJOYSTATUS
  4023 28C4 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4024 28CE A0 04			ldy #PLY.DIR-DATAORIGIN
  4025 28D0 B1 12			lda (:bp2),y
  4026 28D2 85 5B			sta NEWDIR
  4027
  4028 				; optimize OK (main.pas), line = 16
  4029
  4030 28D4 A5 63			lda JOYSTATUS
  4031 28D6 8D DB 2C			sta @CASETMP_0006
  4032 28D9 C9 01			cmp #$01
  4033 28DB D0 19			jne l_0D5D
  4034 28DD			@
  4035
  4036 				; optimize OK (main.pas), line = 17
  4037
  4038 28DD AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4039 28E7 A0 04			ldy #PLY.DIR-DATAORIGIN
  4040 28E9 B1 12			lda (:bp2),y
  4041 28EB C9 02			cmp #$02
  4042 28ED F0 04			jeq l_0D6F
  4043 28EF A9 01			lda #$01
  4044 28F1 85 5B			sta NEWDIR
  4045 28F3			l_0D6F
  4046
  4047 28F3 4C 4A 29			jmp a_0006
  4048 28F6			l_0D5D
  4049 28F6 C9 02			cmp #$02
  4050 28F8 D0 19			jne l_0D7F
  4051 28FA			@
  4052
  4053 				; optimize OK (main.pas), line = 18
  4054
  4055 28FA AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4056 2904 A0 04			ldy #PLY.DIR-DATAORIGIN
  4057 2906 B1 12			lda (:bp2),y
  4058 2908 C9 01			cmp #$01
  4059 290A F0 04			jeq l_0D91
  4060 290C A9 02			lda #$02
  4061 290E 85 5B			sta NEWDIR
  4062 2910			l_0D91
  4063
  4064 2910 4C 4A 29			jmp a_0006
  4065 2913			l_0D7F
  4066 2913 C9 04			cmp #$04
  4067 2915 D0 19			jne l_0DA1
  4068 2917			@
  4069
  4070 				; optimize OK (main.pas), line = 19
  4071
  4072 2917 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4073 2921 A0 04			ldy #PLY.DIR-DATAORIGIN
  4074 2923 B1 12			lda (:bp2),y
  4075 2925 C9 08			cmp #$08
  4076 2927 F0 04			jeq l_0DB3
  4077 2929 A9 04			lda #$04
  4078 292B 85 5B			sta NEWDIR
  4079 292D			l_0DB3
  4080
  4081 292D 4C 4A 29			jmp a_0006
  4082 2930			l_0DA1
  4083 2930 C9 08			cmp #$08
  4084 2932 D0 16			jne l_0DC3
  4085 2934			@
  4086
  4087 				; optimize OK (main.pas), line = 20
  4088
  4089 2934 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4090 293E A0 04			ldy #PLY.DIR-DATAORIGIN
  4091 2940 B1 12			lda (:bp2),y
  4092 2942 C9 04			cmp #$04
  4093 2944 F0 04			jeq l_0DD5
  4094 2946 A9 08			lda #$08
  4095 2948 85 5B			sta NEWDIR
  4096 294A			l_0DD5
  4097
  4098 294A			l_0DC3
  4099 294A			a_0006
  4100
  4101 				; optimize OK (main.pas), line = 23
  4102
  4103 294A A5 5B			lda NEWDIR
  4104 294C 25 5C			and AVAILDIR
  4105 294E D0 18			jne l_0DFC
  4106
  4107 				; optimize OK (main.pas), line = 24
  4108
  4109 2950 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4110 295A A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4111 295C A9 00			lda #$00
  4112 295E 91 12			sta (:bp2),y
  4113 2960 A0 02			ldy #PLY.HEAD-DATAORIGIN
  4114 2962 A9 2A			lda #$2A
  4115 2964 91 12			sta (:bp2),y
  4116 2966 C6 5A			dec ALIVE
  4117 2968			l_0DFC
  4118
  4119 				; ------------------------------------------------------------
  4120
  4121 = 2CDB			@CASETMP_0006	= DATAORIGIN+$005F
  4122
  4123 = 2CDB			@VarData	= @CASETMP_0006
  4124 = 0001			@VarDataSize	= 1
  4125
  4126 2968			@exit
  4127 					.ifdef @new
  4128 					lda <@VarData
  4129 					sta :ztmp
  4130 					lda >@VarData
  4131 					ldy #@VarDataSize-1
  4132 					jmp @FreeMem
  4133 					els
  4134 2968 60				rts						; ret
  4135 					eif
  4136 				.endl
  4137
  4138 2969			.local	PLAYERMOVE					; PROCEDURE
  4139
  4140 				; optimize OK (main.pas), line = 32
  4141
  4142 2969 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4143 2973 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4144 2975 B1 12			lda (:bp2),y
  4145 2977 D0 03 4C BD 2A		jeq l_0E1B
  4146
  4147 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 33
  4148
  4149 297C 20 29 12			jsr CHECKAVAILDIR
  4150
  4151 				; optimize OK (main.pas), line = 35
  4152
  4153 297F A5 5C			lda AVAILDIR
  4154 2981 D0 35			jne l_0E2F
  4155
  4156 				; optimize OK (main.pas), line = 36
  4157
  4158 2983 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4159 298D A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4160 298F A9 00			lda #$00
  4161 2991 91 12			sta (:bp2),y
  4162 2993 C6 5A			dec ALIVE
  4163
  4164 				; optimize OK (main.pas), line = 37
  4165
  4166 2995 A0 00			ldy #PLY.X-DATAORIGIN
  4167 2997 B1 12			lda (:bp2),y
  4168 2999 8D BE 2C			sta PUTCHAR_0072.X
  4169 299C A0 01			ldy #PLY.Y-DATAORIGIN
  4170 299E B1 12			lda (:bp2),y
  4171 29A0 8D BF 2C			sta PUTCHAR_0072.Y
  4172 29A3 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  4173 29A5 B1 12			lda (:bp2),y
  4174 29A7 18 69 80			add #$80
  4175 29AA 8D C1 2C			sta PUTCHAR_0072.C
  4176 29AD A9 57			lda #$57
  4177 29AF 8D C0 2C			sta PUTCHAR_0072.V
  4178 29B2 20 78 11			jsr PUTCHAR_0072
  4179 29B5 4C BD 2A			jmp l_0E50
  4180 29B8			l_0E2F
  4181
  4182 				; optimize OK (main.pas), line = 40
  4183
  4184 29B8 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4185 29C2 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  4186 29C4 B1 12			lda (:bp2),y
  4187 29C6 8D DC 2C			sta @CASETMP_0007
  4188 29C9 C9 00			cmp #$00
  4189 29CB D0 06			jne l_0E5B
  4190 29CD			@
  4191
  4192 				; optimize FAIL ('HUMAN', main.pas), line = 41
  4193
  4194 29CD 20 C1 28			jsr HUMAN
  4195 29D0 4C F8 29			jmp a_0007
  4196 29D3			l_0E5B
  4197 29D3 C9 01			cmp #$01
  4198 29D5 D0 06			jne l_0E65
  4199 29D7			@
  4200
  4201 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 42
  4202
  4203 29D7 20 1D 15			jsr AISTRAIGHT
  4204 29DA 4C F8 29			jmp a_0007
  4205 29DD			l_0E65
  4206 29DD C9 02			cmp #$02
  4207 29DF D0 06			jne l_0E6F
  4208 29E1			@
  4209
  4210 				; optimize FAIL ('AISAPPER', main.pas), line = 43
  4211
  4212 29E1 20 A2 15			jsr AISAPPER
  4213 29E4 4C F8 29			jmp a_0007
  4214 29E7			l_0E6F
  4215 29E7 C9 03			cmp #$03
  4216 29E9 D0 06			jne l_0E79
  4217 29EB			@
  4218
  4219 				; optimize FAIL ('AIBULLY', main.pas), line = 44
  4220
  4221 29EB 20 FC 17			jsr AIBULLY
  4222 29EE 4C F8 29			jmp a_0007
  4223 29F1			l_0E79
  4224 29F1 C9 04			cmp #$04
  4225 29F3 D0 03			jne l_0E83
  4226 29F5			@
  4227
  4228 				; optimize FAIL ('AIMIRROR', main.pas), line = 45
  4229
  4230 29F5 20 CA 18			jsr AIMIRROR
  4231 29F8			l_0E83
  4232 29F8			a_0007
  4233
  4234 				; optimize FAIL ('DRAWTAIL', main.pas), line = 48
  4235
  4236 29F8 20 5A 13			jsr DRAWTAIL
  4237 29FB AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4238 2A05 A0 04			ldy #PLY.DIR-DATAORIGIN
  4239 2A07 A5 5B			lda NEWDIR
  4240 2A09 91 12			sta (:bp2),y
  4241
  4242 				; optimize OK (main.pas), line = 50
  4243
  4244 2A0B A5 5B			lda NEWDIR
  4245 2A0D 8D DD 2C			sta @CASETMP_0008
  4246 2A10 C9 01			cmp #$01
  4247 2A12 D0 16			jne l_0E9F
  4248 2A14			@
  4249
  4250 				; optimize OK (main.pas), line = 51
  4251
  4252 2A14 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4253 2A1E A0 01			ldy #PLY.Y-DATAORIGIN
  4254 2A20 B1 12			lda (:bp2),y
  4255 2A22 38 E9 01			sub #$01
  4256 2A25 91 12			sta (:bp2),y
  4257
  4258 2A27 4C 75 2A			jmp a_0008
  4259 2A2A			l_0E9F
  4260 2A2A C9 02			cmp #$02
  4261 2A2C D0 16			jne l_0EA9
  4262 2A2E			@
  4263
  4264 				; optimize OK (main.pas), line = 52
  4265
  4266 2A2E AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4267 2A38 A0 01			ldy #PLY.Y-DATAORIGIN
  4268 2A3A B1 12			lda (:bp2),y
  4269 2A3C 18 69 01			add #$01
  4270 2A3F 91 12			sta (:bp2),y
  4271
  4272 2A41 4C 75 2A			jmp a_0008
  4273 2A44			l_0EA9
  4274 2A44 C9 04			cmp #$04
  4275 2A46 D0 16			jne l_0EB3
  4276 2A48			@
  4277
  4278 				; optimize OK (main.pas), line = 53
  4279
  4280 2A48 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4281 2A52 A0 00			ldy #PLY.X-DATAORIGIN
  4282 2A54 B1 12			lda (:bp2),y
  4283 2A56 38 E9 01			sub #$01
  4284 2A59 91 12			sta (:bp2),y
  4285
  4286 2A5B 4C 75 2A			jmp a_0008
  4287 2A5E			l_0EB3
  4288 2A5E C9 08			cmp #$08
  4289 2A60 D0 13			jne l_0EBD
  4290 2A62			@
  4291
  4292 				; optimize OK (main.pas), line = 54
  4293
  4294 2A62 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4295 2A6C A0 00			ldy #PLY.X-DATAORIGIN
  4296 2A6E B1 12			lda (:bp2),y
  4297 2A70 18 69 01			add #$01
  4298 2A73 91 12			sta (:bp2),y
  4299
  4300 2A75			l_0EBD
  4301 2A75			a_0008
  4302
  4303 				; optimize OK (main.pas), line = 57
  4304
  4305 2A75 AC 6D 2C 84 12 AC + 	mwy PLY :bp2
  4306 2A7F A0 00			ldy #PLY.X-DATAORIGIN
  4307 2A81 B1 12			lda (:bp2),y
  4308 2A83 8D BE 2C			sta PUTCHAR_0072.X
  4309 2A86 A0 01			ldy #PLY.Y-DATAORIGIN
  4310 2A88 B1 12			lda (:bp2),y
  4311 2A8A 8D BF 2C			sta PUTCHAR_0072.Y
  4312 2A8D A0 02			ldy #PLY.HEAD-DATAORIGIN
  4313 2A8F B1 12			lda (:bp2),y
  4314 2A91 8D C0 2C			sta PUTCHAR_0072.V
  4315 2A94 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  4316 2A96 B1 12			lda (:bp2),y
  4317 2A98 8D C1 2C			sta PUTCHAR_0072.C
  4318 2A9B 20 78 11			jsr PUTCHAR_0072
  4319
  4320 				; optimize OK (main.pas), line = 60
  4321
  4322 2A9E AD 95 2C			lda PLAYER1.ISALIVE
  4323 2AA1 D0 1A			jne l_0EE2
  4324 2AA3 AD 91 2C			lda PLAYER1.COLOUR
  4325 2AA6 8D C1 2C			sta PUTCHAR_0072.C
  4326 2AA9 A9 2A			lda #$2A
  4327 2AAB 8D C0 2C			sta PUTCHAR_0072.V
  4328 2AAE AD 8F 2C			lda PLAYER1.Y
  4329 2AB1 8D BF 2C			sta PUTCHAR_0072.Y
  4330 2AB4 AD 8E 2C			lda PLAYER1.X
  4331 2AB7 8D BE 2C			sta PUTCHAR_0072.X
  4332 2ABA 20 78 11			jsr PUTCHAR_0072
  4333 2ABD			l_0EE2
  4334 2ABD			l_0E50
  4335 2ABD			l_0E1B
  4336
  4337 				; ------------------------------------------------------------
  4338
  4339 = 2CDC			@CASETMP_0007	= DATAORIGIN+$0060
  4340 = 2CDD			@CASETMP_0008	= DATAORIGIN+$0061
  4341
  4342 = 2CDC			@VarData	= @CASETMP_0007
  4343 = 0002			@VarDataSize	= 2
  4344
  4345 2ABD			@exit
  4346 					.ifdef @new
  4347 					lda <@VarData
  4348 					sta :ztmp
  4349 					lda >@VarData
  4350 					ldy #@VarDataSize-1
  4351 					jmp @FreeMem
  4352 					els
  4353 2ABD 60				rts						; ret
  4354 					eif
  4355 				.endl
  4356
  4357 2ABE			.local	STARTSCREEN					; PROCEDURE
  4358
  4359 				; optimize OK (main.pas), line = 71
  4360
  4361 2ABE AD 91 2C			lda PLAYER1.COLOUR
  4362 2AC1 18 69 80			add #$80
  4363 2AC4 8D C1 2C			sta PUTCHAR_0072.C
  4364 2AC7 AD 90 2C			lda PLAYER1.HEAD
  4365 2ACA 8D C0 2C			sta PUTCHAR_0072.V
  4366 2ACD AD 8F 2C			lda PLAYER1.Y
  4367 2AD0 8D BF 2C			sta PUTCHAR_0072.Y
  4368 2AD3 AD 8E 2C			lda PLAYER1.X
  4369 2AD6 8D BE 2C			sta PUTCHAR_0072.X
  4370 2AD9 20 78 11			jsr PUTCHAR_0072
  4371
  4372 				; --- RepeatUntilProlog
  4373 2ADC			l_0F08
  4374
  4375 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 72
  4376
  4377 2ADC 20 11 14			jsr CHECKJOYSTATUS
  4378 2ADF A5 63			lda JOYSTATUS
  4379 2AE1 C9 40			cmp #$40
  4380 2AE3 D0 F7			jne l_0F08
  4381
  4382 				; optimize OK (main.pas), line = 73
  4383
  4384 2AE5 AD 91 2C			lda PLAYER1.COLOUR
  4385 2AE8 8D C1 2C			sta PUTCHAR_0072.C
  4386 2AEB AD 90 2C			lda PLAYER1.HEAD
  4387 2AEE 8D C0 2C			sta PUTCHAR_0072.V
  4388 2AF1 AD 8F 2C			lda PLAYER1.Y
  4389 2AF4 8D BF 2C			sta PUTCHAR_0072.Y
  4390 2AF7 AD 8E 2C			lda PLAYER1.X
  4391 2AFA 8D BE 2C			sta PUTCHAR_0072.X
  4392 2AFD 20 78 11			jsr PUTCHAR_0072
  4393 2B00			@exit
  4394 					.ifdef @new
  4395 					lda <@VarData
  4396 					sta :ztmp
  4397 					lda >@VarData
  4398 					ldy #@VarDataSize-1
  4399 					jmp @FreeMem
  4400 					els
  4401 2B00 60				rts						; ret
  4402 					eif
  4403 				.endl
  4404
  4405 2B01			.local	MAINLOOP					; PROCEDURE
  4406
  4407 				; optimize OK (main.pas), line = 80
  4408
  4409 2B01 A9 FF			lda #$FF
  4410 2B03 85 5A			sta ALIVE
  4411
  4412 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 82
  4413
  4414 2B05 20 87 14			jsr INITPLAYFIELD
  4415
  4416 				; optimize OK (main.pas), line = 84
  4417
  4418 2B08 AD 8C 2C			lda LEVEL
  4419 2B0B 8D DE 2C			sta @CASETMP_0009
  4420 2B0E C9 00			cmp #$00
  4421 2B10 D0 06			jne l_0F37
  4422 2B12			@
  4423
  4424 				; optimize FAIL ('SETLEVEL00', main.pas), line = 85
  4425
  4426 2B12 20 1F 19			jsr SETLEVEL00
  4427 2B15 4C 65 2B			jmp a_0009
  4428 2B18			l_0F37
  4429 2B18 C9 01			cmp #$01
  4430 2B1A D0 06			jne l_0F41
  4431 2B1C			@
  4432
  4433 				; optimize FAIL ('SETLEVEL01', main.pas), line = 86
  4434
  4435 2B1C 20 B7 1A			jsr SETLEVEL01
  4436 2B1F 4C 65 2B			jmp a_0009
  4437 2B22			l_0F41
  4438 2B22 C9 02			cmp #$02
  4439 2B24 D0 06			jne l_0F4B
  4440 2B26			@
  4441
  4442 				; optimize FAIL ('SETLEVEL02', main.pas), line = 87
  4443
  4444 2B26 20 4F 1C			jsr SETLEVEL02
  4445 2B29 4C 65 2B			jmp a_0009
  4446 2B2C			l_0F4B
  4447 2B2C C9 03			cmp #$03
  4448 2B2E D0 06			jne l_0F55
  4449 2B30			@
  4450
  4451 				; optimize FAIL ('SETLEVEL03', main.pas), line = 88
  4452
  4453 2B30 20 E7 1D			jsr SETLEVEL03
  4454 2B33 4C 65 2B			jmp a_0009
  4455 2B36			l_0F55
  4456 2B36 C9 04			cmp #$04
  4457 2B38 D0 06			jne l_0F5F
  4458 2B3A			@
  4459
  4460 				; optimize FAIL ('SETLEVEL04', main.pas), line = 89
  4461
  4462 2B3A 20 A1 1F			jsr SETLEVEL04
  4463 2B3D 4C 65 2B			jmp a_0009
  4464 2B40			l_0F5F
  4465 2B40 C9 05			cmp #$05
  4466 2B42 D0 06			jne l_0F69
  4467 2B44			@
  4468
  4469 				; optimize FAIL ('SETLEVEL05', main.pas), line = 90
  4470
  4471 2B44 20 7D 21			jsr SETLEVEL05
  4472 2B47 4C 65 2B			jmp a_0009
  4473 2B4A			l_0F69
  4474 2B4A C9 06			cmp #$06
  4475 2B4C D0 06			jne l_0F73
  4476 2B4E			@
  4477
  4478 				; optimize FAIL ('SETLEVEL06', main.pas), line = 91
  4479
  4480 2B4E 20 35 23			jsr SETLEVEL06
  4481 2B51 4C 65 2B			jmp a_0009
  4482 2B54			l_0F73
  4483 2B54 C9 07			cmp #$07
  4484 2B56 D0 06			jne l_0F7D
  4485 2B58			@
  4486
  4487 				; optimize FAIL ('SETLEVEL07', main.pas), line = 92
  4488
  4489 2B58 20 0D 25			jsr SETLEVEL07
  4490 2B5B 4C 65 2B			jmp a_0009
  4491 2B5E			l_0F7D
  4492 2B5E C9 08			cmp #$08
  4493 2B60 D0 03			jne l_0F87
  4494 2B62			@
  4495
  4496 				; optimize FAIL ('SETLEVEL08', main.pas), line = 93
  4497
  4498 2B62 20 E9 26			jsr SETLEVEL08
  4499 2B65			l_0F87
  4500 2B65			a_0009
  4501
  4502 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 96
  4503
  4504 2B65 20 BE 12			jsr ANIMATEOBSTACLES
  4505 2B68 20 C4 11			jsr SHOWSCORE
  4506 2B6B 20 BE 2A			jsr STARTSCREEN
  4507
  4508 				; --- RepeatUntilProlog
  4509 2B6E			l_0F99
  4510
  4511 				; optimize FAIL ('SYSTEM.PAUSE_006B', main.pas), line = 99
  4512
  4513 2B6E 20 23 11			jsr SYSTEM.PAUSE_006B
  4514
  4515 				; optimize OK (main.pas), line = 100
  4516
  4517 2B71 AD 71 2C			lda PLAYER1
  4518 2B74 8D 6D 2C			sta PLY
  4519 2B77 AD 72 2C			lda PLAYER1+1
  4520 2B7A 8D 6E 2C			sta PLY+1
  4521 2B7D 20 69 29			jsr PLAYERMOVE
  4522
  4523 				; optimize OK (main.pas), line = 102
  4524
  4525 2B80 A9 02			lda #$02
  4526 2B82 8D 88 2C			sta SYSTEM.PAUSE_006C.N
  4527 2B85 A9 00			lda #$00
  4528 2B87 8D 89 2C			sta SYSTEM.PAUSE_006C.N+1
  4529 2B8A 20 2A 11			jsr SYSTEM.PAUSE_006C
  4530
  4531 				; optimize OK (main.pas), line = 103
  4532
  4533 2B8D AD 73 2C			lda PLAYER2
  4534 2B90 8D 6D 2C			sta PLY
  4535 2B93 AD 74 2C			lda PLAYER2+1
  4536 2B96 8D 6E 2C			sta PLY+1
  4537 2B99 20 69 29			jsr PLAYERMOVE
  4538
  4539 				; optimize OK (main.pas), line = 104
  4540
  4541 2B9C AD 75 2C			lda PLAYER3
  4542 2B9F 8D 6D 2C			sta PLY
  4543 2BA2 AD 76 2C			lda PLAYER3+1
  4544 2BA5 8D 6E 2C			sta PLY+1
  4545 2BA8 20 69 29			jsr PLAYERMOVE
  4546
  4547 				; optimize OK (main.pas), line = 105
  4548
  4549 2BAB AD 77 2C			lda PLAYER4
  4550 2BAE 8D 6D 2C			sta PLY
  4551 2BB1 AD 78 2C			lda PLAYER4+1
  4552 2BB4 8D 6E 2C			sta PLY+1
  4553 2BB7 20 69 29			jsr PLAYERMOVE
  4554
  4555 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 106
  4556
  4557 2BBA 20 BE 12			jsr ANIMATEOBSTACLES
  4558
  4559 				; optimize OK (main.pas), line = 107
  4560
  4561 2BBD A5 5A			lda ALIVE
  4562 2BBF F0 04			jeq l_0F99x
  4563 2BC1 C9 FF			cmp #$FF
  4564 2BC3 D0 A9			jne l_0F99
  4565 2BC5			l_0F99x
  4566
  4567 				; optimize OK (main.pas), line = 109
  4568
  4569 2BC5 AD 95 2C			lda PLAYER1.ISALIVE
  4570 2BC8 F0 03			jeq l_0FDA
  4571 2BCA EE 94 2C			inc PLAYER1.SCORE
  4572 2BCD			l_0FDA
  4573
  4574 				; optimize OK (main.pas), line = 110
  4575
  4576 2BCD AD 9D 2C			lda PLAYER2.ISALIVE
  4577 2BD0 F0 03			jeq l_0FED
  4578 2BD2 EE 9C 2C			inc PLAYER2.SCORE
  4579 2BD5			l_0FED
  4580
  4581 				; optimize OK (main.pas), line = 111
  4582
  4583 2BD5 AD A5 2C			lda PLAYER3.ISALIVE
  4584 2BD8 F0 03			jeq l_1000
  4585 2BDA EE A4 2C			inc PLAYER3.SCORE
  4586 2BDD			l_1000
  4587
  4588 				; optimize OK (main.pas), line = 112
  4589
  4590 2BDD AD AD 2C			lda PLAYER4.ISALIVE
  4591 2BE0 F0 03			jeq l_1013
  4592 2BE2 EE AC 2C			inc PLAYER4.SCORE
  4593 2BE5			l_1013
  4594
  4595 				; optimize OK (main.pas), line = 114
  4596
  4597 2BE5 A9 64			lda #$64
  4598 2BE7 8D 88 2C			sta SYSTEM.PAUSE_006C.N
  4599 2BEA A9 00			lda #$00
  4600 2BEC 8D 89 2C			sta SYSTEM.PAUSE_006C.N+1
  4601 2BEF 20 2A 11			jsr SYSTEM.PAUSE_006C
  4602
  4603 				; ------------------------------------------------------------
  4604
  4605 = 2CDE			@CASETMP_0009	= DATAORIGIN+$0062
  4606
  4607 = 2CDE			@VarData	= @CASETMP_0009
  4608 = 0001			@VarDataSize	= 1
  4609
  4610 2BF2			@exit
  4611 					.ifdef @new
  4612 					lda <@VarData
  4613 					sta :ztmp
  4614 					lda >@VarData
  4615 					ldy #@VarDataSize-1
  4616 					jmp @FreeMem
  4617 					els
  4618 2BF2 60				rts						; ret
  4619 					eif
  4620 				.endl
  4621 2BF3			l_0007
  4622
  4623 				; --- RepeatUntilProlog
  4624 2BF3			l_101E
  4625
  4626 				; optimize OK (main.pas), line = 121
  4627
  4628 2BF3 A9 30			lda #$30
  4629 2BF5 8D 94 2C			sta PLAYER1.SCORE
  4630 2BF8 8D 9C 2C			sta PLAYER2.SCORE
  4631
  4632 				; optimize OK (main.pas), line = 122
  4633
  4634 2BFB 8D A4 2C			sta PLAYER3.SCORE
  4635 2BFE 8D AC 2C			sta PLAYER4.SCORE
  4636
  4637 				; optimize OK (main.pas), line = 123
  4638
  4639 2C01 A9 01			lda #$01
  4640 2C03 8D 8C 2C			sta LEVEL
  4641
  4642 				; optimize OK (main.pas), line = 125
  4643
  4644 2C06 A9 00			lda #$00
  4645 2C08 8D 8D 2C			sta GAMEOVER
  4646
  4647 				; --- RepeatUntilProlog
  4648 2C0B			l_1037
  4649
  4650 				; optimize FAIL ('MAINLOOP', main.pas), line = 127
  4651
  4652 2C0B 20 01 2B			jsr MAINLOOP
  4653
  4654 				; optimize FAIL (0, main.pas), line = 128
  4655
  4656 2C0E EE 8C 2C			inc LEVEL
  4657 2C11 AD 8C 2C			lda LEVEL
  4658 2C14 C9 08			cmp #$08
  4659 2C16 D0 05			jne l_104E
  4660 2C18 A9 05			lda #$05
  4661 2C1A 8D 8C 2C			sta LEVEL
  4662 2C1D			l_104E
  4663
  4664 				; optimize OK (main.pas), line = 129
  4665
  4666 2C1D AD 94 2C			lda PLAYER1.SCORE
  4667 2C20 C9 39			cmp #$39
  4668 2C22 D0 05			jne l_1067
  4669 2C24 A9 01			lda #$01
  4670 2C26 8D 8D 2C			sta GAMEOVER
  4671 2C29			l_1067
  4672
  4673 				; optimize OK (main.pas), line = 130
  4674
  4675 2C29 AD 9C 2C			lda PLAYER2.SCORE
  4676 2C2C C9 39			cmp #$39
  4677 2C2E D0 05			jne l_1080
  4678 2C30 A9 01			lda #$01
  4679 2C32 8D 8D 2C			sta GAMEOVER
  4680 2C35			l_1080
  4681
  4682 				; optimize OK (main.pas), line = 131
  4683
  4684 2C35 AD A4 2C			lda PLAYER3.SCORE
  4685 2C38 C9 39			cmp #$39
  4686 2C3A D0 05			jne l_1099
  4687 2C3C A9 01			lda #$01
  4688 2C3E 8D 8D 2C			sta GAMEOVER
  4689 2C41			l_1099
  4690
  4691 				; optimize OK (main.pas), line = 132
  4692
  4693 2C41 AD AC 2C			lda PLAYER4.SCORE
  4694 2C44 C9 39			cmp #$39
  4695 2C46 D0 05			jne l_10B2
  4696 2C48 A9 01			lda #$01
  4697 2C4A 8D 8D 2C			sta GAMEOVER
  4698 2C4D			l_10B2
  4699
  4700 				; optimize OK (main.pas), line = 133
  4701
  4702 2C4D AD 8D 2C			lda GAMEOVER
  4703 2C50 F0 B9			jeq l_1037
  4704
  4705 				; optimize FAIL ('SHOWSCORE', main.pas), line = 135
  4706
  4707 2C52 20 C4 11			jsr SHOWSCORE
  4708
  4709 				; optimize OK (main.pas), line = 137
  4710
  4711 2C55 A9 C8			lda #$C8
  4712 2C57 8D 88 2C			sta SYSTEM.PAUSE_006C.N
  4713 2C5A A9 00			lda #$00
  4714 2C5C 8D 89 2C			sta SYSTEM.PAUSE_006C.N+1
  4715 2C5F 20 2A 11			jsr SYSTEM.PAUSE_006C
  4716
  4717 				; optimize OK (main.pas), line = 138
  4718
  4719 2C62 4C F3 2B			jmp l_101E
  4720
  4721 				; ------------------------------------------------------------
  4722
  4723 = 0800			ATTRIBUTE_ADDR	= $0800
  4724 = 0C00			SCREEN_ADDR	= $0C00
  4725 = 001F			BACKGROUND_COLOUR	= $1F
  4726 = 0000			BOREDER_COLOUR	= $00
  4727 = 0009			VICTORIES	= $09
  4728 = 0005			LOOK_AHEAD	= $05
  4729 = 007E			TRASH	= $7E
  4730 = 0020			EMPTY	= $20
  4731 = 00A0			WALL	= $A0
  4732 = 0041			WALL_COLOUR	= $41
  4733 = 0030			ZERO	= $30
  4734 = 0056			OBSTACLE_1	= $56
  4735 = 005B			OBSTACLE_2	= $5B
  4736 = 0035			OBST_COLOUR	= $35
  4737 = 0007			OBST_QUANTITY	= $07
  4738 = 0051			PLY_HEAD	= $51
  4739 = 002A			PLY_CRASH	= $2A
  4740 = 0057			PLY_BUSTED	= $57
  4741 = 0042			PLY_TAIL_UD	= $42
  4742 = 0040			PLY_TAIL_LR	= $40
  4743 = 007D			PLY_TAIL_RD	= $7D
  4744 = 006E			PLY_TAIL_RU	= $6E
  4745 = 006D			PLY_TAIL_LD	= $6D
  4746 = 0070			PLY_TAIL_LU	= $70
  4747 = 0062			PLY1_COLOUR	= $62
  4748 = 005D			PLY2_COLOUR	= $5D
  4749 = 0071			PLY3_COLOUR	= $71
  4750 = 0055			PLY4_COLOUR	= $55
  4751 = 0000			PLY_CTRL	= $00
  4752 = 0001			AI_STRAIGHT	= $01
  4753 = 0002			AI_SAPPER	= $02
  4754 = 0003			AI_BULLY	= $03
  4755 = 0004			AI_MIRROR	= $04
  4756 = 0001			JOY_UP	= $01
  4757 = 0002			JOY_DOWN	= $02
  4758 = 0004			JOY_LEFT	= $04
  4759 = 0008			JOY_RIGHT	= $08
  4760 = 0040			JOY_FIRE	= $40
  4761 = 0002			JOY_SELECT_1	= $02
  4762 = 0004			JOY_SELECT_2	= $04
  4763 = 100E			adr.MUL40	= CODEORIGIN+$0000
  4764 2C65			.var MUL40	= adr.MUL40 .word
  4765 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  4766 2C65			.var DIRECTION	= adr.DIRECTION .word
  4767 = FD30			KEYSCAN	= $FD30
  4768 = FF08			JOY	= $FF08
  4769 = FF15			BACKGROUND	= $FF15
  4770 = FF19			BOREDER	= $FF19
  4771 = 0058			T0B	= $58
  4772 = 0059			I0B	= $59
  4773 = 005A			ALIVE	= $5A
  4774 = 005B			NEWDIR	= $5B
  4775 = 005C			AVAILDIR	= $5C
  4776 = 005D			T0W	= $5D
  4777 = 005F			adr.PLY	= $5F
  4778 2C65			.var PLY	= adr.PLY .word
  4779 = 2C7C			PLY.X	= DATAORIGIN+$0000
  4780 = 2C7D			PLY.Y	= DATAORIGIN+$0001
  4781 = 2C7E			PLY.HEAD	= DATAORIGIN+$0002
  4782 = 2C7F			PLY.COLOUR	= DATAORIGIN+$0003
  4783 = 2C80			PLY.DIR	= DATAORIGIN+$0004
  4784 = 2C81			PLY.BRAIN	= DATAORIGIN+$0005
  4785 = 2C82			PLY.SCORE	= DATAORIGIN+$0006
  4786 = 2C83			PLY.ISALIVE	= DATAORIGIN+$0007
  4787 = 0061			adr.TMPPLY	= $61
  4788 2C65			.var TMPPLY	= adr.TMPPLY .word
  4789 = 2C7C			TMPPLY.X	= DATAORIGIN+$0000
  4790 = 2C7D			TMPPLY.Y	= DATAORIGIN+$0001
  4791 = 2C7E			TMPPLY.HEAD	= DATAORIGIN+$0002
  4792 = 2C7F			TMPPLY.COLOUR	= DATAORIGIN+$0003
  4793 = 2C80			TMPPLY.DIR	= DATAORIGIN+$0004
  4794 = 2C81			TMPPLY.BRAIN	= DATAORIGIN+$0005
  4795 = 2C82			TMPPLY.SCORE	= DATAORIGIN+$0006
  4796 = 2C83			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  4797 = 0063			JOYSTATUS	= $63
  4798 = 2C8C			LEVEL	= DATAORIGIN+$0010
  4799 = 2C8D			GAMEOVER	= DATAORIGIN+$0011
  4800 = 2C8E			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  4801 2C65			.var PLAYER1	= adr.PLAYER1 .word
  4802 = 2C8E			PLAYER1.X	= DATAORIGIN+$0012
  4803 = 2C8F			PLAYER1.Y	= DATAORIGIN+$0013
  4804 = 2C90			PLAYER1.HEAD	= DATAORIGIN+$0014
  4805 = 2C91			PLAYER1.COLOUR	= DATAORIGIN+$0015
  4806 = 2C92			PLAYER1.DIR	= DATAORIGIN+$0016
  4807 = 2C93			PLAYER1.BRAIN	= DATAORIGIN+$0017
  4808 = 2C94			PLAYER1.SCORE	= DATAORIGIN+$0018
  4809 = 2C95			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  4810 = 2C96			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  4811 2C65			.var PLAYER2	= adr.PLAYER2 .word
  4812 = 2C96			PLAYER2.X	= DATAORIGIN+$001A
  4813 = 2C97			PLAYER2.Y	= DATAORIGIN+$001B
  4814 = 2C98			PLAYER2.HEAD	= DATAORIGIN+$001C
  4815 = 2C99			PLAYER2.COLOUR	= DATAORIGIN+$001D
  4816 = 2C9A			PLAYER2.DIR	= DATAORIGIN+$001E
  4817 = 2C9B			PLAYER2.BRAIN	= DATAORIGIN+$001F
  4818 = 2C9C			PLAYER2.SCORE	= DATAORIGIN+$0020
  4819 = 2C9D			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  4820 = 2C9E			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  4821 2C65			.var PLAYER3	= adr.PLAYER3 .word
  4822 = 2C9E			PLAYER3.X	= DATAORIGIN+$0022
  4823 = 2C9F			PLAYER3.Y	= DATAORIGIN+$0023
  4824 = 2CA0			PLAYER3.HEAD	= DATAORIGIN+$0024
  4825 = 2CA1			PLAYER3.COLOUR	= DATAORIGIN+$0025
  4826 = 2CA2			PLAYER3.DIR	= DATAORIGIN+$0026
  4827 = 2CA3			PLAYER3.BRAIN	= DATAORIGIN+$0027
  4828 = 2CA4			PLAYER3.SCORE	= DATAORIGIN+$0028
  4829 = 2CA5			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  4830 = 2CA6			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  4831 2C65			.var PLAYER4	= adr.PLAYER4 .word
  4832 = 2CA6			PLAYER4.X	= DATAORIGIN+$002A
  4833 = 2CA7			PLAYER4.Y	= DATAORIGIN+$002B
  4834 = 2CA8			PLAYER4.HEAD	= DATAORIGIN+$002C
  4835 = 2CA9			PLAYER4.COLOUR	= DATAORIGIN+$002D
  4836 = 2CAA			PLAYER4.DIR	= DATAORIGIN+$002E
  4837 = 2CAB			PLAYER4.BRAIN	= DATAORIGIN+$002F
  4838 = 2CAC			PLAYER4.SCORE	= DATAORIGIN+$0030
  4839 = 2CAD			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  4840 = 2CAE			adr.OBSTACLES	= [DATAORIGIN+$0032] .array [8] .word
  4841 2C65			.var OBSTACLES	= adr.OBSTACLES .word
  4842 2C65			@exit
  4843
  4844 2C65 A2 00		@halt	ldx #$00
  4845 2C67 9A				txs
  4846
  4847 2C68 60				rts
  4848
  4849 				; ------------------------------------------------------------
  4850
  4851 				; ------------------------------------------------------------
  4852
  4853 2C69			.local	@DEFINES
  4854 2C69			C4P
  4855 				.endl
  4856
  4857 2C69			.local	@RESOURCE
  4858 				.endl
  4859
  4860 = 2C69 0E 10		MUL40
  4860 = 2C6B 40 10		DIRECTION
  4860 = 2C6D 5F 00		PLY
  4860 = 2C6F 61 00		TMPPLY
  4860 = 2C71 8E 2C		PLAYER1
  4860 = 2C73 96 2C		PLAYER2
  4860 = 2C75 9E 2C		PLAYER3
  4860 = 2C77 A6 2C		PLAYER4
  4860 = 2C79 AE 2C		OBSTACLES
  4860 				.endl							; MAIN
  4861
  4862 				; ------------------------------------------------------------
  4863 				; ------------------------------------------------------------
  4864
  4865 				.macro	UNITINITIALIZATION
  4866 				
  4867 					.ifdef MAIN.SYSTEM.@UnitInit
  4868 					jsr MAIN.SYSTEM.@UnitInit
  4869 					eif
  4870 				.endm
  4871
  4872 				; ------------------------------------------------------------
  4873
  4874 					ift .SIZEOF(MAIN.SYSTEM) > 0
  4875 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  4875 				SYSTEM: $10D5..$1177
  4876 					eif
  4877
  4878 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  4878 				CODE: $100E..$2C68
  4879
  4880 				; ------------------------------------------------------------
  4881
  4882 2C7B				.align $04
  4883
  4884 2C7C			DATAORIGIN
  4885 2C7C 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  4886
  4887 = 0006			VARINITSIZE	= *-DATAORIGIN
  4888 = 0063			VARDATASIZE	= 99
  4889
  4890 = 2CDF			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  4891
  4892 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  4892 				DATA: $2C7C..$2CDF
  4893
  4894 				; ------------------------------------------------------------
  4895
  4896 				.macro	STATICDATA
  4897 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  4898 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  4899 				.by  $C0 $03 $01 $02 $04 $08
  4900 				.endm
  4901
  4902 					end
