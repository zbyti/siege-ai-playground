mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $105C..$1137
   102
   103 				; ------------------------------------------------------------
   104
   105 1138			START
   106 1138 BA				tsx
   107 1139 8E 4C 2C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 000B			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 30E1			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 113C A2 F5			ldx #256-VLEN
   120 113E A9 00			lda #$00
   121 1140 9D EC 2F E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 1146 A9 EC 85 02 A9 30 + 	mwa #PROGRAMSTACK psptr
   127
   128 114E A2 00			ldx #$00
   129 1150 86 10			stx bp						; BP = 0
   130
   131 1152 CA				dex						; X = 255
   132
   133 1153				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 1153			.local	MAIN						; PROCEDURE
   136
   137 1153 4C 1A 2C			jmp l_001F
   138
   139 				; ------------------------------------------------------------
   140
   141 1156			.local	SYSTEM						; UNIT
   142
   143 1156			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 1156 B5 18			lda :STACKORIGIN,x
   150 1158 85 08			sta A
   151 115A B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 115C 85 09			sta A+1
   153 115E CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 115F A0 00			ldy #0
   158 1161 B1 08 8D 6F 2C		mva (edx),y Result
   159
   160 1166			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 1166 E8				inx
   168 1167 AD 6F 2C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 2C6F			RESULT	= DATAORIGIN+$000B
   182
   183 = 2C6F			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 116C 60				rts						; ret
   187 				.endl
   188
   189 116D			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 116D B5 18			lda :STACKORIGIN,x
   196 116F 85 0C			sta VALUE
   197 1171 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 1172 B5 18			lda :STACKORIGIN,x
   204 1174 85 08			sta A
   205 1176 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 1178 85 09			sta A+1
   207 117A CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 117B A0 00			ldy #0
   212 117D A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1181			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1181 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1182			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1182 B5 18			lda :STACKORIGIN,x
   238 1184 85 0C			sta VALUE
   239 1186 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1188 85 0D			sta VALUE+1
   241 118A CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 118B B5 18			lda :STACKORIGIN,x
   248 118D 85 08			sta A
   249 118F B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1191 85 09			sta A+1
   251 1193 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1194 A0 00			ldy #0
   256 1196 A5 0C 91 08			mva value (edx),y
   257 119A C8				iny
   258 119B A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 119F			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 119F 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 11A0			.local	FILLCHAR_006E					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 11A0 20 DC 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 11A3			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 11A3 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 11A4			.local	MOVE_006F					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   302
   303 				; ---------------------  ASM Block 026  ---------------------
   304
   305 11A4 20 87 10			jsr @move
   306
   307
   308 				; ------------------------------------------------------------
   309
   310 = 0008			SOURCE	= edx
   311 = 000C			DEST	= ecx
   312 = 0004			COUNT	= eax
   313 11A7			@exit
   314 					.ifdef @new
   315 					lda <@VarData
   316 					sta :ztmp
   317 					lda >@VarData
   318 					ldy #@VarDataSize-1
   319 					jmp @FreeMem
   320 					els
   321 11A7 60				rts						; ret
   322 					eif
   323 				.endl
   324
   325 11A8			.local	MOVE_0070					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   326
   327 				; ---------------------  ASM Block 028  ---------------------
   328
   329 11A8 20 87 10			jsr @move
   330
   331
   332 				; ------------------------------------------------------------
   333
   334 = 0008			SOURCE	= edx
   335 = 000C			DEST	= ecx
   336 = 0004			COUNT	= eax
   337 11AB			@exit
   338 					.ifdef @new
   339 					lda <@VarData
   340 					sta :ztmp
   341 					lda >@VarData
   342 					ldy #@VarDataSize-1
   343 					jmp @FreeMem
   344 					els
   345 11AB 60				rts						; ret
   346 					eif
   347 				.endl
   348
   349 11AC			.local	PAUSE_0085					; PROCEDURE | ASSEMBLER | OVERLOAD
   350
   351 				; ---------------------  ASM Block 034  ---------------------
   352
   353 11AC A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   354
   355 11B2			@exit
   356 					.ifdef @new
   357 					lda <@VarData
   358 					sta :ztmp
   359 					lda >@VarData
   360 					ldy #@VarDataSize-1
   361 					jmp @FreeMem
   362 					els
   363 11B2 60				rts						; ret
   364 					eif
   365 				.endl
   366
   367 11B3			.local	PAUSE_0086					; PROCEDURE | ASSEMBLER | OVERLOAD
   368
   369 				; ---------------------  ASM Block 035  ---------------------
   370
   371
   372 11B3 AD 70 2C		loop  lda n
   373 11B6 0D 71 2C		  ora n+1
   374 11B9 F0 14		  beq stop
   375
   376 11BB A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   377
   378 11C1 AD 70 2C D0 03 CE +   dew n
   379
   380 11CC 4C B3 11		  jmp loop
   381 11CF			stop
   382
   383
   384 				; ------------------------------------------------------------
   385
   386 = 2C70			N	= DATAORIGIN+$000C
   387
   388 = 2C70			@VarData	= N
   389 = 0002			@VarDataSize	= 2
   390
   391 11CF			@exit
   392 					.ifdef @new
   393 					lda <@VarData
   394 					sta :ztmp
   395 					lda >@VarData
   396 					ldy #@VarDataSize-1
   397 					jmp @FreeMem
   398 					els
   399 11CF 60				rts						; ret
   400 					eif
   401 				.endl
   402
   403 11D0			.local	RANDOM_0087					; FUNCTION | ASSEMBLER | OVERLOAD
   404 11D0 8D 72 2C			sta RANGE
   405
   406 				; ---------------------  ASM Block 039  ---------------------
   407
   408
   409 11D3 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   410 11D6 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   411 11D9 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   412 11DC 6D 1E FF		  adc ted_hcount    //Horizontal counter
   413 11DF 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   414 11E2 4D 1E FF		  eor ted_hcount    //Horizontal counter
   415 11E5 A8			  tay
   416
   417 11E6 AD 72 2C		  lda range
   418 11E9 F0 08		  beq stop
   419
   420 11EB 85 0C		  sta ecx
   421 11ED 84 04		  sty eax
   422
   423 11EF 20 24 11		  jsr imulCL
   424 11F2 A8			  tay
   425
   426 11F3 8C 73 2C		stop  sty Result
   427
   428 11F6			@exit
   429
   430 				; ------------------------------------------------------------
   431
   432 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   433 				; as Pointer
   434
   435 11F6 E8				inx
   436 11F7 AD 73 2C 95 18		mva RESULT :STACKORIGIN,x
   437
   438 					.ifdef @new
   439 					lda <@VarData
   440 					sta :ztmp
   441 					lda >@VarData
   442 					ldy #@VarDataSize-1
   443 					jmp @FreeMem
   444 					eif
   445
   446 				; ------------------------------------------------------------
   447
   448 = 2C72			RANGE	= DATAORIGIN+$000E
   449 = 2C73			RESULT	= DATAORIGIN+$000F
   450
   451 = 2C72			@VarData	= RANGE
   452 = 0002			@VarDataSize	= 2
   453
   454 11FC 60				rts						; ret
   455 				.endl
   456
   457 				; ------------------------------------------------------------
   458
   459 = 0101			__PORTB_BANKS	= $0101
   460 = 0648			M_PI_2	= $0648
   461 = 0192			D_PI_2	= $0192
   462 = 0004			D_PI_180	= $04
   463 = 0000			MGTIA	= $00
   464 = 0080			MVBXE	= $80
   465 = 0000			VBXE_XDLADR	= $00
   466 = 0100			VBXE_BCBADR	= $0100
   467 = 1000			VBXE_MAPADR	= $1000
   468 = 1000			VBXE_CHBASE	= $1000
   469 = 5000			VBXE_OVRADR	= $5000
   470 = B000			VBXE_WINDOW	= $B000
   471 = 0000			IDLI	= $00
   472 = 0001			IVBL	= $01
   473 = 00FE			CH_DELCHR	= $FE
   474 = 009B			CH_ENTER	= $9B
   475 = 001B			CH_ESC	= $1B
   476 = 001C			CH_CURS_UP	= $1C
   477 = 001D			CH_CURS_DOWN	= $1D
   478 = 001E			CH_CURS_LEFT	= $1E
   479 = 001F			CH_CURS_RIGHT	= $1F
   480 = 007F			CH_TAB	= $7F
   481 = 009B			CH_EOL	= $9B
   482 = 007D			CH_CLR	= $7D
   483 = 00FD			CH_BELL	= $FD
   484 = 007E			CH_DEL	= $7E
   485 = 009C			CH_DELLINE	= $9C
   486 = 009D			CH_INSLINE	= $9D
   487 = 0000			COLOR_BLACK	= $00
   488 = 000E			COLOR_WHITE	= $0E
   489 = 0032			COLOR_RED	= $32
   490 = 0096			COLOR_CYAN	= $96
   491 = 0068			COLOR_VIOLET	= $68
   492 = 00C4			COLOR_GREEN	= $C4
   493 = 0074			COLOR_BLUE	= $74
   494 = 00EE			COLOR_YELLOW	= $EE
   495 = 0028			COLOR_ORANGE	= $28
   496 = 00E4			COLOR_BROWN	= $E4
   497 = 003C			COLOR_LIGHTRED	= $3C
   498 = 0004			COLOR_GRAY1	= $04
   499 = 0006			COLOR_GRAY2	= $06
   500 = 000A			COLOR_GRAY3	= $0A
   501 = 00CC			COLOR_LIGHTGREEN	= $CC
   502 = 007C			COLOR_LIGHTBLUE	= $7C
   503 = 0004			FMOPENREAD	= $04
   504 = 0008			FMOPENWRITE	= $08
   505 = 0009			FMOPENAPPEND	= $09
   506 = 000C			FMOPENREADWRITE	= $0C
   507 = 2C64			SCREENWIDTH	= DATAORIGIN+$0000
   508 = 2C66			SCREENHEIGHT	= DATAORIGIN+$0002
   509 = 2C68			DATESEPARATOR	= DATAORIGIN+$0004
   510 = D20A			RND	= $D20A
   511 = 02C0			adr.PALETTE	= $02C0
   512 11FD			.var PALETTE	= adr.PALETTE .word
   513 = D012			adr.HPALETTE	= $D012
   514 11FD			.var HPALETTE	= adr.HPALETTE .word
   515 = 2C69			FILEMODE	= DATAORIGIN+$0005
   516 = 2C6A			GRAPHMODE	= DATAORIGIN+$0006
   517 = 2C6B			IORESULT	= DATAORIGIN+$0007
   518 = 2C6C			EOLN	= DATAORIGIN+$0008
   519 = 2C6D			RNDSEED	= DATAORIGIN+$0009
   520
   521 = 11FD C0 02		PALETTE
   521 = 11FF 12 D0		HPALETTE
   521 				.endl							; UNIT SYSTEM
   522
   523 1201			.local	PUTCHAR_008C					; PROCEDURE | OVERLOAD
   524
   525 				; optimize OK (tools.inc), line = 5
   526
   527 1201 AD 97 2C			lda Y
   528 1204 0A				asl @
   529 1205 A8				tay
   530 1206 B9 26 10			lda adr.MUL40,y
   531 1209 18 6D 96 2C			add X
   532 120D 85 5E			sta T0W
   533 120F B9 27 10			lda adr.MUL40+1,y
   534 1212 69 0C			adc #$0C
   535 1214 85 5F			sta T0W+1
   536 1216 A4 5F			ldy T0W+1
   537 1218 84 11			sty :bp+1
   538 121A A4 5E			ldy T0W
   539 121C AD 98 2C			lda V
   540 121F 91 10			sta (:bp),y
   541
   542 				; ------------------------------------------------------------
   543
   544 = 2C96			X	= DATAORIGIN+$0032
   545 = 2C97			Y	= DATAORIGIN+$0033
   546 = 2C98			V	= DATAORIGIN+$0034
   547
   548 = 2C96			@VarData	= X
   549 = 0003			@VarDataSize	= 3
   550
   551 1221			@exit
   552 					.ifdef @new
   553 					lda <@VarData
   554 					sta :ztmp
   555 					lda >@VarData
   556 					ldy #@VarDataSize-1
   557 					jmp @FreeMem
   558 					els
   559 1221 60				rts						; ret
   560 					eif
   561 				.endl
   562
   563 1222			.local	PRINTXY						; PROCEDURE
   564
   565 				; ------------------------------------------------------------
   566
   567 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   568 				; as Pointer
   569 1222 B5 18			lda :STACKORIGIN,x
   570 1224 8D 9B 2D			sta C
   571 1227 CA				dex
   572
   573 				; ------------------------------------------------------------
   574
   575 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   576 				; as Pointer
   577 1228 B5 18			lda :STACKORIGIN,x
   578 122A 8D 9A 2D			sta Y
   579 122D CA				dex
   580
   581 				; ------------------------------------------------------------
   582
   583 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   584 				; as Pointer
   585 122E B5 18			lda :STACKORIGIN,x
   586 1230 8D 99 2D			sta X
   587 1233 CA				dex
   588
   589 				; ------------------------------------------------------------
   590
   591 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   592 				; as Pointer
   593 1234 B5 18			lda :STACKORIGIN,x
   594 1236 85 12			sta :bp2
   595 1238 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   596 123A 85 13			sta :bp2+1
   597 123C A0 00			ldy #$00
   598 123E B1 12 99 99 2C C8 + 	mva:rne (:bp2),y adr.S,y+
   599 1246 A9 99 8D 9F 12 A9 + 	mwa #adr.S S
   600 1250 CA				dex
   601
   602 				; optimize OK (tools.inc), line = 12
   603
   604 1251 AD 9A 2D			lda Y
   605 1254 0A				asl @
   606 1255 A8				tay
   607 1256 B9 26 10			lda adr.MUL40,y
   608 1259 18 6D 99 2D			add X
   609 125D 85 5E			sta T0W
   610 125F B9 27 10			lda adr.MUL40+1,y
   611 1262 69 0C			adc #$0C
   612 1264 85 5F			sta T0W+1
   613
   614 				; optimize OK (tools.inc), line = 14
   615
   616 1266 A9 9A			lda <adr.S+$01
   617 1268 85 08			sta SYSTEM.MOVE_0070.SOURCE
   618 126A A9 2C			lda >adr.S+$01
   619 126C 85 09			sta SYSTEM.MOVE_0070.SOURCE+1
   620 126E AD 99 2C			lda adr.S
   621 1271 85 04			sta SYSTEM.MOVE_0070.COUNT
   622 1273 A9 00			lda #$00
   623 1275 85 05			sta SYSTEM.MOVE_0070.COUNT+1
   624 1277 A5 5E			lda T0W
   625 1279 85 0C			sta SYSTEM.MOVE_0070.DEST
   626 127B A5 5F			lda T0W+1
   627 127D 85 0D			sta SYSTEM.MOVE_0070.DEST+1
   628 127F 20 A8 11			jsr SYSTEM.MOVE_0070
   629
   630 				; optimize OK (tools.inc), line = 15
   631
   632 1282 A5 5E			lda T0W
   633 1284 85 08			sta SYSTEM.FILLCHAR_006E.A
   634 1286 A5 5F			lda T0W+1
   635 1288 38 E9 04			sub #$04
   636 128B 85 09			sta SYSTEM.FILLCHAR_006E.A+1
   637 128D AD 99 2C			lda adr.S
   638 1290 85 0C			sta SYSTEM.FILLCHAR_006E.COUNT
   639 1292 AD 9B 2D			lda C
   640 1295 85 04			sta SYSTEM.FILLCHAR_006E.VALUE
   641 1297 A9 00			lda #$00
   642 1299 85 0D			sta SYSTEM.FILLCHAR_006E.COUNT+1
   643 129B 20 A0 11			jsr SYSTEM.FILLCHAR_006E
   644
   645 				; ------------------------------------------------------------
   646
   647 = 2C99			adr.S	= [DATAORIGIN+$0035] .array [256]
   648 129E			.var S	= adr.S .word
   649 = 2D99			X	= DATAORIGIN+$0135
   650 = 2D9A			Y	= DATAORIGIN+$0136
   651 = 2D9B			C	= DATAORIGIN+$0137
   652
   653 = 129F			@VarData	= S
   654 = 0103			@VarDataSize	= 259
   655
   656 129E			@exit
   657 					.ifdef @new
   658 					lda <@VarData
   659 					sta :ztmp
   660 					lda >@VarData
   661 					ldy #@VarDataSize-1
   662 					jmp @FreeMem
   663 					els
   664 129E 60				rts						; ret
   665 					eif
   666 = 129F 99 2C		S
   666 				.endl
   667
   668 12A1			.local	PUTCHAR_00D8					; PROCEDURE | OVERLOAD
   669
   670 				; optimize OK (tools.inc), line = 23
   671
   672 12A1 AD 9D 2D			lda Y
   673 12A4 0A				asl @
   674 12A5 A8				tay
   675 12A6 B9 26 10			lda adr.MUL40,y
   676 12A9 18 6D 9C 2D			add X
   677 12AD 85 5E			sta T0W
   678 12AF B9 27 10			lda adr.MUL40+1,y
   679 12B2 69 08			adc #$08
   680 12B4 85 5F			sta T0W+1
   681
   682 				; optimize OK (tools.inc), line = 24
   683
   684 12B6 85 11			sta :bp+1
   685 12B8 A4 5E			ldy T0W
   686 12BA AD 9F 2D			lda C
   687 12BD 91 10			sta (:bp),y
   688 12BF A5 5F			lda T0W+1
   689 12C1 18 69 04			add #$04
   690 12C4 85 11			sta :bp+1
   691 12C6 AD 9E 2D			lda V
   692 12C9 91 10			sta (:bp),y
   693
   694 				; ------------------------------------------------------------
   695
   696 = 2D9C			X	= DATAORIGIN+$0138
   697 = 2D9D			Y	= DATAORIGIN+$0139
   698 = 2D9E			V	= DATAORIGIN+$013A
   699 = 2D9F			C	= DATAORIGIN+$013B
   700
   701 = 2D9C			@VarData	= X
   702 = 0004			@VarDataSize	= 4
   703
   704 12CB			@exit
   705 					.ifdef @new
   706 					lda <@VarData
   707 					sta :ztmp
   708 					lda >@VarData
   709 					ldy #@VarDataSize-1
   710 					jmp @FreeMem
   711 					els
   712 12CB 60				rts						; ret
   713 					eif
   714 				.endl
   715
   716 12CC			.local	SHOWSCORE					; PROCEDURE
   717
   718 				; optimize OK (tools.inc), line = 39
   719
   720 12CC AD 7D 2C			lda PLAYER1.ISALIVE
   721 12CF F0 19			jeq l_010D
   722 12D1 AD 79 2C			lda PLAYER1.COLOUR
   723 12D4 8D 9F 2D			sta PUTCHAR_00D8.C
   724 12D7 AD 7C 2C			lda PLAYER1.SCORE
   725 12DA 8D 9E 2D			sta PUTCHAR_00D8.V
   726 12DD A9 00			lda #$00
   727 12DF 8D 9D 2D			sta PUTCHAR_00D8.Y
   728 12E2 A9 1E			lda #$1E
   729 12E4 8D 9C 2D			sta PUTCHAR_00D8.X
   730 12E7 20 A1 12			jsr PUTCHAR_00D8
   731 12EA			l_010D
   732
   733 				; optimize OK (tools.inc), line = 40
   734
   735 12EA AD 85 2C			lda PLAYER2.ISALIVE
   736 12ED F0 19			jeq l_0125
   737 12EF AD 81 2C			lda PLAYER2.COLOUR
   738 12F2 8D 9F 2D			sta PUTCHAR_00D8.C
   739 12F5 AD 84 2C			lda PLAYER2.SCORE
   740 12F8 8D 9E 2D			sta PUTCHAR_00D8.V
   741 12FB A9 00			lda #$00
   742 12FD 8D 9D 2D			sta PUTCHAR_00D8.Y
   743 1300 A9 20			lda #$20
   744 1302 8D 9C 2D			sta PUTCHAR_00D8.X
   745 1305 20 A1 12			jsr PUTCHAR_00D8
   746 1308			l_0125
   747
   748 				; optimize OK (tools.inc), line = 41
   749
   750 1308 AD 8D 2C			lda PLAYER3.ISALIVE
   751 130B F0 19			jeq l_013D
   752 130D AD 89 2C			lda PLAYER3.COLOUR
   753 1310 8D 9F 2D			sta PUTCHAR_00D8.C
   754 1313 AD 8C 2C			lda PLAYER3.SCORE
   755 1316 8D 9E 2D			sta PUTCHAR_00D8.V
   756 1319 A9 00			lda #$00
   757 131B 8D 9D 2D			sta PUTCHAR_00D8.Y
   758 131E A9 22			lda #$22
   759 1320 8D 9C 2D			sta PUTCHAR_00D8.X
   760 1323 20 A1 12			jsr PUTCHAR_00D8
   761 1326			l_013D
   762
   763 				; optimize OK (tools.inc), line = 42
   764
   765 1326 AD 95 2C			lda PLAYER4.ISALIVE
   766 1329 F0 19			jeq l_0155
   767 132B AD 91 2C			lda PLAYER4.COLOUR
   768 132E 8D 9F 2D			sta PUTCHAR_00D8.C
   769 1331 AD 94 2C			lda PLAYER4.SCORE
   770 1334 8D 9E 2D			sta PUTCHAR_00D8.V
   771 1337 A9 00			lda #$00
   772 1339 8D 9D 2D			sta PUTCHAR_00D8.Y
   773 133C A9 24			lda #$24
   774 133E 8D 9C 2D			sta PUTCHAR_00D8.X
   775 1341 20 A1 12			jsr PUTCHAR_00D8
   776 1344			l_0155
   777 1344			@exit
   778 					.ifdef @new
   779 					lda <@VarData
   780 					sta :ztmp
   781 					lda >@VarData
   782 					ldy #@VarDataSize-1
   783 					jmp @FreeMem
   784 					els
   785 1344 60				rts						; ret
   786 					eif
   787 				.endl
   788
   789 1345			.local	UPDATESCORE					; PROCEDURE
   790
   791 				; optimize OK (tools.inc), line = 49
   792
   793 1345 AD 7D 2C			lda PLAYER1.ISALIVE
   794 1348 F0 03			jeq l_0171
   795 134A EE 7C 2C			inc PLAYER1.SCORE
   796 134D			l_0171
   797
   798 				; optimize OK (tools.inc), line = 50
   799
   800 134D AD 85 2C			lda PLAYER2.ISALIVE
   801 1350 F0 03			jeq l_0184
   802 1352 EE 84 2C			inc PLAYER2.SCORE
   803 1355			l_0184
   804
   805 				; optimize OK (tools.inc), line = 51
   806
   807 1355 AD 8D 2C			lda PLAYER3.ISALIVE
   808 1358 F0 03			jeq l_0197
   809 135A EE 8C 2C			inc PLAYER3.SCORE
   810 135D			l_0197
   811
   812 				; optimize OK (tools.inc), line = 52
   813
   814 135D AD 95 2C			lda PLAYER4.ISALIVE
   815 1360 F0 03			jeq l_01AA
   816 1362 EE 94 2C			inc PLAYER4.SCORE
   817 1365			l_01AA
   818 1365			@exit
   819 					.ifdef @new
   820 					lda <@VarData
   821 					sta :ztmp
   822 					lda >@VarData
   823 					ldy #@VarDataSize-1
   824 					jmp @FreeMem
   825 					els
   826 1365 60				rts						; ret
   827 					eif
   828 				.endl
   829
   830 1366			.local	CHECKAVAILDIR					; PROCEDURE
   831
   832 				; optimize OK (tools.inc), line = 59
   833
   834 1366 A9 00			lda #$00
   835 1368 85 5C			sta AVAILDIR
   836
   837 				; optimize OK (tools.inc), line = 60
   838
   839 136A AC 53 2C 84 12 AC + 	mwy PLY :bp2
   840 1374 A0 01			ldy #PLY.Y-DATAORIGIN
   841 1376 B1 12			lda (:bp2),y
   842 1378 0A				asl @
   843 1379 A8				tay
   844 137A A9 00			lda #$00
   845 137C 18 79 26 10			add adr.MUL40,y
   846 1380 85 21			sta :STACKORIGIN+9
   847 1382 A9 0C			lda #$0C
   848 1384 79 27 10			adc adr.MUL40+1,y
   849 1387 85 31			sta :STACKORIGIN+STACKWIDTH+9
   850 1389 A0 00			ldy #PLY.X-DATAORIGIN
   851 138B A5 21			lda :STACKORIGIN+9
   852 138D 18 71 12			add (:bp2),y
   853 1390 85 5E			sta T0W
   854 1392 A5 31			lda :STACKORIGIN+STACKWIDTH+9
   855 1394 69 00			adc #$00
   856 1396 85 5F			sta T0W+1
   857
   858 				; optimize OK (tools.inc), line = 62
   859
   860 1398 A5 5E			lda T0W
   861 139A 38 E9 28			sub #$28
   862 139D 85 21			sta :STACKORIGIN+9
   863 139F A5 5F			lda T0W+1
   864 13A1 E9 00			sbc #$00
   865 13A3 85 11			sta :bp+1
   866 13A5 A4 21			ldy :STACKORIGIN+9
   867 13A7 B1 10			lda (:bp),y
   868 13A9 C9 20			cmp #$20
   869 13AB D0 06			jne l_01E1
   870 13AD A5 5C			lda AVAILDIR
   871 13AF 09 01			ora #$01
   872 13B1 85 5C			sta AVAILDIR
   873 13B3			l_01E1
   874
   875 				; optimize OK (tools.inc), line = 63
   876
   877 13B3 A4 5E 84 12 A4 5F + 	mwy T0W :bp2
   878 13BB A0 28			ldy #$28
   879 13BD B1 12			lda (:bp2),y
   880 13BF C9 20			cmp #$20
   881 13C1 D0 06			jne l_0204
   882 13C3 A5 5C			lda AVAILDIR
   883 13C5 09 02			ora #$02
   884 13C7 85 5C			sta AVAILDIR
   885 13C9			l_0204
   886
   887 				; optimize OK (tools.inc), line = 64
   888
   889 13C9 A5 5E			lda T0W
   890 13CB 38 E9 01			sub #$01
   891 13CE 85 21			sta :STACKORIGIN+9
   892 13D0 A5 5F			lda T0W+1
   893 13D2 E9 00			sbc #$00
   894 13D4 85 11			sta :bp+1
   895 13D6 A4 21			ldy :STACKORIGIN+9
   896 13D8 B1 10			lda (:bp),y
   897 13DA C9 20			cmp #$20
   898 13DC D0 06			jne l_0227
   899 13DE A5 5C			lda AVAILDIR
   900 13E0 09 04			ora #$04
   901 13E2 85 5C			sta AVAILDIR
   902 13E4			l_0227
   903
   904 				; optimize OK (tools.inc), line = 65
   905
   906 13E4 A4 5E 84 12 A4 5F + 	mwy T0W :bp2
   907 13EC A0 01			ldy #$01
   908 13EE B1 12			lda (:bp2),y
   909 13F0 C9 20			cmp #$20
   910 13F2 D0 06			jne l_024A
   911 13F4 A5 5C			lda AVAILDIR
   912 13F6 09 08			ora #$08
   913 13F8 85 5C			sta AVAILDIR
   914 13FA			l_024A
   915 13FA			@exit
   916 					.ifdef @new
   917 					lda <@VarData
   918 					sta :ztmp
   919 					lda >@VarData
   920 					ldy #@VarDataSize-1
   921 					jmp @FreeMem
   922 					els
   923 13FA 60				rts						; ret
   924 					eif
   925 				.endl
   926
   927 13FB			.local	ANIMATEOBSTACLES				; PROCEDURE
   928
   929 				; optimize FAIL (0, tools.inc), line = 74
   930
   931 13FB EE A0 2D			inc COUNTER
   932
   933 				; optimize OK (tools.inc), line = 75
   934
   935 13FE AD A0 2D			lda COUNTER
   936 1401 29 01			and #$01
   937 1403 F0 08			jeq l_0275
   938 1405 A9 54			lda #$54
   939 1407 8D A1 2D			sta OBST
   940 140A 4C 12 14			jmp l_0283
   941 140D			l_0275
   942 140D A9 55			lda #$55
   943 140F 8D A1 2D			sta OBST
   944 1412			l_0283
   945
   946 				; optimize OK (tools.inc), line = 76
   947
   948 1412 A9 07			lda #$07
   949 1414 85 59			sta I0B
   950
   951 1416			l_0290
   952 				; --- ForToDoCondition
   953 1416 A5 59			lda I0B
   954 1418 0A				asl @
   955 1419 A8				tay
   956 141A B9 60 00			lda adr.OBSTACLES,y
   957 141D 85 21			sta :STACKORIGIN+9
   958 141F B9 61 00			lda adr.OBSTACLES+1,y
   959 1422 85 11			sta :bp+1
   960 1424 A4 21			ldy :STACKORIGIN+9
   961 1426 AD A1 2D			lda OBST
   962 1429 91 10			sta (:bp),y
   963 142B C6 59			dec I0B
   964 142D 10 E7			jpl l_0290
   965 142F			l_029E
   966
   967 				; ------------------------------------------------------------
   968
   969 = 2DA0			COUNTER	= DATAORIGIN+$013C
   970 = 2DA1			OBST	= DATAORIGIN+$013D
   971 = 0000			@FORTMP_028D	= $00
   972
   973 = 2DA0			@VarData	= COUNTER
   974 = 0002			@VarDataSize	= 2
   975
   976 142F			@exit
   977 					.ifdef @new
   978 					lda <@VarData
   979 					sta :ztmp
   980 					lda >@VarData
   981 					ldy #@VarDataSize-1
   982 					jmp @FreeMem
   983 					els
   984 142F 60				rts						; ret
   985 					eif
   986 				.endl
   987
   988 1430			.local	CALCOBSTACLEADDR				; FUNCTION
   989
   990 				; optimize OK (tools.inc), line = 83
   991
   992 1430 AD A3 2D			lda Y
   993 1433 0A				asl @
   994 1434 A8				tay
   995 1435 AD A2 2D			lda X
   996 1438 18 79 26 10			add adr.MUL40,y
   997 143C 8D A4 2D			sta RESULT
   998 143F A9 0C			lda #$0C
   999 1441 79 27 10			adc adr.MUL40+1,y
  1000 1444 8D A5 2D			sta RESULT+1
  1001 1447			@exit
  1002
  1003 				; ------------------------------------------------------------
  1004
  1005 				; Push WORD / SMALLINT / SHORTREAL / POINTER
  1006 				; as Pointer
  1007
  1008 1447 E8				inx
  1009 1448 AD A4 2D 95 18		mva RESULT :STACKORIGIN,x
  1010 144D AD A5 2D 95 28		mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
  1011
  1012 					.ifdef @new
  1013 					lda <@VarData
  1014 					sta :ztmp
  1015 					lda >@VarData
  1016 					ldy #@VarDataSize-1
  1017 					jmp @FreeMem
  1018 					eif
  1019
  1020 				; ------------------------------------------------------------
  1021
  1022 = 2DA2			X	= DATAORIGIN+$013E
  1023 = 2DA3			Y	= DATAORIGIN+$013F
  1024 = 2DA4			RESULT	= DATAORIGIN+$0140
  1025
  1026 = 2DA2			@VarData	= X
  1027 = 0004			@VarDataSize	= 4
  1028
  1029 1452 60				rts						; ret
  1030 				.endl
  1031
  1032 1453			.local	SAVEOBSTACLES					; PROCEDURE
  1033
  1034 				; optimize OK (tools.inc), line = 90
  1035
  1036 1453 A9 07			lda #$07
  1037 1455 85 59			sta I0B
  1038
  1039 1457			l_02D1
  1040 				; --- ForToDoCondition
  1041
  1042 				; optimize OK (tools.inc), line = 91
  1043
  1044 1457 A5 59			lda I0B
  1045 1459 0A				asl @
  1046 145A A8				tay
  1047 145B B9 61 00			lda adr.OBSTACLES+1,y
  1048 145E C9 00			cmp #$00
  1049 1460 D0 05			bne @+
  1050 1462 B9 60 00			lda adr.OBSTACLES,y
  1051 1465 C9 5E			cmp #$5E
  1052 1467			@
  1053 1467 F0 29			jeq l_02F3
  1054
  1055 				; optimize OK (tools.inc), line = 92
  1056
  1057 1469 B9 60 00			lda adr.OBSTACLES,y
  1058 146C 85 21			sta :STACKORIGIN+9
  1059 146E B9 61 00			lda adr.OBSTACLES+1,y
  1060 1471 85 11			sta :bp+1
  1061 1473 A4 21			ldy :STACKORIGIN+9
  1062 1475 A9 54			lda #$54
  1063 1477 91 10			sta (:bp),y
  1064
  1065 				; optimize OK (tools.inc), line = 93
  1066
  1067 1479 A5 59			lda I0B
  1068 147B 0A				asl @
  1069 147C A8				tay
  1070 147D B9 60 00			lda adr.OBSTACLES,y
  1071 1480 38 E9 00			sub #$00
  1072 1483 85 21			sta :STACKORIGIN+9
  1073 1485 B9 61 00			lda adr.OBSTACLES+1,y
  1074 1488 E9 04			sbc #$04
  1075 148A 85 11			sta :bp+1
  1076 148C A4 21			ldy :STACKORIGIN+9
  1077 148E A9 65			lda #$65
  1078 1490 91 10			sta (:bp),y
  1079 1492			l_02F3
  1080
  1081 				; --- ForToDoEpilog
  1082 1492 C6 59			dec I0B
  1083 1494 10 C1			jpl l_02D1
  1084 1496			l_02DF
  1085
  1086 				; ------------------------------------------------------------
  1087
  1088 = 0000			@FORTMP_02CE	= $00
  1089 1496			@exit
  1090 					.ifdef @new
  1091 					lda <@VarData
  1092 					sta :ztmp
  1093 					lda >@VarData
  1094 					ldy #@VarDataSize-1
  1095 					jmp @FreeMem
  1096 					els
  1097 1496 60				rts						; ret
  1098 					eif
  1099 				.endl
  1100
  1101 1497			.local	DRAWPLAYER					; PROCEDURE
  1102
  1103 				; optimize OK (tools.inc), line = 102
  1104
  1105 1497 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1106 14A1 A0 04			ldy #PLY.DIR-DATAORIGIN
  1107 14A3 B1 12			lda (:bp2),y
  1108 14A5 C5 5B			cmp NEWDIR
  1109 14A7 D0 14			jne l_0325
  1110
  1111 				; optimize OK (tools.inc), line = 103
  1112
  1113 14A9 A5 5B			lda NEWDIR
  1114 14AB 29 0C			and #$0C
  1115 14AD F0 07			jeq l_033C
  1116 14AF A9 40			lda #$40
  1117 14B1 85 58			sta T0B
  1118 14B3 4C BA 14			jmp l_034A
  1119 14B6			l_033C
  1120 14B6 A9 42			lda #$42
  1121 14B8 85 58			sta T0B
  1122 14BA			l_034A
  1123 14BA 4C 2D 15			jmp l_0357
  1124 14BD			l_0325
  1125
  1126 				; optimize OK (tools.inc), line = 105
  1127
  1128 14BD AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1129 14C7 A0 04			ldy #PLY.DIR-DATAORIGIN
  1130 14C9 B1 12			lda (:bp2),y
  1131 14CB 29 0A			and #$0A
  1132 14CD F0 0A			jeq l_037D
  1133 14CF A5 5B			lda NEWDIR
  1134 14D1 29 05			and #$05
  1135 14D3 F0 04			jeq l_037D
  1136 14D5 A9 7D			lda #$7D
  1137 14D7 85 58			sta T0B
  1138 14D9			l_037D
  1139
  1140 				; optimize OK (tools.inc), line = 106
  1141
  1142 14D9 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1143 14E3 A0 04			ldy #PLY.DIR-DATAORIGIN
  1144 14E5 B1 12			lda (:bp2),y
  1145 14E7 29 09			and #$09
  1146 14E9 F0 0A			jeq l_03AA
  1147 14EB A5 5B			lda NEWDIR
  1148 14ED 29 06			and #$06
  1149 14EF F0 04			jeq l_03AA
  1150 14F1 A9 6E			lda #$6E
  1151 14F3 85 58			sta T0B
  1152 14F5			l_03AA
  1153
  1154 				; optimize OK (tools.inc), line = 107
  1155
  1156 14F5 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1157 14FF A0 04			ldy #PLY.DIR-DATAORIGIN
  1158 1501 B1 12			lda (:bp2),y
  1159 1503 29 06			and #$06
  1160 1505 F0 0A			jeq l_03D7
  1161 1507 A5 5B			lda NEWDIR
  1162 1509 29 09			and #$09
  1163 150B F0 04			jeq l_03D7
  1164 150D A9 6D			lda #$6D
  1165 150F 85 58			sta T0B
  1166 1511			l_03D7
  1167
  1168 				; optimize OK (tools.inc), line = 108
  1169
  1170 1511 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1171 151B A0 04			ldy #PLY.DIR-DATAORIGIN
  1172 151D B1 12			lda (:bp2),y
  1173 151F 29 05			and #$05
  1174 1521 F0 0A			jeq l_0404
  1175 1523 A5 5B			lda NEWDIR
  1176 1525 29 0A			and #$0A
  1177 1527 F0 04			jeq l_0404
  1178 1529 A9 70			lda #$70
  1179 152B 85 58			sta T0B
  1180 152D			l_0404
  1181 152D			l_0357
  1182
  1183 				; optimize OK (tools.inc), line = 110
  1184
  1185 152D AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1186 1537 A0 00			ldy #PLY.X-DATAORIGIN
  1187 1539 B1 12			lda (:bp2),y
  1188 153B 8D 96 2C			sta PUTCHAR_008C.X
  1189 153E A0 01			ldy #PLY.Y-DATAORIGIN
  1190 1540 B1 12			lda (:bp2),y
  1191 1542 8D 97 2C			sta PUTCHAR_008C.Y
  1192 1545 A5 58			lda T0B
  1193 1547 8D 98 2C			sta PUTCHAR_008C.V
  1194 154A 20 01 12			jsr PUTCHAR_008C
  1195
  1196 				; optimize OK (tools.inc), line = 112
  1197
  1198 154D AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1199 1557 A0 04			ldy #PLY.DIR-DATAORIGIN
  1200 1559 A5 5B			lda NEWDIR
  1201 155B 91 12			sta (:bp2),y
  1202
  1203 				; optimize OK (tools.inc), line = 114
  1204
  1205 155D A5 5B			lda NEWDIR
  1206 155F 8D A6 2D			sta @CASETMP_0003
  1207 1562 C9 01			cmp #$01
  1208 1564 D0 1A			jne l_0426
  1209 1566			@
  1210
  1211 				; optimize OK (tools.inc), line = 115
  1212
  1213 1566 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1214 1570 A0 01			ldy #PLY.Y-DATAORIGIN
  1215 1572 B1 12			lda (:bp2),y
  1216 1574 38 E9 01			sub #$01
  1217 1577 91 12			sta (:bp2),y
  1218 1579 A9 50			lda #$50
  1219 157B 85 58			sta T0B
  1220
  1221 157D 4C D7 15			jmp a_0003
  1222 1580			l_0426
  1223 1580 C9 02			cmp #$02
  1224 1582 D0 1A			jne l_0434
  1225 1584			@
  1226
  1227 				; optimize OK (tools.inc), line = 116
  1228
  1229 1584 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1230 158E A0 01			ldy #PLY.Y-DATAORIGIN
  1231 1590 B1 12			lda (:bp2),y
  1232 1592 18 69 01			add #$01
  1233 1595 91 12			sta (:bp2),y
  1234 1597 A9 53			lda #$53
  1235 1599 85 58			sta T0B
  1236
  1237 159B 4C D7 15			jmp a_0003
  1238 159E			l_0434
  1239 159E C9 04			cmp #$04
  1240 15A0 D0 1A			jne l_0442
  1241 15A2			@
  1242
  1243 				; optimize OK (tools.inc), line = 117
  1244
  1245 15A2 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1246 15AC A0 00			ldy #PLY.X-DATAORIGIN
  1247 15AE B1 12			lda (:bp2),y
  1248 15B0 38 E9 01			sub #$01
  1249 15B3 91 12			sta (:bp2),y
  1250 15B5 A9 51			lda #$51
  1251 15B7 85 58			sta T0B
  1252
  1253 15B9 4C D7 15			jmp a_0003
  1254 15BC			l_0442
  1255 15BC C9 08			cmp #$08
  1256 15BE D0 17			jne l_0450
  1257 15C0			@
  1258
  1259 				; optimize OK (tools.inc), line = 118
  1260
  1261 15C0 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1262 15CA A0 00			ldy #PLY.X-DATAORIGIN
  1263 15CC B1 12			lda (:bp2),y
  1264 15CE 18 69 01			add #$01
  1265 15D1 91 12			sta (:bp2),y
  1266 15D3 A9 52			lda #$52
  1267 15D5 85 58			sta T0B
  1268
  1269 15D7			l_0450
  1270 15D7			a_0003
  1271
  1272 				; optimize OK (tools.inc), line = 121
  1273
  1274 15D7 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1275 15E1 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1276 15E3 A5 58			lda T0B
  1277 15E5 91 12			sta (:bp2),y
  1278
  1279 				; optimize OK (tools.inc), line = 123
  1280
  1281 15E7 A0 00			ldy #PLY.X-DATAORIGIN
  1282 15E9 B1 12			lda (:bp2),y
  1283 15EB 8D 9C 2D			sta PUTCHAR_00D8.X
  1284 15EE A0 01			ldy #PLY.Y-DATAORIGIN
  1285 15F0 B1 12			lda (:bp2),y
  1286 15F2 8D 9D 2D			sta PUTCHAR_00D8.Y
  1287 15F5 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1288 15F7 B1 12			lda (:bp2),y
  1289 15F9 8D 9E 2D			sta PUTCHAR_00D8.V
  1290 15FC A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1291 15FE B1 12			lda (:bp2),y
  1292 1600 8D 9F 2D			sta PUTCHAR_00D8.C
  1293 1603 20 A1 12			jsr PUTCHAR_00D8
  1294
  1295 				; ------------------------------------------------------------
  1296
  1297 = 2DA6			@CASETMP_0003	= DATAORIGIN+$0142
  1298
  1299 = 2DA6			@VarData	= @CASETMP_0003
  1300 = 0001			@VarDataSize	= 1
  1301
  1302 1606			@exit
  1303 					.ifdef @new
  1304 					lda <@VarData
  1305 					sta :ztmp
  1306 					lda >@VarData
  1307 					ldy #@VarDataSize-1
  1308 					jmp @FreeMem
  1309 					els
  1310 1606 60				rts						; ret
  1311 					eif
  1312 				.endl
  1313
  1314 1607			.local	PLAYERBUSTED					; PROCEDURE
  1315
  1316 				; optimize OK (tools.inc), line = 130
  1317
  1318 1607 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1319 1611 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1320 1613 A9 00			lda #$00
  1321 1615 91 12			sta (:bp2),y
  1322 1617 C6 5A			dec ALIVE
  1323
  1324 				; optimize OK (tools.inc), line = 131
  1325
  1326 1619 A0 00			ldy #PLY.X-DATAORIGIN
  1327 161B B1 12			lda (:bp2),y
  1328 161D 8D 9C 2D			sta PUTCHAR_00D8.X
  1329 1620 A0 01			ldy #PLY.Y-DATAORIGIN
  1330 1622 B1 12			lda (:bp2),y
  1331 1624 8D 9D 2D			sta PUTCHAR_00D8.Y
  1332 1627 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1333 1629 B1 12			lda (:bp2),y
  1334 162B 8D 9E 2D			sta PUTCHAR_00D8.V
  1335 162E A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1336 1630 B1 12			lda (:bp2),y
  1337 1632 18 69 80			add #$80
  1338 1635 8D 9F 2D			sta PUTCHAR_00D8.C
  1339 1638 20 A1 12			jsr PUTCHAR_00D8
  1340 163B			@exit
  1341 					.ifdef @new
  1342 					lda <@VarData
  1343 					sta :ztmp
  1344 					lda >@VarData
  1345 					ldy #@VarDataSize-1
  1346 					jmp @FreeMem
  1347 					els
  1348 163B 60				rts						; ret
  1349 					eif
  1350 				.endl
  1351
  1352 163C			.local	CHECKJOYSTATUS					; PROCEDURE
  1353
  1354 				; optimize OK (tools.inc), line = 138
  1355
  1356 163C A9 02			lda #$02
  1357 163E 8D 08 FF			sta JOY
  1358 1641 A9 FF			lda #$FF
  1359 1643 8D 30 FD			sta KEYSCAN
  1360
  1361 				; optimize OK (tools.inc), line = 139
  1362
  1363 1646 AD 08 FF			lda JOY
  1364 1649 49 FF			eor #$FF
  1365 164B 85 5D			sta JOYSTATUS
  1366 164D			@exit
  1367 					.ifdef @new
  1368 					lda <@VarData
  1369 					sta :ztmp
  1370 					lda >@VarData
  1371 					ldy #@VarDataSize-1
  1372 					jmp @FreeMem
  1373 					els
  1374 164D 60				rts						; ret
  1375 					eif
  1376 				.endl
  1377
  1378 164E			.local	SETPLAYER					; PROCEDURE
  1379
  1380 				; optimize OK (tools.inc), line = 146
  1381
  1382 164E AD A7 2D			lda P
  1383 1651 8D 53 2C			sta PLY
  1384 1654 AD A8 2D			lda P+1
  1385 1657 8D 54 2C			sta PLY+1
  1386
  1387 				; optimize OK (tools.inc), line = 148
  1388
  1389 165A AD AB 2D			lda DIR
  1390 165D 8D AF 2D			sta @CASETMP_0004
  1391 1660 C9 01			cmp #$01
  1392 1662 D0 07			jne l_04B7
  1393 1664			@
  1394
  1395 				; optimize OK (tools.inc), line = 149
  1396
  1397 1664 A9 50			lda #$50
  1398 1666 85 58			sta T0B
  1399
  1400 1668 4C 89 16			jmp a_0004
  1401 166B			l_04B7
  1402 166B C9 02			cmp #$02
  1403 166D D0 07			jne l_04C4
  1404 166F			@
  1405
  1406 				; optimize OK (tools.inc), line = 150
  1407
  1408 166F A9 53			lda #$53
  1409 1671 85 58			sta T0B
  1410
  1411 1673 4C 89 16			jmp a_0004
  1412 1676			l_04C4
  1413 1676 C9 04			cmp #$04
  1414 1678 D0 07			jne l_04D1
  1415 167A			@
  1416
  1417 				; optimize OK (tools.inc), line = 151
  1418
  1419 167A A9 51			lda #$51
  1420 167C 85 58			sta T0B
  1421
  1422 167E 4C 89 16			jmp a_0004
  1423 1681			l_04D1
  1424 1681 C9 08			cmp #$08
  1425 1683 D0 04			jne l_04DE
  1426 1685			@
  1427
  1428 				; optimize OK (tools.inc), line = 152
  1429
  1430 1685 A9 52			lda #$52
  1431 1687 85 58			sta T0B
  1432
  1433 1689			l_04DE
  1434 1689			a_0004
  1435
  1436 				; optimize OK (tools.inc), line = 155
  1437
  1438 1689 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1439 1693 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1440 1695 AD AC 2D			lda BRAIN
  1441 1698 91 12			sta (:bp2),y
  1442 169A A0 00			ldy #PLY.X-DATAORIGIN
  1443 169C AD A9 2D			lda X
  1444 169F 91 12			sta (:bp2),y
  1445 16A1 A0 01			ldy #PLY.Y-DATAORIGIN
  1446 16A3 AD AA 2D			lda Y
  1447 16A6 91 12			sta (:bp2),y
  1448 16A8 A0 04			ldy #PLY.DIR-DATAORIGIN
  1449 16AA AD AB 2D			lda DIR
  1450 16AD 91 12			sta (:bp2),y
  1451
  1452 				; optimize OK (tools.inc), line = 156
  1453
  1454 16AF A0 02			ldy #PLY.HEAD-DATAORIGIN
  1455 16B1 A5 58			lda T0B
  1456 16B3 91 12			sta (:bp2),y
  1457 16B5 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1458 16B7 AD AD 2D			lda COLOUR
  1459 16BA 91 12			sta (:bp2),y
  1460 16BC A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1461 16BE AD AE 2D			lda ISALIVE
  1462 16C1 91 12			sta (:bp2),y
  1463
  1464 				; optimize OK (tools.inc), line = 157
  1465
  1466 16C3 AD AE 2D			lda ISALIVE
  1467 16C6 F0 1C			jeq l_0520
  1468
  1469 				; optimize FAIL (0, tools.inc), line = 158
  1470
  1471 16C8 E6 5A			inc ALIVE
  1472 16CA AD AD 2D			lda COLOUR
  1473 16CD 8D 9F 2D			sta PUTCHAR_00D8.C
  1474 16D0 A5 58			lda T0B
  1475 16D2 8D 9E 2D			sta PUTCHAR_00D8.V
  1476 16D5 AD AA 2D			lda Y
  1477 16D8 8D 9D 2D			sta PUTCHAR_00D8.Y
  1478 16DB AD A9 2D			lda X
  1479 16DE 8D 9C 2D			sta PUTCHAR_00D8.X
  1480 16E1 20 A1 12			jsr PUTCHAR_00D8
  1481 16E4			l_0520
  1482
  1483 				; ------------------------------------------------------------
  1484
  1485 = 2DA7			P	= DATAORIGIN+$0143
  1486 = 2DA9			X	= DATAORIGIN+$0145
  1487 = 2DAA			Y	= DATAORIGIN+$0146
  1488 = 2DAB			DIR	= DATAORIGIN+$0147
  1489 = 2DAC			BRAIN	= DATAORIGIN+$0148
  1490 = 2DAD			COLOUR	= DATAORIGIN+$0149
  1491 = 2DAE			ISALIVE	= DATAORIGIN+$014A
  1492 = 2DAF			@CASETMP_0004	= DATAORIGIN+$014B
  1493
  1494 = 2DA7			@VarData	= P
  1495 = 0009			@VarDataSize	= 9
  1496
  1497 16E4			@exit
  1498 					.ifdef @new
  1499 					lda <@VarData
  1500 					sta :ztmp
  1501 					lda >@VarData
  1502 					ldy #@VarDataSize-1
  1503 					jmp @FreeMem
  1504 					els
  1505 16E4 60				rts						; ret
  1506 					eif
  1507 				.endl
  1508
  1509 16E5			.local	NEXTLEVEL					; PROCEDURE
  1510
  1511 				; optimize FAIL (0, tools.inc), line = 166
  1512
  1513 16E5 EE 74 2C			inc LEVEL
  1514 16E8 AD 74 2C			lda LEVEL
  1515 16EB C9 08			cmp #$08
  1516 16ED D0 05			jne l_054E
  1517 16EF A9 05			lda #$05
  1518 16F1 8D 74 2C			sta LEVEL
  1519 16F4			l_054E
  1520 16F4			@exit
  1521 					.ifdef @new
  1522 					lda <@VarData
  1523 					sta :ztmp
  1524 					lda >@VarData
  1525 					ldy #@VarDataSize-1
  1526 					jmp @FreeMem
  1527 					els
  1528 16F4 60				rts						; ret
  1529 					eif
  1530 				.endl
  1531
  1532 16F5			.local	STARTSCREEN					; PROCEDURE
  1533
  1534 				; optimize FAIL ('PRINTXY', tools.inc), line = 175
  1535
  1536 16F5 E8				inx
  1537 16F6 AD 85 17 95 18		mva INFO :STACKORIGIN,x
  1538 16FB AD 86 17 95 28		mva INFO+1 :STACKORIGIN+STACKWIDTH,x
  1539 1700 E8				inx
  1540 1701 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1541 1705 E8				inx
  1542 1706 A9 00 95 18			mva #$00 :STACKORIGIN,x
  1543 170A E8				inx
  1544 170B A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1545 170F 20 22 12			jsr PRINTXY
  1546
  1547 				; optimize OK (tools.inc), line = 176
  1548
  1549 1712 AD 79 2C			lda PLAYER1.COLOUR
  1550 1715 18 69 80			add #$80
  1551 1718 8D 9F 2D			sta PUTCHAR_00D8.C
  1552 171B AD 78 2C			lda PLAYER1.HEAD
  1553 171E 8D 9E 2D			sta PUTCHAR_00D8.V
  1554 1721 AD 77 2C			lda PLAYER1.Y
  1555 1724 8D 9D 2D			sta PUTCHAR_00D8.Y
  1556 1727 AD 76 2C			lda PLAYER1.X
  1557 172A 8D 9C 2D			sta PUTCHAR_00D8.X
  1558 172D 20 A1 12			jsr PUTCHAR_00D8
  1559
  1560 				; --- RepeatUntilProlog
  1561 1730			l_0571
  1562
  1563 				; optimize FAIL ('CHECKJOYSTATUS', tools.inc), line = 178
  1564
  1565 1730 20 3C 16			jsr CHECKJOYSTATUS
  1566 1733 A5 5D			lda JOYSTATUS
  1567 1735 C9 40			cmp #$40
  1568 1737 D0 F7			jne l_0571
  1569
  1570 				; optimize OK (tools.inc), line = 180
  1571
  1572 1739 AD B0 2D			lda adr.INFO
  1573 173C 85 0C			sta SYSTEM.FILLCHAR_006E.COUNT
  1574 173E A9 A0			lda #$A0
  1575 1740 85 04			sta SYSTEM.FILLCHAR_006E.VALUE
  1576 1742 A9 00			lda #$00
  1577 1744 85 0D			sta SYSTEM.FILLCHAR_006E.COUNT+1
  1578 1746 A9 02			lda #$02
  1579 1748 85 08			sta SYSTEM.FILLCHAR_006E.A
  1580 174A A9 0C			lda #$0C
  1581 174C 85 09			sta SYSTEM.FILLCHAR_006E.A+1
  1582 174E 20 A0 11			jsr SYSTEM.FILLCHAR_006E
  1583
  1584 				; optimize OK (tools.inc), line = 181
  1585
  1586 1751 AD B0 2D			lda adr.INFO
  1587 1754 85 0C			sta SYSTEM.FILLCHAR_006E.COUNT
  1588 1756 A9 41			lda #$41
  1589 1758 85 04			sta SYSTEM.FILLCHAR_006E.VALUE
  1590 175A A9 00			lda #$00
  1591 175C 85 0D			sta SYSTEM.FILLCHAR_006E.COUNT+1
  1592 175E A9 02			lda #$02
  1593 1760 85 08			sta SYSTEM.FILLCHAR_006E.A
  1594 1762 A9 08			lda #$08
  1595 1764 85 09			sta SYSTEM.FILLCHAR_006E.A+1
  1596 1766 20 A0 11			jsr SYSTEM.FILLCHAR_006E
  1597
  1598 				; optimize OK (tools.inc), line = 182
  1599
  1600 1769 AD 79 2C			lda PLAYER1.COLOUR
  1601 176C 8D 9F 2D			sta PUTCHAR_00D8.C
  1602 176F AD 78 2C			lda PLAYER1.HEAD
  1603 1772 8D 9E 2D			sta PUTCHAR_00D8.V
  1604 1775 AD 77 2C			lda PLAYER1.Y
  1605 1778 8D 9D 2D			sta PUTCHAR_00D8.Y
  1606 177B AD 76 2C			lda PLAYER1.X
  1607 177E 8D 9C 2D			sta PUTCHAR_00D8.X
  1608 1781 20 A1 12			jsr PUTCHAR_00D8
  1609
  1610 				; ------------------------------------------------------------
  1611
  1612 = 2DB0			adr.INFO	= [DATAORIGIN+$014C] .array [256]
  1613 1784			.var INFO	= adr.INFO .word
  1614
  1615 = 1785			@VarData	= INFO
  1616 = 0100			@VarDataSize	= 256
  1617
  1618 1784			@exit
  1619 					.ifdef @new
  1620 					lda <@VarData
  1621 					sta :ztmp
  1622 					lda >@VarData
  1623 					ldy #@VarDataSize-1
  1624 					jmp @FreeMem
  1625 					els
  1626 1784 60				rts						; ret
  1627 					eif
  1628 = 1785 B0 2D		INFO
  1628 				.endl
  1629
  1630 1787			.local	ENDSCREEN					; PROCEDURE
  1631
  1632 				; optimize OK (tools.inc), line = 192
  1633
  1634 1787 AD 7C 2C			lda PLAYER1.SCORE
  1635 178A C9 39			cmp #$39
  1636 178C D0 20			jne l_05A8
  1637 178E E8				inx
  1638 178F AD CC 17 95 18		mva WINNER :STACKORIGIN,x
  1639 1794 AD CD 17 95 28		mva WINNER+1 :STACKORIGIN+STACKWIDTH,x
  1640 1799 E8				inx
  1641 179A A9 02 95 18			mva #$02 :STACKORIGIN,x
  1642 179E E8				inx
  1643 179F A9 00 95 18			mva #$00 :STACKORIGIN,x
  1644 17A3 E8				inx
  1645 17A4 A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1646 17A8 20 22 12			jsr PRINTXY
  1647 17AB 4C CB 17			jmp l_05B8
  1648 17AE			l_05A8
  1649
  1650 				; optimize FAIL ('PRINTXY', tools.inc), line = 193
  1651
  1652 17AE E8				inx
  1653 17AF AD CE 17 95 18		mva LOSER :STACKORIGIN,x
  1654 17B4 AD CF 17 95 28		mva LOSER+1 :STACKORIGIN+STACKWIDTH,x
  1655 17B9 E8				inx
  1656 17BA A9 02 95 18			mva #$02 :STACKORIGIN,x
  1657 17BE E8				inx
  1658 17BF A9 00 95 18			mva #$00 :STACKORIGIN,x
  1659 17C3 E8				inx
  1660 17C4 A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1661 17C8 20 22 12			jsr PRINTXY
  1662 17CB			l_05B8
  1663
  1664 				; ------------------------------------------------------------
  1665
  1666 = 2EB0			adr.WINNER	= [DATAORIGIN+$024C] .array [256]
  1667 17CB			.var WINNER	= adr.WINNER .word
  1668 = 2FB0			adr.LOSER	= [DATAORIGIN+$034C] .array [256]
  1669 17CB			.var LOSER	= adr.LOSER .word
  1670
  1671 = 17CC			@VarData	= WINNER
  1672 = 0200			@VarDataSize	= 512
  1673
  1674 17CB			@exit
  1675 					.ifdef @new
  1676 					lda <@VarData
  1677 					sta :ztmp
  1678 					lda >@VarData
  1679 					ldy #@VarDataSize-1
  1680 					jmp @FreeMem
  1681 					els
  1682 17CB 60				rts						; ret
  1683 					eif
  1684 = 17CC B0 2E		WINNER
  1684 = 17CE B0 2F		LOSER
  1684 				.endl
  1685
  1686 17D0			.local	ISGAMEOVER					; FUNCTION
  1687
  1688 				; optimize OK (tools.inc), line = 200
  1689
  1690 17D0 AD 7C 2C			lda PLAYER1.SCORE
  1691 17D3 C9 39			cmp #$39
  1692 17D5 D0 05			jne l_05D4
  1693 17D7 A9 01			lda #$01
  1694 17D9 8D 75 2C			sta GAMEOVER
  1695 17DC			l_05D4
  1696
  1697 				; optimize OK (tools.inc), line = 201
  1698
  1699 17DC AD 84 2C			lda PLAYER2.SCORE
  1700 17DF C9 39			cmp #$39
  1701 17E1 D0 05			jne l_05ED
  1702 17E3 A9 01			lda #$01
  1703 17E5 8D 75 2C			sta GAMEOVER
  1704 17E8			l_05ED
  1705
  1706 				; optimize OK (tools.inc), line = 202
  1707
  1708 17E8 AD 8C 2C			lda PLAYER3.SCORE
  1709 17EB C9 39			cmp #$39
  1710 17ED D0 05			jne l_0606
  1711 17EF A9 01			lda #$01
  1712 17F1 8D 75 2C			sta GAMEOVER
  1713 17F4			l_0606
  1714
  1715 				; optimize OK (tools.inc), line = 203
  1716
  1717 17F4 AD 94 2C			lda PLAYER4.SCORE
  1718 17F7 C9 39			cmp #$39
  1719 17F9 D0 05			jne l_061F
  1720 17FB A9 01			lda #$01
  1721 17FD 8D 75 2C			sta GAMEOVER
  1722 1800			l_061F
  1723
  1724 				; optimize OK (tools.inc), line = 204
  1725
  1726 1800 AD 75 2C			lda GAMEOVER
  1727 1803 8D B0 30			sta RESULT
  1728 1806			@exit
  1729
  1730 				; ------------------------------------------------------------
  1731
  1732 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
  1733 				; as Pointer
  1734
  1735 1806 E8				inx
  1736 1807 AD B0 30 95 18		mva RESULT :STACKORIGIN,x
  1737
  1738 					.ifdef @new
  1739 					lda <@VarData
  1740 					sta :ztmp
  1741 					lda >@VarData
  1742 					ldy #@VarDataSize-1
  1743 					jmp @FreeMem
  1744 					eif
  1745
  1746 				; ------------------------------------------------------------
  1747
  1748 = 30B0			RESULT	= DATAORIGIN+$044C
  1749
  1750 = 30B0			@VarData	= RESULT
  1751 = 0001			@VarDataSize	= 1
  1752
  1753 180C 60				rts						; ret
  1754 				.endl
  1755
  1756 180D			.local	ISONELEFT					; FUNCTION
  1757
  1758 				; optimize OK (tools.inc), line = 211
  1759
  1760 180D A0 01			ldy #1
  1761 180F A5 5A			lda ALIVE
  1762 1811 F0 01			beq @+
  1763 1813 88				dey
  1764 1814			@
  1765 1814 84 21			sty :STACKORIGIN+9
  1766 1816 A0 01			ldy #1
  1767 1818 A5 5A			lda ALIVE
  1768 181A C9 FF			cmp #$FF
  1769 181C F0 01			beq @+
  1770 181E 88				dey
  1771 181F			@
  1772 181F 98				tya
  1773 1820 05 21			ora :STACKORIGIN+9
  1774 1822 8D B1 30			sta RESULT
  1775 1825			@exit
  1776
  1777 				; ------------------------------------------------------------
  1778
  1779 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
  1780 				; as Pointer
  1781
  1782 1825 E8				inx
  1783 1826 AD B1 30 95 18		mva RESULT :STACKORIGIN,x
  1784
  1785 					.ifdef @new
  1786 					lda <@VarData
  1787 					sta :ztmp
  1788 					lda >@VarData
  1789 					ldy #@VarDataSize-1
  1790 					jmp @FreeMem
  1791 					eif
  1792
  1793 				; ------------------------------------------------------------
  1794
  1795 = 30B1			RESULT	= DATAORIGIN+$044D
  1796
  1797 = 30B1			@VarData	= RESULT
  1798 = 0001			@VarDataSize	= 1
  1799
  1800 182B 60				rts						; ret
  1801 				.endl
  1802
  1803 182C			.local	SETFONTS					; PROCEDURE
  1804
  1805 				; optimize OK (tools.inc), line = 226
  1806
  1807 182C A9 00			lda #$00
  1808 182E 85 04			sta SYSTEM.MOVE_006F.COUNT
  1809 1830 A9 04			lda #$04
  1810 1832 85 05			sta SYSTEM.MOVE_006F.COUNT+1
  1811 1834 A9 00			lda #$00
  1812 1836 85 0C			sta SYSTEM.MOVE_006F.DEST
  1813 1838 A9 60			lda #$60
  1814 183A 85 0D			sta SYSTEM.MOVE_006F.DEST+1
  1815 183C A9 00			lda #$00
  1816 183E 85 08			sta SYSTEM.MOVE_006F.SOURCE
  1817 1840 A9 D0			lda #$D0
  1818 1842 85 09			sta SYSTEM.MOVE_006F.SOURCE+1
  1819 1844 20 A4 11			jsr SYSTEM.MOVE_006F
  1820
  1821 				; optimize OK (tools.inc), line = 227
  1822
  1823 1847 AD 74 18			lda FONTS
  1824 184A 85 12			sta :bp2
  1825 184C AD 75 18			lda FONTS+1
  1826 184F 85 13			sta :bp2+1
  1827 1851 A0 2F			ldy #$2F
  1828 1853 B1 12 99 80 62 88 + 	mva:rpl (:bp2),y $6280,y-
  1829
  1830 				; optimize OK (tools.inc), line = 230
  1831
  1832 185B AD 12 FF			lda RAMROMSEL
  1833 185E 29 FB			and #$FB
  1834 1860 8D 12 FF			sta RAMROMSEL
  1835
  1836 				; optimize OK (tools.inc), line = 233
  1837
  1838 1863 AD 13 FF			lda CHBAS
  1839 1866 29 03			and #$03
  1840 1868 85 21			sta :STACKORIGIN+9
  1841 186A A9 18			lda #$18
  1842 186C 0A				asl @
  1843 186D 0A				asl @
  1844 186E 05 21			ora :STACKORIGIN+9
  1845 1870 8D 13 FF			sta CHBAS
  1846
  1847 				; ------------------------------------------------------------
  1848
  1849 = 30B2			adr.FONTS	= [DATAORIGIN+$044E] .array [48]
  1850 1873			.var FONTS	= adr.FONTS .word
  1851
  1852 = 1874			@VarData	= FONTS
  1853 = 0030			@VarDataSize	= 48
  1854
  1855 1873			@exit
  1856 					.ifdef @new
  1857 					lda <@VarData
  1858 					sta :ztmp
  1859 					lda >@VarData
  1860 					ldy #@VarDataSize-1
  1861 					jmp @FreeMem
  1862 					els
  1863 1873 60				rts						; ret
  1864 					eif
  1865 = 1874 B2 30		FONTS
  1865 				.endl
  1866
  1867 1876			.local	HUMAN						; PROCEDURE
  1868
  1869 				; optimize FAIL ('CHECKJOYSTATUS', ai.inc), line = 5
  1870
  1871 1876 20 3C 16			jsr CHECKJOYSTATUS
  1872 1879 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1873 1883 A0 04			ldy #PLY.DIR-DATAORIGIN
  1874 1885 B1 12			lda (:bp2),y
  1875 1887 85 5B			sta NEWDIR
  1876
  1877 				; optimize OK (ai.inc), line = 6
  1878
  1879 1889 A5 5D			lda JOYSTATUS
  1880 188B 8D E2 30			sta @CASETMP_0005
  1881 188E C9 01			cmp #$01
  1882 1890 D0 19			jne l_068D
  1883 1892			@
  1884
  1885 				; optimize OK (ai.inc), line = 7
  1886
  1887 1892 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1888 189C A0 04			ldy #PLY.DIR-DATAORIGIN
  1889 189E B1 12			lda (:bp2),y
  1890 18A0 C9 02			cmp #$02
  1891 18A2 F0 04			jeq l_069F
  1892 18A4 A9 01			lda #$01
  1893 18A6 85 5B			sta NEWDIR
  1894 18A8			l_069F
  1895
  1896 18A8 4C FF 18			jmp a_0005
  1897 18AB			l_068D
  1898 18AB C9 02			cmp #$02
  1899 18AD D0 19			jne l_06AF
  1900 18AF			@
  1901
  1902 				; optimize OK (ai.inc), line = 8
  1903
  1904 18AF AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1905 18B9 A0 04			ldy #PLY.DIR-DATAORIGIN
  1906 18BB B1 12			lda (:bp2),y
  1907 18BD C9 01			cmp #$01
  1908 18BF F0 04			jeq l_06C1
  1909 18C1 A9 02			lda #$02
  1910 18C3 85 5B			sta NEWDIR
  1911 18C5			l_06C1
  1912
  1913 18C5 4C FF 18			jmp a_0005
  1914 18C8			l_06AF
  1915 18C8 C9 04			cmp #$04
  1916 18CA D0 19			jne l_06D1
  1917 18CC			@
  1918
  1919 				; optimize OK (ai.inc), line = 9
  1920
  1921 18CC AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1922 18D6 A0 04			ldy #PLY.DIR-DATAORIGIN
  1923 18D8 B1 12			lda (:bp2),y
  1924 18DA C9 08			cmp #$08
  1925 18DC F0 04			jeq l_06E3
  1926 18DE A9 04			lda #$04
  1927 18E0 85 5B			sta NEWDIR
  1928 18E2			l_06E3
  1929
  1930 18E2 4C FF 18			jmp a_0005
  1931 18E5			l_06D1
  1932 18E5 C9 08			cmp #$08
  1933 18E7 D0 16			jne l_06F3
  1934 18E9			@
  1935
  1936 				; optimize OK (ai.inc), line = 10
  1937
  1938 18E9 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1939 18F3 A0 04			ldy #PLY.DIR-DATAORIGIN
  1940 18F5 B1 12			lda (:bp2),y
  1941 18F7 C9 04			cmp #$04
  1942 18F9 F0 04			jeq l_0705
  1943 18FB A9 08			lda #$08
  1944 18FD 85 5B			sta NEWDIR
  1945 18FF			l_0705
  1946
  1947 18FF			l_06F3
  1948 18FF			a_0005
  1949
  1950 				; optimize OK (ai.inc), line = 13
  1951
  1952 18FF A5 5B			lda NEWDIR
  1953 1901 25 5C			and AVAILDIR
  1954 1903 D0 12			jne l_072C
  1955
  1956 				; optimize OK (ai.inc), line = 14
  1957
  1958 1905 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1959 190F A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1960 1911 A9 00			lda #$00
  1961 1913 91 12			sta (:bp2),y
  1962 1915 C6 5A			dec ALIVE
  1963 1917			l_072C
  1964
  1965 				; ------------------------------------------------------------
  1966
  1967 = 30E2			@CASETMP_0005	= DATAORIGIN+$047E
  1968
  1969 = 30E2			@VarData	= @CASETMP_0005
  1970 = 0001			@VarDataSize	= 1
  1971
  1972 1917			@exit
  1973 					.ifdef @new
  1974 					lda <@VarData
  1975 					sta :ztmp
  1976 					lda >@VarData
  1977 					ldy #@VarDataSize-1
  1978 					jmp @FreeMem
  1979 					els
  1980 1917 60				rts						; ret
  1981 					eif
  1982 				.endl
  1983
  1984 1918			.local	AISTRAIGHT					; PROCEDURE
  1985
  1986 				; optimize OK (ai.inc), line = 22
  1987
  1988 1918 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  1989 1922 A0 04			ldy #PLY.DIR-DATAORIGIN
  1990 1924 B1 12			lda (:bp2),y
  1991 1926 25 5C			and AVAILDIR
  1992 1928 F0 07			jeq l_0753
  1993 192A B1 12			lda (:bp2),y
  1994 192C 85 5B			sta NEWDIR
  1995 192E 4C 94 19			jmp l_0763
  1996 1931			l_0753
  1997
  1998 				; optimize OK (ai.inc), line = 24
  1999
  2000 1931 A5 5C			lda AVAILDIR
  2001 1933 C9 03			cmp #$03
  2002 1935 D0 10			jne l_0775
  2003 1937 A9 02			lda #$02
  2004 1939 20 D0 11			jsr SYSTEM.RANDOM_0087
  2005 193C B4 18			ldy :STACKORIGIN,x
  2006 193E B9 58 10			lda adr.DIRECTION,y
  2007 1941 85 5B			sta NEWDIR
  2008 1943 CA				dex
  2009 1944 4C 5F 19			jmp l_0787
  2010 1947			l_0775
  2011
  2012 				; optimize OK (ai.inc), line = 26
  2013
  2014 1947 A5 5C			lda AVAILDIR
  2015 1949 8D E3 30			sta @CASETMP_0006
  2016 194C C9 01			cmp #$01
  2017 194E D0 07			jne l_0792
  2018 1950			@
  2019
  2020 				; optimize OK (ai.inc), line = 27
  2021
  2022 1950 A9 01			lda #$01
  2023 1952 85 5B			sta NEWDIR
  2024
  2025 1954 4C 5F 19			jmp a_0006
  2026 1957			l_0792
  2027 1957 C9 02			cmp #$02
  2028 1959 D0 04			jne l_079F
  2029 195B			@
  2030
  2031 				; optimize OK (ai.inc), line = 28
  2032
  2033 195B A9 02			lda #$02
  2034 195D 85 5B			sta NEWDIR
  2035
  2036 195F			l_079F
  2037 195F			a_0006
  2038 195F			l_0787
  2039
  2040 				; optimize OK (ai.inc), line = 31
  2041
  2042 195F A5 5C			lda AVAILDIR
  2043 1961 C9 0C			cmp #$0C
  2044 1963 D0 17			jne l_07BB
  2045 1965 A9 02			lda #$02
  2046 1967 20 D0 11			jsr SYSTEM.RANDOM_0087
  2047 196A B5 18			lda :STACKORIGIN,x
  2048 196C 18 69 02			add #$02
  2049 196F 95 18			sta :STACKORIGIN,x
  2050 1971 B4 18			ldy :STACKORIGIN,x
  2051 1973 B9 58 10			lda adr.DIRECTION,y
  2052 1976 85 5B			sta NEWDIR
  2053 1978 CA				dex
  2054 1979 4C 94 19			jmp l_07D1
  2055 197C			l_07BB
  2056
  2057 				; optimize OK (ai.inc), line = 33
  2058
  2059 197C A5 5C			lda AVAILDIR
  2060 197E 8D E4 30			sta @CASETMP_0007
  2061 1981 C9 04			cmp #$04
  2062 1983 D0 07			jne l_07DC
  2063 1985			@
  2064
  2065 				; optimize OK (ai.inc), line = 34
  2066
  2067 1985 A9 04			lda #$04
  2068 1987 85 5B			sta NEWDIR
  2069
  2070 1989 4C 94 19			jmp a_0007
  2071 198C			l_07DC
  2072 198C C9 08			cmp #$08
  2073 198E D0 04			jne l_07E9
  2074 1990			@
  2075
  2076 				; optimize OK (ai.inc), line = 35
  2077
  2078 1990 A9 08			lda #$08
  2079 1992 85 5B			sta NEWDIR
  2080
  2081 1994			l_07E9
  2082 1994			a_0007
  2083 1994			l_07D1
  2084 1994			l_0763
  2085
  2086 				; ------------------------------------------------------------
  2087
  2088 = 30E3			@CASETMP_0006	= DATAORIGIN+$047F
  2089 = 30E4			@CASETMP_0007	= DATAORIGIN+$0480
  2090
  2091 = 30E3			@VarData	= @CASETMP_0006
  2092 = 0002			@VarDataSize	= 2
  2093
  2094 1994			@exit
  2095 					.ifdef @new
  2096 					lda <@VarData
  2097 					sta :ztmp
  2098 					lda >@VarData
  2099 					ldy #@VarDataSize-1
  2100 					jmp @FreeMem
  2101 					els
  2102 1994 60				rts						; ret
  2103 					eif
  2104 				.endl
  2105
  2106 1995			.local	AISAPPER					; PROCEDURE
  2107
  2108 				; optimize OK (ai.inc), line = 48
  2109
  2110 1995 A9 00			lda #$00
  2111 1997 8D E5 30			sta L
  2112 199A 8D E6 30			sta R
  2113 199D 8D E7 30			sta U
  2114 19A0 8D E8 30			sta D
  2115
  2116 				; optimize OK (ai.inc), line = 49
  2117
  2118 19A3 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  2119 19AD A0 01			ldy #PLY.Y-DATAORIGIN
  2120 19AF B1 12			lda (:bp2),y
  2121 19B1 0A				asl @
  2122 19B2 A8				tay
  2123 19B3 A9 00			lda #$00
  2124 19B5 18 79 26 10			add adr.MUL40,y
  2125 19B9 85 21			sta :STACKORIGIN+9
  2126 19BB A9 0C			lda #$0C
  2127 19BD 79 27 10			adc adr.MUL40+1,y
  2128 19C0 85 31			sta :STACKORIGIN+STACKWIDTH+9
  2129 19C2 A0 00			ldy #PLY.X-DATAORIGIN
  2130 19C4 A5 21			lda :STACKORIGIN+9
  2131 19C6 18 71 12			add (:bp2),y
  2132 19C9 85 5E			sta T0W
  2133 19CB A5 31			lda :STACKORIGIN+STACKWIDTH+9
  2134 19CD 69 00			adc #$00
  2135 19CF 85 5F			sta T0W+1
  2136
  2137 				; optimize OK (ai.inc), line = 51
  2138
  2139 19D1 A5 5C			lda AVAILDIR
  2140 19D3 29 01			and #$01
  2141 19D5 F0 73			jeq l_082F
  2142
  2143 				; optimize OK (ai.inc), line = 52
  2144
  2145 19D7 A9 05			lda #$05
  2146 19D9 85 59			sta I0B
  2147
  2148 19DB			l_0839
  2149 				; --- ForToDoCondition
  2150 19DB A5 59			lda I0B
  2151 19DD C9 01			cmp #$01
  2152 19DF 90 69			jcc l_0847
  2153
  2154 				; optimize OK (ai.inc), line = 53
  2155
  2156 19E1 0A				asl @
  2157 19E2 A8				tay
  2158 19E3 A5 5E			lda T0W
  2159 19E5 38 F9 26 10			sub adr.MUL40,y
  2160 19E9 85 21			sta :STACKORIGIN+9
  2161 19EB A5 5F			lda T0W+1
  2162 19ED F9 27 10			sbc adr.MUL40+1,y
  2163 19F0 85 11			sta :bp+1
  2164 19F2 A4 21			ldy :STACKORIGIN+9
  2165 19F4 B1 10			lda (:bp),y
  2166 19F6 C9 20			cmp #$20
  2167 19F8 D0 03			jne l_0861
  2168 19FA EE E7 30			inc U
  2169 19FD			l_0861
  2170
  2171 				; optimize OK (ai.inc), line = 54
  2172
  2173 19FD A5 59			lda I0B
  2174 19FF 0A				asl @
  2175 1A00 A8				tay
  2176 1A01 A5 5E			lda T0W
  2177 1A03 38 F9 26 10			sub adr.MUL40,y
  2178 1A07 85 21			sta :STACKORIGIN+9
  2179 1A09 A5 5F			lda T0W+1
  2180 1A0B F9 27 10			sbc adr.MUL40+1,y
  2181 1A0E 85 11			sta :bp+1
  2182 1A10 A5 21			lda :STACKORIGIN+9
  2183 1A12 18 69 01			add #$01
  2184 1A15 A8				tay
  2185 1A16 90 02			scc
  2186 1A18 E6 11			inc :bp+1
  2187 1A1A B1 10			lda (:bp),y
  2188 1A1C C9 20			cmp #$20
  2189 1A1E D0 03			jne l_0886
  2190 1A20 EE E7 30			inc U
  2191 1A23			l_0886
  2192
  2193 				; optimize OK (ai.inc), line = 55
  2194
  2195 1A23 A5 59			lda I0B
  2196 1A25 0A				asl @
  2197 1A26 A8				tay
  2198 1A27 A5 5E			lda T0W
  2199 1A29 38 F9 26 10			sub adr.MUL40,y
  2200 1A2D 85 21			sta :STACKORIGIN+9
  2201 1A2F A5 5F			lda T0W+1
  2202 1A31 F9 27 10			sbc adr.MUL40+1,y
  2203 1A34 85 11			sta :bp+1
  2204 1A36 A4 21			ldy :STACKORIGIN+9
  2205 1A38 88				dey
  2206 1A39 B0 02			scs
  2207 1A3B C6 11			dec :bp+1
  2208 1A3D B1 10			lda (:bp),y
  2209 1A3F C9 20			cmp #$20
  2210 1A41 D0 03			jne l_08AB
  2211 1A43 EE E7 30			inc U
  2212 1A46			l_08AB
  2213
  2214 				; --- ForToDoEpilog
  2215 1A46 C6 59			dec I0B
  2216 1A48 10 91			jpl l_0839
  2217 1A4A			l_0847
  2218 1A4A			l_082F
  2219
  2220 				; optimize OK (ai.inc), line = 59
  2221
  2222 1A4A A5 5C			lda AVAILDIR
  2223 1A4C 29 02			and #$02
  2224 1A4E F0 73			jeq l_08CF
  2225
  2226 				; optimize OK (ai.inc), line = 60
  2227
  2228 1A50 A9 05			lda #$05
  2229 1A52 85 59			sta I0B
  2230
  2231 1A54			l_08D9
  2232 				; --- ForToDoCondition
  2233 1A54 A5 59			lda I0B
  2234 1A56 C9 01			cmp #$01
  2235 1A58 90 69			jcc l_08E7
  2236
  2237 				; optimize OK (ai.inc), line = 61
  2238
  2239 1A5A 0A				asl @
  2240 1A5B A8				tay
  2241 1A5C A5 5E			lda T0W
  2242 1A5E 18 79 26 10			add adr.MUL40,y
  2243 1A62 85 21			sta :STACKORIGIN+9
  2244 1A64 A5 5F			lda T0W+1
  2245 1A66 79 27 10			adc adr.MUL40+1,y
  2246 1A69 85 11			sta :bp+1
  2247 1A6B A4 21			ldy :STACKORIGIN+9
  2248 1A6D B1 10			lda (:bp),y
  2249 1A6F C9 20			cmp #$20
  2250 1A71 D0 03			jne l_0901
  2251 1A73 EE E8 30			inc D
  2252 1A76			l_0901
  2253
  2254 				; optimize OK (ai.inc), line = 62
  2255
  2256 1A76 A5 59			lda I0B
  2257 1A78 0A				asl @
  2258 1A79 A8				tay
  2259 1A7A A5 5E			lda T0W
  2260 1A7C 18 79 26 10			add adr.MUL40,y
  2261 1A80 85 21			sta :STACKORIGIN+9
  2262 1A82 A5 5F			lda T0W+1
  2263 1A84 79 27 10			adc adr.MUL40+1,y
  2264 1A87 85 11			sta :bp+1
  2265 1A89 A5 21			lda :STACKORIGIN+9
  2266 1A8B 18 69 01			add #$01
  2267 1A8E A8				tay
  2268 1A8F 90 02			scc
  2269 1A91 E6 11			inc :bp+1
  2270 1A93 B1 10			lda (:bp),y
  2271 1A95 C9 20			cmp #$20
  2272 1A97 D0 03			jne l_0926
  2273 1A99 EE E8 30			inc D
  2274 1A9C			l_0926
  2275
  2276 				; optimize OK (ai.inc), line = 63
  2277
  2278 1A9C A5 59			lda I0B
  2279 1A9E 0A				asl @
  2280 1A9F A8				tay
  2281 1AA0 A5 5E			lda T0W
  2282 1AA2 18 79 26 10			add adr.MUL40,y
  2283 1AA6 85 21			sta :STACKORIGIN+9
  2284 1AA8 A5 5F			lda T0W+1
  2285 1AAA 79 27 10			adc adr.MUL40+1,y
  2286 1AAD 85 11			sta :bp+1
  2287 1AAF A4 21			ldy :STACKORIGIN+9
  2288 1AB1 88				dey
  2289 1AB2 B0 02			scs
  2290 1AB4 C6 11			dec :bp+1
  2291 1AB6 B1 10			lda (:bp),y
  2292 1AB8 C9 20			cmp #$20
  2293 1ABA D0 03			jne l_094B
  2294 1ABC EE E8 30			inc D
  2295 1ABF			l_094B
  2296
  2297 				; --- ForToDoEpilog
  2298 1ABF C6 59			dec I0B
  2299 1AC1 10 91			jpl l_08D9
  2300 1AC3			l_08E7
  2301 1AC3			l_08CF
  2302
  2303 				; optimize OK (ai.inc), line = 67
  2304
  2305 1AC3 A5 5C			lda AVAILDIR
  2306 1AC5 29 04			and #$04
  2307 1AC7 F0 5F			jeq l_096F
  2308
  2309 				; optimize OK (ai.inc), line = 68
  2310
  2311 1AC9 A9 05			lda #$05
  2312 1ACB 85 59			sta I0B
  2313
  2314 1ACD			l_0979
  2315 				; --- ForToDoCondition
  2316 1ACD A5 59			lda I0B
  2317 1ACF C9 01			cmp #$01
  2318 1AD1 90 55			jcc l_0987
  2319
  2320 				; optimize OK (ai.inc), line = 69
  2321
  2322 1AD3 A5 5E			lda T0W
  2323 1AD5 38 E5 59			sub I0B
  2324 1AD8 A8				tay
  2325 1AD9 A5 5F			lda T0W+1
  2326 1ADB E9 00			sbc #$00
  2327 1ADD 85 11			sta :bp+1
  2328 1ADF B1 10			lda (:bp),y
  2329 1AE1 C9 20			cmp #$20
  2330 1AE3 D0 03			jne l_099F
  2331 1AE5 EE E5 30			inc L
  2332 1AE8			l_099F
  2333
  2334 				; optimize OK (ai.inc), line = 70
  2335
  2336 1AE8 A5 5E			lda T0W
  2337 1AEA 38 E5 59			sub I0B
  2338 1AED A8				tay
  2339 1AEE A5 5F			lda T0W+1
  2340 1AF0 E9 00			sbc #$00
  2341 1AF2 85 11			sta :bp+1
  2342 1AF4 98				tya
  2343 1AF5 18 69 28			add #$28
  2344 1AF8 A8				tay
  2345 1AF9 90 02			scc
  2346 1AFB E6 11			inc :bp+1
  2347 1AFD B1 10			lda (:bp),y
  2348 1AFF C9 20			cmp #$20
  2349 1B01 D0 03			jne l_09C2
  2350 1B03 EE E5 30			inc L
  2351 1B06			l_09C2
  2352
  2353 				; optimize OK (ai.inc), line = 71
  2354
  2355 1B06 A5 5E			lda T0W
  2356 1B08 38 E5 59			sub I0B
  2357 1B0B A8				tay
  2358 1B0C A5 5F			lda T0W+1
  2359 1B0E E9 00			sbc #$00
  2360 1B10 85 11			sta :bp+1
  2361 1B12 98				tya
  2362 1B13 38 E9 28			sub #$28
  2363 1B16 A8				tay
  2364 1B17 B0 02			scs
  2365 1B19 C6 11			dec :bp+1
  2366 1B1B B1 10			lda (:bp),y
  2367 1B1D C9 20			cmp #$20
  2368 1B1F D0 03			jne l_09E5
  2369 1B21 EE E5 30			inc L
  2370 1B24			l_09E5
  2371
  2372 				; --- ForToDoEpilog
  2373 1B24 C6 59			dec I0B
  2374 1B26 10 A5			jpl l_0979
  2375 1B28			l_0987
  2376 1B28			l_096F
  2377
  2378 				; optimize OK (ai.inc), line = 75
  2379
  2380 1B28 A5 5C			lda AVAILDIR
  2381 1B2A 29 08			and #$08
  2382 1B2C F0 5D			jeq l_0A09
  2383
  2384 				; optimize OK (ai.inc), line = 76
  2385
  2386 1B2E A9 05			lda #$05
  2387 1B30 85 59			sta I0B
  2388
  2389 1B32			l_0A13
  2390 				; --- ForToDoCondition
  2391 1B32 A5 59			lda I0B
  2392 1B34 C9 01			cmp #$01
  2393 1B36 90 53			jcc l_0A21
  2394
  2395 				; optimize OK (ai.inc), line = 77
  2396
  2397 1B38 A4 5E 84 12 A4 5F + 	mwy T0W :bp2
  2398 1B40 A4 59			ldy I0B
  2399 1B42 B1 12			lda (:bp2),y
  2400 1B44 C9 20			cmp #$20
  2401 1B46 D0 03			jne l_0A39
  2402 1B48 EE E6 30			inc R
  2403 1B4B			l_0A39
  2404
  2405 				; optimize OK (ai.inc), line = 78
  2406
  2407 1B4B A5 5E			lda T0W
  2408 1B4D 18 65 59			add I0B
  2409 1B50 A8				tay
  2410 1B51 A5 5F			lda T0W+1
  2411 1B53 69 00			adc #$00
  2412 1B55 85 11			sta :bp+1
  2413 1B57 98				tya
  2414 1B58 18 69 28			add #$28
  2415 1B5B A8				tay
  2416 1B5C 90 02			scc
  2417 1B5E E6 11			inc :bp+1
  2418 1B60 B1 10			lda (:bp),y
  2419 1B62 C9 20			cmp #$20
  2420 1B64 D0 03			jne l_0A5C
  2421 1B66 EE E6 30			inc R
  2422 1B69			l_0A5C
  2423
  2424 				; optimize OK (ai.inc), line = 79
  2425
  2426 1B69 A5 5E			lda T0W
  2427 1B6B 18 65 59			add I0B
  2428 1B6E A8				tay
  2429 1B6F A5 5F			lda T0W+1
  2430 1B71 69 00			adc #$00
  2431 1B73 85 11			sta :bp+1
  2432 1B75 98				tya
  2433 1B76 38 E9 28			sub #$28
  2434 1B79 A8				tay
  2435 1B7A B0 02			scs
  2436 1B7C C6 11			dec :bp+1
  2437 1B7E B1 10			lda (:bp),y
  2438 1B80 C9 20			cmp #$20
  2439 1B82 D0 03			jne l_0A7F
  2440 1B84 EE E6 30			inc R
  2441 1B87			l_0A7F
  2442
  2443 				; --- ForToDoEpilog
  2444 1B87 C6 59			dec I0B
  2445 1B89 10 A7			jpl l_0A13
  2446 1B8B			l_0A21
  2447 1B8B			l_0A09
  2448
  2449 				; optimize OK (ai.inc), line = 83
  2450
  2451 1B8B AD E8 30			lda D
  2452 1B8E 85 58			sta T0B
  2453
  2454 				; optimize OK (ai.inc), line = 84
  2455
  2456 1B90 CD E7 30			cmp U
  2457 1B93 B0 05			jcs l_0AA7
  2458 1B95 AD E7 30			lda U
  2459 1B98 85 58			sta T0B
  2460 1B9A			l_0AA7
  2461
  2462 				; optimize OK (ai.inc), line = 85
  2463
  2464 1B9A A5 58			lda T0B
  2465 1B9C CD E5 30			cmp L
  2466 1B9F B0 05			jcs l_0AC4
  2467 1BA1 AD E5 30			lda L
  2468 1BA4 85 58			sta T0B
  2469 1BA6			l_0AC4
  2470
  2471 				; optimize OK (ai.inc), line = 86
  2472
  2473 1BA6 A5 58			lda T0B
  2474 1BA8 CD E6 30			cmp R
  2475 1BAB B0 05			jcs l_0AE1
  2476 1BAD AD E6 30			lda R
  2477 1BB0 85 58			sta T0B
  2478 1BB2			l_0AE1
  2479
  2480 				; optimize OK (ai.inc), line = 88
  2481
  2482 1BB2 A5 58			lda T0B
  2483 1BB4 CD E8 30			cmp D
  2484 1BB7 D0 04			jne l_0AFE
  2485 1BB9 A9 02			lda #$02
  2486 1BBB 85 58			sta T0B
  2487 1BBD			l_0AFE
  2488
  2489 				; optimize OK (ai.inc), line = 89
  2490
  2491 1BBD A5 58			lda T0B
  2492 1BBF CD E7 30			cmp U
  2493 1BC2 D0 04			jne l_0B19
  2494 1BC4 A9 01			lda #$01
  2495 1BC6 85 58			sta T0B
  2496 1BC8			l_0B19
  2497
  2498 				; optimize OK (ai.inc), line = 90
  2499
  2500 1BC8 A5 58			lda T0B
  2501 1BCA CD E5 30			cmp L
  2502 1BCD D0 04			jne l_0B34
  2503 1BCF A9 04			lda #$04
  2504 1BD1 85 58			sta T0B
  2505 1BD3			l_0B34
  2506
  2507 				; optimize OK (ai.inc), line = 91
  2508
  2509 1BD3 A5 58			lda T0B
  2510 1BD5 CD E6 30			cmp R
  2511 1BD8 D0 04			jne l_0B4F
  2512 1BDA A9 08			lda #$08
  2513 1BDC 85 58			sta T0B
  2514 1BDE			l_0B4F
  2515
  2516 				; optimize OK (ai.inc), line = 93
  2517
  2518 1BDE A5 5C			lda AVAILDIR
  2519 1BE0 25 58			and T0B
  2520 1BE2 F0 07			jeq l_0B6E
  2521 1BE4 A5 58			lda T0B
  2522 1BE6 85 5B			sta NEWDIR
  2523 1BE8 4C EE 1B			jmp l_0B7E
  2524 1BEB			l_0B6E
  2525
  2526 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 94
  2527
  2528 1BEB 20 18 19			jsr AISTRAIGHT
  2529 1BEE			l_0B7E
  2530
  2531 				; ------------------------------------------------------------
  2532
  2533 = 30E5			L	= DATAORIGIN+$0481
  2534 = 30E6			R	= DATAORIGIN+$0482
  2535 = 30E7			U	= DATAORIGIN+$0483
  2536 = 30E8			D	= DATAORIGIN+$0484
  2537 = 0001			@FORTMP_0836	= $01
  2538 = 0001			@FORTMP_08D6	= $01
  2539 = 0001			@FORTMP_0976	= $01
  2540 = 0001			@FORTMP_0A10	= $01
  2541
  2542 = 30E5			@VarData	= L
  2543 = 0004			@VarDataSize	= 4
  2544
  2545 1BEE			@exit
  2546 					.ifdef @new
  2547 					lda <@VarData
  2548 					sta :ztmp
  2549 					lda >@VarData
  2550 					ldy #@VarDataSize-1
  2551 					jmp @FreeMem
  2552 					els
  2553 1BEE 60				rts						; ret
  2554 					eif
  2555 				.endl
  2556
  2557 1BEF			.local	AIBULLY						; PROCEDURE
  2558
  2559 				; optimize OK (ai.inc), line = 101
  2560
  2561 1BEF AC 53 2C 84 12 AC + 	mwy PLY :bp2
  2562 1BF9 A0 04			ldy #PLY.DIR-DATAORIGIN
  2563 1BFB B1 12			lda (:bp2),y
  2564 1BFD 85 58			sta T0B
  2565
  2566 				; optimize OK (ai.inc), line = 103
  2567
  2568 1BFF AD 7D 2C			lda PLAYER1.ISALIVE
  2569 1C02 0D 85 2C			ora PLAYER2.ISALIVE
  2570 1C05 D0 03 4C AC 1C		jeq l_0B9B
  2571
  2572 				; optimize OK (ai.inc), line = 105
  2573
  2574 1C0A AD 7D 2C			lda PLAYER1.ISALIVE
  2575 1C0D F0 0F			jeq l_0BA8
  2576 1C0F AD 59 2C			lda PLAYER1
  2577 1C12 8D 55 2C			sta TMPPLY
  2578 1C15 AD 5A 2C			lda PLAYER1+1
  2579 1C18 8D 56 2C			sta TMPPLY+1
  2580 1C1B 4C 2A 1C			jmp l_0BB7
  2581 1C1E			l_0BA8
  2582 1C1E AD 5B 2C			lda PLAYER2
  2583 1C21 8D 55 2C			sta TMPPLY
  2584 1C24 AD 5C 2C			lda PLAYER2+1
  2585 1C27 8D 56 2C			sta TMPPLY+1
  2586 1C2A			l_0BB7
  2587
  2588 				; optimize OK (ai.inc), line = 107
  2589
  2590 1C2A AC 53 2C 84 12 AC + 	mwy PLY :bp2
  2591 1C34 A0 01			ldy #PLY.Y-DATAORIGIN
  2592 1C36 B1 12			lda (:bp2),y
  2593 1C38 85 21			sta :STACKORIGIN+9
  2594 1C3A AC 55 2C 84 12 AC + 	mwy TMPPLY :bp2
  2595 1C44 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  2596 1C46 B1 12			lda (:bp2),y
  2597 1C48 C5 21			cmp :STACKORIGIN+9
  2598 1C4A B0 07			jcs l_0BD0
  2599 1C4C A9 01			lda #$01
  2600 1C4E 85 58			sta T0B
  2601 1C50 4C 57 1C			jmp l_0BDE
  2602 1C53			l_0BD0
  2603 1C53 A9 02			lda #$02
  2604 1C55 85 58			sta T0B
  2605 1C57			l_0BDE
  2606
  2607 				; optimize OK (ai.inc), line = 108
  2608
  2609 1C57 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  2610 1C61 A0 01			ldy #PLY.Y-DATAORIGIN
  2611 1C63 B1 12			lda (:bp2),y
  2612 1C65 85 21			sta :STACKORIGIN+9
  2613 1C67 AC 55 2C 84 12 AC + 	mwy TMPPLY :bp2
  2614 1C71 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  2615 1C73 B1 12			lda (:bp2),y
  2616 1C75 C5 21			cmp :STACKORIGIN+9
  2617 1C77 F0 06			jeq l_0C08x
  2618 1C79 A5 5C			lda AVAILDIR
  2619 1C7B 25 58			and T0B
  2620 1C7D D0 2D			jne l_0C08
  2621 1C7F			l_0C08x
  2622
  2623 				; optimize OK (ai.inc), line = 109
  2624
  2625 1C7F AC 53 2C 84 12 AC + 	mwy PLY :bp2
  2626 1C89 A0 00			ldy #PLY.X-DATAORIGIN
  2627 1C8B B1 12			lda (:bp2),y
  2628 1C8D 85 21			sta :STACKORIGIN+9
  2629 1C8F AC 55 2C 84 12 AC + 	mwy TMPPLY :bp2
  2630 1C99 A0 00			ldy #TMPPLY.X-DATAORIGIN
  2631 1C9B B1 12			lda (:bp2),y
  2632 1C9D C5 21			cmp :STACKORIGIN+9
  2633 1C9F B0 07			jcs l_0C1D
  2634 1CA1 A9 04			lda #$04
  2635 1CA3 85 58			sta T0B
  2636 1CA5 4C AC 1C			jmp l_0C2B
  2637 1CA8			l_0C1D
  2638 1CA8 A9 08			lda #$08
  2639 1CAA 85 58			sta T0B
  2640 1CAC			l_0C2B
  2641 1CAC			l_0C08
  2642 1CAC			l_0B9B
  2643
  2644 				; optimize OK (ai.inc), line = 113
  2645
  2646 1CAC A5 5C			lda AVAILDIR
  2647 1CAE 25 58			and T0B
  2648 1CB0 F0 07			jeq l_0C4B
  2649 1CB2 A5 58			lda T0B
  2650 1CB4 85 5B			sta NEWDIR
  2651 1CB6 4C BC 1C			jmp l_0C5B
  2652 1CB9			l_0C4B
  2653
  2654 				; optimize FAIL ('AISAPPER', ai.inc), line = 114
  2655
  2656 1CB9 20 95 19			jsr AISAPPER
  2657 1CBC			l_0C5B
  2658 1CBC			@exit
  2659 					.ifdef @new
  2660 					lda <@VarData
  2661 					sta :ztmp
  2662 					lda >@VarData
  2663 					ldy #@VarDataSize-1
  2664 					jmp @FreeMem
  2665 					els
  2666 1CBC 60				rts						; ret
  2667 					eif
  2668 				.endl
  2669
  2670 1CBD			.local	AIMIRROR					; PROCEDURE
  2671
  2672 				; optimize OK (ai.inc), line = 122
  2673
  2674 1CBD AC 53 2C 84 12 AC + 	mwy PLY :bp2
  2675 1CC7 A0 04			ldy #PLY.DIR-DATAORIGIN
  2676 1CC9 B1 12			lda (:bp2),y
  2677 1CCB 85 58			sta T0B
  2678
  2679 				; optimize OK (ai.inc), line = 124
  2680
  2681 1CCD AD 7D 2C			lda PLAYER1.ISALIVE
  2682 1CD0 F0 2F			jeq l_0C72
  2683
  2684 				; optimize OK (ai.inc), line = 125
  2685
  2686 1CD2 AD 7A 2C			lda PLAYER1.DIR
  2687 1CD5 8D E9 30			sta @CASETMP_0008
  2688 1CD8 C9 01			cmp #$01
  2689 1CDA D0 07			jne l_0C7E
  2690 1CDC			@
  2691
  2692 				; optimize OK (ai.inc), line = 126
  2693
  2694 1CDC A9 02			lda #$02
  2695 1CDE 85 58			sta T0B
  2696
  2697 1CE0 4C 01 1D			jmp a_0008
  2698 1CE3			l_0C7E
  2699 1CE3 C9 02			cmp #$02
  2700 1CE5 D0 07			jne l_0C8B
  2701 1CE7			@
  2702
  2703 				; optimize OK (ai.inc), line = 127
  2704
  2705 1CE7 A9 01			lda #$01
  2706 1CE9 85 58			sta T0B
  2707
  2708 1CEB 4C 01 1D			jmp a_0008
  2709 1CEE			l_0C8B
  2710 1CEE C9 04			cmp #$04
  2711 1CF0 D0 07			jne l_0C98
  2712 1CF2			@
  2713
  2714 				; optimize OK (ai.inc), line = 128
  2715
  2716 1CF2 A9 08			lda #$08
  2717 1CF4 85 58			sta T0B
  2718
  2719 1CF6 4C 01 1D			jmp a_0008
  2720 1CF9			l_0C98
  2721 1CF9 C9 08			cmp #$08
  2722 1CFB D0 04			jne l_0CA5
  2723 1CFD			@
  2724
  2725 				; optimize OK (ai.inc), line = 129
  2726
  2727 1CFD A9 04			lda #$04
  2728 1CFF 85 58			sta T0B
  2729
  2730 1D01			l_0CA5
  2731 1D01			a_0008
  2732 1D01			l_0C72
  2733
  2734 				; optimize OK (ai.inc), line = 133
  2735
  2736 1D01 A5 5C			lda AVAILDIR
  2737 1D03 25 58			and T0B
  2738 1D05 F0 07			jeq l_0CCB
  2739 1D07 A5 58			lda T0B
  2740 1D09 85 5B			sta NEWDIR
  2741 1D0B 4C 11 1D			jmp l_0CDB
  2742 1D0E			l_0CCB
  2743
  2744 				; optimize FAIL ('AISAPPER', ai.inc), line = 134
  2745
  2746 1D0E 20 95 19			jsr AISAPPER
  2747 1D11			l_0CDB
  2748
  2749 				; ------------------------------------------------------------
  2750
  2751 = 30E9			@CASETMP_0008	= DATAORIGIN+$0485
  2752
  2753 = 30E9			@VarData	= @CASETMP_0008
  2754 = 0001			@VarDataSize	= 1
  2755
  2756 1D11			@exit
  2757 					.ifdef @new
  2758 					lda <@VarData
  2759 					sta :ztmp
  2760 					lda >@VarData
  2761 					ldy #@VarDataSize-1
  2762 					jmp @FreeMem
  2763 					els
  2764 1D11 60				rts						; ret
  2765 					eif
  2766 				.endl
  2767
  2768 1D12			.local	SETLEVEL00					; PROCEDURE
  2769
  2770 				; optimize OK (levels.inc), line = 5
  2771
  2772 1D12 A9 01			lda #$01
  2773 1D14 8D AE 2D			sta SETPLAYER.ISALIVE
  2774 1D17 A9 62			lda #$62
  2775 1D19 8D AD 2D			sta SETPLAYER.COLOUR
  2776 1D1C A9 00			lda #$00
  2777 1D1E 8D AC 2D			sta SETPLAYER.BRAIN
  2778 1D21 A9 08			lda #$08
  2779 1D23 8D AB 2D			sta SETPLAYER.DIR
  2780 1D26 A9 0C			lda #$0C
  2781 1D28 8D AA 2D			sta SETPLAYER.Y
  2782 1D2B A9 0A			lda #$0A
  2783 1D2D 8D A9 2D			sta SETPLAYER.X
  2784 1D30 AD 59 2C			lda PLAYER1
  2785 1D33 8D A7 2D			sta SETPLAYER.P
  2786 1D36 AD 5A 2C			lda PLAYER1+1
  2787 1D39 8D A8 2D			sta SETPLAYER.P+1
  2788 1D3C 20 4E 16			jsr SETPLAYER
  2789
  2790 				; optimize OK (levels.inc), line = 6
  2791
  2792 1D3F A9 01			lda #$01
  2793 1D41 8D AE 2D			sta SETPLAYER.ISALIVE
  2794 1D44 A9 5D			lda #$5D
  2795 1D46 8D AD 2D			sta SETPLAYER.COLOUR
  2796 1D49 A9 01			lda #$01
  2797 1D4B 8D AC 2D			sta SETPLAYER.BRAIN
  2798 1D4E A9 04			lda #$04
  2799 1D50 8D AB 2D			sta SETPLAYER.DIR
  2800 1D53 A9 0C			lda #$0C
  2801 1D55 8D AA 2D			sta SETPLAYER.Y
  2802 1D58 A9 1E			lda #$1E
  2803 1D5A 8D A9 2D			sta SETPLAYER.X
  2804 1D5D AD 5B 2C			lda PLAYER2
  2805 1D60 8D A7 2D			sta SETPLAYER.P
  2806 1D63 AD 5C 2C			lda PLAYER2+1
  2807 1D66 8D A8 2D			sta SETPLAYER.P+1
  2808 1D69 20 4E 16			jsr SETPLAYER
  2809
  2810 				; optimize FAIL (1, levels.inc), line = 8
  2811
  2812 1D6C E8				inx
  2813 1D6D A9 00 95 18			mva #$00 :STACKORIGIN,x
  2814 1D71 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2815 1D73 A9 06			lda #$06
  2816 1D75 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2817 1D78 A9 0A			lda #$0A
  2818 1D7A 8D A2 2D			sta CALCOBSTACLEADDR.X
  2819 1D7D 20 30 14			jsr CALCOBSTACLEADDR
  2820 1D80 B4 17			ldy :STACKORIGIN-1,x
  2821 1D82 B5 18			lda :STACKORIGIN,x
  2822 1D84 99 60 00			sta adr.OBSTACLES,y
  2823 1D87 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2824 1D89 99 61 00			sta adr.OBSTACLES+1,y
  2825 1D8C CA				dex
  2826 1D8D A9 02 95 18			mva #$02 :STACKORIGIN,x
  2827 1D91 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2828 1D95 A9 06			lda #$06
  2829 1D97 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2830 1D9A A9 1E			lda #$1E
  2831 1D9C 8D A2 2D			sta CALCOBSTACLEADDR.X
  2832 1D9F 20 30 14			jsr CALCOBSTACLEADDR
  2833 1DA2 B4 17			ldy :STACKORIGIN-1,x
  2834 1DA4 B5 18			lda :STACKORIGIN,x
  2835 1DA6 99 60 00			sta adr.OBSTACLES,y
  2836 1DA9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2837 1DAB 99 61 00			sta adr.OBSTACLES+1,y
  2838 1DAE CA				dex
  2839
  2840 				; optimize FAIL (1, levels.inc), line = 9
  2841
  2842 1DAF A9 04 95 18			mva #$04 :STACKORIGIN,x
  2843 1DB3 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2844 1DB7 A9 12			lda #$12
  2845 1DB9 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2846 1DBC A9 0A			lda #$0A
  2847 1DBE 8D A2 2D			sta CALCOBSTACLEADDR.X
  2848 1DC1 20 30 14			jsr CALCOBSTACLEADDR
  2849 1DC4 B4 17			ldy :STACKORIGIN-1,x
  2850 1DC6 B5 18			lda :STACKORIGIN,x
  2851 1DC8 99 60 00			sta adr.OBSTACLES,y
  2852 1DCB B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2853 1DCD 99 61 00			sta adr.OBSTACLES+1,y
  2854 1DD0 CA				dex
  2855 1DD1 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2856 1DD5 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2857 1DD9 A9 12			lda #$12
  2858 1DDB 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2859 1DDE A9 1E			lda #$1E
  2860 1DE0 8D A2 2D			sta CALCOBSTACLEADDR.X
  2861 1DE3 20 30 14			jsr CALCOBSTACLEADDR
  2862 1DE6 B4 17			ldy :STACKORIGIN-1,x
  2863 1DE8 B5 18			lda :STACKORIGIN,x
  2864 1DEA 99 60 00			sta adr.OBSTACLES,y
  2865 1DED B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2866 1DEF 99 61 00			sta adr.OBSTACLES+1,y
  2867 1DF2 CA				dex
  2868
  2869 				; optimize FAIL (1, levels.inc), line = 10
  2870
  2871 1DF3 A9 08 95 18			mva #$08 :STACKORIGIN,x
  2872 1DF7 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2873 1DFB A9 02			lda #$02
  2874 1DFD 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2875 1E00 A9 14			lda #$14
  2876 1E02 8D A2 2D			sta CALCOBSTACLEADDR.X
  2877 1E05 20 30 14			jsr CALCOBSTACLEADDR
  2878 1E08 B4 17			ldy :STACKORIGIN-1,x
  2879 1E0A B5 18			lda :STACKORIGIN,x
  2880 1E0C 99 60 00			sta adr.OBSTACLES,y
  2881 1E0F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2882 1E11 99 61 00			sta adr.OBSTACLES+1,y
  2883 1E14 CA				dex
  2884 1E15 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2885 1E19 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2886 1E1D A9 16			lda #$16
  2887 1E1F 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2888 1E22 A9 14			lda #$14
  2889 1E24 8D A2 2D			sta CALCOBSTACLEADDR.X
  2890 1E27 20 30 14			jsr CALCOBSTACLEADDR
  2891 1E2A B4 17			ldy :STACKORIGIN-1,x
  2892 1E2C B5 18			lda :STACKORIGIN,x
  2893 1E2E 99 60 00			sta adr.OBSTACLES,y
  2894 1E31 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2895 1E33 99 61 00			sta adr.OBSTACLES+1,y
  2896 1E36 CA				dex
  2897 1E37 CA				dex
  2898 1E38			@exit
  2899 					.ifdef @new
  2900 					lda <@VarData
  2901 					sta :ztmp
  2902 					lda >@VarData
  2903 					ldy #@VarDataSize-1
  2904 					jmp @FreeMem
  2905 					els
  2906 1E38 60				rts						; ret
  2907 					eif
  2908 				.endl
  2909
  2910 1E39			.local	SETLEVEL01					; PROCEDURE
  2911
  2912 				; optimize OK (levels.inc), line = 17
  2913
  2914 1E39 A9 01			lda #$01
  2915 1E3B 8D AE 2D			sta SETPLAYER.ISALIVE
  2916 1E3E A9 62			lda #$62
  2917 1E40 8D AD 2D			sta SETPLAYER.COLOUR
  2918 1E43 A9 00			lda #$00
  2919 1E45 8D AC 2D			sta SETPLAYER.BRAIN
  2920 1E48 A9 08			lda #$08
  2921 1E4A 8D AB 2D			sta SETPLAYER.DIR
  2922 1E4D A9 0C			lda #$0C
  2923 1E4F 8D AA 2D			sta SETPLAYER.Y
  2924 1E52 A9 0A			lda #$0A
  2925 1E54 8D A9 2D			sta SETPLAYER.X
  2926 1E57 AD 59 2C			lda PLAYER1
  2927 1E5A 8D A7 2D			sta SETPLAYER.P
  2928 1E5D AD 5A 2C			lda PLAYER1+1
  2929 1E60 8D A8 2D			sta SETPLAYER.P+1
  2930 1E63 20 4E 16			jsr SETPLAYER
  2931
  2932 				; optimize OK (levels.inc), line = 18
  2933
  2934 1E66 A9 01			lda #$01
  2935 1E68 8D AE 2D			sta SETPLAYER.ISALIVE
  2936 1E6B A9 5D			lda #$5D
  2937 1E6D 8D AD 2D			sta SETPLAYER.COLOUR
  2938 1E70 A9 01			lda #$01
  2939 1E72 8D AC 2D			sta SETPLAYER.BRAIN
  2940 1E75 A9 04			lda #$04
  2941 1E77 8D AB 2D			sta SETPLAYER.DIR
  2942 1E7A A9 0C			lda #$0C
  2943 1E7C 8D AA 2D			sta SETPLAYER.Y
  2944 1E7F A9 1E			lda #$1E
  2945 1E81 8D A9 2D			sta SETPLAYER.X
  2946 1E84 AD 5B 2C			lda PLAYER2
  2947 1E87 8D A7 2D			sta SETPLAYER.P
  2948 1E8A AD 5C 2C			lda PLAYER2+1
  2949 1E8D 8D A8 2D			sta SETPLAYER.P+1
  2950 1E90 20 4E 16			jsr SETPLAYER
  2951
  2952 				; optimize FAIL (1, levels.inc), line = 20
  2953
  2954 1E93 E8				inx
  2955 1E94 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2956 1E98 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2957 1E9A A9 06			lda #$06
  2958 1E9C 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2959 1E9F A9 0A			lda #$0A
  2960 1EA1 8D A2 2D			sta CALCOBSTACLEADDR.X
  2961 1EA4 20 30 14			jsr CALCOBSTACLEADDR
  2962 1EA7 B4 17			ldy :STACKORIGIN-1,x
  2963 1EA9 B5 18			lda :STACKORIGIN,x
  2964 1EAB 99 60 00			sta adr.OBSTACLES,y
  2965 1EAE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2966 1EB0 99 61 00			sta adr.OBSTACLES+1,y
  2967 1EB3 CA				dex
  2968 1EB4 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2969 1EB8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2970 1EBC A9 06			lda #$06
  2971 1EBE 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2972 1EC1 A9 1E			lda #$1E
  2973 1EC3 8D A2 2D			sta CALCOBSTACLEADDR.X
  2974 1EC6 20 30 14			jsr CALCOBSTACLEADDR
  2975 1EC9 B4 17			ldy :STACKORIGIN-1,x
  2976 1ECB B5 18			lda :STACKORIGIN,x
  2977 1ECD 99 60 00			sta adr.OBSTACLES,y
  2978 1ED0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2979 1ED2 99 61 00			sta adr.OBSTACLES+1,y
  2980 1ED5 CA				dex
  2981
  2982 				; optimize FAIL (1, levels.inc), line = 21
  2983
  2984 1ED6 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2985 1EDA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2986 1EDE A9 12			lda #$12
  2987 1EE0 8D A3 2D			sta CALCOBSTACLEADDR.Y
  2988 1EE3 A9 0A			lda #$0A
  2989 1EE5 8D A2 2D			sta CALCOBSTACLEADDR.X
  2990 1EE8 20 30 14			jsr CALCOBSTACLEADDR
  2991 1EEB B4 17			ldy :STACKORIGIN-1,x
  2992 1EED B5 18			lda :STACKORIGIN,x
  2993 1EEF 99 60 00			sta adr.OBSTACLES,y
  2994 1EF2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2995 1EF4 99 61 00			sta adr.OBSTACLES+1,y
  2996 1EF7 CA				dex
  2997 1EF8 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2998 1EFC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2999 1F00 A9 12			lda #$12
  3000 1F02 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3001 1F05 A9 1E			lda #$1E
  3002 1F07 8D A2 2D			sta CALCOBSTACLEADDR.X
  3003 1F0A 20 30 14			jsr CALCOBSTACLEADDR
  3004 1F0D B4 17			ldy :STACKORIGIN-1,x
  3005 1F0F B5 18			lda :STACKORIGIN,x
  3006 1F11 99 60 00			sta adr.OBSTACLES,y
  3007 1F14 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3008 1F16 99 61 00			sta adr.OBSTACLES+1,y
  3009 1F19 CA				dex
  3010
  3011 				; optimize FAIL (1, levels.inc), line = 22
  3012
  3013 1F1A A9 08 95 18			mva #$08 :STACKORIGIN,x
  3014 1F1E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3015 1F22 A9 02			lda #$02
  3016 1F24 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3017 1F27 A9 14			lda #$14
  3018 1F29 8D A2 2D			sta CALCOBSTACLEADDR.X
  3019 1F2C 20 30 14			jsr CALCOBSTACLEADDR
  3020 1F2F B4 17			ldy :STACKORIGIN-1,x
  3021 1F31 B5 18			lda :STACKORIGIN,x
  3022 1F33 99 60 00			sta adr.OBSTACLES,y
  3023 1F36 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3024 1F38 99 61 00			sta adr.OBSTACLES+1,y
  3025 1F3B CA				dex
  3026 1F3C A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3027 1F40 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3028 1F44 A9 16			lda #$16
  3029 1F46 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3030 1F49 A9 14			lda #$14
  3031 1F4B 8D A2 2D			sta CALCOBSTACLEADDR.X
  3032 1F4E 20 30 14			jsr CALCOBSTACLEADDR
  3033 1F51 B4 17			ldy :STACKORIGIN-1,x
  3034 1F53 B5 18			lda :STACKORIGIN,x
  3035 1F55 99 60 00			sta adr.OBSTACLES,y
  3036 1F58 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3037 1F5A 99 61 00			sta adr.OBSTACLES+1,y
  3038 1F5D CA				dex
  3039 1F5E CA				dex
  3040 1F5F			@exit
  3041 					.ifdef @new
  3042 					lda <@VarData
  3043 					sta :ztmp
  3044 					lda >@VarData
  3045 					ldy #@VarDataSize-1
  3046 					jmp @FreeMem
  3047 					els
  3048 1F5F 60				rts						; ret
  3049 					eif
  3050 				.endl
  3051
  3052 1F60			.local	SETLEVEL02					; PROCEDURE
  3053
  3054 				; optimize OK (levels.inc), line = 29
  3055
  3056 1F60 A9 01			lda #$01
  3057 1F62 8D AE 2D			sta SETPLAYER.ISALIVE
  3058 1F65 A9 62			lda #$62
  3059 1F67 8D AD 2D			sta SETPLAYER.COLOUR
  3060 1F6A A9 00			lda #$00
  3061 1F6C 8D AC 2D			sta SETPLAYER.BRAIN
  3062 1F6F A9 08			lda #$08
  3063 1F71 8D AB 2D			sta SETPLAYER.DIR
  3064 1F74 A9 0C			lda #$0C
  3065 1F76 8D AA 2D			sta SETPLAYER.Y
  3066 1F79 A9 0A			lda #$0A
  3067 1F7B 8D A9 2D			sta SETPLAYER.X
  3068 1F7E AD 59 2C			lda PLAYER1
  3069 1F81 8D A7 2D			sta SETPLAYER.P
  3070 1F84 AD 5A 2C			lda PLAYER1+1
  3071 1F87 8D A8 2D			sta SETPLAYER.P+1
  3072 1F8A 20 4E 16			jsr SETPLAYER
  3073
  3074 				; optimize OK (levels.inc), line = 30
  3075
  3076 1F8D A9 01			lda #$01
  3077 1F8F 8D AE 2D			sta SETPLAYER.ISALIVE
  3078 1F92 A9 5D			lda #$5D
  3079 1F94 8D AD 2D			sta SETPLAYER.COLOUR
  3080 1F97 A9 03			lda #$03
  3081 1F99 8D AC 2D			sta SETPLAYER.BRAIN
  3082 1F9C A9 04			lda #$04
  3083 1F9E 8D AB 2D			sta SETPLAYER.DIR
  3084 1FA1 A9 0C			lda #$0C
  3085 1FA3 8D AA 2D			sta SETPLAYER.Y
  3086 1FA6 A9 1E			lda #$1E
  3087 1FA8 8D A9 2D			sta SETPLAYER.X
  3088 1FAB AD 5B 2C			lda PLAYER2
  3089 1FAE 8D A7 2D			sta SETPLAYER.P
  3090 1FB1 AD 5C 2C			lda PLAYER2+1
  3091 1FB4 8D A8 2D			sta SETPLAYER.P+1
  3092 1FB7 20 4E 16			jsr SETPLAYER
  3093
  3094 				; optimize FAIL (1, levels.inc), line = 32
  3095
  3096 1FBA E8				inx
  3097 1FBB A9 00 95 18			mva #$00 :STACKORIGIN,x
  3098 1FBF 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3099 1FC1 A9 06			lda #$06
  3100 1FC3 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3101 1FC6 A9 0A			lda #$0A
  3102 1FC8 8D A2 2D			sta CALCOBSTACLEADDR.X
  3103 1FCB 20 30 14			jsr CALCOBSTACLEADDR
  3104 1FCE B4 17			ldy :STACKORIGIN-1,x
  3105 1FD0 B5 18			lda :STACKORIGIN,x
  3106 1FD2 99 60 00			sta adr.OBSTACLES,y
  3107 1FD5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3108 1FD7 99 61 00			sta adr.OBSTACLES+1,y
  3109 1FDA CA				dex
  3110 1FDB A9 02 95 18			mva #$02 :STACKORIGIN,x
  3111 1FDF A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3112 1FE3 A9 06			lda #$06
  3113 1FE5 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3114 1FE8 A9 1E			lda #$1E
  3115 1FEA 8D A2 2D			sta CALCOBSTACLEADDR.X
  3116 1FED 20 30 14			jsr CALCOBSTACLEADDR
  3117 1FF0 B4 17			ldy :STACKORIGIN-1,x
  3118 1FF2 B5 18			lda :STACKORIGIN,x
  3119 1FF4 99 60 00			sta adr.OBSTACLES,y
  3120 1FF7 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3121 1FF9 99 61 00			sta adr.OBSTACLES+1,y
  3122 1FFC CA				dex
  3123
  3124 				; optimize FAIL (1, levels.inc), line = 33
  3125
  3126 1FFD A9 04 95 18			mva #$04 :STACKORIGIN,x
  3127 2001 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3128 2005 A9 12			lda #$12
  3129 2007 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3130 200A A9 0A			lda #$0A
  3131 200C 8D A2 2D			sta CALCOBSTACLEADDR.X
  3132 200F 20 30 14			jsr CALCOBSTACLEADDR
  3133 2012 B4 17			ldy :STACKORIGIN-1,x
  3134 2014 B5 18			lda :STACKORIGIN,x
  3135 2016 99 60 00			sta adr.OBSTACLES,y
  3136 2019 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3137 201B 99 61 00			sta adr.OBSTACLES+1,y
  3138 201E CA				dex
  3139 201F A9 06 95 18			mva #$06 :STACKORIGIN,x
  3140 2023 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3141 2027 A9 12			lda #$12
  3142 2029 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3143 202C A9 1E			lda #$1E
  3144 202E 8D A2 2D			sta CALCOBSTACLEADDR.X
  3145 2031 20 30 14			jsr CALCOBSTACLEADDR
  3146 2034 B4 17			ldy :STACKORIGIN-1,x
  3147 2036 B5 18			lda :STACKORIGIN,x
  3148 2038 99 60 00			sta adr.OBSTACLES,y
  3149 203B B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3150 203D 99 61 00			sta adr.OBSTACLES+1,y
  3151 2040 CA				dex
  3152
  3153 				; optimize FAIL (1, levels.inc), line = 34
  3154
  3155 2041 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3156 2045 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3157 2049 A9 02			lda #$02
  3158 204B 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3159 204E A9 14			lda #$14
  3160 2050 8D A2 2D			sta CALCOBSTACLEADDR.X
  3161 2053 20 30 14			jsr CALCOBSTACLEADDR
  3162 2056 B4 17			ldy :STACKORIGIN-1,x
  3163 2058 B5 18			lda :STACKORIGIN,x
  3164 205A 99 60 00			sta adr.OBSTACLES,y
  3165 205D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3166 205F 99 61 00			sta adr.OBSTACLES+1,y
  3167 2062 CA				dex
  3168 2063 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3169 2067 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3170 206B A9 16			lda #$16
  3171 206D 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3172 2070 A9 14			lda #$14
  3173 2072 8D A2 2D			sta CALCOBSTACLEADDR.X
  3174 2075 20 30 14			jsr CALCOBSTACLEADDR
  3175 2078 B4 17			ldy :STACKORIGIN-1,x
  3176 207A B5 18			lda :STACKORIGIN,x
  3177 207C 99 60 00			sta adr.OBSTACLES,y
  3178 207F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3179 2081 99 61 00			sta adr.OBSTACLES+1,y
  3180 2084 CA				dex
  3181 2085 CA				dex
  3182 2086			@exit
  3183 					.ifdef @new
  3184 					lda <@VarData
  3185 					sta :ztmp
  3186 					lda >@VarData
  3187 					ldy #@VarDataSize-1
  3188 					jmp @FreeMem
  3189 					els
  3190 2086 60				rts						; ret
  3191 					eif
  3192 				.endl
  3193
  3194 2087			.local	SETLEVEL03					; PROCEDURE
  3195
  3196 				; optimize OK (levels.inc), line = 41
  3197
  3198 2087 A9 01			lda #$01
  3199 2089 8D AE 2D			sta SETPLAYER.ISALIVE
  3200 208C A9 62			lda #$62
  3201 208E 8D AD 2D			sta SETPLAYER.COLOUR
  3202 2091 A9 00			lda #$00
  3203 2093 8D AC 2D			sta SETPLAYER.BRAIN
  3204 2096 A9 08			lda #$08
  3205 2098 8D AB 2D			sta SETPLAYER.DIR
  3206 209B A9 0C			lda #$0C
  3207 209D 8D AA 2D			sta SETPLAYER.Y
  3208 20A0 A9 0A			lda #$0A
  3209 20A2 8D A9 2D			sta SETPLAYER.X
  3210 20A5 AD 59 2C			lda PLAYER1
  3211 20A8 8D A7 2D			sta SETPLAYER.P
  3212 20AB AD 5A 2C			lda PLAYER1+1
  3213 20AE 8D A8 2D			sta SETPLAYER.P+1
  3214 20B1 20 4E 16			jsr SETPLAYER
  3215
  3216 				; optimize OK (levels.inc), line = 42
  3217
  3218 20B4 A9 01			lda #$01
  3219 20B6 8D AE 2D			sta SETPLAYER.ISALIVE
  3220 20B9 A9 5D			lda #$5D
  3221 20BB 8D AD 2D			sta SETPLAYER.COLOUR
  3222 20BE A9 02			lda #$02
  3223 20C0 8D AC 2D			sta SETPLAYER.BRAIN
  3224 20C3 A9 04			lda #$04
  3225 20C5 8D AB 2D			sta SETPLAYER.DIR
  3226 20C8 A9 0C			lda #$0C
  3227 20CA 8D AA 2D			sta SETPLAYER.Y
  3228 20CD A9 1E			lda #$1E
  3229 20CF 8D A9 2D			sta SETPLAYER.X
  3230 20D2 AD 5B 2C			lda PLAYER2
  3231 20D5 8D A7 2D			sta SETPLAYER.P
  3232 20D8 AD 5C 2C			lda PLAYER2+1
  3233 20DB 8D A8 2D			sta SETPLAYER.P+1
  3234 20DE 20 4E 16			jsr SETPLAYER
  3235
  3236 				; optimize FAIL (1, levels.inc), line = 44
  3237
  3238 20E1 E8				inx
  3239 20E2 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3240 20E6 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3241 20E8 A9 06			lda #$06
  3242 20EA 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3243 20ED A9 0A			lda #$0A
  3244 20EF 8D A2 2D			sta CALCOBSTACLEADDR.X
  3245 20F2 20 30 14			jsr CALCOBSTACLEADDR
  3246 20F5 B4 17			ldy :STACKORIGIN-1,x
  3247 20F7 B5 18			lda :STACKORIGIN,x
  3248 20F9 99 60 00			sta adr.OBSTACLES,y
  3249 20FC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3250 20FE 99 61 00			sta adr.OBSTACLES+1,y
  3251 2101 CA				dex
  3252 2102 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3253 2106 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3254 210A A9 06			lda #$06
  3255 210C 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3256 210F A9 1E			lda #$1E
  3257 2111 8D A2 2D			sta CALCOBSTACLEADDR.X
  3258 2114 20 30 14			jsr CALCOBSTACLEADDR
  3259 2117 B4 17			ldy :STACKORIGIN-1,x
  3260 2119 B5 18			lda :STACKORIGIN,x
  3261 211B 99 60 00			sta adr.OBSTACLES,y
  3262 211E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3263 2120 99 61 00			sta adr.OBSTACLES+1,y
  3264 2123 CA				dex
  3265
  3266 				; optimize FAIL (1, levels.inc), line = 45
  3267
  3268 2124 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3269 2128 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3270 212C A9 12			lda #$12
  3271 212E 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3272 2131 A9 0A			lda #$0A
  3273 2133 8D A2 2D			sta CALCOBSTACLEADDR.X
  3274 2136 20 30 14			jsr CALCOBSTACLEADDR
  3275 2139 B4 17			ldy :STACKORIGIN-1,x
  3276 213B B5 18			lda :STACKORIGIN,x
  3277 213D 99 60 00			sta adr.OBSTACLES,y
  3278 2140 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3279 2142 99 61 00			sta adr.OBSTACLES+1,y
  3280 2145 CA				dex
  3281 2146 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3282 214A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3283 214E A9 12			lda #$12
  3284 2150 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3285 2153 A9 1E			lda #$1E
  3286 2155 8D A2 2D			sta CALCOBSTACLEADDR.X
  3287 2158 20 30 14			jsr CALCOBSTACLEADDR
  3288 215B B4 17			ldy :STACKORIGIN-1,x
  3289 215D B5 18			lda :STACKORIGIN,x
  3290 215F 99 60 00			sta adr.OBSTACLES,y
  3291 2162 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3292 2164 99 61 00			sta adr.OBSTACLES+1,y
  3293 2167 CA				dex
  3294
  3295 				; optimize FAIL (1, levels.inc), line = 46
  3296
  3297 2168 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3298 216C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3299 2170 A9 0C			lda #$0C
  3300 2172 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3301 2175 A9 01			lda #$01
  3302 2177 8D A2 2D			sta CALCOBSTACLEADDR.X
  3303 217A 20 30 14			jsr CALCOBSTACLEADDR
  3304 217D B4 17			ldy :STACKORIGIN-1,x
  3305 217F B5 18			lda :STACKORIGIN,x
  3306 2181 99 60 00			sta adr.OBSTACLES,y
  3307 2184 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3308 2186 99 61 00			sta adr.OBSTACLES+1,y
  3309 2189 CA				dex
  3310 218A A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3311 218E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3312 2192 A9 02			lda #$02
  3313 2194 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3314 2197 A9 14			lda #$14
  3315 2199 8D A2 2D			sta CALCOBSTACLEADDR.X
  3316 219C 20 30 14			jsr CALCOBSTACLEADDR
  3317 219F B4 17			ldy :STACKORIGIN-1,x
  3318 21A1 B5 18			lda :STACKORIGIN,x
  3319 21A3 99 60 00			sta adr.OBSTACLES,y
  3320 21A6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3321 21A8 99 61 00			sta adr.OBSTACLES+1,y
  3322 21AB CA				dex
  3323
  3324 				; optimize FAIL (1, levels.inc), line = 47
  3325
  3326 21AC A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3327 21B0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3328 21B4 A9 16			lda #$16
  3329 21B6 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3330 21B9 A9 14			lda #$14
  3331 21BB 8D A2 2D			sta CALCOBSTACLEADDR.X
  3332 21BE 20 30 14			jsr CALCOBSTACLEADDR
  3333 21C1 B4 17			ldy :STACKORIGIN-1,x
  3334 21C3 B5 18			lda :STACKORIGIN,x
  3335 21C5 99 60 00			sta adr.OBSTACLES,y
  3336 21C8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3337 21CA 99 61 00			sta adr.OBSTACLES+1,y
  3338 21CD CA				dex
  3339 21CE CA				dex
  3340 21CF			@exit
  3341 					.ifdef @new
  3342 					lda <@VarData
  3343 					sta :ztmp
  3344 					lda >@VarData
  3345 					ldy #@VarDataSize-1
  3346 					jmp @FreeMem
  3347 					els
  3348 21CF 60				rts						; ret
  3349 					eif
  3350 				.endl
  3351
  3352 21D0			.local	SETLEVEL04					; PROCEDURE
  3353
  3354 				; optimize OK (levels.inc), line = 54
  3355
  3356 21D0 A9 01			lda #$01
  3357 21D2 8D AE 2D			sta SETPLAYER.ISALIVE
  3358 21D5 A9 62			lda #$62
  3359 21D7 8D AD 2D			sta SETPLAYER.COLOUR
  3360 21DA A9 00			lda #$00
  3361 21DC 8D AC 2D			sta SETPLAYER.BRAIN
  3362 21DF A9 04			lda #$04
  3363 21E1 8D AB 2D			sta SETPLAYER.DIR
  3364 21E4 A9 0C			lda #$0C
  3365 21E6 8D AA 2D			sta SETPLAYER.Y
  3366 21E9 A9 12			lda #$12
  3367 21EB 8D A9 2D			sta SETPLAYER.X
  3368 21EE AD 59 2C			lda PLAYER1
  3369 21F1 8D A7 2D			sta SETPLAYER.P
  3370 21F4 AD 5A 2C			lda PLAYER1+1
  3371 21F7 8D A8 2D			sta SETPLAYER.P+1
  3372 21FA 20 4E 16			jsr SETPLAYER
  3373
  3374 				; optimize OK (levels.inc), line = 55
  3375
  3376 21FD A9 01			lda #$01
  3377 21FF 8D AE 2D			sta SETPLAYER.ISALIVE
  3378 2202 A9 5D			lda #$5D
  3379 2204 8D AD 2D			sta SETPLAYER.COLOUR
  3380 2207 A9 04			lda #$04
  3381 2209 8D AC 2D			sta SETPLAYER.BRAIN
  3382 220C A9 08			lda #$08
  3383 220E 8D AB 2D			sta SETPLAYER.DIR
  3384 2211 A9 0C			lda #$0C
  3385 2213 8D AA 2D			sta SETPLAYER.Y
  3386 2216 A9 16			lda #$16
  3387 2218 8D A9 2D			sta SETPLAYER.X
  3388 221B AD 5B 2C			lda PLAYER2
  3389 221E 8D A7 2D			sta SETPLAYER.P
  3390 2221 AD 5C 2C			lda PLAYER2+1
  3391 2224 8D A8 2D			sta SETPLAYER.P+1
  3392 2227 20 4E 16			jsr SETPLAYER
  3393
  3394 				; optimize FAIL (1, levels.inc), line = 57
  3395
  3396 222A E8				inx
  3397 222B A9 00 95 18			mva #$00 :STACKORIGIN,x
  3398 222F 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3399 2231 A9 06			lda #$06
  3400 2233 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3401 2236 A9 0A			lda #$0A
  3402 2238 8D A2 2D			sta CALCOBSTACLEADDR.X
  3403 223B 20 30 14			jsr CALCOBSTACLEADDR
  3404 223E B4 17			ldy :STACKORIGIN-1,x
  3405 2240 B5 18			lda :STACKORIGIN,x
  3406 2242 99 60 00			sta adr.OBSTACLES,y
  3407 2245 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3408 2247 99 61 00			sta adr.OBSTACLES+1,y
  3409 224A CA				dex
  3410 224B A9 02 95 18			mva #$02 :STACKORIGIN,x
  3411 224F A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3412 2253 A9 06			lda #$06
  3413 2255 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3414 2258 A9 1E			lda #$1E
  3415 225A 8D A2 2D			sta CALCOBSTACLEADDR.X
  3416 225D 20 30 14			jsr CALCOBSTACLEADDR
  3417 2260 B4 17			ldy :STACKORIGIN-1,x
  3418 2262 B5 18			lda :STACKORIGIN,x
  3419 2264 99 60 00			sta adr.OBSTACLES,y
  3420 2267 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3421 2269 99 61 00			sta adr.OBSTACLES+1,y
  3422 226C CA				dex
  3423
  3424 				; optimize FAIL (1, levels.inc), line = 58
  3425
  3426 226D A9 04 95 18			mva #$04 :STACKORIGIN,x
  3427 2271 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3428 2275 A9 12			lda #$12
  3429 2277 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3430 227A A9 0A			lda #$0A
  3431 227C 8D A2 2D			sta CALCOBSTACLEADDR.X
  3432 227F 20 30 14			jsr CALCOBSTACLEADDR
  3433 2282 B4 17			ldy :STACKORIGIN-1,x
  3434 2284 B5 18			lda :STACKORIGIN,x
  3435 2286 99 60 00			sta adr.OBSTACLES,y
  3436 2289 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3437 228B 99 61 00			sta adr.OBSTACLES+1,y
  3438 228E CA				dex
  3439 228F A9 06 95 18			mva #$06 :STACKORIGIN,x
  3440 2293 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3441 2297 A9 12			lda #$12
  3442 2299 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3443 229C A9 1E			lda #$1E
  3444 229E 8D A2 2D			sta CALCOBSTACLEADDR.X
  3445 22A1 20 30 14			jsr CALCOBSTACLEADDR
  3446 22A4 B4 17			ldy :STACKORIGIN-1,x
  3447 22A6 B5 18			lda :STACKORIGIN,x
  3448 22A8 99 60 00			sta adr.OBSTACLES,y
  3449 22AB B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3450 22AD 99 61 00			sta adr.OBSTACLES+1,y
  3451 22B0 CA				dex
  3452
  3453 				; optimize FAIL (1, levels.inc), line = 59
  3454
  3455 22B1 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3456 22B5 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3457 22B9 A9 0C			lda #$0C
  3458 22BB 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3459 22BE A9 01			lda #$01
  3460 22C0 8D A2 2D			sta CALCOBSTACLEADDR.X
  3461 22C3 20 30 14			jsr CALCOBSTACLEADDR
  3462 22C6 B4 17			ldy :STACKORIGIN-1,x
  3463 22C8 B5 18			lda :STACKORIGIN,x
  3464 22CA 99 60 00			sta adr.OBSTACLES,y
  3465 22CD B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3466 22CF 99 61 00			sta adr.OBSTACLES+1,y
  3467 22D2 CA				dex
  3468 22D3 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3469 22D7 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3470 22DB A9 02			lda #$02
  3471 22DD 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3472 22E0 A9 14			lda #$14
  3473 22E2 8D A2 2D			sta CALCOBSTACLEADDR.X
  3474 22E5 20 30 14			jsr CALCOBSTACLEADDR
  3475 22E8 B4 17			ldy :STACKORIGIN-1,x
  3476 22EA B5 18			lda :STACKORIGIN,x
  3477 22EC 99 60 00			sta adr.OBSTACLES,y
  3478 22EF B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3479 22F1 99 61 00			sta adr.OBSTACLES+1,y
  3480 22F4 CA				dex
  3481
  3482 				; optimize FAIL (1, levels.inc), line = 60
  3483
  3484 22F5 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3485 22F9 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3486 22FD A9 16			lda #$16
  3487 22FF 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3488 2302 A9 14			lda #$14
  3489 2304 8D A2 2D			sta CALCOBSTACLEADDR.X
  3490 2307 20 30 14			jsr CALCOBSTACLEADDR
  3491 230A B4 17			ldy :STACKORIGIN-1,x
  3492 230C B5 18			lda :STACKORIGIN,x
  3493 230E 99 60 00			sta adr.OBSTACLES,y
  3494 2311 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3495 2313 99 61 00			sta adr.OBSTACLES+1,y
  3496 2316 CA				dex
  3497 2317 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3498 231B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3499 231F A9 0C			lda #$0C
  3500 2321 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3501 2324 A9 14			lda #$14
  3502 2326 8D A2 2D			sta CALCOBSTACLEADDR.X
  3503 2329 20 30 14			jsr CALCOBSTACLEADDR
  3504 232C B4 17			ldy :STACKORIGIN-1,x
  3505 232E B5 18			lda :STACKORIGIN,x
  3506 2330 99 60 00			sta adr.OBSTACLES,y
  3507 2333 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3508 2335 99 61 00			sta adr.OBSTACLES+1,y
  3509 2338 CA				dex
  3510 2339 CA				dex
  3511 233A			@exit
  3512 					.ifdef @new
  3513 					lda <@VarData
  3514 					sta :ztmp
  3515 					lda >@VarData
  3516 					ldy #@VarDataSize-1
  3517 					jmp @FreeMem
  3518 					els
  3519 233A 60				rts						; ret
  3520 					eif
  3521 				.endl
  3522
  3523 233B			.local	SETLEVEL05					; PROCEDURE
  3524
  3525 				; optimize OK (levels.inc), line = 67
  3526
  3527 233B A9 01			lda #$01
  3528 233D 8D AE 2D			sta SETPLAYER.ISALIVE
  3529 2340 A9 62			lda #$62
  3530 2342 8D AD 2D			sta SETPLAYER.COLOUR
  3531 2345 A9 00			lda #$00
  3532 2347 8D AC 2D			sta SETPLAYER.BRAIN
  3533 234A A9 08			lda #$08
  3534 234C 8D AB 2D			sta SETPLAYER.DIR
  3535 234F A9 0C			lda #$0C
  3536 2351 8D AA 2D			sta SETPLAYER.Y
  3537 2354 A9 0A			lda #$0A
  3538 2356 8D A9 2D			sta SETPLAYER.X
  3539 2359 AD 59 2C			lda PLAYER1
  3540 235C 8D A7 2D			sta SETPLAYER.P
  3541 235F AD 5A 2C			lda PLAYER1+1
  3542 2362 8D A8 2D			sta SETPLAYER.P+1
  3543 2365 20 4E 16			jsr SETPLAYER
  3544
  3545 				; optimize OK (levels.inc), line = 68
  3546
  3547 2368 A9 01			lda #$01
  3548 236A 8D AE 2D			sta SETPLAYER.ISALIVE
  3549 236D A9 5D			lda #$5D
  3550 236F 8D AD 2D			sta SETPLAYER.COLOUR
  3551 2372 A9 04			lda #$04
  3552 2374 8D AC 2D			sta SETPLAYER.BRAIN
  3553 2377 8D AB 2D			sta SETPLAYER.DIR
  3554 237A A9 0C			lda #$0C
  3555 237C 8D AA 2D			sta SETPLAYER.Y
  3556 237F A9 1E			lda #$1E
  3557 2381 8D A9 2D			sta SETPLAYER.X
  3558 2384 AD 5B 2C			lda PLAYER2
  3559 2387 8D A7 2D			sta SETPLAYER.P
  3560 238A AD 5C 2C			lda PLAYER2+1
  3561 238D 8D A8 2D			sta SETPLAYER.P+1
  3562 2390 20 4E 16			jsr SETPLAYER
  3563
  3564 				; optimize OK (levels.inc), line = 69
  3565
  3566 2393 A9 01			lda #$01
  3567 2395 8D AE 2D			sta SETPLAYER.ISALIVE
  3568 2398 A9 71			lda #$71
  3569 239A 8D AD 2D			sta SETPLAYER.COLOUR
  3570 239D A9 03			lda #$03
  3571 239F 8D AC 2D			sta SETPLAYER.BRAIN
  3572 23A2 A9 02			lda #$02
  3573 23A4 8D AB 2D			sta SETPLAYER.DIR
  3574 23A7 A9 04			lda #$04
  3575 23A9 8D AA 2D			sta SETPLAYER.Y
  3576 23AC A9 14			lda #$14
  3577 23AE 8D A9 2D			sta SETPLAYER.X
  3578 23B1 AD 5D 2C			lda PLAYER3
  3579 23B4 8D A7 2D			sta SETPLAYER.P
  3580 23B7 AD 5E 2C			lda PLAYER3+1
  3581 23BA 8D A8 2D			sta SETPLAYER.P+1
  3582 23BD 20 4E 16			jsr SETPLAYER
  3583
  3584 				; optimize OK (levels.inc), line = 70
  3585
  3586 23C0 A9 01			lda #$01
  3587 23C2 8D AE 2D			sta SETPLAYER.ISALIVE
  3588 23C5 A9 55			lda #$55
  3589 23C7 8D AD 2D			sta SETPLAYER.COLOUR
  3590 23CA A9 02			lda #$02
  3591 23CC 8D AC 2D			sta SETPLAYER.BRAIN
  3592 23CF A9 01			lda #$01
  3593 23D1 8D AB 2D			sta SETPLAYER.DIR
  3594 23D4 A9 12			lda #$12
  3595 23D6 8D AA 2D			sta SETPLAYER.Y
  3596 23D9 A9 14			lda #$14
  3597 23DB 8D A9 2D			sta SETPLAYER.X
  3598 23DE AD 5F 2C			lda PLAYER4
  3599 23E1 8D A7 2D			sta SETPLAYER.P
  3600 23E4 AD 60 2C			lda PLAYER4+1
  3601 23E7 8D A8 2D			sta SETPLAYER.P+1
  3602 23EA 20 4E 16			jsr SETPLAYER
  3603
  3604 				; optimize FAIL (1, levels.inc), line = 72
  3605
  3606 23ED E8				inx
  3607 23EE A9 00 95 18			mva #$00 :STACKORIGIN,x
  3608 23F2 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3609 23F4 A9 06			lda #$06
  3610 23F6 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3611 23F9 A9 0A			lda #$0A
  3612 23FB 8D A2 2D			sta CALCOBSTACLEADDR.X
  3613 23FE 20 30 14			jsr CALCOBSTACLEADDR
  3614 2401 B4 17			ldy :STACKORIGIN-1,x
  3615 2403 B5 18			lda :STACKORIGIN,x
  3616 2405 99 60 00			sta adr.OBSTACLES,y
  3617 2408 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3618 240A 99 61 00			sta adr.OBSTACLES+1,y
  3619 240D CA				dex
  3620 240E A9 02 95 18			mva #$02 :STACKORIGIN,x
  3621 2412 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3622 2416 A9 06			lda #$06
  3623 2418 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3624 241B A9 1E			lda #$1E
  3625 241D 8D A2 2D			sta CALCOBSTACLEADDR.X
  3626 2420 20 30 14			jsr CALCOBSTACLEADDR
  3627 2423 B4 17			ldy :STACKORIGIN-1,x
  3628 2425 B5 18			lda :STACKORIGIN,x
  3629 2427 99 60 00			sta adr.OBSTACLES,y
  3630 242A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3631 242C 99 61 00			sta adr.OBSTACLES+1,y
  3632 242F CA				dex
  3633
  3634 				; optimize FAIL (1, levels.inc), line = 73
  3635
  3636 2430 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3637 2434 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3638 2438 A9 12			lda #$12
  3639 243A 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3640 243D A9 0A			lda #$0A
  3641 243F 8D A2 2D			sta CALCOBSTACLEADDR.X
  3642 2442 20 30 14			jsr CALCOBSTACLEADDR
  3643 2445 B4 17			ldy :STACKORIGIN-1,x
  3644 2447 B5 18			lda :STACKORIGIN,x
  3645 2449 99 60 00			sta adr.OBSTACLES,y
  3646 244C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3647 244E 99 61 00			sta adr.OBSTACLES+1,y
  3648 2451 CA				dex
  3649 2452 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3650 2456 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3651 245A A9 12			lda #$12
  3652 245C 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3653 245F A9 1E			lda #$1E
  3654 2461 8D A2 2D			sta CALCOBSTACLEADDR.X
  3655 2464 20 30 14			jsr CALCOBSTACLEADDR
  3656 2467 B4 17			ldy :STACKORIGIN-1,x
  3657 2469 B5 18			lda :STACKORIGIN,x
  3658 246B 99 60 00			sta adr.OBSTACLES,y
  3659 246E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3660 2470 99 61 00			sta adr.OBSTACLES+1,y
  3661 2473 CA				dex
  3662
  3663 				; optimize FAIL (1, levels.inc), line = 74
  3664
  3665 2474 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3666 2478 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3667 247C A9 0C			lda #$0C
  3668 247E 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3669 2481 A9 01			lda #$01
  3670 2483 8D A2 2D			sta CALCOBSTACLEADDR.X
  3671 2486 20 30 14			jsr CALCOBSTACLEADDR
  3672 2489 B4 17			ldy :STACKORIGIN-1,x
  3673 248B B5 18			lda :STACKORIGIN,x
  3674 248D 99 60 00			sta adr.OBSTACLES,y
  3675 2490 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3676 2492 99 61 00			sta adr.OBSTACLES+1,y
  3677 2495 CA				dex
  3678 2496 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3679 249A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3680 249E A9 02			lda #$02
  3681 24A0 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3682 24A3 A9 14			lda #$14
  3683 24A5 8D A2 2D			sta CALCOBSTACLEADDR.X
  3684 24A8 20 30 14			jsr CALCOBSTACLEADDR
  3685 24AB B4 17			ldy :STACKORIGIN-1,x
  3686 24AD B5 18			lda :STACKORIGIN,x
  3687 24AF 99 60 00			sta adr.OBSTACLES,y
  3688 24B2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3689 24B4 99 61 00			sta adr.OBSTACLES+1,y
  3690 24B7 CA				dex
  3691
  3692 				; optimize FAIL (1, levels.inc), line = 75
  3693
  3694 24B8 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3695 24BC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3696 24C0 A9 16			lda #$16
  3697 24C2 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3698 24C5 A9 14			lda #$14
  3699 24C7 8D A2 2D			sta CALCOBSTACLEADDR.X
  3700 24CA 20 30 14			jsr CALCOBSTACLEADDR
  3701 24CD B4 17			ldy :STACKORIGIN-1,x
  3702 24CF B5 18			lda :STACKORIGIN,x
  3703 24D1 99 60 00			sta adr.OBSTACLES,y
  3704 24D4 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3705 24D6 99 61 00			sta adr.OBSTACLES+1,y
  3706 24D9 CA				dex
  3707 24DA CA				dex
  3708 24DB			@exit
  3709 					.ifdef @new
  3710 					lda <@VarData
  3711 					sta :ztmp
  3712 					lda >@VarData
  3713 					ldy #@VarDataSize-1
  3714 					jmp @FreeMem
  3715 					els
  3716 24DB 60				rts						; ret
  3717 					eif
  3718 				.endl
  3719
  3720 24DC			.local	SETLEVEL06					; PROCEDURE
  3721
  3722 				; optimize OK (levels.inc), line = 82
  3723
  3724 24DC A9 01			lda #$01
  3725 24DE 8D AE 2D			sta SETPLAYER.ISALIVE
  3726 24E1 A9 62			lda #$62
  3727 24E3 8D AD 2D			sta SETPLAYER.COLOUR
  3728 24E6 A9 00			lda #$00
  3729 24E8 8D AC 2D			sta SETPLAYER.BRAIN
  3730 24EB A9 04			lda #$04
  3731 24ED 8D AB 2D			sta SETPLAYER.DIR
  3732 24F0 A9 0C			lda #$0C
  3733 24F2 8D AA 2D			sta SETPLAYER.Y
  3734 24F5 A9 12			lda #$12
  3735 24F7 8D A9 2D			sta SETPLAYER.X
  3736 24FA AD 59 2C			lda PLAYER1
  3737 24FD 8D A7 2D			sta SETPLAYER.P
  3738 2500 AD 5A 2C			lda PLAYER1+1
  3739 2503 8D A8 2D			sta SETPLAYER.P+1
  3740 2506 20 4E 16			jsr SETPLAYER
  3741
  3742 				; optimize OK (levels.inc), line = 83
  3743
  3744 2509 A9 01			lda #$01
  3745 250B 8D AE 2D			sta SETPLAYER.ISALIVE
  3746 250E A9 5D			lda #$5D
  3747 2510 8D AD 2D			sta SETPLAYER.COLOUR
  3748 2513 A9 02			lda #$02
  3749 2515 8D AC 2D			sta SETPLAYER.BRAIN
  3750 2518 A9 08			lda #$08
  3751 251A 8D AB 2D			sta SETPLAYER.DIR
  3752 251D A9 0C			lda #$0C
  3753 251F 8D AA 2D			sta SETPLAYER.Y
  3754 2522 A9 16			lda #$16
  3755 2524 8D A9 2D			sta SETPLAYER.X
  3756 2527 AD 5B 2C			lda PLAYER2
  3757 252A 8D A7 2D			sta SETPLAYER.P
  3758 252D AD 5C 2C			lda PLAYER2+1
  3759 2530 8D A8 2D			sta SETPLAYER.P+1
  3760 2533 20 4E 16			jsr SETPLAYER
  3761
  3762 				; optimize OK (levels.inc), line = 84
  3763
  3764 2536 A9 01			lda #$01
  3765 2538 8D AE 2D			sta SETPLAYER.ISALIVE
  3766 253B A9 71			lda #$71
  3767 253D 8D AD 2D			sta SETPLAYER.COLOUR
  3768 2540 A9 02			lda #$02
  3769 2542 8D AC 2D			sta SETPLAYER.BRAIN
  3770 2545 8D AB 2D			sta SETPLAYER.DIR
  3771 2548 A9 06			lda #$06
  3772 254A 8D AA 2D			sta SETPLAYER.Y
  3773 254D 8D A9 2D			sta SETPLAYER.X
  3774 2550 AD 5D 2C			lda PLAYER3
  3775 2553 8D A7 2D			sta SETPLAYER.P
  3776 2556 AD 5E 2C			lda PLAYER3+1
  3777 2559 8D A8 2D			sta SETPLAYER.P+1
  3778 255C 20 4E 16			jsr SETPLAYER
  3779
  3780 				; optimize OK (levels.inc), line = 85
  3781
  3782 255F A9 01			lda #$01
  3783 2561 8D AE 2D			sta SETPLAYER.ISALIVE
  3784 2564 A9 55			lda #$55
  3785 2566 8D AD 2D			sta SETPLAYER.COLOUR
  3786 2569 A9 03			lda #$03
  3787 256B 8D AC 2D			sta SETPLAYER.BRAIN
  3788 256E A9 08			lda #$08
  3789 2570 8D AB 2D			sta SETPLAYER.DIR
  3790 2573 A9 12			lda #$12
  3791 2575 8D AA 2D			sta SETPLAYER.Y
  3792 2578 A9 24			lda #$24
  3793 257A 8D A9 2D			sta SETPLAYER.X
  3794 257D AD 5F 2C			lda PLAYER4
  3795 2580 8D A7 2D			sta SETPLAYER.P
  3796 2583 AD 60 2C			lda PLAYER4+1
  3797 2586 8D A8 2D			sta SETPLAYER.P+1
  3798 2589 20 4E 16			jsr SETPLAYER
  3799
  3800 				; optimize FAIL (1, levels.inc), line = 87
  3801
  3802 258C E8				inx
  3803 258D A9 00 95 18			mva #$00 :STACKORIGIN,x
  3804 2591 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3805 2593 A9 06			lda #$06
  3806 2595 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3807 2598 A9 0A			lda #$0A
  3808 259A 8D A2 2D			sta CALCOBSTACLEADDR.X
  3809 259D 20 30 14			jsr CALCOBSTACLEADDR
  3810 25A0 B4 17			ldy :STACKORIGIN-1,x
  3811 25A2 B5 18			lda :STACKORIGIN,x
  3812 25A4 99 60 00			sta adr.OBSTACLES,y
  3813 25A7 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3814 25A9 99 61 00			sta adr.OBSTACLES+1,y
  3815 25AC CA				dex
  3816 25AD A9 02 95 18			mva #$02 :STACKORIGIN,x
  3817 25B1 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3818 25B5 A9 06			lda #$06
  3819 25B7 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3820 25BA A9 1E			lda #$1E
  3821 25BC 8D A2 2D			sta CALCOBSTACLEADDR.X
  3822 25BF 20 30 14			jsr CALCOBSTACLEADDR
  3823 25C2 B4 17			ldy :STACKORIGIN-1,x
  3824 25C4 B5 18			lda :STACKORIGIN,x
  3825 25C6 99 60 00			sta adr.OBSTACLES,y
  3826 25C9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3827 25CB 99 61 00			sta adr.OBSTACLES+1,y
  3828 25CE CA				dex
  3829
  3830 				; optimize FAIL (1, levels.inc), line = 88
  3831
  3832 25CF A9 04 95 18			mva #$04 :STACKORIGIN,x
  3833 25D3 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3834 25D7 A9 12			lda #$12
  3835 25D9 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3836 25DC A9 0A			lda #$0A
  3837 25DE 8D A2 2D			sta CALCOBSTACLEADDR.X
  3838 25E1 20 30 14			jsr CALCOBSTACLEADDR
  3839 25E4 B4 17			ldy :STACKORIGIN-1,x
  3840 25E6 B5 18			lda :STACKORIGIN,x
  3841 25E8 99 60 00			sta adr.OBSTACLES,y
  3842 25EB B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3843 25ED 99 61 00			sta adr.OBSTACLES+1,y
  3844 25F0 CA				dex
  3845 25F1 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3846 25F5 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3847 25F9 A9 12			lda #$12
  3848 25FB 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3849 25FE A9 1E			lda #$1E
  3850 2600 8D A2 2D			sta CALCOBSTACLEADDR.X
  3851 2603 20 30 14			jsr CALCOBSTACLEADDR
  3852 2606 B4 17			ldy :STACKORIGIN-1,x
  3853 2608 B5 18			lda :STACKORIGIN,x
  3854 260A 99 60 00			sta adr.OBSTACLES,y
  3855 260D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3856 260F 99 61 00			sta adr.OBSTACLES+1,y
  3857 2612 CA				dex
  3858
  3859 				; optimize FAIL (1, levels.inc), line = 89
  3860
  3861 2613 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3862 2617 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3863 261B A9 0C			lda #$0C
  3864 261D 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3865 2620 A9 01			lda #$01
  3866 2622 8D A2 2D			sta CALCOBSTACLEADDR.X
  3867 2625 20 30 14			jsr CALCOBSTACLEADDR
  3868 2628 B4 17			ldy :STACKORIGIN-1,x
  3869 262A B5 18			lda :STACKORIGIN,x
  3870 262C 99 60 00			sta adr.OBSTACLES,y
  3871 262F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3872 2631 99 61 00			sta adr.OBSTACLES+1,y
  3873 2634 CA				dex
  3874 2635 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3875 2639 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3876 263D A9 02			lda #$02
  3877 263F 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3878 2642 A9 14			lda #$14
  3879 2644 8D A2 2D			sta CALCOBSTACLEADDR.X
  3880 2647 20 30 14			jsr CALCOBSTACLEADDR
  3881 264A B4 17			ldy :STACKORIGIN-1,x
  3882 264C B5 18			lda :STACKORIGIN,x
  3883 264E 99 60 00			sta adr.OBSTACLES,y
  3884 2651 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3885 2653 99 61 00			sta adr.OBSTACLES+1,y
  3886 2656 CA				dex
  3887
  3888 				; optimize FAIL (1, levels.inc), line = 90
  3889
  3890 2657 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3891 265B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3892 265F A9 16			lda #$16
  3893 2661 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3894 2664 A9 14			lda #$14
  3895 2666 8D A2 2D			sta CALCOBSTACLEADDR.X
  3896 2669 20 30 14			jsr CALCOBSTACLEADDR
  3897 266C B4 17			ldy :STACKORIGIN-1,x
  3898 266E B5 18			lda :STACKORIGIN,x
  3899 2670 99 60 00			sta adr.OBSTACLES,y
  3900 2673 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3901 2675 99 61 00			sta adr.OBSTACLES+1,y
  3902 2678 CA				dex
  3903 2679 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3904 267D A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3905 2681 A9 0C			lda #$0C
  3906 2683 8D A3 2D			sta CALCOBSTACLEADDR.Y
  3907 2686 A9 14			lda #$14
  3908 2688 8D A2 2D			sta CALCOBSTACLEADDR.X
  3909 268B 20 30 14			jsr CALCOBSTACLEADDR
  3910 268E B4 17			ldy :STACKORIGIN-1,x
  3911 2690 B5 18			lda :STACKORIGIN,x
  3912 2692 99 60 00			sta adr.OBSTACLES,y
  3913 2695 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3914 2697 99 61 00			sta adr.OBSTACLES+1,y
  3915 269A CA				dex
  3916 269B CA				dex
  3917 269C			@exit
  3918 					.ifdef @new
  3919 					lda <@VarData
  3920 					sta :ztmp
  3921 					lda >@VarData
  3922 					ldy #@VarDataSize-1
  3923 					jmp @FreeMem
  3924 					els
  3925 269C 60				rts						; ret
  3926 					eif
  3927 				.endl
  3928
  3929 269D			.local	SETLEVEL07					; PROCEDURE
  3930
  3931 				; optimize OK (levels.inc), line = 97
  3932
  3933 269D A9 01			lda #$01
  3934 269F 8D AE 2D			sta SETPLAYER.ISALIVE
  3935 26A2 A9 62			lda #$62
  3936 26A4 8D AD 2D			sta SETPLAYER.COLOUR
  3937 26A7 A9 00			lda #$00
  3938 26A9 8D AC 2D			sta SETPLAYER.BRAIN
  3939 26AC A9 04			lda #$04
  3940 26AE 8D AB 2D			sta SETPLAYER.DIR
  3941 26B1 A9 0C			lda #$0C
  3942 26B3 8D AA 2D			sta SETPLAYER.Y
  3943 26B6 A9 12			lda #$12
  3944 26B8 8D A9 2D			sta SETPLAYER.X
  3945 26BB AD 59 2C			lda PLAYER1
  3946 26BE 8D A7 2D			sta SETPLAYER.P
  3947 26C1 AD 5A 2C			lda PLAYER1+1
  3948 26C4 8D A8 2D			sta SETPLAYER.P+1
  3949 26C7 20 4E 16			jsr SETPLAYER
  3950
  3951 				; optimize OK (levels.inc), line = 98
  3952
  3953 26CA A9 01			lda #$01
  3954 26CC 8D AE 2D			sta SETPLAYER.ISALIVE
  3955 26CF A9 5D			lda #$5D
  3956 26D1 8D AD 2D			sta SETPLAYER.COLOUR
  3957 26D4 A9 03			lda #$03
  3958 26D6 8D AC 2D			sta SETPLAYER.BRAIN
  3959 26D9 A9 08			lda #$08
  3960 26DB 8D AB 2D			sta SETPLAYER.DIR
  3961 26DE A9 17			lda #$17
  3962 26E0 8D AA 2D			sta SETPLAYER.Y
  3963 26E3 A9 01			lda #$01
  3964 26E5 8D A9 2D			sta SETPLAYER.X
  3965 26E8 AD 5B 2C			lda PLAYER2
  3966 26EB 8D A7 2D			sta SETPLAYER.P
  3967 26EE AD 5C 2C			lda PLAYER2+1
  3968 26F1 8D A8 2D			sta SETPLAYER.P+1
  3969 26F4 20 4E 16			jsr SETPLAYER
  3970
  3971 				; optimize OK (levels.inc), line = 99
  3972
  3973 26F7 A9 01			lda #$01
  3974 26F9 8D AE 2D			sta SETPLAYER.ISALIVE
  3975 26FC A9 71			lda #$71
  3976 26FE 8D AD 2D			sta SETPLAYER.COLOUR
  3977 2701 A9 03			lda #$03
  3978 2703 8D AC 2D			sta SETPLAYER.BRAIN
  3979 2706 A9 02			lda #$02
  3980 2708 8D AB 2D			sta SETPLAYER.DIR
  3981 270B A9 04			lda #$04
  3982 270D 8D AA 2D			sta SETPLAYER.Y
  3983 2710 A9 1E			lda #$1E
  3984 2712 8D A9 2D			sta SETPLAYER.X
  3985 2715 AD 5D 2C			lda PLAYER3
  3986 2718 8D A7 2D			sta SETPLAYER.P
  3987 271B AD 5E 2C			lda PLAYER3+1
  3988 271E 8D A8 2D			sta SETPLAYER.P+1
  3989 2721 20 4E 16			jsr SETPLAYER
  3990
  3991 				; optimize OK (levels.inc), line = 100
  3992
  3993 2724 A9 01			lda #$01
  3994 2726 8D AE 2D			sta SETPLAYER.ISALIVE
  3995 2729 A9 55			lda #$55
  3996 272B 8D AD 2D			sta SETPLAYER.COLOUR
  3997 272E A9 02			lda #$02
  3998 2730 8D AC 2D			sta SETPLAYER.BRAIN
  3999 2733 A9 01			lda #$01
  4000 2735 8D AB 2D			sta SETPLAYER.DIR
  4001 2738 A9 15			lda #$15
  4002 273A 8D AA 2D			sta SETPLAYER.Y
  4003 273D A9 24			lda #$24
  4004 273F 8D A9 2D			sta SETPLAYER.X
  4005 2742 AD 5F 2C			lda PLAYER4
  4006 2745 8D A7 2D			sta SETPLAYER.P
  4007 2748 AD 60 2C			lda PLAYER4+1
  4008 274B 8D A8 2D			sta SETPLAYER.P+1
  4009 274E 20 4E 16			jsr SETPLAYER
  4010
  4011 				; optimize FAIL (1, levels.inc), line = 102
  4012
  4013 2751 E8				inx
  4014 2752 A9 00 95 18			mva #$00 :STACKORIGIN,x
  4015 2756 95 28			sta :STACKORIGIN+STACKWIDTH,x
  4016 2758 A9 06			lda #$06
  4017 275A 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4018 275D A9 0A			lda #$0A
  4019 275F 8D A2 2D			sta CALCOBSTACLEADDR.X
  4020 2762 20 30 14			jsr CALCOBSTACLEADDR
  4021 2765 B4 17			ldy :STACKORIGIN-1,x
  4022 2767 B5 18			lda :STACKORIGIN,x
  4023 2769 99 60 00			sta adr.OBSTACLES,y
  4024 276C B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4025 276E 99 61 00			sta adr.OBSTACLES+1,y
  4026 2771 CA				dex
  4027 2772 A9 02 95 18			mva #$02 :STACKORIGIN,x
  4028 2776 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4029 277A A9 06			lda #$06
  4030 277C 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4031 277F A9 1E			lda #$1E
  4032 2781 8D A2 2D			sta CALCOBSTACLEADDR.X
  4033 2784 20 30 14			jsr CALCOBSTACLEADDR
  4034 2787 B4 17			ldy :STACKORIGIN-1,x
  4035 2789 B5 18			lda :STACKORIGIN,x
  4036 278B 99 60 00			sta adr.OBSTACLES,y
  4037 278E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4038 2790 99 61 00			sta adr.OBSTACLES+1,y
  4039 2793 CA				dex
  4040
  4041 				; optimize FAIL (1, levels.inc), line = 103
  4042
  4043 2794 A9 04 95 18			mva #$04 :STACKORIGIN,x
  4044 2798 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4045 279C A9 12			lda #$12
  4046 279E 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4047 27A1 A9 0A			lda #$0A
  4048 27A3 8D A2 2D			sta CALCOBSTACLEADDR.X
  4049 27A6 20 30 14			jsr CALCOBSTACLEADDR
  4050 27A9 B4 17			ldy :STACKORIGIN-1,x
  4051 27AB B5 18			lda :STACKORIGIN,x
  4052 27AD 99 60 00			sta adr.OBSTACLES,y
  4053 27B0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4054 27B2 99 61 00			sta adr.OBSTACLES+1,y
  4055 27B5 CA				dex
  4056 27B6 A9 06 95 18			mva #$06 :STACKORIGIN,x
  4057 27BA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4058 27BE A9 12			lda #$12
  4059 27C0 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4060 27C3 A9 1E			lda #$1E
  4061 27C5 8D A2 2D			sta CALCOBSTACLEADDR.X
  4062 27C8 20 30 14			jsr CALCOBSTACLEADDR
  4063 27CB B4 17			ldy :STACKORIGIN-1,x
  4064 27CD B5 18			lda :STACKORIGIN,x
  4065 27CF 99 60 00			sta adr.OBSTACLES,y
  4066 27D2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4067 27D4 99 61 00			sta adr.OBSTACLES+1,y
  4068 27D7 CA				dex
  4069
  4070 				; optimize FAIL (1, levels.inc), line = 104
  4071
  4072 27D8 A9 08 95 18			mva #$08 :STACKORIGIN,x
  4073 27DC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4074 27E0 A9 0C			lda #$0C
  4075 27E2 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4076 27E5 A9 01			lda #$01
  4077 27E7 8D A2 2D			sta CALCOBSTACLEADDR.X
  4078 27EA 20 30 14			jsr CALCOBSTACLEADDR
  4079 27ED B4 17			ldy :STACKORIGIN-1,x
  4080 27EF B5 18			lda :STACKORIGIN,x
  4081 27F1 99 60 00			sta adr.OBSTACLES,y
  4082 27F4 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4083 27F6 99 61 00			sta adr.OBSTACLES+1,y
  4084 27F9 CA				dex
  4085 27FA A9 0A 95 18			mva #$0A :STACKORIGIN,x
  4086 27FE A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4087 2802 A9 02			lda #$02
  4088 2804 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4089 2807 A9 14			lda #$14
  4090 2809 8D A2 2D			sta CALCOBSTACLEADDR.X
  4091 280C 20 30 14			jsr CALCOBSTACLEADDR
  4092 280F B4 17			ldy :STACKORIGIN-1,x
  4093 2811 B5 18			lda :STACKORIGIN,x
  4094 2813 99 60 00			sta adr.OBSTACLES,y
  4095 2816 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4096 2818 99 61 00			sta adr.OBSTACLES+1,y
  4097 281B CA				dex
  4098
  4099 				; optimize FAIL (1, levels.inc), line = 105
  4100
  4101 281C A9 0C 95 18			mva #$0C :STACKORIGIN,x
  4102 2820 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4103 2824 A9 16			lda #$16
  4104 2826 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4105 2829 A9 14			lda #$14
  4106 282B 8D A2 2D			sta CALCOBSTACLEADDR.X
  4107 282E 20 30 14			jsr CALCOBSTACLEADDR
  4108 2831 B4 17			ldy :STACKORIGIN-1,x
  4109 2833 B5 18			lda :STACKORIGIN,x
  4110 2835 99 60 00			sta adr.OBSTACLES,y
  4111 2838 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4112 283A 99 61 00			sta adr.OBSTACLES+1,y
  4113 283D CA				dex
  4114 283E A9 0E 95 18			mva #$0E :STACKORIGIN,x
  4115 2842 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4116 2846 A9 0C			lda #$0C
  4117 2848 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4118 284B A9 14			lda #$14
  4119 284D 8D A2 2D			sta CALCOBSTACLEADDR.X
  4120 2850 20 30 14			jsr CALCOBSTACLEADDR
  4121 2853 B4 17			ldy :STACKORIGIN-1,x
  4122 2855 B5 18			lda :STACKORIGIN,x
  4123 2857 99 60 00			sta adr.OBSTACLES,y
  4124 285A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4125 285C 99 61 00			sta adr.OBSTACLES+1,y
  4126 285F CA				dex
  4127 2860 CA				dex
  4128 2861			@exit
  4129 					.ifdef @new
  4130 					lda <@VarData
  4131 					sta :ztmp
  4132 					lda >@VarData
  4133 					ldy #@VarDataSize-1
  4134 					jmp @FreeMem
  4135 					els
  4136 2861 60				rts						; ret
  4137 					eif
  4138 				.endl
  4139
  4140 2862			.local	SETLEVEL08					; PROCEDURE
  4141
  4142 				; optimize OK (levels.inc), line = 112
  4143
  4144 2862 A9 01			lda #$01
  4145 2864 8D AE 2D			sta SETPLAYER.ISALIVE
  4146 2867 A9 62			lda #$62
  4147 2869 8D AD 2D			sta SETPLAYER.COLOUR
  4148 286C A9 00			lda #$00
  4149 286E 8D AC 2D			sta SETPLAYER.BRAIN
  4150 2871 A9 08			lda #$08
  4151 2873 8D AB 2D			sta SETPLAYER.DIR
  4152 2876 A9 17			lda #$17
  4153 2878 8D AA 2D			sta SETPLAYER.Y
  4154 287B A9 01			lda #$01
  4155 287D 8D A9 2D			sta SETPLAYER.X
  4156 2880 AD 59 2C			lda PLAYER1
  4157 2883 8D A7 2D			sta SETPLAYER.P
  4158 2886 AD 5A 2C			lda PLAYER1+1
  4159 2889 8D A8 2D			sta SETPLAYER.P+1
  4160 288C 20 4E 16			jsr SETPLAYER
  4161
  4162 				; optimize OK (levels.inc), line = 113
  4163
  4164 288F A9 01			lda #$01
  4165 2891 8D AE 2D			sta SETPLAYER.ISALIVE
  4166 2894 A9 5D			lda #$5D
  4167 2896 8D AD 2D			sta SETPLAYER.COLOUR
  4168 2899 A9 03			lda #$03
  4169 289B 8D AC 2D			sta SETPLAYER.BRAIN
  4170 289E A9 04			lda #$04
  4171 28A0 8D AB 2D			sta SETPLAYER.DIR
  4172 28A3 A9 17			lda #$17
  4173 28A5 8D AA 2D			sta SETPLAYER.Y
  4174 28A8 A9 26			lda #$26
  4175 28AA 8D A9 2D			sta SETPLAYER.X
  4176 28AD AD 5B 2C			lda PLAYER2
  4177 28B0 8D A7 2D			sta SETPLAYER.P
  4178 28B3 AD 5C 2C			lda PLAYER2+1
  4179 28B6 8D A8 2D			sta SETPLAYER.P+1
  4180 28B9 20 4E 16			jsr SETPLAYER
  4181
  4182 				; optimize OK (levels.inc), line = 114
  4183
  4184 28BC A9 01			lda #$01
  4185 28BE 8D AE 2D			sta SETPLAYER.ISALIVE
  4186 28C1 A9 71			lda #$71
  4187 28C3 8D AD 2D			sta SETPLAYER.COLOUR
  4188 28C6 A9 02			lda #$02
  4189 28C8 8D AC 2D			sta SETPLAYER.BRAIN
  4190 28CB 8D AB 2D			sta SETPLAYER.DIR
  4191 28CE A9 01			lda #$01
  4192 28D0 8D AA 2D			sta SETPLAYER.Y
  4193 28D3 A9 0A			lda #$0A
  4194 28D5 8D A9 2D			sta SETPLAYER.X
  4195 28D8 AD 5D 2C			lda PLAYER3
  4196 28DB 8D A7 2D			sta SETPLAYER.P
  4197 28DE AD 5E 2C			lda PLAYER3+1
  4198 28E1 8D A8 2D			sta SETPLAYER.P+1
  4199 28E4 20 4E 16			jsr SETPLAYER
  4200
  4201 				; optimize OK (levels.inc), line = 115
  4202
  4203 28E7 A9 01			lda #$01
  4204 28E9 8D AE 2D			sta SETPLAYER.ISALIVE
  4205 28EC A9 55			lda #$55
  4206 28EE 8D AD 2D			sta SETPLAYER.COLOUR
  4207 28F1 A9 04			lda #$04
  4208 28F3 8D AC 2D			sta SETPLAYER.BRAIN
  4209 28F6 8D AB 2D			sta SETPLAYER.DIR
  4210 28F9 A9 01			lda #$01
  4211 28FB 8D AA 2D			sta SETPLAYER.Y
  4212 28FE A9 26			lda #$26
  4213 2900 8D A9 2D			sta SETPLAYER.X
  4214 2903 AD 5F 2C			lda PLAYER4
  4215 2906 8D A7 2D			sta SETPLAYER.P
  4216 2909 AD 60 2C			lda PLAYER4+1
  4217 290C 8D A8 2D			sta SETPLAYER.P+1
  4218 290F 20 4E 16			jsr SETPLAYER
  4219
  4220 				; optimize FAIL (1, levels.inc), line = 117
  4221
  4222 2912 E8				inx
  4223 2913 A9 00 95 18			mva #$00 :STACKORIGIN,x
  4224 2917 95 28			sta :STACKORIGIN+STACKWIDTH,x
  4225 2919 A9 06			lda #$06
  4226 291B 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4227 291E A9 0A			lda #$0A
  4228 2920 8D A2 2D			sta CALCOBSTACLEADDR.X
  4229 2923 20 30 14			jsr CALCOBSTACLEADDR
  4230 2926 B4 17			ldy :STACKORIGIN-1,x
  4231 2928 B5 18			lda :STACKORIGIN,x
  4232 292A 99 60 00			sta adr.OBSTACLES,y
  4233 292D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4234 292F 99 61 00			sta adr.OBSTACLES+1,y
  4235 2932 CA				dex
  4236 2933 A9 02 95 18			mva #$02 :STACKORIGIN,x
  4237 2937 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4238 293B A9 06			lda #$06
  4239 293D 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4240 2940 A9 1E			lda #$1E
  4241 2942 8D A2 2D			sta CALCOBSTACLEADDR.X
  4242 2945 20 30 14			jsr CALCOBSTACLEADDR
  4243 2948 B4 17			ldy :STACKORIGIN-1,x
  4244 294A B5 18			lda :STACKORIGIN,x
  4245 294C 99 60 00			sta adr.OBSTACLES,y
  4246 294F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4247 2951 99 61 00			sta adr.OBSTACLES+1,y
  4248 2954 CA				dex
  4249
  4250 				; optimize FAIL (1, levels.inc), line = 118
  4251
  4252 2955 A9 04 95 18			mva #$04 :STACKORIGIN,x
  4253 2959 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4254 295D A9 12			lda #$12
  4255 295F 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4256 2962 A9 0A			lda #$0A
  4257 2964 8D A2 2D			sta CALCOBSTACLEADDR.X
  4258 2967 20 30 14			jsr CALCOBSTACLEADDR
  4259 296A B4 17			ldy :STACKORIGIN-1,x
  4260 296C B5 18			lda :STACKORIGIN,x
  4261 296E 99 60 00			sta adr.OBSTACLES,y
  4262 2971 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4263 2973 99 61 00			sta adr.OBSTACLES+1,y
  4264 2976 CA				dex
  4265 2977 A9 06 95 18			mva #$06 :STACKORIGIN,x
  4266 297B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4267 297F A9 12			lda #$12
  4268 2981 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4269 2984 A9 1E			lda #$1E
  4270 2986 8D A2 2D			sta CALCOBSTACLEADDR.X
  4271 2989 20 30 14			jsr CALCOBSTACLEADDR
  4272 298C B4 17			ldy :STACKORIGIN-1,x
  4273 298E B5 18			lda :STACKORIGIN,x
  4274 2990 99 60 00			sta adr.OBSTACLES,y
  4275 2993 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4276 2995 99 61 00			sta adr.OBSTACLES+1,y
  4277 2998 CA				dex
  4278
  4279 				; optimize FAIL (1, levels.inc), line = 119
  4280
  4281 2999 A9 08 95 18			mva #$08 :STACKORIGIN,x
  4282 299D A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4283 29A1 A9 0C			lda #$0C
  4284 29A3 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4285 29A6 A9 01			lda #$01
  4286 29A8 8D A2 2D			sta CALCOBSTACLEADDR.X
  4287 29AB 20 30 14			jsr CALCOBSTACLEADDR
  4288 29AE B4 17			ldy :STACKORIGIN-1,x
  4289 29B0 B5 18			lda :STACKORIGIN,x
  4290 29B2 99 60 00			sta adr.OBSTACLES,y
  4291 29B5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4292 29B7 99 61 00			sta adr.OBSTACLES+1,y
  4293 29BA CA				dex
  4294 29BB A9 0A 95 18			mva #$0A :STACKORIGIN,x
  4295 29BF A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4296 29C3 A9 02			lda #$02
  4297 29C5 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4298 29C8 A9 14			lda #$14
  4299 29CA 8D A2 2D			sta CALCOBSTACLEADDR.X
  4300 29CD 20 30 14			jsr CALCOBSTACLEADDR
  4301 29D0 B4 17			ldy :STACKORIGIN-1,x
  4302 29D2 B5 18			lda :STACKORIGIN,x
  4303 29D4 99 60 00			sta adr.OBSTACLES,y
  4304 29D7 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4305 29D9 99 61 00			sta adr.OBSTACLES+1,y
  4306 29DC CA				dex
  4307
  4308 				; optimize FAIL (1, levels.inc), line = 120
  4309
  4310 29DD A9 0C 95 18			mva #$0C :STACKORIGIN,x
  4311 29E1 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4312 29E5 A9 16			lda #$16
  4313 29E7 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4314 29EA A9 14			lda #$14
  4315 29EC 8D A2 2D			sta CALCOBSTACLEADDR.X
  4316 29EF 20 30 14			jsr CALCOBSTACLEADDR
  4317 29F2 B4 17			ldy :STACKORIGIN-1,x
  4318 29F4 B5 18			lda :STACKORIGIN,x
  4319 29F6 99 60 00			sta adr.OBSTACLES,y
  4320 29F9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4321 29FB 99 61 00			sta adr.OBSTACLES+1,y
  4322 29FE CA				dex
  4323 29FF A9 0E 95 18			mva #$0E :STACKORIGIN,x
  4324 2A03 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4325 2A07 A9 0C			lda #$0C
  4326 2A09 8D A3 2D			sta CALCOBSTACLEADDR.Y
  4327 2A0C A9 14			lda #$14
  4328 2A0E 8D A2 2D			sta CALCOBSTACLEADDR.X
  4329 2A11 20 30 14			jsr CALCOBSTACLEADDR
  4330 2A14 B4 17			ldy :STACKORIGIN-1,x
  4331 2A16 B5 18			lda :STACKORIGIN,x
  4332 2A18 99 60 00			sta adr.OBSTACLES,y
  4333 2A1B B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4334 2A1D 99 61 00			sta adr.OBSTACLES+1,y
  4335 2A20 CA				dex
  4336 2A21 CA				dex
  4337 2A22			@exit
  4338 					.ifdef @new
  4339 					lda <@VarData
  4340 					sta :ztmp
  4341 					lda >@VarData
  4342 					ldy #@VarDataSize-1
  4343 					jmp @FreeMem
  4344 					els
  4345 2A22 60				rts						; ret
  4346 					eif
  4347 				.endl
  4348
  4349 2A23			.local	INITPLAYFIELD					; PROCEDURE
  4350
  4351 				; optimize OK (init.inc), line = 5
  4352
  4353 2A23 A9 1F			lda #$1F
  4354 2A25 8D 15 FF			sta BACKGROUND
  4355 2A28 A9 00			lda #$00
  4356 2A2A 8D 19 FF			sta BOREDER
  4357
  4358 				; optimize OK (init.inc), line = 6
  4359
  4360 2A2D A9 20			lda #$20
  4361 2A2F 85 04			sta SYSTEM.FILLCHAR_006E.VALUE
  4362 2A31 A9 C0			lda #$C0
  4363 2A33 85 0C			sta SYSTEM.FILLCHAR_006E.COUNT
  4364 2A35 A9 03			lda #$03
  4365 2A37 85 0D			sta SYSTEM.FILLCHAR_006E.COUNT+1
  4366 2A39 A9 00			lda #$00
  4367 2A3B 85 08			sta SYSTEM.FILLCHAR_006E.A
  4368 2A3D A9 0C			lda #$0C
  4369 2A3F 85 09			sta SYSTEM.FILLCHAR_006E.A+1
  4370 2A41 20 A0 11			jsr SYSTEM.FILLCHAR_006E
  4371
  4372 				; optimize OK (init.inc), line = 8
  4373
  4374 2A44 A9 27			lda #$27
  4375 2A46 85 58			sta T0B
  4376
  4377 2A48			l_0FC3
  4378 				; --- ForToDoCondition
  4379
  4380 				; optimize OK (init.inc), line = 9
  4381
  4382 2A48 A4 58			ldy T0B
  4383 2A4A A9 A0			lda #$A0
  4384 2A4C 99 00 0C			sta $0C00,y
  4385
  4386 				; optimize OK (init.inc), line = 10
  4387
  4388 2A4F 99 C0 0F			sta $0FC0,y
  4389
  4390 				; optimize OK (init.inc), line = 11
  4391
  4392 2A52 A9 41			lda #$41
  4393 2A54 99 00 08			sta $0800,y
  4394
  4395 				; optimize OK (init.inc), line = 12
  4396
  4397 2A57 99 C0 0B			sta $0BC0,y
  4398
  4399 				; --- ForToDoEpilog
  4400 2A5A C6 58			dec T0B
  4401 2A5C 10 EA			jpl l_0FC3
  4402 2A5E			l_0FD1
  4403
  4404 				; optimize OK (init.inc), line = 15
  4405
  4406 2A5E A9 18			lda #$18
  4407 2A60 85 58			sta T0B
  4408
  4409 2A62			l_1003
  4410 				; --- ForToDoCondition
  4411 2A62 A5 58			lda T0B
  4412 2A64 C9 01			cmp #$01
  4413 2A66 90 3A			jcc l_1011
  4414
  4415 				; optimize OK (init.inc), line = 16
  4416
  4417 2A68 0A				asl @
  4418 2A69 A8				tay
  4419 2A6A A9 FF			lda #$FF
  4420 2A6C 18 79 26 10			add adr.MUL40,y
  4421 2A70 85 12			sta :bp2
  4422 2A72 A9 0B			lda #$0B
  4423 2A74 79 27 10			adc adr.MUL40+1,y
  4424 2A77 85 13			sta :bp2+1
  4425 2A79 A0 00			ldy #$00
  4426 2A7B A9 A0			lda #$A0
  4427 2A7D 91 12			sta (:bp2),y
  4428 2A7F C8				iny
  4429 2A80 91 12			sta (:bp2),y
  4430
  4431 				; optimize OK (init.inc), line = 17
  4432
  4433 2A82 A5 58			lda T0B
  4434 2A84 0A				asl @
  4435 2A85 A8				tay
  4436 2A86 A9 FF			lda #$FF
  4437 2A88 18 79 26 10			add adr.MUL40,y
  4438 2A8C 85 12			sta :bp2
  4439 2A8E A9 07			lda #$07
  4440 2A90 79 27 10			adc adr.MUL40+1,y
  4441 2A93 85 13			sta :bp2+1
  4442 2A95 A0 00			ldy #$00
  4443 2A97 A9 41			lda #$41
  4444 2A99 91 12			sta (:bp2),y
  4445 2A9B C8				iny
  4446 2A9C 91 12			sta (:bp2),y
  4447
  4448 				; --- ForToDoEpilog
  4449 2A9E C6 58			dec T0B
  4450 2AA0 10 C0			jpl l_1003
  4451 2AA2			l_1011
  4452
  4453 				; optimize OK (init.inc), line = 20
  4454
  4455 2AA2 A9 07			lda #$07
  4456 2AA4 85 59			sta I0B
  4457
  4458 2AA6			l_1035
  4459 				; --- ForToDoCondition
  4460 2AA6 A5 59			lda I0B
  4461 2AA8 0A				asl @
  4462 2AA9 A8				tay
  4463 2AAA A9 5E			lda #$5E
  4464 2AAC 99 60 00			sta adr.OBSTACLES,y
  4465 2AAF A9 00			lda #$00
  4466 2AB1 99 61 00			sta adr.OBSTACLES+1,y
  4467
  4468 				; --- ForToDoEpilog
  4469 2AB4 C6 59			dec I0B
  4470 2AB6 10 EE			jpl l_1035
  4471 2AB8			l_1043
  4472
  4473 				; ------------------------------------------------------------
  4474
  4475 = 0000			@FORTMP_0FC0	= $00
  4476 = 0001			@FORTMP_1000	= $01
  4477 = 0000			@FORTMP_1032	= $00
  4478 2AB8			@exit
  4479 					.ifdef @new
  4480 					lda <@VarData
  4481 					sta :ztmp
  4482 					lda >@VarData
  4483 					ldy #@VarDataSize-1
  4484 					jmp @FreeMem
  4485 					els
  4486 2AB8 60				rts						; ret
  4487 					eif
  4488 				.endl
  4489
  4490 2AB9			.local	INITPLAYERS					; PROCEDURE
  4491
  4492 				; optimize OK (init.inc), line = 27
  4493
  4494 2AB9 A9 FF			lda #$FF
  4495 2ABB 85 5A			sta ALIVE
  4496
  4497 				; optimize OK (init.inc), line = 28
  4498
  4499 2ABD A9 00			lda #$00
  4500 2ABF 8D 7D 2C			sta PLAYER1.ISALIVE
  4501 2AC2 8D 85 2C			sta PLAYER2.ISALIVE
  4502
  4503 				; optimize OK (init.inc), line = 29
  4504
  4505 2AC5 8D 8D 2C			sta PLAYER3.ISALIVE
  4506 2AC8 8D 95 2C			sta PLAYER4.ISALIVE
  4507 2ACB			@exit
  4508 					.ifdef @new
  4509 					lda <@VarData
  4510 					sta :ztmp
  4511 					lda >@VarData
  4512 					ldy #@VarDataSize-1
  4513 					jmp @FreeMem
  4514 					els
  4515 2ACB 60				rts						; ret
  4516 					eif
  4517 				.endl
  4518
  4519 2ACC			.local	INITSCORE					; PROCEDURE
  4520
  4521 				; optimize OK (init.inc), line = 36
  4522
  4523 2ACC A9 30			lda #$30
  4524 2ACE 8D 7C 2C			sta PLAYER1.SCORE
  4525 2AD1 8D 84 2C			sta PLAYER2.SCORE
  4526
  4527 				; optimize OK (init.inc), line = 37
  4528
  4529 2AD4 8D 8C 2C			sta PLAYER3.SCORE
  4530 2AD7 8D 94 2C			sta PLAYER4.SCORE
  4531 2ADA			@exit
  4532 					.ifdef @new
  4533 					lda <@VarData
  4534 					sta :ztmp
  4535 					lda >@VarData
  4536 					ldy #@VarDataSize-1
  4537 					jmp @FreeMem
  4538 					els
  4539 2ADA 60				rts						; ret
  4540 					eif
  4541 				.endl
  4542
  4543 2ADB			.local	INITARENA					; PROCEDURE
  4544
  4545 				; optimize FAIL ('INITPLAYFIELD', init.inc), line = 44
  4546
  4547 2ADB 20 23 2A			jsr INITPLAYFIELD
  4548 2ADE 20 B9 2A			jsr INITPLAYERS
  4549
  4550 				; optimize OK (init.inc), line = 46
  4551
  4552 2AE1 AD 74 2C			lda LEVEL
  4553 2AE4 8D EA 30			sta @CASETMP_0009
  4554 2AE7 C9 00			cmp #$00
  4555 2AE9 D0 06			jne l_108C
  4556 2AEB			@
  4557
  4558 				; optimize FAIL ('SETLEVEL00', init.inc), line = 47
  4559
  4560 2AEB 20 12 1D			jsr SETLEVEL00
  4561 2AEE 4C 3E 2B			jmp a_0009
  4562 2AF1			l_108C
  4563 2AF1 C9 01			cmp #$01
  4564 2AF3 D0 06			jne l_1096
  4565 2AF5			@
  4566
  4567 				; optimize FAIL ('SETLEVEL01', init.inc), line = 48
  4568
  4569 2AF5 20 39 1E			jsr SETLEVEL01
  4570 2AF8 4C 3E 2B			jmp a_0009
  4571 2AFB			l_1096
  4572 2AFB C9 02			cmp #$02
  4573 2AFD D0 06			jne l_10A0
  4574 2AFF			@
  4575
  4576 				; optimize FAIL ('SETLEVEL02', init.inc), line = 49
  4577
  4578 2AFF 20 60 1F			jsr SETLEVEL02
  4579 2B02 4C 3E 2B			jmp a_0009
  4580 2B05			l_10A0
  4581 2B05 C9 03			cmp #$03
  4582 2B07 D0 06			jne l_10AA
  4583 2B09			@
  4584
  4585 				; optimize FAIL ('SETLEVEL03', init.inc), line = 50
  4586
  4587 2B09 20 87 20			jsr SETLEVEL03
  4588 2B0C 4C 3E 2B			jmp a_0009
  4589 2B0F			l_10AA
  4590 2B0F C9 04			cmp #$04
  4591 2B11 D0 06			jne l_10B4
  4592 2B13			@
  4593
  4594 				; optimize FAIL ('SETLEVEL04', init.inc), line = 51
  4595
  4596 2B13 20 D0 21			jsr SETLEVEL04
  4597 2B16 4C 3E 2B			jmp a_0009
  4598 2B19			l_10B4
  4599 2B19 C9 05			cmp #$05
  4600 2B1B D0 06			jne l_10BE
  4601 2B1D			@
  4602
  4603 				; optimize FAIL ('SETLEVEL05', init.inc), line = 52
  4604
  4605 2B1D 20 3B 23			jsr SETLEVEL05
  4606 2B20 4C 3E 2B			jmp a_0009
  4607 2B23			l_10BE
  4608 2B23 C9 06			cmp #$06
  4609 2B25 D0 06			jne l_10C8
  4610 2B27			@
  4611
  4612 				; optimize FAIL ('SETLEVEL06', init.inc), line = 53
  4613
  4614 2B27 20 DC 24			jsr SETLEVEL06
  4615 2B2A 4C 3E 2B			jmp a_0009
  4616 2B2D			l_10C8
  4617 2B2D C9 07			cmp #$07
  4618 2B2F D0 06			jne l_10D2
  4619 2B31			@
  4620
  4621 				; optimize FAIL ('SETLEVEL07', init.inc), line = 54
  4622
  4623 2B31 20 9D 26			jsr SETLEVEL07
  4624 2B34 4C 3E 2B			jmp a_0009
  4625 2B37			l_10D2
  4626 2B37 C9 08			cmp #$08
  4627 2B39 D0 03			jne l_10DC
  4628 2B3B			@
  4629
  4630 				; optimize FAIL ('SETLEVEL08', init.inc), line = 55
  4631
  4632 2B3B 20 62 28			jsr SETLEVEL08
  4633 2B3E			l_10DC
  4634 2B3E			a_0009
  4635
  4636 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 58
  4637
  4638 2B3E 20 53 14			jsr SAVEOBSTACLES
  4639 2B41 20 FB 13			jsr ANIMATEOBSTACLES
  4640 2B44 20 CC 12			jsr SHOWSCORE
  4641
  4642 				; ------------------------------------------------------------
  4643
  4644 = 30EA			@CASETMP_0009	= DATAORIGIN+$0486
  4645
  4646 = 30EA			@VarData	= @CASETMP_0009
  4647 = 0001			@VarDataSize	= 1
  4648
  4649 2B47			@exit
  4650 					.ifdef @new
  4651 					lda <@VarData
  4652 					sta :ztmp
  4653 					lda >@VarData
  4654 					ldy #@VarDataSize-1
  4655 					jmp @FreeMem
  4656 					els
  4657 2B47 60				rts						; ret
  4658 					eif
  4659 				.endl
  4660
  4661 2B48			.local	PLAYERMOVE					; PROCEDURE
  4662
  4663 				; optimize OK (main.pas), line = 15
  4664
  4665 2B48 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  4666 2B52 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4667 2B54 B1 12			lda (:bp2),y
  4668 2B56 F0 50			jeq l_10FD
  4669
  4670 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 17
  4671
  4672 2B58 20 66 13			jsr CHECKAVAILDIR
  4673
  4674 				; optimize OK (main.pas), line = 18
  4675
  4676 2B5B A5 5C			lda AVAILDIR
  4677 2B5D D0 06			jne l_1111
  4678
  4679 				; optimize FAIL ('PLAYERBUSTED', main.pas), line = 19
  4680
  4681 2B5F 20 07 16			jsr PLAYERBUSTED
  4682 2B62 4C A8 2B			jmp l_111C
  4683 2B65			l_1111
  4684
  4685 				; optimize OK (main.pas), line = 21
  4686
  4687 2B65 AC 53 2C 84 12 AC + 	mwy PLY :bp2
  4688 2B6F A0 05			ldy #PLY.BRAIN-DATAORIGIN
  4689 2B71 B1 12			lda (:bp2),y
  4690 2B73 8D EB 30			sta @CASETMP_000A
  4691 2B76 C9 00			cmp #$00
  4692 2B78 D0 06			jne l_1127
  4693 2B7A			@
  4694
  4695 				; optimize FAIL ('HUMAN', main.pas), line = 22
  4696
  4697 2B7A 20 76 18			jsr HUMAN
  4698 2B7D 4C A5 2B			jmp a_000A
  4699 2B80			l_1127
  4700 2B80 C9 01			cmp #$01
  4701 2B82 D0 06			jne l_1131
  4702 2B84			@
  4703
  4704 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 23
  4705
  4706 2B84 20 18 19			jsr AISTRAIGHT
  4707 2B87 4C A5 2B			jmp a_000A
  4708 2B8A			l_1131
  4709 2B8A C9 02			cmp #$02
  4710 2B8C D0 06			jne l_113B
  4711 2B8E			@
  4712
  4713 				; optimize FAIL ('AISAPPER', main.pas), line = 24
  4714
  4715 2B8E 20 95 19			jsr AISAPPER
  4716 2B91 4C A5 2B			jmp a_000A
  4717 2B94			l_113B
  4718 2B94 C9 03			cmp #$03
  4719 2B96 D0 06			jne l_1145
  4720 2B98			@
  4721
  4722 				; optimize FAIL ('AIBULLY', main.pas), line = 25
  4723
  4724 2B98 20 EF 1B			jsr AIBULLY
  4725 2B9B 4C A5 2B			jmp a_000A
  4726 2B9E			l_1145
  4727 2B9E C9 04			cmp #$04
  4728 2BA0 D0 03			jne l_114F
  4729 2BA2			@
  4730
  4731 				; optimize FAIL ('AIMIRROR', main.pas), line = 26
  4732
  4733 2BA2 20 BD 1C			jsr AIMIRROR
  4734 2BA5			l_114F
  4735 2BA5			a_000A
  4736
  4737 				; optimize FAIL ('DRAWPLAYER', main.pas), line = 29
  4738
  4739 2BA5 20 97 14			jsr DRAWPLAYER
  4740 2BA8			l_111C
  4741 2BA8			l_10FD
  4742
  4743 				; ------------------------------------------------------------
  4744
  4745 = 30EB			@CASETMP_000A	= DATAORIGIN+$0487
  4746
  4747 = 30EB			@VarData	= @CASETMP_000A
  4748 = 0001			@VarDataSize	= 1
  4749
  4750 2BA8			@exit
  4751 					.ifdef @new
  4752 					lda <@VarData
  4753 					sta :ztmp
  4754 					lda >@VarData
  4755 					ldy #@VarDataSize-1
  4756 					jmp @FreeMem
  4757 					els
  4758 2BA8 60				rts						; ret
  4759 					eif
  4760 				.endl
  4761
  4762 2BA9			.local	MAINLOOP					; PROCEDURE
  4763
  4764 				; optimize FAIL ('INITARENA', main.pas), line = 39
  4765
  4766 2BA9 20 DB 2A			jsr INITARENA
  4767 2BAC 20 F5 16			jsr STARTSCREEN
  4768
  4769 				; --- RepeatUntilProlog
  4770 2BAF			l_1163
  4771
  4772 				; optimize FAIL ('SYSTEM.PAUSE_0085', main.pas), line = 42
  4773
  4774 2BAF 20 AC 11			jsr SYSTEM.PAUSE_0085
  4775 2BB2 AD 59 2C			lda PLAYER1
  4776 2BB5 8D 53 2C			sta PLY
  4777 2BB8 AD 5A 2C			lda PLAYER1+1
  4778 2BBB 8D 54 2C			sta PLY+1
  4779 2BBE 20 48 2B			jsr PLAYERMOVE
  4780
  4781 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 44
  4782
  4783 2BC1 20 FB 13			jsr ANIMATEOBSTACLES
  4784
  4785 				; optimize OK (main.pas), line = 46
  4786
  4787 2BC4 A9 02			lda #$02
  4788 2BC6 8D 70 2C			sta SYSTEM.PAUSE_0086.N
  4789 2BC9 A9 00			lda #$00
  4790 2BCB 8D 71 2C			sta SYSTEM.PAUSE_0086.N+1
  4791 2BCE 20 B3 11			jsr SYSTEM.PAUSE_0086
  4792
  4793 				; optimize OK (main.pas), line = 47
  4794
  4795 2BD1 AD 5B 2C			lda PLAYER2
  4796 2BD4 8D 53 2C			sta PLY
  4797 2BD7 AD 5C 2C			lda PLAYER2+1
  4798 2BDA 8D 54 2C			sta PLY+1
  4799 2BDD 20 48 2B			jsr PLAYERMOVE
  4800
  4801 				; optimize OK (main.pas), line = 48
  4802
  4803 2BE0 AD 5D 2C			lda PLAYER3
  4804 2BE3 8D 53 2C			sta PLY
  4805 2BE6 AD 5E 2C			lda PLAYER3+1
  4806 2BE9 8D 54 2C			sta PLY+1
  4807 2BEC 20 48 2B			jsr PLAYERMOVE
  4808
  4809 				; optimize OK (main.pas), line = 49
  4810
  4811 2BEF AD 5F 2C			lda PLAYER4
  4812 2BF2 8D 53 2C			sta PLY
  4813 2BF5 AD 60 2C			lda PLAYER4+1
  4814 2BF8 8D 54 2C			sta PLY+1
  4815 2BFB 20 48 2B			jsr PLAYERMOVE
  4816
  4817 				; optimize FAIL ('ISONELEFT', main.pas), line = 50
  4818
  4819 2BFE 20 0D 18			jsr ISONELEFT
  4820 2C01 CA				dex
  4821 2C02 B5 19			lda :STACKORIGIN+1,x
  4822 2C04 F0 A9			jeq l_1163
  4823
  4824 				; optimize FAIL ('UPDATESCORE', main.pas), line = 52
  4825
  4826 2C06 20 45 13			jsr UPDATESCORE
  4827 2C09 A9 64			lda #$64
  4828 2C0B 8D 70 2C			sta SYSTEM.PAUSE_0086.N
  4829 2C0E A9 00			lda #$00
  4830 2C10 8D 71 2C			sta SYSTEM.PAUSE_0086.N+1
  4831 2C13 20 B3 11			jsr SYSTEM.PAUSE_0086
  4832 2C16 20 E5 16			jsr NEXTLEVEL
  4833 2C19			@exit
  4834 					.ifdef @new
  4835 					lda <@VarData
  4836 					sta :ztmp
  4837 					lda >@VarData
  4838 					ldy #@VarDataSize-1
  4839 					jmp @FreeMem
  4840 					els
  4841 2C19 60				rts						; ret
  4842 					eif
  4843 				.endl
  4844 2C1A			l_001F
  4845
  4846 				; optimize FAIL ('SETFONTS', main.pas), line = 58
  4847
  4848 2C1A 20 2C 18			jsr SETFONTS
  4849
  4850 				; --- RepeatUntilProlog
  4851 2C1D			l_118B
  4852
  4853 				; optimize FAIL ('INITSCORE', main.pas), line = 61
  4854
  4855 2C1D 20 CC 2A			jsr INITSCORE
  4856 2C20 A9 00			lda #$00
  4857 2C22 8D 75 2C			sta GAMEOVER
  4858 2C25 A9 01			lda #$01
  4859 2C27 8D 74 2C			sta LEVEL
  4860
  4861 				; --- RepeatUntilProlog
  4862 2C2A			l_1195
  4863
  4864 				; optimize FAIL ('MAINLOOP', main.pas), line = 63
  4865
  4866 2C2A 20 A9 2B			jsr MAINLOOP
  4867 2C2D 20 D0 17			jsr ISGAMEOVER
  4868 2C30 CA				dex
  4869 2C31 B5 19			lda :STACKORIGIN+1,x
  4870 2C33 F0 F5			jeq l_1195
  4871
  4872 				; optimize FAIL ('SHOWSCORE', main.pas), line = 65
  4873
  4874 2C35 20 CC 12			jsr SHOWSCORE
  4875 2C38 20 87 17			jsr ENDSCREEN
  4876 2C3B A9 C8			lda #$C8
  4877 2C3D 8D 70 2C			sta SYSTEM.PAUSE_0086.N
  4878 2C40 A9 00			lda #$00
  4879 2C42 8D 71 2C			sta SYSTEM.PAUSE_0086.N+1
  4880 2C45 20 B3 11			jsr SYSTEM.PAUSE_0086
  4881
  4882 				; optimize OK (main.pas), line = 66
  4883
  4884 2C48 4C 1D 2C			jmp l_118B
  4885
  4886 				; ------------------------------------------------------------
  4887
  4888 = 0800			ATTRIBUTE_ADDR	= $0800
  4889 = 0C00			SCREEN_ADDR	= $0C00
  4890 = 0400			OFFSET	= $0400
  4891 = 001F			BACKGROUND_COLOUR	= $1F
  4892 = 0000			BOREDER_COLOUR	= $00
  4893 = 0007			OBST_QUANTITY	= $07
  4894 = 0009			VICTORIES	= $09
  4895 = 005E			TRASH	= $5E
  4896 = 0005			LOOK_AHEAD	= $05
  4897 = 0020			EMPTY	= $20
  4898 = 00A0			WALL	= $A0
  4899 = 0041			WALL_COLOUR	= $41
  4900 = 0030			ZERO	= $30
  4901 = 0054			OBSTACLE_1	= $54
  4902 = 0055			OBSTACLE_2	= $55
  4903 = 0065			OBST_COLOUR	= $65
  4904 = 0050			PLY_HEAD_UP	= $50
  4905 = 0051			PLY_HEAD_LEFT	= $51
  4906 = 0052			PLY_HEAD_RIGHT	= $52
  4907 = 0053			PLY_HEAD_DOWN	= $53
  4908 = 002A			PLY_CRASH	= $2A
  4909 = 0057			PLY_BUSTED	= $57
  4910 = 0042			PLY_TAIL_UD	= $42
  4911 = 0040			PLY_TAIL_LR	= $40
  4912 = 007D			PLY_TAIL_RD	= $7D
  4913 = 006E			PLY_TAIL_RU	= $6E
  4914 = 006D			PLY_TAIL_LD	= $6D
  4915 = 0070			PLY_TAIL_LU	= $70
  4916 = 0062			PLY1_COLOUR	= $62
  4917 = 005D			PLY2_COLOUR	= $5D
  4918 = 0071			PLY3_COLOUR	= $71
  4919 = 0055			PLY4_COLOUR	= $55
  4920 = 0000			PLY_CTRL	= $00
  4921 = 0001			AI_STRAIGHT	= $01
  4922 = 0002			AI_SAPPER	= $02
  4923 = 0003			AI_BULLY	= $03
  4924 = 0004			AI_MIRROR	= $04
  4925 = 0001			JOY_UP	= $01
  4926 = 0002			JOY_DOWN	= $02
  4927 = 0004			JOY_LEFT	= $04
  4928 = 0008			JOY_RIGHT	= $08
  4929 = 0040			JOY_FIRE	= $40
  4930 = 0002			JOY_SELECT_1	= $02
  4931 = 0004			JOY_SELECT_2	= $04
  4932 = 1026			adr.MUL40	= CODEORIGIN+$0018
  4933 2C4B			.var MUL40	= adr.MUL40 .word
  4934 = 1058			adr.DIRECTION	= CODEORIGIN+$004A
  4935 2C4B			.var DIRECTION	= adr.DIRECTION .word
  4936 = FD30			KEYSCAN	= $FD30
  4937 = FF08			JOY	= $FF08
  4938 = FF12			RAMROMSEL	= $FF12
  4939 = FF13			CHBAS	= $FF13
  4940 = FF15			BACKGROUND	= $FF15
  4941 = FF19			BOREDER	= $FF19
  4942 = 0058			T0B	= $58
  4943 = 0059			I0B	= $59
  4944 = 005A			ALIVE	= $5A
  4945 = 005B			NEWDIR	= $5B
  4946 = 005C			AVAILDIR	= $5C
  4947 = 005D			JOYSTATUS	= $5D
  4948 = 005E			T0W	= $5E
  4949 = 0070			adr.PLY	= $70
  4950 2C4B			.var PLY	= adr.PLY .word
  4951 = 2C64			PLY.X	= DATAORIGIN+$0000
  4952 = 2C65			PLY.Y	= DATAORIGIN+$0001
  4953 = 2C66			PLY.HEAD	= DATAORIGIN+$0002
  4954 = 2C67			PLY.COLOUR	= DATAORIGIN+$0003
  4955 = 2C68			PLY.DIR	= DATAORIGIN+$0004
  4956 = 2C69			PLY.BRAIN	= DATAORIGIN+$0005
  4957 = 2C6A			PLY.SCORE	= DATAORIGIN+$0006
  4958 = 2C6B			PLY.ISALIVE	= DATAORIGIN+$0007
  4959 = 0072			adr.TMPPLY	= $72
  4960 2C4B			.var TMPPLY	= adr.TMPPLY .word
  4961 = 2C64			TMPPLY.X	= DATAORIGIN+$0000
  4962 = 2C65			TMPPLY.Y	= DATAORIGIN+$0001
  4963 = 2C66			TMPPLY.HEAD	= DATAORIGIN+$0002
  4964 = 2C67			TMPPLY.COLOUR	= DATAORIGIN+$0003
  4965 = 2C68			TMPPLY.DIR	= DATAORIGIN+$0004
  4966 = 2C69			TMPPLY.BRAIN	= DATAORIGIN+$0005
  4967 = 2C6A			TMPPLY.SCORE	= DATAORIGIN+$0006
  4968 = 2C6B			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  4969 = 0060			adr.OBSTACLES	= $60
  4970 2C4B			.var OBSTACLES	= adr.OBSTACLES .word
  4971 = 2C74			LEVEL	= DATAORIGIN+$0010
  4972 = 2C75			GAMEOVER	= DATAORIGIN+$0011
  4973 = 2C76			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  4974 2C4B			.var PLAYER1	= adr.PLAYER1 .word
  4975 = 2C76			PLAYER1.X	= DATAORIGIN+$0012
  4976 = 2C77			PLAYER1.Y	= DATAORIGIN+$0013
  4977 = 2C78			PLAYER1.HEAD	= DATAORIGIN+$0014
  4978 = 2C79			PLAYER1.COLOUR	= DATAORIGIN+$0015
  4979 = 2C7A			PLAYER1.DIR	= DATAORIGIN+$0016
  4980 = 2C7B			PLAYER1.BRAIN	= DATAORIGIN+$0017
  4981 = 2C7C			PLAYER1.SCORE	= DATAORIGIN+$0018
  4982 = 2C7D			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  4983 = 2C7E			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  4984 2C4B			.var PLAYER2	= adr.PLAYER2 .word
  4985 = 2C7E			PLAYER2.X	= DATAORIGIN+$001A
  4986 = 2C7F			PLAYER2.Y	= DATAORIGIN+$001B
  4987 = 2C80			PLAYER2.HEAD	= DATAORIGIN+$001C
  4988 = 2C81			PLAYER2.COLOUR	= DATAORIGIN+$001D
  4989 = 2C82			PLAYER2.DIR	= DATAORIGIN+$001E
  4990 = 2C83			PLAYER2.BRAIN	= DATAORIGIN+$001F
  4991 = 2C84			PLAYER2.SCORE	= DATAORIGIN+$0020
  4992 = 2C85			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  4993 = 2C86			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  4994 2C4B			.var PLAYER3	= adr.PLAYER3 .word
  4995 = 2C86			PLAYER3.X	= DATAORIGIN+$0022
  4996 = 2C87			PLAYER3.Y	= DATAORIGIN+$0023
  4997 = 2C88			PLAYER3.HEAD	= DATAORIGIN+$0024
  4998 = 2C89			PLAYER3.COLOUR	= DATAORIGIN+$0025
  4999 = 2C8A			PLAYER3.DIR	= DATAORIGIN+$0026
  5000 = 2C8B			PLAYER3.BRAIN	= DATAORIGIN+$0027
  5001 = 2C8C			PLAYER3.SCORE	= DATAORIGIN+$0028
  5002 = 2C8D			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  5003 = 2C8E			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  5004 2C4B			.var PLAYER4	= adr.PLAYER4 .word
  5005 = 2C8E			PLAYER4.X	= DATAORIGIN+$002A
  5006 = 2C8F			PLAYER4.Y	= DATAORIGIN+$002B
  5007 = 2C90			PLAYER4.HEAD	= DATAORIGIN+$002C
  5008 = 2C91			PLAYER4.COLOUR	= DATAORIGIN+$002D
  5009 = 2C92			PLAYER4.DIR	= DATAORIGIN+$002E
  5010 = 2C93			PLAYER4.BRAIN	= DATAORIGIN+$002F
  5011 = 2C94			PLAYER4.SCORE	= DATAORIGIN+$0030
  5012 = 2C95			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  5013 2C4B			@exit
  5014
  5015 2C4B A2 00		@halt	ldx #$00
  5016 2C4D 9A				txs
  5017
  5018 2C4E 60				rts
  5019
  5020 				; ------------------------------------------------------------
  5021
  5022 				; ------------------------------------------------------------
  5023
  5024 2C4F			.local	@DEFINES
  5025 2C4F			C4P
  5026 				.endl
  5027
  5028 2C4F			.local	@RESOURCE
  5029 				.endl
  5030
  5031 = 2C4F 26 10		MUL40
  5031 = 2C51 58 10		DIRECTION
  5031 = 2C53 70 00		PLY
  5031 = 2C55 72 00		TMPPLY
  5031 = 2C57 60 00		OBSTACLES
  5031 = 2C59 76 2C		PLAYER1
  5031 = 2C5B 7E 2C		PLAYER2
  5031 = 2C5D 86 2C		PLAYER3
  5031 = 2C5F 8E 2C		PLAYER4
  5031 				.endl							; MAIN
  5032
  5033 				; ------------------------------------------------------------
  5034 				; ------------------------------------------------------------
  5035
  5036 				.macro	UNITINITIALIZATION
  5037 				
  5038 					.ifdef MAIN.SYSTEM.@UnitInit
  5039 					jsr MAIN.SYSTEM.@UnitInit
  5040 					eif
  5041 				.endm
  5042
  5043 				; ------------------------------------------------------------
  5044
  5045 					ift .SIZEOF(MAIN.SYSTEM) > 0
  5046 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  5046 				SYSTEM: $1156..$1200
  5047 					eif
  5048
  5049 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  5049 				CODE: $100E..$2C4E
  5050
  5051 				; ------------------------------------------------------------
  5052
  5053 2C61				.align $04
  5054
  5055 2C64			DATAORIGIN
  5056 2C64 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5057 2C7C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5058 2C94 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5059 2CAC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5060 2CC4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5061 2CDC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5062 2CF4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5063 2D0C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5064 2D24 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5065 2D3C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5066 2D54 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5067 2D6C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5068 2D84 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5069 2D9C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $05 $06 $09 $12
  5070 2DB4 05 21 00 00 00 00 + .by  $05 $21 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5071 2DCC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5072 2DE4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5073 2DFC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5074 2E14 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5075 2E2C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5076 2E44 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5077 2E5C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5078 2E74 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5079 2E8C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5080 2EA4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $07 $17 $09 $0E  $0E $05 $12 $21 $00 $00 $00 $00
  5081 2EBC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5082 2ED4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5083 2EEC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5084 2F04 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5085 2F1C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5086 2F34 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5087 2F4C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5088 2F64 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5089 2F7C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5090 2F94 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5091 2FAC 00 00 00 00 06 0C + .by  $00 $00 $00 $00 $06 $0C $0F $13  $05 $12 $21 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5092 2FC4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5093 2FDC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5094 2FF4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5095 300C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5096 3024 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5097 303C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5098 3054 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5099 306C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5100 3084 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5101 309C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $18 $18
  5102 30B4 24 24 24 3C 66 5A + .by  $24 $24 $24 $3C $66 $5A $00 $03  $3E $C5 $C5 $3E $03 $00 $00 $C0  $7C $A3 $A3 $7C $C0 $00 $5A $66
  5103 30CC 3C 24 24 24 18 18 + .by  $3C $24 $24 $24 $18 $18 $00 $3C  $6E $62 $46 $76 $3C $00 $00 $3C  $76 $46 $62 $6E $3C
  5104
  5105 = 047D			VARINITSIZE	= *-DATAORIGIN
  5106 = 0488			VARDATASIZE	= 1160
  5107
  5108 = 30EC			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  5109
  5110 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  5110 				DATA: $2C64..$30EC
  5111
  5112 				; ------------------------------------------------------------
  5113
  5114 				.macro	STATICDATA
  5115 				.by  $05 $06 $09 $12 $05 $21 $00 $07  $17 $09 $0E $0E $05 $12 $21 $00  $06 $0C $0F $13 $05 $12 $21 $00
  5116 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  5117 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  5118 				.by  $C0 $03 $01 $02 $04 $08
  5119 				.endm
  5120
  5121 					end
