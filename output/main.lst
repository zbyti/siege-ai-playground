mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $105C..$1137
   102
   103 				; ------------------------------------------------------------
   104
   105 1138			START
   106 1138 BA				tsx
   107 1139 8E 38 2C			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0002			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 30D6			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 113C A2 FE			ldx #256-VLEN
   120 113E A9 00			lda #$00
   121 1140 9D D8 2F E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 1146 A9 D8 85 02 A9 30 + 	mwa #PROGRAMSTACK psptr
   127
   128 114E A2 00			ldx #$00
   129 1150 86 10			stx bp						; BP = 0
   130
   131 1152 CA				dex						; X = 255
   132
   133 1153				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 1153			.local	MAIN						; PROCEDURE
   136
   137 1153 4C 06 2C			jmp l_001F
   138
   139 				; ------------------------------------------------------------
   140
   141 1156			.local	SYSTEM						; UNIT
   142
   143 1156			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 1156 B5 18			lda :STACKORIGIN,x
   150 1158 85 08			sta A
   151 115A B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 115C 85 09			sta A+1
   153 115E CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 115F A0 00			ldy #0
   158 1161 B1 08 8D 5B 2C		mva (edx),y Result
   159
   160 1166			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 1166 E8				inx
   168 1167 AD 5B 2C 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 2C5B			RESULT	= DATAORIGIN+$000B
   182
   183 = 2C5B			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 116C 60				rts						; ret
   187 				.endl
   188
   189 116D			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 116D B5 18			lda :STACKORIGIN,x
   196 116F 85 0C			sta VALUE
   197 1171 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 1172 B5 18			lda :STACKORIGIN,x
   204 1174 85 08			sta A
   205 1176 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 1178 85 09			sta A+1
   207 117A CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 117B A0 00			ldy #0
   212 117D A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1181			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1181 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1182			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1182 B5 18			lda :STACKORIGIN,x
   238 1184 85 0C			sta VALUE
   239 1186 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1188 85 0D			sta VALUE+1
   241 118A CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 118B B5 18			lda :STACKORIGIN,x
   248 118D 85 08			sta A
   249 118F B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1191 85 09			sta A+1
   251 1193 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1194 A0 00			ldy #0
   256 1196 A5 0C 91 08			mva value (edx),y
   257 119A C8				iny
   258 119B A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 119F			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 119F 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 11A0			.local	FILLCHAR_006E					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 11A0 20 DC 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 11A3			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 11A3 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 11A4			.local	MOVE_006F					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   302
   303 				; ---------------------  ASM Block 026  ---------------------
   304
   305 11A4 20 87 10			jsr @move
   306
   307
   308 				; ------------------------------------------------------------
   309
   310 = 0008			SOURCE	= edx
   311 = 000C			DEST	= ecx
   312 = 0004			COUNT	= eax
   313 11A7			@exit
   314 					.ifdef @new
   315 					lda <@VarData
   316 					sta :ztmp
   317 					lda >@VarData
   318 					ldy #@VarDataSize-1
   319 					jmp @FreeMem
   320 					els
   321 11A7 60				rts						; ret
   322 					eif
   323 				.endl
   324
   325 11A8			.local	MOVE_0070					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   326
   327 				; ---------------------  ASM Block 028  ---------------------
   328
   329 11A8 20 87 10			jsr @move
   330
   331
   332 				; ------------------------------------------------------------
   333
   334 = 0008			SOURCE	= edx
   335 = 000C			DEST	= ecx
   336 = 0004			COUNT	= eax
   337 11AB			@exit
   338 					.ifdef @new
   339 					lda <@VarData
   340 					sta :ztmp
   341 					lda >@VarData
   342 					ldy #@VarDataSize-1
   343 					jmp @FreeMem
   344 					els
   345 11AB 60				rts						; ret
   346 					eif
   347 				.endl
   348
   349 11AC			.local	PAUSE_0085					; PROCEDURE | ASSEMBLER | OVERLOAD
   350
   351 				; ---------------------  ASM Block 034  ---------------------
   352
   353 11AC A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   354
   355 11B2			@exit
   356 					.ifdef @new
   357 					lda <@VarData
   358 					sta :ztmp
   359 					lda >@VarData
   360 					ldy #@VarDataSize-1
   361 					jmp @FreeMem
   362 					els
   363 11B2 60				rts						; ret
   364 					eif
   365 				.endl
   366
   367 11B3			.local	PAUSE_0086					; PROCEDURE | ASSEMBLER | OVERLOAD
   368
   369 				; ---------------------  ASM Block 035  ---------------------
   370
   371
   372 11B3 AD 5C 2C		loop  lda n
   373 11B6 0D 5D 2C		  ora n+1
   374 11B9 F0 14		  beq stop
   375
   376 11BB A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   377
   378 11C1 AD 5C 2C D0 03 CE +   dew n
   379
   380 11CC 4C B3 11		  jmp loop
   381 11CF			stop
   382
   383
   384 				; ------------------------------------------------------------
   385
   386 = 2C5C			N	= DATAORIGIN+$000C
   387
   388 = 2C5C			@VarData	= N
   389 = 0002			@VarDataSize	= 2
   390
   391 11CF			@exit
   392 					.ifdef @new
   393 					lda <@VarData
   394 					sta :ztmp
   395 					lda >@VarData
   396 					ldy #@VarDataSize-1
   397 					jmp @FreeMem
   398 					els
   399 11CF 60				rts						; ret
   400 					eif
   401 				.endl
   402
   403 11D0			.local	RANDOM_0087					; FUNCTION | ASSEMBLER | OVERLOAD
   404 11D0 8D 5E 2C			sta RANGE
   405
   406 				; ---------------------  ASM Block 039  ---------------------
   407
   408
   409 11D3 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   410 11D6 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   411 11D9 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   412 11DC 6D 1E FF		  adc ted_hcount    //Horizontal counter
   413 11DF 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   414 11E2 4D 1E FF		  eor ted_hcount    //Horizontal counter
   415 11E5 A8			  tay
   416
   417 11E6 AD 5E 2C		  lda range
   418 11E9 F0 08		  beq stop
   419
   420 11EB 85 0C		  sta ecx
   421 11ED 84 04		  sty eax
   422
   423 11EF 20 24 11		  jsr imulCL
   424 11F2 A8			  tay
   425
   426 11F3 8C 5F 2C		stop  sty Result
   427
   428 11F6			@exit
   429
   430 				; ------------------------------------------------------------
   431
   432 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   433 				; as Pointer
   434
   435 11F6 E8				inx
   436 11F7 AD 5F 2C 95 18		mva RESULT :STACKORIGIN,x
   437
   438 					.ifdef @new
   439 					lda <@VarData
   440 					sta :ztmp
   441 					lda >@VarData
   442 					ldy #@VarDataSize-1
   443 					jmp @FreeMem
   444 					eif
   445
   446 				; ------------------------------------------------------------
   447
   448 = 2C5E			RANGE	= DATAORIGIN+$000E
   449 = 2C5F			RESULT	= DATAORIGIN+$000F
   450
   451 = 2C5E			@VarData	= RANGE
   452 = 0002			@VarDataSize	= 2
   453
   454 11FC 60				rts						; ret
   455 				.endl
   456
   457 				; ------------------------------------------------------------
   458
   459 = 0101			__PORTB_BANKS	= $0101
   460 = 0648			M_PI_2	= $0648
   461 = 0192			D_PI_2	= $0192
   462 = 0004			D_PI_180	= $04
   463 = 0000			MGTIA	= $00
   464 = 0080			MVBXE	= $80
   465 = 0000			VBXE_XDLADR	= $00
   466 = 0100			VBXE_BCBADR	= $0100
   467 = 1000			VBXE_MAPADR	= $1000
   468 = 1000			VBXE_CHBASE	= $1000
   469 = 5000			VBXE_OVRADR	= $5000
   470 = B000			VBXE_WINDOW	= $B000
   471 = 0000			IDLI	= $00
   472 = 0001			IVBL	= $01
   473 = 00FE			CH_DELCHR	= $FE
   474 = 009B			CH_ENTER	= $9B
   475 = 001B			CH_ESC	= $1B
   476 = 001C			CH_CURS_UP	= $1C
   477 = 001D			CH_CURS_DOWN	= $1D
   478 = 001E			CH_CURS_LEFT	= $1E
   479 = 001F			CH_CURS_RIGHT	= $1F
   480 = 007F			CH_TAB	= $7F
   481 = 009B			CH_EOL	= $9B
   482 = 007D			CH_CLR	= $7D
   483 = 00FD			CH_BELL	= $FD
   484 = 007E			CH_DEL	= $7E
   485 = 009C			CH_DELLINE	= $9C
   486 = 009D			CH_INSLINE	= $9D
   487 = 0000			COLOR_BLACK	= $00
   488 = 000E			COLOR_WHITE	= $0E
   489 = 0032			COLOR_RED	= $32
   490 = 0096			COLOR_CYAN	= $96
   491 = 0068			COLOR_VIOLET	= $68
   492 = 00C4			COLOR_GREEN	= $C4
   493 = 0074			COLOR_BLUE	= $74
   494 = 00EE			COLOR_YELLOW	= $EE
   495 = 0028			COLOR_ORANGE	= $28
   496 = 00E4			COLOR_BROWN	= $E4
   497 = 003C			COLOR_LIGHTRED	= $3C
   498 = 0004			COLOR_GRAY1	= $04
   499 = 0006			COLOR_GRAY2	= $06
   500 = 000A			COLOR_GRAY3	= $0A
   501 = 00CC			COLOR_LIGHTGREEN	= $CC
   502 = 007C			COLOR_LIGHTBLUE	= $7C
   503 = 0004			FMOPENREAD	= $04
   504 = 0008			FMOPENWRITE	= $08
   505 = 0009			FMOPENAPPEND	= $09
   506 = 000C			FMOPENREADWRITE	= $0C
   507 = 2C50			SCREENWIDTH	= DATAORIGIN+$0000
   508 = 2C52			SCREENHEIGHT	= DATAORIGIN+$0002
   509 = 2C54			DATESEPARATOR	= DATAORIGIN+$0004
   510 = D20A			RND	= $D20A
   511 = 02C0			adr.PALETTE	= $02C0
   512 11FD			.var PALETTE	= adr.PALETTE .word
   513 = D012			adr.HPALETTE	= $D012
   514 11FD			.var HPALETTE	= adr.HPALETTE .word
   515 = 2C55			FILEMODE	= DATAORIGIN+$0005
   516 = 2C56			GRAPHMODE	= DATAORIGIN+$0006
   517 = 2C57			IORESULT	= DATAORIGIN+$0007
   518 = 2C58			EOLN	= DATAORIGIN+$0008
   519 = 2C59			RNDSEED	= DATAORIGIN+$0009
   520
   521 = 11FD C0 02		PALETTE
   521 = 11FF 12 D0		HPALETTE
   521 				.endl							; UNIT SYSTEM
   522
   523 1201			.local	CALCSCREENADDR					; FUNCTION
   524
   525 				; optimize OK (tools.inc), line = 5
   526
   527 1201 AD 83 2C			lda Y
   528 1204 0A				asl @
   529 1205 A8				tay
   530 1206 AD 82 2C			lda X
   531 1209 18 79 26 10			add adr.MUL40,y
   532 120D 8D 84 2C			sta RESULT
   533 1210 A9 0C			lda #$0C
   534 1212 79 27 10			adc adr.MUL40+1,y
   535 1215 8D 85 2C			sta RESULT+1
   536 1218			@exit
   537
   538 				; ------------------------------------------------------------
   539
   540 				; Push WORD / SMALLINT / SHORTREAL / POINTER
   541 				; as Pointer
   542
   543 1218 E8				inx
   544 1219 AD 84 2C 95 18		mva RESULT :STACKORIGIN,x
   545 121E AD 85 2C 95 28		mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
   546
   547 					.ifdef @new
   548 					lda <@VarData
   549 					sta :ztmp
   550 					lda >@VarData
   551 					ldy #@VarDataSize-1
   552 					jmp @FreeMem
   553 					eif
   554
   555 				; ------------------------------------------------------------
   556
   557 = 2C82			X	= DATAORIGIN+$0032
   558 = 2C83			Y	= DATAORIGIN+$0033
   559 = 2C84			RESULT	= DATAORIGIN+$0034
   560
   561 = 2C82			@VarData	= X
   562 = 0004			@VarDataSize	= 4
   563
   564 1223 60				rts						; ret
   565 				.endl
   566
   567 1224			.local	PUTCHAR_00A4					; PROCEDURE | OVERLOAD
   568
   569 				; optimize OK (tools.inc), line = 12
   570
   571 1224 AD 87 2C			lda Y
   572 1227 8D 83 2C			sta CALCSCREENADDR.Y
   573 122A AD 86 2C			lda X
   574 122D 8D 82 2C			sta CALCSCREENADDR.X
   575 1230 20 01 12			jsr CALCSCREENADDR
   576 1233 E8				inx
   577 1234 AD 88 2C 95 18		mva V :STACKORIGIN,x
   578 1239 20 6D 11			jsr SYSTEM.POKE
   579
   580 				; ------------------------------------------------------------
   581
   582 = 2C86			X	= DATAORIGIN+$0036
   583 = 2C87			Y	= DATAORIGIN+$0037
   584 = 2C88			V	= DATAORIGIN+$0038
   585
   586 = 2C86			@VarData	= X
   587 = 0003			@VarDataSize	= 3
   588
   589 123C			@exit
   590 					.ifdef @new
   591 					lda <@VarData
   592 					sta :ztmp
   593 					lda >@VarData
   594 					ldy #@VarDataSize-1
   595 					jmp @FreeMem
   596 					els
   597 123C 60				rts						; ret
   598 					eif
   599 				.endl
   600
   601 123D			.local	PUTCHAR_00B3					; PROCEDURE | OVERLOAD
   602
   603 				; optimize OK (tools.inc), line = 19
   604
   605 123D AD 8A 2C			lda Y
   606 1240 8D 83 2C			sta CALCSCREENADDR.Y
   607 1243 AD 89 2C			lda X
   608 1246 8D 82 2C			sta CALCSCREENADDR.X
   609 1249 20 01 12			jsr CALCSCREENADDR
   610 124C B5 18			lda :STACKORIGIN,x
   611 124E 85 5E			sta T0W
   612 1250 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   613 1252 85 5F			sta T0W+1
   614 1254 CA				dex
   615
   616 				; optimize OK (tools.inc), line = 20
   617
   618 1255 A4 5F			ldy T0W+1
   619 1257 84 11			sty :bp+1
   620 1259 A4 5E			ldy T0W
   621 125B AD 8B 2C			lda V
   622 125E 91 10			sta (:bp),y
   623 1260 A5 5F			lda T0W+1
   624 1262 38 E9 04			sub #$04
   625 1265 85 11			sta :bp+1
   626 1267 AD 8C 2C			lda C
   627 126A 91 10			sta (:bp),y
   628
   629 				; ------------------------------------------------------------
   630
   631 = 2C89			X	= DATAORIGIN+$0039
   632 = 2C8A			Y	= DATAORIGIN+$003A
   633 = 2C8B			V	= DATAORIGIN+$003B
   634 = 2C8C			C	= DATAORIGIN+$003C
   635
   636 = 2C89			@VarData	= X
   637 = 0004			@VarDataSize	= 4
   638
   639 126C			@exit
   640 					.ifdef @new
   641 					lda <@VarData
   642 					sta :ztmp
   643 					lda >@VarData
   644 					ldy #@VarDataSize-1
   645 					jmp @FreeMem
   646 					els
   647 126C 60				rts						; ret
   648 					eif
   649 				.endl
   650
   651 126D			.local	PRINTXY						; PROCEDURE
   652
   653 				; ------------------------------------------------------------
   654
   655 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   656 				; as Pointer
   657 126D B5 18			lda :STACKORIGIN,x
   658 126F 8D 8F 2D			sta C
   659 1272 CA				dex
   660
   661 				; ------------------------------------------------------------
   662
   663 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   664 				; as Pointer
   665 1273 B5 18			lda :STACKORIGIN,x
   666 1275 8D 8E 2D			sta Y
   667 1278 CA				dex
   668
   669 				; ------------------------------------------------------------
   670
   671 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   672 				; as Pointer
   673 1279 B5 18			lda :STACKORIGIN,x
   674 127B 8D 8D 2D			sta X
   675 127E CA				dex
   676
   677 				; ------------------------------------------------------------
   678
   679 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   680 				; as Pointer
   681 127F B5 18			lda :STACKORIGIN,x
   682 1281 85 12			sta :bp2
   683 1283 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   684 1285 85 13			sta :bp2+1
   685 1287 A0 00			ldy #$00
   686 1289 B1 12 99 8D 2C C8 + 	mva:rne (:bp2),y adr.S,y+
   687 1291 A9 8D 8D ED 12 A9 + 	mwa #adr.S S
   688 129B CA				dex
   689
   690 				; optimize OK (tools.inc), line = 27
   691
   692 129C AD 8E 2D			lda Y
   693 129F 8D 83 2C			sta CALCSCREENADDR.Y
   694 12A2 AD 8D 2D			lda X
   695 12A5 8D 82 2C			sta CALCSCREENADDR.X
   696 12A8 20 01 12			jsr CALCSCREENADDR
   697 12AB B5 18			lda :STACKORIGIN,x
   698 12AD 85 5E			sta T0W
   699 12AF B5 28			lda :STACKORIGIN+STACKWIDTH,x
   700 12B1 85 5F			sta T0W+1
   701 12B3 CA				dex
   702
   703 				; optimize OK (tools.inc), line = 28
   704
   705 12B4 A9 8E			lda <adr.S+$01
   706 12B6 85 08			sta SYSTEM.MOVE_0070.SOURCE
   707 12B8 A9 2C			lda >adr.S+$01
   708 12BA 85 09			sta SYSTEM.MOVE_0070.SOURCE+1
   709 12BC AD 8D 2C			lda adr.S
   710 12BF 85 04			sta SYSTEM.MOVE_0070.COUNT
   711 12C1 A9 00			lda #$00
   712 12C3 85 05			sta SYSTEM.MOVE_0070.COUNT+1
   713 12C5 A5 5E			lda T0W
   714 12C7 85 0C			sta SYSTEM.MOVE_0070.DEST
   715 12C9 A5 5F			lda T0W+1
   716 12CB 85 0D			sta SYSTEM.MOVE_0070.DEST+1
   717 12CD 20 A8 11			jsr SYSTEM.MOVE_0070
   718
   719 				; optimize OK (tools.inc), line = 29
   720
   721 12D0 A5 5E			lda T0W
   722 12D2 85 08			sta SYSTEM.FILLCHAR_006E.A
   723 12D4 A5 5F			lda T0W+1
   724 12D6 38 E9 04			sub #$04
   725 12D9 85 09			sta SYSTEM.FILLCHAR_006E.A+1
   726 12DB AD 8D 2C			lda adr.S
   727 12DE 85 0C			sta SYSTEM.FILLCHAR_006E.COUNT
   728 12E0 AD 8F 2D			lda C
   729 12E3 85 04			sta SYSTEM.FILLCHAR_006E.VALUE
   730 12E5 A9 00			lda #$00
   731 12E7 85 0D			sta SYSTEM.FILLCHAR_006E.COUNT+1
   732 12E9 20 A0 11			jsr SYSTEM.FILLCHAR_006E
   733
   734 				; ------------------------------------------------------------
   735
   736 = 2C8D			adr.S	= [DATAORIGIN+$003D] .array [256]
   737 12EC			.var S	= adr.S .word
   738 = 2D8D			X	= DATAORIGIN+$013D
   739 = 2D8E			Y	= DATAORIGIN+$013E
   740 = 2D8F			C	= DATAORIGIN+$013F
   741
   742 = 12ED			@VarData	= S
   743 = 0103			@VarDataSize	= 259
   744
   745 12EC			@exit
   746 					.ifdef @new
   747 					lda <@VarData
   748 					sta :ztmp
   749 					lda >@VarData
   750 					ldy #@VarDataSize-1
   751 					jmp @FreeMem
   752 					els
   753 12EC 60				rts						; ret
   754 					eif
   755 = 12ED 8D 2C		S
   755 				.endl
   756
   757 12EF			.local	SHOWSCORE					; PROCEDURE
   758
   759 				; optimize OK (tools.inc), line = 44
   760
   761 12EF AD 69 2C			lda PLAYER1.ISALIVE
   762 12F2 F0 19			jeq l_0108
   763 12F4 AD 65 2C			lda PLAYER1.COLOUR
   764 12F7 8D 8C 2C			sta PUTCHAR_00B3.C
   765 12FA AD 68 2C			lda PLAYER1.SCORE
   766 12FD 8D 8B 2C			sta PUTCHAR_00B3.V
   767 1300 A9 00			lda #$00
   768 1302 8D 8A 2C			sta PUTCHAR_00B3.Y
   769 1305 A9 1E			lda #$1E
   770 1307 8D 89 2C			sta PUTCHAR_00B3.X
   771 130A 20 3D 12			jsr PUTCHAR_00B3
   772 130D			l_0108
   773
   774 				; optimize OK (tools.inc), line = 45
   775
   776 130D AD 71 2C			lda PLAYER2.ISALIVE
   777 1310 F0 19			jeq l_0120
   778 1312 AD 6D 2C			lda PLAYER2.COLOUR
   779 1315 8D 8C 2C			sta PUTCHAR_00B3.C
   780 1318 AD 70 2C			lda PLAYER2.SCORE
   781 131B 8D 8B 2C			sta PUTCHAR_00B3.V
   782 131E A9 00			lda #$00
   783 1320 8D 8A 2C			sta PUTCHAR_00B3.Y
   784 1323 A9 20			lda #$20
   785 1325 8D 89 2C			sta PUTCHAR_00B3.X
   786 1328 20 3D 12			jsr PUTCHAR_00B3
   787 132B			l_0120
   788
   789 				; optimize OK (tools.inc), line = 46
   790
   791 132B AD 79 2C			lda PLAYER3.ISALIVE
   792 132E F0 19			jeq l_0138
   793 1330 AD 75 2C			lda PLAYER3.COLOUR
   794 1333 8D 8C 2C			sta PUTCHAR_00B3.C
   795 1336 AD 78 2C			lda PLAYER3.SCORE
   796 1339 8D 8B 2C			sta PUTCHAR_00B3.V
   797 133C A9 00			lda #$00
   798 133E 8D 8A 2C			sta PUTCHAR_00B3.Y
   799 1341 A9 22			lda #$22
   800 1343 8D 89 2C			sta PUTCHAR_00B3.X
   801 1346 20 3D 12			jsr PUTCHAR_00B3
   802 1349			l_0138
   803
   804 				; optimize OK (tools.inc), line = 47
   805
   806 1349 AD 81 2C			lda PLAYER4.ISALIVE
   807 134C F0 19			jeq l_0150
   808 134E AD 7D 2C			lda PLAYER4.COLOUR
   809 1351 8D 8C 2C			sta PUTCHAR_00B3.C
   810 1354 AD 80 2C			lda PLAYER4.SCORE
   811 1357 8D 8B 2C			sta PUTCHAR_00B3.V
   812 135A A9 00			lda #$00
   813 135C 8D 8A 2C			sta PUTCHAR_00B3.Y
   814 135F A9 24			lda #$24
   815 1361 8D 89 2C			sta PUTCHAR_00B3.X
   816 1364 20 3D 12			jsr PUTCHAR_00B3
   817 1367			l_0150
   818 1367			@exit
   819 					.ifdef @new
   820 					lda <@VarData
   821 					sta :ztmp
   822 					lda >@VarData
   823 					ldy #@VarDataSize-1
   824 					jmp @FreeMem
   825 					els
   826 1367 60				rts						; ret
   827 					eif
   828 				.endl
   829
   830 1368			.local	UPDATESCORE					; PROCEDURE
   831
   832 				; optimize OK (tools.inc), line = 54
   833
   834 1368 AD 69 2C			lda PLAYER1.ISALIVE
   835 136B F0 03			jeq l_016C
   836 136D EE 68 2C			inc PLAYER1.SCORE
   837 1370			l_016C
   838
   839 				; optimize OK (tools.inc), line = 55
   840
   841 1370 AD 71 2C			lda PLAYER2.ISALIVE
   842 1373 F0 03			jeq l_017F
   843 1375 EE 70 2C			inc PLAYER2.SCORE
   844 1378			l_017F
   845
   846 				; optimize OK (tools.inc), line = 56
   847
   848 1378 AD 79 2C			lda PLAYER3.ISALIVE
   849 137B F0 03			jeq l_0192
   850 137D EE 78 2C			inc PLAYER3.SCORE
   851 1380			l_0192
   852
   853 				; optimize OK (tools.inc), line = 57
   854
   855 1380 AD 81 2C			lda PLAYER4.ISALIVE
   856 1383 F0 03			jeq l_01A5
   857 1385 EE 80 2C			inc PLAYER4.SCORE
   858 1388			l_01A5
   859 1388			@exit
   860 					.ifdef @new
   861 					lda <@VarData
   862 					sta :ztmp
   863 					lda >@VarData
   864 					ldy #@VarDataSize-1
   865 					jmp @FreeMem
   866 					els
   867 1388 60				rts						; ret
   868 					eif
   869 				.endl
   870
   871 1389			.local	CHECKAVAILDIR					; PROCEDURE
   872
   873 				; optimize OK (tools.inc), line = 64
   874
   875 1389 A9 00			lda #$00
   876 138B 85 5C			sta AVAILDIR
   877
   878 				; optimize OK (tools.inc), line = 65
   879
   880 138D AC 3F 2C 84 12 AC + 	mwy PLY :bp2
   881 1397 A0 00			ldy #PLY.X-DATAORIGIN
   882 1399 B1 12			lda (:bp2),y
   883 139B 8D 82 2C			sta CALCSCREENADDR.X
   884 139E A0 01			ldy #PLY.Y-DATAORIGIN
   885 13A0 B1 12			lda (:bp2),y
   886 13A2 8D 83 2C			sta CALCSCREENADDR.Y
   887 13A5 20 01 12			jsr CALCSCREENADDR
   888 13A8 B5 18			lda :STACKORIGIN,x
   889 13AA 85 5E			sta T0W
   890 13AC B5 28			lda :STACKORIGIN+STACKWIDTH,x
   891 13AE 85 5F			sta T0W+1
   892 13B0 CA				dex
   893
   894 				; optimize OK (tools.inc), line = 67
   895
   896 13B1 A5 5E			lda T0W
   897 13B3 38 E9 28			sub #$28
   898 13B6 85 21			sta :STACKORIGIN+9
   899 13B8 A5 5F			lda T0W+1
   900 13BA E9 00			sbc #$00
   901 13BC 85 11			sta :bp+1
   902 13BE A4 21			ldy :STACKORIGIN+9
   903 13C0 B1 10			lda (:bp),y
   904 13C2 C9 20			cmp #$20
   905 13C4 D0 06			jne l_01D4
   906 13C6 A5 5C			lda AVAILDIR
   907 13C8 09 01			ora #$01
   908 13CA 85 5C			sta AVAILDIR
   909 13CC			l_01D4
   910
   911 				; optimize OK (tools.inc), line = 68
   912
   913 13CC A4 5E 84 12 A4 5F + 	mwy T0W :bp2
   914 13D4 A0 28			ldy #$28
   915 13D6 B1 12			lda (:bp2),y
   916 13D8 C9 20			cmp #$20
   917 13DA D0 06			jne l_01F7
   918 13DC A5 5C			lda AVAILDIR
   919 13DE 09 02			ora #$02
   920 13E0 85 5C			sta AVAILDIR
   921 13E2			l_01F7
   922
   923 				; optimize OK (tools.inc), line = 69
   924
   925 13E2 A5 5E			lda T0W
   926 13E4 38 E9 01			sub #$01
   927 13E7 85 21			sta :STACKORIGIN+9
   928 13E9 A5 5F			lda T0W+1
   929 13EB E9 00			sbc #$00
   930 13ED 85 11			sta :bp+1
   931 13EF A4 21			ldy :STACKORIGIN+9
   932 13F1 B1 10			lda (:bp),y
   933 13F3 C9 20			cmp #$20
   934 13F5 D0 06			jne l_021A
   935 13F7 A5 5C			lda AVAILDIR
   936 13F9 09 04			ora #$04
   937 13FB 85 5C			sta AVAILDIR
   938 13FD			l_021A
   939
   940 				; optimize OK (tools.inc), line = 70
   941
   942 13FD A4 5E 84 12 A4 5F + 	mwy T0W :bp2
   943 1405 A0 01			ldy #$01
   944 1407 B1 12			lda (:bp2),y
   945 1409 C9 20			cmp #$20
   946 140B D0 06			jne l_023D
   947 140D A5 5C			lda AVAILDIR
   948 140F 09 08			ora #$08
   949 1411 85 5C			sta AVAILDIR
   950 1413			l_023D
   951 1413			@exit
   952 					.ifdef @new
   953 					lda <@VarData
   954 					sta :ztmp
   955 					lda >@VarData
   956 					ldy #@VarDataSize-1
   957 					jmp @FreeMem
   958 					els
   959 1413 60				rts						; ret
   960 					eif
   961 				.endl
   962
   963 1414			.local	ANIMATEOBSTACLES				; PROCEDURE
   964
   965 				; optimize FAIL (0, tools.inc), line = 79
   966
   967 1414 EE 90 2D			inc COUNTER
   968
   969 				; optimize OK (tools.inc), line = 80
   970
   971 1417 AD 90 2D			lda COUNTER
   972 141A 29 01			and #$01
   973 141C F0 08			jeq l_0268
   974 141E A9 54			lda #$54
   975 1420 8D 91 2D			sta OBST
   976 1423 4C 2B 14			jmp l_0276
   977 1426			l_0268
   978 1426 A9 55			lda #$55
   979 1428 8D 91 2D			sta OBST
   980 142B			l_0276
   981
   982 				; optimize OK (tools.inc), line = 81
   983
   984 142B A9 07			lda #$07
   985 142D 85 59			sta I0B
   986
   987 142F			l_0283
   988 				; --- ForToDoCondition
   989 142F A5 59			lda I0B
   990 1431 0A				asl @
   991 1432 A8				tay
   992 1433 B9 60 00			lda adr.OBSTACLES,y
   993 1436 85 21			sta :STACKORIGIN+9
   994 1438 B9 61 00			lda adr.OBSTACLES+1,y
   995 143B 85 11			sta :bp+1
   996 143D A4 21			ldy :STACKORIGIN+9
   997 143F AD 91 2D			lda OBST
   998 1442 91 10			sta (:bp),y
   999 1444 C6 59			dec I0B
  1000 1446 10 E7			jpl l_0283
  1001 1448			l_0291
  1002
  1003 				; ------------------------------------------------------------
  1004
  1005 = 2D90			COUNTER	= DATAORIGIN+$0140
  1006 = 2D91			OBST	= DATAORIGIN+$0141
  1007 = 0000			@FORTMP_0280	= $00
  1008
  1009 = 2D90			@VarData	= COUNTER
  1010 = 0002			@VarDataSize	= 2
  1011
  1012 1448			@exit
  1013 					.ifdef @new
  1014 					lda <@VarData
  1015 					sta :ztmp
  1016 					lda >@VarData
  1017 					ldy #@VarDataSize-1
  1018 					jmp @FreeMem
  1019 					els
  1020 1448 60				rts						; ret
  1021 					eif
  1022 				.endl
  1023
  1024 1449			.local	SAVEOBSTACLES					; PROCEDURE
  1025
  1026 				; optimize OK (tools.inc), line = 88
  1027
  1028 1449 A9 07			lda #$07
  1029 144B 85 59			sta I0B
  1030
  1031 144D			l_02AC
  1032 				; --- ForToDoCondition
  1033
  1034 				; optimize OK (tools.inc), line = 89
  1035
  1036 144D A5 59			lda I0B
  1037 144F 0A				asl @
  1038 1450 A8				tay
  1039 1451 B9 61 00			lda adr.OBSTACLES+1,y
  1040 1454 C9 00			cmp #$00
  1041 1456 D0 05			bne @+
  1042 1458 B9 60 00			lda adr.OBSTACLES,y
  1043 145B C9 5E			cmp #$5E
  1044 145D			@
  1045 145D F0 29			jeq l_02CE
  1046
  1047 				; optimize OK (tools.inc), line = 90
  1048
  1049 145F B9 60 00			lda adr.OBSTACLES,y
  1050 1462 85 21			sta :STACKORIGIN+9
  1051 1464 B9 61 00			lda adr.OBSTACLES+1,y
  1052 1467 85 11			sta :bp+1
  1053 1469 A4 21			ldy :STACKORIGIN+9
  1054 146B A9 54			lda #$54
  1055 146D 91 10			sta (:bp),y
  1056
  1057 				; optimize OK (tools.inc), line = 91
  1058
  1059 146F A5 59			lda I0B
  1060 1471 0A				asl @
  1061 1472 A8				tay
  1062 1473 B9 60 00			lda adr.OBSTACLES,y
  1063 1476 38 E9 00			sub #$00
  1064 1479 85 21			sta :STACKORIGIN+9
  1065 147B B9 61 00			lda adr.OBSTACLES+1,y
  1066 147E E9 04			sbc #$04
  1067 1480 85 11			sta :bp+1
  1068 1482 A4 21			ldy :STACKORIGIN+9
  1069 1484 A9 65			lda #$65
  1070 1486 91 10			sta (:bp),y
  1071 1488			l_02CE
  1072
  1073 				; --- ForToDoEpilog
  1074 1488 C6 59			dec I0B
  1075 148A 10 C1			jpl l_02AC
  1076 148C			l_02BA
  1077
  1078 				; ------------------------------------------------------------
  1079
  1080 = 0000			@FORTMP_02A9	= $00
  1081 148C			@exit
  1082 					.ifdef @new
  1083 					lda <@VarData
  1084 					sta :ztmp
  1085 					lda >@VarData
  1086 					ldy #@VarDataSize-1
  1087 					jmp @FreeMem
  1088 					els
  1089 148C 60				rts						; ret
  1090 					eif
  1091 				.endl
  1092
  1093 148D			.local	DRAWPLAYER					; PROCEDURE
  1094
  1095 				; optimize OK (tools.inc), line = 100
  1096
  1097 148D AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1098 1497 A0 04			ldy #PLY.DIR-DATAORIGIN
  1099 1499 B1 12			lda (:bp2),y
  1100 149B C5 5B			cmp NEWDIR
  1101 149D D0 14			jne l_0300
  1102
  1103 				; optimize OK (tools.inc), line = 101
  1104
  1105 149F A5 5B			lda NEWDIR
  1106 14A1 29 0C			and #$0C
  1107 14A3 F0 07			jeq l_0317
  1108 14A5 A9 40			lda #$40
  1109 14A7 85 58			sta T0B
  1110 14A9 4C B0 14			jmp l_0325
  1111 14AC			l_0317
  1112 14AC A9 42			lda #$42
  1113 14AE 85 58			sta T0B
  1114 14B0			l_0325
  1115 14B0 4C 23 15			jmp l_0332
  1116 14B3			l_0300
  1117
  1118 				; optimize OK (tools.inc), line = 103
  1119
  1120 14B3 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1121 14BD A0 04			ldy #PLY.DIR-DATAORIGIN
  1122 14BF B1 12			lda (:bp2),y
  1123 14C1 29 0A			and #$0A
  1124 14C3 F0 0A			jeq l_0358
  1125 14C5 A5 5B			lda NEWDIR
  1126 14C7 29 05			and #$05
  1127 14C9 F0 04			jeq l_0358
  1128 14CB A9 7D			lda #$7D
  1129 14CD 85 58			sta T0B
  1130 14CF			l_0358
  1131
  1132 				; optimize OK (tools.inc), line = 104
  1133
  1134 14CF AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1135 14D9 A0 04			ldy #PLY.DIR-DATAORIGIN
  1136 14DB B1 12			lda (:bp2),y
  1137 14DD 29 09			and #$09
  1138 14DF F0 0A			jeq l_0385
  1139 14E1 A5 5B			lda NEWDIR
  1140 14E3 29 06			and #$06
  1141 14E5 F0 04			jeq l_0385
  1142 14E7 A9 6E			lda #$6E
  1143 14E9 85 58			sta T0B
  1144 14EB			l_0385
  1145
  1146 				; optimize OK (tools.inc), line = 105
  1147
  1148 14EB AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1149 14F5 A0 04			ldy #PLY.DIR-DATAORIGIN
  1150 14F7 B1 12			lda (:bp2),y
  1151 14F9 29 06			and #$06
  1152 14FB F0 0A			jeq l_03B2
  1153 14FD A5 5B			lda NEWDIR
  1154 14FF 29 09			and #$09
  1155 1501 F0 04			jeq l_03B2
  1156 1503 A9 6D			lda #$6D
  1157 1505 85 58			sta T0B
  1158 1507			l_03B2
  1159
  1160 				; optimize OK (tools.inc), line = 106
  1161
  1162 1507 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1163 1511 A0 04			ldy #PLY.DIR-DATAORIGIN
  1164 1513 B1 12			lda (:bp2),y
  1165 1515 29 05			and #$05
  1166 1517 F0 0A			jeq l_03DF
  1167 1519 A5 5B			lda NEWDIR
  1168 151B 29 0A			and #$0A
  1169 151D F0 04			jeq l_03DF
  1170 151F A9 70			lda #$70
  1171 1521 85 58			sta T0B
  1172 1523			l_03DF
  1173 1523			l_0332
  1174
  1175 				; optimize OK (tools.inc), line = 108
  1176
  1177 1523 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1178 152D A0 00			ldy #PLY.X-DATAORIGIN
  1179 152F B1 12			lda (:bp2),y
  1180 1531 8D 86 2C			sta PUTCHAR_00A4.X
  1181 1534 A0 01			ldy #PLY.Y-DATAORIGIN
  1182 1536 B1 12			lda (:bp2),y
  1183 1538 8D 87 2C			sta PUTCHAR_00A4.Y
  1184 153B A5 58			lda T0B
  1185 153D 8D 88 2C			sta PUTCHAR_00A4.V
  1186 1540 20 24 12			jsr PUTCHAR_00A4
  1187
  1188 				; optimize OK (tools.inc), line = 110
  1189
  1190 1543 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1191 154D A0 04			ldy #PLY.DIR-DATAORIGIN
  1192 154F A5 5B			lda NEWDIR
  1193 1551 91 12			sta (:bp2),y
  1194
  1195 				; optimize OK (tools.inc), line = 112
  1196
  1197 1553 A5 5B			lda NEWDIR
  1198 1555 8D 92 2D			sta @CASETMP_0003
  1199 1558 C9 01			cmp #$01
  1200 155A D0 1A			jne l_0401
  1201 155C			@
  1202
  1203 				; optimize OK (tools.inc), line = 113
  1204
  1205 155C AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1206 1566 A0 01			ldy #PLY.Y-DATAORIGIN
  1207 1568 B1 12			lda (:bp2),y
  1208 156A 38 E9 01			sub #$01
  1209 156D 91 12			sta (:bp2),y
  1210 156F A9 50			lda #$50
  1211 1571 85 58			sta T0B
  1212
  1213 1573 4C CD 15			jmp a_0003
  1214 1576			l_0401
  1215 1576 C9 02			cmp #$02
  1216 1578 D0 1A			jne l_040F
  1217 157A			@
  1218
  1219 				; optimize OK (tools.inc), line = 114
  1220
  1221 157A AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1222 1584 A0 01			ldy #PLY.Y-DATAORIGIN
  1223 1586 B1 12			lda (:bp2),y
  1224 1588 18 69 01			add #$01
  1225 158B 91 12			sta (:bp2),y
  1226 158D A9 53			lda #$53
  1227 158F 85 58			sta T0B
  1228
  1229 1591 4C CD 15			jmp a_0003
  1230 1594			l_040F
  1231 1594 C9 04			cmp #$04
  1232 1596 D0 1A			jne l_041D
  1233 1598			@
  1234
  1235 				; optimize OK (tools.inc), line = 115
  1236
  1237 1598 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1238 15A2 A0 00			ldy #PLY.X-DATAORIGIN
  1239 15A4 B1 12			lda (:bp2),y
  1240 15A6 38 E9 01			sub #$01
  1241 15A9 91 12			sta (:bp2),y
  1242 15AB A9 51			lda #$51
  1243 15AD 85 58			sta T0B
  1244
  1245 15AF 4C CD 15			jmp a_0003
  1246 15B2			l_041D
  1247 15B2 C9 08			cmp #$08
  1248 15B4 D0 17			jne l_042B
  1249 15B6			@
  1250
  1251 				; optimize OK (tools.inc), line = 116
  1252
  1253 15B6 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1254 15C0 A0 00			ldy #PLY.X-DATAORIGIN
  1255 15C2 B1 12			lda (:bp2),y
  1256 15C4 18 69 01			add #$01
  1257 15C7 91 12			sta (:bp2),y
  1258 15C9 A9 52			lda #$52
  1259 15CB 85 58			sta T0B
  1260
  1261 15CD			l_042B
  1262 15CD			a_0003
  1263
  1264 				; optimize OK (tools.inc), line = 119
  1265
  1266 15CD AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1267 15D7 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1268 15D9 A5 58			lda T0B
  1269 15DB 91 12			sta (:bp2),y
  1270
  1271 				; optimize OK (tools.inc), line = 121
  1272
  1273 15DD A0 00			ldy #PLY.X-DATAORIGIN
  1274 15DF B1 12			lda (:bp2),y
  1275 15E1 8D 89 2C			sta PUTCHAR_00B3.X
  1276 15E4 A0 01			ldy #PLY.Y-DATAORIGIN
  1277 15E6 B1 12			lda (:bp2),y
  1278 15E8 8D 8A 2C			sta PUTCHAR_00B3.Y
  1279 15EB A0 02			ldy #PLY.HEAD-DATAORIGIN
  1280 15ED B1 12			lda (:bp2),y
  1281 15EF 8D 8B 2C			sta PUTCHAR_00B3.V
  1282 15F2 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1283 15F4 B1 12			lda (:bp2),y
  1284 15F6 8D 8C 2C			sta PUTCHAR_00B3.C
  1285 15F9 20 3D 12			jsr PUTCHAR_00B3
  1286
  1287 				; ------------------------------------------------------------
  1288
  1289 = 2D92			@CASETMP_0003	= DATAORIGIN+$0142
  1290
  1291 = 2D92			@VarData	= @CASETMP_0003
  1292 = 0001			@VarDataSize	= 1
  1293
  1294 15FC			@exit
  1295 					.ifdef @new
  1296 					lda <@VarData
  1297 					sta :ztmp
  1298 					lda >@VarData
  1299 					ldy #@VarDataSize-1
  1300 					jmp @FreeMem
  1301 					els
  1302 15FC 60				rts						; ret
  1303 					eif
  1304 				.endl
  1305
  1306 15FD			.local	PLAYERBUSTED					; PROCEDURE
  1307
  1308 				; optimize OK (tools.inc), line = 128
  1309
  1310 15FD AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1311 1607 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1312 1609 A9 00			lda #$00
  1313 160B 91 12			sta (:bp2),y
  1314 160D C6 5A			dec ALIVE
  1315
  1316 				; optimize OK (tools.inc), line = 129
  1317
  1318 160F A0 00			ldy #PLY.X-DATAORIGIN
  1319 1611 B1 12			lda (:bp2),y
  1320 1613 8D 89 2C			sta PUTCHAR_00B3.X
  1321 1616 A0 01			ldy #PLY.Y-DATAORIGIN
  1322 1618 B1 12			lda (:bp2),y
  1323 161A 8D 8A 2C			sta PUTCHAR_00B3.Y
  1324 161D A0 02			ldy #PLY.HEAD-DATAORIGIN
  1325 161F B1 12			lda (:bp2),y
  1326 1621 8D 8B 2C			sta PUTCHAR_00B3.V
  1327 1624 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1328 1626 B1 12			lda (:bp2),y
  1329 1628 18 69 80			add #$80
  1330 162B 8D 8C 2C			sta PUTCHAR_00B3.C
  1331 162E 20 3D 12			jsr PUTCHAR_00B3
  1332 1631			@exit
  1333 					.ifdef @new
  1334 					lda <@VarData
  1335 					sta :ztmp
  1336 					lda >@VarData
  1337 					ldy #@VarDataSize-1
  1338 					jmp @FreeMem
  1339 					els
  1340 1631 60				rts						; ret
  1341 					eif
  1342 				.endl
  1343
  1344 1632			.local	CHECKJOYSTATUS					; PROCEDURE
  1345
  1346 				; optimize OK (tools.inc), line = 136
  1347
  1348 1632 A9 02			lda #$02
  1349 1634 8D 08 FF			sta JOY
  1350 1637 A9 FF			lda #$FF
  1351 1639 8D 30 FD			sta KEYSCAN
  1352
  1353 				; optimize OK (tools.inc), line = 137
  1354
  1355 163C AD 08 FF			lda JOY
  1356 163F 49 FF			eor #$FF
  1357 1641 85 5D			sta JOYSTATUS
  1358 1643			@exit
  1359 					.ifdef @new
  1360 					lda <@VarData
  1361 					sta :ztmp
  1362 					lda >@VarData
  1363 					ldy #@VarDataSize-1
  1364 					jmp @FreeMem
  1365 					els
  1366 1643 60				rts						; ret
  1367 					eif
  1368 				.endl
  1369
  1370 1644			.local	SETPLAYER					; PROCEDURE
  1371
  1372 				; optimize OK (tools.inc), line = 144
  1373
  1374 1644 AD 93 2D			lda P
  1375 1647 8D 3F 2C			sta PLY
  1376 164A AD 94 2D			lda P+1
  1377 164D 8D 40 2C			sta PLY+1
  1378
  1379 				; optimize OK (tools.inc), line = 146
  1380
  1381 1650 AD 97 2D			lda DIR
  1382 1653 8D 9B 2D			sta @CASETMP_0004
  1383 1656 C9 01			cmp #$01
  1384 1658 D0 07			jne l_0492
  1385 165A			@
  1386
  1387 				; optimize OK (tools.inc), line = 147
  1388
  1389 165A A9 50			lda #$50
  1390 165C 85 58			sta T0B
  1391
  1392 165E 4C 7F 16			jmp a_0004
  1393 1661			l_0492
  1394 1661 C9 02			cmp #$02
  1395 1663 D0 07			jne l_049F
  1396 1665			@
  1397
  1398 				; optimize OK (tools.inc), line = 148
  1399
  1400 1665 A9 53			lda #$53
  1401 1667 85 58			sta T0B
  1402
  1403 1669 4C 7F 16			jmp a_0004
  1404 166C			l_049F
  1405 166C C9 04			cmp #$04
  1406 166E D0 07			jne l_04AC
  1407 1670			@
  1408
  1409 				; optimize OK (tools.inc), line = 149
  1410
  1411 1670 A9 51			lda #$51
  1412 1672 85 58			sta T0B
  1413
  1414 1674 4C 7F 16			jmp a_0004
  1415 1677			l_04AC
  1416 1677 C9 08			cmp #$08
  1417 1679 D0 04			jne l_04B9
  1418 167B			@
  1419
  1420 				; optimize OK (tools.inc), line = 150
  1421
  1422 167B A9 52			lda #$52
  1423 167D 85 58			sta T0B
  1424
  1425 167F			l_04B9
  1426 167F			a_0004
  1427
  1428 				; optimize OK (tools.inc), line = 153
  1429
  1430 167F AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1431 1689 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1432 168B AD 98 2D			lda BRAIN
  1433 168E 91 12			sta (:bp2),y
  1434 1690 A0 00			ldy #PLY.X-DATAORIGIN
  1435 1692 AD 95 2D			lda X
  1436 1695 91 12			sta (:bp2),y
  1437 1697 A0 01			ldy #PLY.Y-DATAORIGIN
  1438 1699 AD 96 2D			lda Y
  1439 169C 91 12			sta (:bp2),y
  1440 169E A0 04			ldy #PLY.DIR-DATAORIGIN
  1441 16A0 AD 97 2D			lda DIR
  1442 16A3 91 12			sta (:bp2),y
  1443
  1444 				; optimize OK (tools.inc), line = 154
  1445
  1446 16A5 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1447 16A7 A5 58			lda T0B
  1448 16A9 91 12			sta (:bp2),y
  1449 16AB A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1450 16AD AD 99 2D			lda COLOUR
  1451 16B0 91 12			sta (:bp2),y
  1452 16B2 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1453 16B4 AD 9A 2D			lda ISALIVE
  1454 16B7 91 12			sta (:bp2),y
  1455
  1456 				; optimize OK (tools.inc), line = 155
  1457
  1458 16B9 AD 9A 2D			lda ISALIVE
  1459 16BC F0 1C			jeq l_04FB
  1460
  1461 				; optimize FAIL (0, tools.inc), line = 156
  1462
  1463 16BE E6 5A			inc ALIVE
  1464 16C0 AD 99 2D			lda COLOUR
  1465 16C3 8D 8C 2C			sta PUTCHAR_00B3.C
  1466 16C6 A5 58			lda T0B
  1467 16C8 8D 8B 2C			sta PUTCHAR_00B3.V
  1468 16CB AD 96 2D			lda Y
  1469 16CE 8D 8A 2C			sta PUTCHAR_00B3.Y
  1470 16D1 AD 95 2D			lda X
  1471 16D4 8D 89 2C			sta PUTCHAR_00B3.X
  1472 16D7 20 3D 12			jsr PUTCHAR_00B3
  1473 16DA			l_04FB
  1474
  1475 				; ------------------------------------------------------------
  1476
  1477 = 2D93			P	= DATAORIGIN+$0143
  1478 = 2D95			X	= DATAORIGIN+$0145
  1479 = 2D96			Y	= DATAORIGIN+$0146
  1480 = 2D97			DIR	= DATAORIGIN+$0147
  1481 = 2D98			BRAIN	= DATAORIGIN+$0148
  1482 = 2D99			COLOUR	= DATAORIGIN+$0149
  1483 = 2D9A			ISALIVE	= DATAORIGIN+$014A
  1484 = 2D9B			@CASETMP_0004	= DATAORIGIN+$014B
  1485
  1486 = 2D93			@VarData	= P
  1487 = 0009			@VarDataSize	= 9
  1488
  1489 16DA			@exit
  1490 					.ifdef @new
  1491 					lda <@VarData
  1492 					sta :ztmp
  1493 					lda >@VarData
  1494 					ldy #@VarDataSize-1
  1495 					jmp @FreeMem
  1496 					els
  1497 16DA 60				rts						; ret
  1498 					eif
  1499 				.endl
  1500
  1501 16DB			.local	NEXTLEVEL					; PROCEDURE
  1502
  1503 				; optimize FAIL (0, tools.inc), line = 164
  1504
  1505 16DB EE 60 2C			inc LEVEL
  1506 16DE AD 60 2C			lda LEVEL
  1507 16E1 C9 08			cmp #$08
  1508 16E3 D0 05			jne l_0529
  1509 16E5 A9 05			lda #$05
  1510 16E7 8D 60 2C			sta LEVEL
  1511 16EA			l_0529
  1512 16EA			@exit
  1513 					.ifdef @new
  1514 					lda <@VarData
  1515 					sta :ztmp
  1516 					lda >@VarData
  1517 					ldy #@VarDataSize-1
  1518 					jmp @FreeMem
  1519 					els
  1520 16EA 60				rts						; ret
  1521 					eif
  1522 				.endl
  1523
  1524 16EB			.local	STARTSCREEN					; PROCEDURE
  1525
  1526 				; optimize FAIL ('PRINTXY', tools.inc), line = 173
  1527
  1528 16EB E8				inx
  1529 16EC AD 7B 17 95 18		mva INFO :STACKORIGIN,x
  1530 16F1 AD 7C 17 95 28		mva INFO+1 :STACKORIGIN+STACKWIDTH,x
  1531 16F6 E8				inx
  1532 16F7 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1533 16FB E8				inx
  1534 16FC A9 00 95 18			mva #$00 :STACKORIGIN,x
  1535 1700 E8				inx
  1536 1701 A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1537 1705 20 6D 12			jsr PRINTXY
  1538
  1539 				; optimize OK (tools.inc), line = 174
  1540
  1541 1708 AD 65 2C			lda PLAYER1.COLOUR
  1542 170B 18 69 80			add #$80
  1543 170E 8D 8C 2C			sta PUTCHAR_00B3.C
  1544 1711 AD 64 2C			lda PLAYER1.HEAD
  1545 1714 8D 8B 2C			sta PUTCHAR_00B3.V
  1546 1717 AD 63 2C			lda PLAYER1.Y
  1547 171A 8D 8A 2C			sta PUTCHAR_00B3.Y
  1548 171D AD 62 2C			lda PLAYER1.X
  1549 1720 8D 89 2C			sta PUTCHAR_00B3.X
  1550 1723 20 3D 12			jsr PUTCHAR_00B3
  1551
  1552 				; --- RepeatUntilProlog
  1553 1726			l_054C
  1554
  1555 				; optimize FAIL ('CHECKJOYSTATUS', tools.inc), line = 176
  1556
  1557 1726 20 32 16			jsr CHECKJOYSTATUS
  1558 1729 A5 5D			lda JOYSTATUS
  1559 172B C9 40			cmp #$40
  1560 172D D0 F7			jne l_054C
  1561
  1562 				; optimize OK (tools.inc), line = 178
  1563
  1564 172F AD 9C 2D			lda adr.INFO
  1565 1732 85 0C			sta SYSTEM.FILLCHAR_006E.COUNT
  1566 1734 A9 A0			lda #$A0
  1567 1736 85 04			sta SYSTEM.FILLCHAR_006E.VALUE
  1568 1738 A9 00			lda #$00
  1569 173A 85 0D			sta SYSTEM.FILLCHAR_006E.COUNT+1
  1570 173C A9 02			lda #$02
  1571 173E 85 08			sta SYSTEM.FILLCHAR_006E.A
  1572 1740 A9 0C			lda #$0C
  1573 1742 85 09			sta SYSTEM.FILLCHAR_006E.A+1
  1574 1744 20 A0 11			jsr SYSTEM.FILLCHAR_006E
  1575
  1576 				; optimize OK (tools.inc), line = 179
  1577
  1578 1747 AD 9C 2D			lda adr.INFO
  1579 174A 85 0C			sta SYSTEM.FILLCHAR_006E.COUNT
  1580 174C A9 41			lda #$41
  1581 174E 85 04			sta SYSTEM.FILLCHAR_006E.VALUE
  1582 1750 A9 00			lda #$00
  1583 1752 85 0D			sta SYSTEM.FILLCHAR_006E.COUNT+1
  1584 1754 A9 02			lda #$02
  1585 1756 85 08			sta SYSTEM.FILLCHAR_006E.A
  1586 1758 A9 08			lda #$08
  1587 175A 85 09			sta SYSTEM.FILLCHAR_006E.A+1
  1588 175C 20 A0 11			jsr SYSTEM.FILLCHAR_006E
  1589
  1590 				; optimize OK (tools.inc), line = 180
  1591
  1592 175F AD 65 2C			lda PLAYER1.COLOUR
  1593 1762 8D 8C 2C			sta PUTCHAR_00B3.C
  1594 1765 AD 64 2C			lda PLAYER1.HEAD
  1595 1768 8D 8B 2C			sta PUTCHAR_00B3.V
  1596 176B AD 63 2C			lda PLAYER1.Y
  1597 176E 8D 8A 2C			sta PUTCHAR_00B3.Y
  1598 1771 AD 62 2C			lda PLAYER1.X
  1599 1774 8D 89 2C			sta PUTCHAR_00B3.X
  1600 1777 20 3D 12			jsr PUTCHAR_00B3
  1601
  1602 				; ------------------------------------------------------------
  1603
  1604 = 2D9C			adr.INFO	= [DATAORIGIN+$014C] .array [256]
  1605 177A			.var INFO	= adr.INFO .word
  1606
  1607 = 177B			@VarData	= INFO
  1608 = 0100			@VarDataSize	= 256
  1609
  1610 177A			@exit
  1611 					.ifdef @new
  1612 					lda <@VarData
  1613 					sta :ztmp
  1614 					lda >@VarData
  1615 					ldy #@VarDataSize-1
  1616 					jmp @FreeMem
  1617 					els
  1618 177A 60				rts						; ret
  1619 					eif
  1620 = 177B 9C 2D		INFO
  1620 				.endl
  1621
  1622 177D			.local	ENDSCREEN					; PROCEDURE
  1623
  1624 				; optimize OK (tools.inc), line = 190
  1625
  1626 177D AD 68 2C			lda PLAYER1.SCORE
  1627 1780 C9 39			cmp #$39
  1628 1782 D0 20			jne l_0583
  1629 1784 E8				inx
  1630 1785 AD C2 17 95 18		mva WINNER :STACKORIGIN,x
  1631 178A AD C3 17 95 28		mva WINNER+1 :STACKORIGIN+STACKWIDTH,x
  1632 178F E8				inx
  1633 1790 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1634 1794 E8				inx
  1635 1795 A9 00 95 18			mva #$00 :STACKORIGIN,x
  1636 1799 E8				inx
  1637 179A A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1638 179E 20 6D 12			jsr PRINTXY
  1639 17A1 4C C1 17			jmp l_0593
  1640 17A4			l_0583
  1641
  1642 				; optimize FAIL ('PRINTXY', tools.inc), line = 191
  1643
  1644 17A4 E8				inx
  1645 17A5 AD C4 17 95 18		mva LOSER :STACKORIGIN,x
  1646 17AA AD C5 17 95 28		mva LOSER+1 :STACKORIGIN+STACKWIDTH,x
  1647 17AF E8				inx
  1648 17B0 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1649 17B4 E8				inx
  1650 17B5 A9 00 95 18			mva #$00 :STACKORIGIN,x
  1651 17B9 E8				inx
  1652 17BA A9 F1 95 18			mva #$F1 :STACKORIGIN,x
  1653 17BE 20 6D 12			jsr PRINTXY
  1654 17C1			l_0593
  1655
  1656 				; ------------------------------------------------------------
  1657
  1658 = 2E9C			adr.WINNER	= [DATAORIGIN+$024C] .array [256]
  1659 17C1			.var WINNER	= adr.WINNER .word
  1660 = 2F9C			adr.LOSER	= [DATAORIGIN+$034C] .array [256]
  1661 17C1			.var LOSER	= adr.LOSER .word
  1662
  1663 = 17C2			@VarData	= WINNER
  1664 = 0200			@VarDataSize	= 512
  1665
  1666 17C1			@exit
  1667 					.ifdef @new
  1668 					lda <@VarData
  1669 					sta :ztmp
  1670 					lda >@VarData
  1671 					ldy #@VarDataSize-1
  1672 					jmp @FreeMem
  1673 					els
  1674 17C1 60				rts						; ret
  1675 					eif
  1676 = 17C2 9C 2E		WINNER
  1676 = 17C4 9C 2F		LOSER
  1676 				.endl
  1677
  1678 17C6			.local	ISGAMEOVER					; FUNCTION
  1679
  1680 				; optimize OK (tools.inc), line = 198
  1681
  1682 17C6 AD 68 2C			lda PLAYER1.SCORE
  1683 17C9 C9 39			cmp #$39
  1684 17CB D0 05			jne l_05AF
  1685 17CD A9 01			lda #$01
  1686 17CF 8D 61 2C			sta GAMEOVER
  1687 17D2			l_05AF
  1688
  1689 				; optimize OK (tools.inc), line = 199
  1690
  1691 17D2 AD 70 2C			lda PLAYER2.SCORE
  1692 17D5 C9 39			cmp #$39
  1693 17D7 D0 05			jne l_05C8
  1694 17D9 A9 01			lda #$01
  1695 17DB 8D 61 2C			sta GAMEOVER
  1696 17DE			l_05C8
  1697
  1698 				; optimize OK (tools.inc), line = 200
  1699
  1700 17DE AD 78 2C			lda PLAYER3.SCORE
  1701 17E1 C9 39			cmp #$39
  1702 17E3 D0 05			jne l_05E1
  1703 17E5 A9 01			lda #$01
  1704 17E7 8D 61 2C			sta GAMEOVER
  1705 17EA			l_05E1
  1706
  1707 				; optimize OK (tools.inc), line = 201
  1708
  1709 17EA AD 80 2C			lda PLAYER4.SCORE
  1710 17ED C9 39			cmp #$39
  1711 17EF D0 05			jne l_05FA
  1712 17F1 A9 01			lda #$01
  1713 17F3 8D 61 2C			sta GAMEOVER
  1714 17F6			l_05FA
  1715
  1716 				; optimize OK (tools.inc), line = 202
  1717
  1718 17F6 AD 61 2C			lda GAMEOVER
  1719 17F9 8D 9C 30			sta RESULT
  1720 17FC			@exit
  1721
  1722 				; ------------------------------------------------------------
  1723
  1724 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
  1725 				; as Pointer
  1726
  1727 17FC E8				inx
  1728 17FD AD 9C 30 95 18		mva RESULT :STACKORIGIN,x
  1729
  1730 					.ifdef @new
  1731 					lda <@VarData
  1732 					sta :ztmp
  1733 					lda >@VarData
  1734 					ldy #@VarDataSize-1
  1735 					jmp @FreeMem
  1736 					eif
  1737
  1738 				; ------------------------------------------------------------
  1739
  1740 = 309C			RESULT	= DATAORIGIN+$044C
  1741
  1742 = 309C			@VarData	= RESULT
  1743 = 0001			@VarDataSize	= 1
  1744
  1745 1802 60				rts						; ret
  1746 				.endl
  1747
  1748 1803			.local	ISONELEFT					; FUNCTION
  1749
  1750 				; optimize OK (tools.inc), line = 209
  1751
  1752 1803 A0 01			ldy #1
  1753 1805 A5 5A			lda ALIVE
  1754 1807 F0 01			beq @+
  1755 1809 88				dey
  1756 180A			@
  1757 180A 84 21			sty :STACKORIGIN+9
  1758 180C A0 01			ldy #1
  1759 180E A5 5A			lda ALIVE
  1760 1810 C9 FF			cmp #$FF
  1761 1812 F0 01			beq @+
  1762 1814 88				dey
  1763 1815			@
  1764 1815 98				tya
  1765 1816 05 21			ora :STACKORIGIN+9
  1766 1818 8D 9D 30			sta RESULT
  1767 181B			@exit
  1768
  1769 				; ------------------------------------------------------------
  1770
  1771 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
  1772 				; as Pointer
  1773
  1774 181B E8				inx
  1775 181C AD 9D 30 95 18		mva RESULT :STACKORIGIN,x
  1776
  1777 					.ifdef @new
  1778 					lda <@VarData
  1779 					sta :ztmp
  1780 					lda >@VarData
  1781 					ldy #@VarDataSize-1
  1782 					jmp @FreeMem
  1783 					eif
  1784
  1785 				; ------------------------------------------------------------
  1786
  1787 = 309D			RESULT	= DATAORIGIN+$044D
  1788
  1789 = 309D			@VarData	= RESULT
  1790 = 0001			@VarDataSize	= 1
  1791
  1792 1821 60				rts						; ret
  1793 				.endl
  1794
  1795 1822			.local	HUMAN						; PROCEDURE
  1796
  1797 				; optimize FAIL ('CHECKJOYSTATUS', ai.inc), line = 5
  1798
  1799 1822 20 32 16			jsr CHECKJOYSTATUS
  1800 1825 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1801 182F A0 04			ldy #PLY.DIR-DATAORIGIN
  1802 1831 B1 12			lda (:bp2),y
  1803 1833 85 5B			sta NEWDIR
  1804
  1805 				; optimize OK (ai.inc), line = 6
  1806
  1807 1835 A5 5D			lda JOYSTATUS
  1808 1837 8D 9E 30			sta @CASETMP_0005
  1809 183A C9 01			cmp #$01
  1810 183C D0 19			jne l_063F
  1811 183E			@
  1812
  1813 				; optimize OK (ai.inc), line = 7
  1814
  1815 183E AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1816 1848 A0 04			ldy #PLY.DIR-DATAORIGIN
  1817 184A B1 12			lda (:bp2),y
  1818 184C C9 02			cmp #$02
  1819 184E F0 04			jeq l_0651
  1820 1850 A9 01			lda #$01
  1821 1852 85 5B			sta NEWDIR
  1822 1854			l_0651
  1823
  1824 1854 4C AB 18			jmp a_0005
  1825 1857			l_063F
  1826 1857 C9 02			cmp #$02
  1827 1859 D0 19			jne l_0661
  1828 185B			@
  1829
  1830 				; optimize OK (ai.inc), line = 8
  1831
  1832 185B AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1833 1865 A0 04			ldy #PLY.DIR-DATAORIGIN
  1834 1867 B1 12			lda (:bp2),y
  1835 1869 C9 01			cmp #$01
  1836 186B F0 04			jeq l_0673
  1837 186D A9 02			lda #$02
  1838 186F 85 5B			sta NEWDIR
  1839 1871			l_0673
  1840
  1841 1871 4C AB 18			jmp a_0005
  1842 1874			l_0661
  1843 1874 C9 04			cmp #$04
  1844 1876 D0 19			jne l_0683
  1845 1878			@
  1846
  1847 				; optimize OK (ai.inc), line = 9
  1848
  1849 1878 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1850 1882 A0 04			ldy #PLY.DIR-DATAORIGIN
  1851 1884 B1 12			lda (:bp2),y
  1852 1886 C9 08			cmp #$08
  1853 1888 F0 04			jeq l_0695
  1854 188A A9 04			lda #$04
  1855 188C 85 5B			sta NEWDIR
  1856 188E			l_0695
  1857
  1858 188E 4C AB 18			jmp a_0005
  1859 1891			l_0683
  1860 1891 C9 08			cmp #$08
  1861 1893 D0 16			jne l_06A5
  1862 1895			@
  1863
  1864 				; optimize OK (ai.inc), line = 10
  1865
  1866 1895 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1867 189F A0 04			ldy #PLY.DIR-DATAORIGIN
  1868 18A1 B1 12			lda (:bp2),y
  1869 18A3 C9 04			cmp #$04
  1870 18A5 F0 04			jeq l_06B7
  1871 18A7 A9 08			lda #$08
  1872 18A9 85 5B			sta NEWDIR
  1873 18AB			l_06B7
  1874
  1875 18AB			l_06A5
  1876 18AB			a_0005
  1877
  1878 				; optimize OK (ai.inc), line = 13
  1879
  1880 18AB A5 5B			lda NEWDIR
  1881 18AD 25 5C			and AVAILDIR
  1882 18AF D0 12			jne l_06DE
  1883
  1884 				; optimize OK (ai.inc), line = 14
  1885
  1886 18B1 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1887 18BB A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1888 18BD A9 00			lda #$00
  1889 18BF 91 12			sta (:bp2),y
  1890 18C1 C6 5A			dec ALIVE
  1891 18C3			l_06DE
  1892
  1893 				; ------------------------------------------------------------
  1894
  1895 = 309E			@CASETMP_0005	= DATAORIGIN+$044E
  1896
  1897 = 309E			@VarData	= @CASETMP_0005
  1898 = 0001			@VarDataSize	= 1
  1899
  1900 18C3			@exit
  1901 					.ifdef @new
  1902 					lda <@VarData
  1903 					sta :ztmp
  1904 					lda >@VarData
  1905 					ldy #@VarDataSize-1
  1906 					jmp @FreeMem
  1907 					els
  1908 18C3 60				rts						; ret
  1909 					eif
  1910 				.endl
  1911
  1912 18C4			.local	AISTRAIGHT					; PROCEDURE
  1913
  1914 				; optimize OK (ai.inc), line = 22
  1915
  1916 18C4 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  1917 18CE A0 04			ldy #PLY.DIR-DATAORIGIN
  1918 18D0 B1 12			lda (:bp2),y
  1919 18D2 25 5C			and AVAILDIR
  1920 18D4 F0 07			jeq l_0705
  1921 18D6 B1 12			lda (:bp2),y
  1922 18D8 85 5B			sta NEWDIR
  1923 18DA 4C 40 19			jmp l_0715
  1924 18DD			l_0705
  1925
  1926 				; optimize OK (ai.inc), line = 24
  1927
  1928 18DD A5 5C			lda AVAILDIR
  1929 18DF C9 03			cmp #$03
  1930 18E1 D0 10			jne l_0727
  1931 18E3 A9 02			lda #$02
  1932 18E5 20 D0 11			jsr SYSTEM.RANDOM_0087
  1933 18E8 B4 18			ldy :STACKORIGIN,x
  1934 18EA B9 58 10			lda adr.DIRECTION,y
  1935 18ED 85 5B			sta NEWDIR
  1936 18EF CA				dex
  1937 18F0 4C 0B 19			jmp l_0739
  1938 18F3			l_0727
  1939
  1940 				; optimize OK (ai.inc), line = 26
  1941
  1942 18F3 A5 5C			lda AVAILDIR
  1943 18F5 8D 9F 30			sta @CASETMP_0006
  1944 18F8 C9 01			cmp #$01
  1945 18FA D0 07			jne l_0744
  1946 18FC			@
  1947
  1948 				; optimize OK (ai.inc), line = 27
  1949
  1950 18FC A9 01			lda #$01
  1951 18FE 85 5B			sta NEWDIR
  1952
  1953 1900 4C 0B 19			jmp a_0006
  1954 1903			l_0744
  1955 1903 C9 02			cmp #$02
  1956 1905 D0 04			jne l_0751
  1957 1907			@
  1958
  1959 				; optimize OK (ai.inc), line = 28
  1960
  1961 1907 A9 02			lda #$02
  1962 1909 85 5B			sta NEWDIR
  1963
  1964 190B			l_0751
  1965 190B			a_0006
  1966 190B			l_0739
  1967
  1968 				; optimize OK (ai.inc), line = 31
  1969
  1970 190B A5 5C			lda AVAILDIR
  1971 190D C9 0C			cmp #$0C
  1972 190F D0 17			jne l_076D
  1973 1911 A9 02			lda #$02
  1974 1913 20 D0 11			jsr SYSTEM.RANDOM_0087
  1975 1916 B5 18			lda :STACKORIGIN,x
  1976 1918 18 69 02			add #$02
  1977 191B 95 18			sta :STACKORIGIN,x
  1978 191D B4 18			ldy :STACKORIGIN,x
  1979 191F B9 58 10			lda adr.DIRECTION,y
  1980 1922 85 5B			sta NEWDIR
  1981 1924 CA				dex
  1982 1925 4C 40 19			jmp l_0783
  1983 1928			l_076D
  1984
  1985 				; optimize OK (ai.inc), line = 33
  1986
  1987 1928 A5 5C			lda AVAILDIR
  1988 192A 8D A0 30			sta @CASETMP_0007
  1989 192D C9 04			cmp #$04
  1990 192F D0 07			jne l_078E
  1991 1931			@
  1992
  1993 				; optimize OK (ai.inc), line = 34
  1994
  1995 1931 A9 04			lda #$04
  1996 1933 85 5B			sta NEWDIR
  1997
  1998 1935 4C 40 19			jmp a_0007
  1999 1938			l_078E
  2000 1938 C9 08			cmp #$08
  2001 193A D0 04			jne l_079B
  2002 193C			@
  2003
  2004 				; optimize OK (ai.inc), line = 35
  2005
  2006 193C A9 08			lda #$08
  2007 193E 85 5B			sta NEWDIR
  2008
  2009 1940			l_079B
  2010 1940			a_0007
  2011 1940			l_0783
  2012 1940			l_0715
  2013
  2014 				; ------------------------------------------------------------
  2015
  2016 = 309F			@CASETMP_0006	= DATAORIGIN+$044F
  2017 = 30A0			@CASETMP_0007	= DATAORIGIN+$0450
  2018
  2019 = 309F			@VarData	= @CASETMP_0006
  2020 = 0002			@VarDataSize	= 2
  2021
  2022 1940			@exit
  2023 					.ifdef @new
  2024 					lda <@VarData
  2025 					sta :ztmp
  2026 					lda >@VarData
  2027 					ldy #@VarDataSize-1
  2028 					jmp @FreeMem
  2029 					els
  2030 1940 60				rts						; ret
  2031 					eif
  2032 				.endl
  2033
  2034 1941			.local	AISAPPER					; PROCEDURE
  2035
  2036 				; optimize OK (ai.inc), line = 48
  2037
  2038 1941 A9 00			lda #$00
  2039 1943 8D A1 30			sta L
  2040 1946 8D A2 30			sta R
  2041 1949 8D A3 30			sta U
  2042 194C 8D A4 30			sta D
  2043
  2044 				; optimize OK (ai.inc), line = 49
  2045
  2046 194F AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  2047 1959 A0 00			ldy #PLY.X-DATAORIGIN
  2048 195B B1 12			lda (:bp2),y
  2049 195D 8D 82 2C			sta CALCSCREENADDR.X
  2050 1960 A0 01			ldy #PLY.Y-DATAORIGIN
  2051 1962 B1 12			lda (:bp2),y
  2052 1964 8D 83 2C			sta CALCSCREENADDR.Y
  2053 1967 20 01 12			jsr CALCSCREENADDR
  2054 196A B5 18			lda :STACKORIGIN,x
  2055 196C 85 5E			sta T0W
  2056 196E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2057 1970 85 5F			sta T0W+1
  2058 1972 CA				dex
  2059
  2060 				; optimize OK (ai.inc), line = 51
  2061
  2062 1973 A5 5C			lda AVAILDIR
  2063 1975 29 01			and #$01
  2064 1977 F0 73			jeq l_07D9
  2065
  2066 				; optimize OK (ai.inc), line = 52
  2067
  2068 1979 A9 05			lda #$05
  2069 197B 85 59			sta I0B
  2070
  2071 197D			l_07E3
  2072 				; --- ForToDoCondition
  2073 197D A5 59			lda I0B
  2074 197F C9 01			cmp #$01
  2075 1981 90 69			jcc l_07F1
  2076
  2077 				; optimize OK (ai.inc), line = 53
  2078
  2079 1983 0A				asl @
  2080 1984 A8				tay
  2081 1985 A5 5E			lda T0W
  2082 1987 38 F9 26 10			sub adr.MUL40,y
  2083 198B 85 21			sta :STACKORIGIN+9
  2084 198D A5 5F			lda T0W+1
  2085 198F F9 27 10			sbc adr.MUL40+1,y
  2086 1992 85 11			sta :bp+1
  2087 1994 A4 21			ldy :STACKORIGIN+9
  2088 1996 B1 10			lda (:bp),y
  2089 1998 C9 20			cmp #$20
  2090 199A D0 03			jne l_080B
  2091 199C EE A3 30			inc U
  2092 199F			l_080B
  2093
  2094 				; optimize OK (ai.inc), line = 54
  2095
  2096 199F A5 59			lda I0B
  2097 19A1 0A				asl @
  2098 19A2 A8				tay
  2099 19A3 A5 5E			lda T0W
  2100 19A5 38 F9 26 10			sub adr.MUL40,y
  2101 19A9 85 21			sta :STACKORIGIN+9
  2102 19AB A5 5F			lda T0W+1
  2103 19AD F9 27 10			sbc adr.MUL40+1,y
  2104 19B0 85 11			sta :bp+1
  2105 19B2 A5 21			lda :STACKORIGIN+9
  2106 19B4 18 69 01			add #$01
  2107 19B7 A8				tay
  2108 19B8 90 02			scc
  2109 19BA E6 11			inc :bp+1
  2110 19BC B1 10			lda (:bp),y
  2111 19BE C9 20			cmp #$20
  2112 19C0 D0 03			jne l_0830
  2113 19C2 EE A3 30			inc U
  2114 19C5			l_0830
  2115
  2116 				; optimize OK (ai.inc), line = 55
  2117
  2118 19C5 A5 59			lda I0B
  2119 19C7 0A				asl @
  2120 19C8 A8				tay
  2121 19C9 A5 5E			lda T0W
  2122 19CB 38 F9 26 10			sub adr.MUL40,y
  2123 19CF 85 21			sta :STACKORIGIN+9
  2124 19D1 A5 5F			lda T0W+1
  2125 19D3 F9 27 10			sbc adr.MUL40+1,y
  2126 19D6 85 11			sta :bp+1
  2127 19D8 A4 21			ldy :STACKORIGIN+9
  2128 19DA 88				dey
  2129 19DB B0 02			scs
  2130 19DD C6 11			dec :bp+1
  2131 19DF B1 10			lda (:bp),y
  2132 19E1 C9 20			cmp #$20
  2133 19E3 D0 03			jne l_0855
  2134 19E5 EE A3 30			inc U
  2135 19E8			l_0855
  2136
  2137 				; --- ForToDoEpilog
  2138 19E8 C6 59			dec I0B
  2139 19EA 10 91			jpl l_07E3
  2140 19EC			l_07F1
  2141 19EC			l_07D9
  2142
  2143 				; optimize OK (ai.inc), line = 59
  2144
  2145 19EC A5 5C			lda AVAILDIR
  2146 19EE 29 02			and #$02
  2147 19F0 F0 73			jeq l_0879
  2148
  2149 				; optimize OK (ai.inc), line = 60
  2150
  2151 19F2 A9 05			lda #$05
  2152 19F4 85 59			sta I0B
  2153
  2154 19F6			l_0883
  2155 				; --- ForToDoCondition
  2156 19F6 A5 59			lda I0B
  2157 19F8 C9 01			cmp #$01
  2158 19FA 90 69			jcc l_0891
  2159
  2160 				; optimize OK (ai.inc), line = 61
  2161
  2162 19FC 0A				asl @
  2163 19FD A8				tay
  2164 19FE A5 5E			lda T0W
  2165 1A00 18 79 26 10			add adr.MUL40,y
  2166 1A04 85 21			sta :STACKORIGIN+9
  2167 1A06 A5 5F			lda T0W+1
  2168 1A08 79 27 10			adc adr.MUL40+1,y
  2169 1A0B 85 11			sta :bp+1
  2170 1A0D A4 21			ldy :STACKORIGIN+9
  2171 1A0F B1 10			lda (:bp),y
  2172 1A11 C9 20			cmp #$20
  2173 1A13 D0 03			jne l_08AB
  2174 1A15 EE A4 30			inc D
  2175 1A18			l_08AB
  2176
  2177 				; optimize OK (ai.inc), line = 62
  2178
  2179 1A18 A5 59			lda I0B
  2180 1A1A 0A				asl @
  2181 1A1B A8				tay
  2182 1A1C A5 5E			lda T0W
  2183 1A1E 18 79 26 10			add adr.MUL40,y
  2184 1A22 85 21			sta :STACKORIGIN+9
  2185 1A24 A5 5F			lda T0W+1
  2186 1A26 79 27 10			adc adr.MUL40+1,y
  2187 1A29 85 11			sta :bp+1
  2188 1A2B A5 21			lda :STACKORIGIN+9
  2189 1A2D 18 69 01			add #$01
  2190 1A30 A8				tay
  2191 1A31 90 02			scc
  2192 1A33 E6 11			inc :bp+1
  2193 1A35 B1 10			lda (:bp),y
  2194 1A37 C9 20			cmp #$20
  2195 1A39 D0 03			jne l_08D0
  2196 1A3B EE A4 30			inc D
  2197 1A3E			l_08D0
  2198
  2199 				; optimize OK (ai.inc), line = 63
  2200
  2201 1A3E A5 59			lda I0B
  2202 1A40 0A				asl @
  2203 1A41 A8				tay
  2204 1A42 A5 5E			lda T0W
  2205 1A44 18 79 26 10			add adr.MUL40,y
  2206 1A48 85 21			sta :STACKORIGIN+9
  2207 1A4A A5 5F			lda T0W+1
  2208 1A4C 79 27 10			adc adr.MUL40+1,y
  2209 1A4F 85 11			sta :bp+1
  2210 1A51 A4 21			ldy :STACKORIGIN+9
  2211 1A53 88				dey
  2212 1A54 B0 02			scs
  2213 1A56 C6 11			dec :bp+1
  2214 1A58 B1 10			lda (:bp),y
  2215 1A5A C9 20			cmp #$20
  2216 1A5C D0 03			jne l_08F5
  2217 1A5E EE A4 30			inc D
  2218 1A61			l_08F5
  2219
  2220 				; --- ForToDoEpilog
  2221 1A61 C6 59			dec I0B
  2222 1A63 10 91			jpl l_0883
  2223 1A65			l_0891
  2224 1A65			l_0879
  2225
  2226 				; optimize OK (ai.inc), line = 67
  2227
  2228 1A65 A5 5C			lda AVAILDIR
  2229 1A67 29 04			and #$04
  2230 1A69 F0 5F			jeq l_0919
  2231
  2232 				; optimize OK (ai.inc), line = 68
  2233
  2234 1A6B A9 05			lda #$05
  2235 1A6D 85 59			sta I0B
  2236
  2237 1A6F			l_0923
  2238 				; --- ForToDoCondition
  2239 1A6F A5 59			lda I0B
  2240 1A71 C9 01			cmp #$01
  2241 1A73 90 55			jcc l_0931
  2242
  2243 				; optimize OK (ai.inc), line = 69
  2244
  2245 1A75 A5 5E			lda T0W
  2246 1A77 38 E5 59			sub I0B
  2247 1A7A A8				tay
  2248 1A7B A5 5F			lda T0W+1
  2249 1A7D E9 00			sbc #$00
  2250 1A7F 85 11			sta :bp+1
  2251 1A81 B1 10			lda (:bp),y
  2252 1A83 C9 20			cmp #$20
  2253 1A85 D0 03			jne l_0949
  2254 1A87 EE A1 30			inc L
  2255 1A8A			l_0949
  2256
  2257 				; optimize OK (ai.inc), line = 70
  2258
  2259 1A8A A5 5E			lda T0W
  2260 1A8C 38 E5 59			sub I0B
  2261 1A8F A8				tay
  2262 1A90 A5 5F			lda T0W+1
  2263 1A92 E9 00			sbc #$00
  2264 1A94 85 11			sta :bp+1
  2265 1A96 98				tya
  2266 1A97 18 69 28			add #$28
  2267 1A9A A8				tay
  2268 1A9B 90 02			scc
  2269 1A9D E6 11			inc :bp+1
  2270 1A9F B1 10			lda (:bp),y
  2271 1AA1 C9 20			cmp #$20
  2272 1AA3 D0 03			jne l_096C
  2273 1AA5 EE A1 30			inc L
  2274 1AA8			l_096C
  2275
  2276 				; optimize OK (ai.inc), line = 71
  2277
  2278 1AA8 A5 5E			lda T0W
  2279 1AAA 38 E5 59			sub I0B
  2280 1AAD A8				tay
  2281 1AAE A5 5F			lda T0W+1
  2282 1AB0 E9 00			sbc #$00
  2283 1AB2 85 11			sta :bp+1
  2284 1AB4 98				tya
  2285 1AB5 38 E9 28			sub #$28
  2286 1AB8 A8				tay
  2287 1AB9 B0 02			scs
  2288 1ABB C6 11			dec :bp+1
  2289 1ABD B1 10			lda (:bp),y
  2290 1ABF C9 20			cmp #$20
  2291 1AC1 D0 03			jne l_098F
  2292 1AC3 EE A1 30			inc L
  2293 1AC6			l_098F
  2294
  2295 				; --- ForToDoEpilog
  2296 1AC6 C6 59			dec I0B
  2297 1AC8 10 A5			jpl l_0923
  2298 1ACA			l_0931
  2299 1ACA			l_0919
  2300
  2301 				; optimize OK (ai.inc), line = 75
  2302
  2303 1ACA A5 5C			lda AVAILDIR
  2304 1ACC 29 08			and #$08
  2305 1ACE F0 5D			jeq l_09B3
  2306
  2307 				; optimize OK (ai.inc), line = 76
  2308
  2309 1AD0 A9 05			lda #$05
  2310 1AD2 85 59			sta I0B
  2311
  2312 1AD4			l_09BD
  2313 				; --- ForToDoCondition
  2314 1AD4 A5 59			lda I0B
  2315 1AD6 C9 01			cmp #$01
  2316 1AD8 90 53			jcc l_09CB
  2317
  2318 				; optimize OK (ai.inc), line = 77
  2319
  2320 1ADA A4 5E 84 12 A4 5F + 	mwy T0W :bp2
  2321 1AE2 A4 59			ldy I0B
  2322 1AE4 B1 12			lda (:bp2),y
  2323 1AE6 C9 20			cmp #$20
  2324 1AE8 D0 03			jne l_09E3
  2325 1AEA EE A2 30			inc R
  2326 1AED			l_09E3
  2327
  2328 				; optimize OK (ai.inc), line = 78
  2329
  2330 1AED A5 5E			lda T0W
  2331 1AEF 18 65 59			add I0B
  2332 1AF2 A8				tay
  2333 1AF3 A5 5F			lda T0W+1
  2334 1AF5 69 00			adc #$00
  2335 1AF7 85 11			sta :bp+1
  2336 1AF9 98				tya
  2337 1AFA 18 69 28			add #$28
  2338 1AFD A8				tay
  2339 1AFE 90 02			scc
  2340 1B00 E6 11			inc :bp+1
  2341 1B02 B1 10			lda (:bp),y
  2342 1B04 C9 20			cmp #$20
  2343 1B06 D0 03			jne l_0A06
  2344 1B08 EE A2 30			inc R
  2345 1B0B			l_0A06
  2346
  2347 				; optimize OK (ai.inc), line = 79
  2348
  2349 1B0B A5 5E			lda T0W
  2350 1B0D 18 65 59			add I0B
  2351 1B10 A8				tay
  2352 1B11 A5 5F			lda T0W+1
  2353 1B13 69 00			adc #$00
  2354 1B15 85 11			sta :bp+1
  2355 1B17 98				tya
  2356 1B18 38 E9 28			sub #$28
  2357 1B1B A8				tay
  2358 1B1C B0 02			scs
  2359 1B1E C6 11			dec :bp+1
  2360 1B20 B1 10			lda (:bp),y
  2361 1B22 C9 20			cmp #$20
  2362 1B24 D0 03			jne l_0A29
  2363 1B26 EE A2 30			inc R
  2364 1B29			l_0A29
  2365
  2366 				; --- ForToDoEpilog
  2367 1B29 C6 59			dec I0B
  2368 1B2B 10 A7			jpl l_09BD
  2369 1B2D			l_09CB
  2370 1B2D			l_09B3
  2371
  2372 				; optimize OK (ai.inc), line = 83
  2373
  2374 1B2D AD A4 30			lda D
  2375 1B30 85 58			sta T0B
  2376
  2377 				; optimize OK (ai.inc), line = 84
  2378
  2379 1B32 CD A3 30			cmp U
  2380 1B35 B0 05			jcs l_0A51
  2381 1B37 AD A3 30			lda U
  2382 1B3A 85 58			sta T0B
  2383 1B3C			l_0A51
  2384
  2385 				; optimize OK (ai.inc), line = 85
  2386
  2387 1B3C A5 58			lda T0B
  2388 1B3E CD A1 30			cmp L
  2389 1B41 B0 05			jcs l_0A6E
  2390 1B43 AD A1 30			lda L
  2391 1B46 85 58			sta T0B
  2392 1B48			l_0A6E
  2393
  2394 				; optimize OK (ai.inc), line = 86
  2395
  2396 1B48 A5 58			lda T0B
  2397 1B4A CD A2 30			cmp R
  2398 1B4D B0 05			jcs l_0A8B
  2399 1B4F AD A2 30			lda R
  2400 1B52 85 58			sta T0B
  2401 1B54			l_0A8B
  2402
  2403 				; optimize OK (ai.inc), line = 88
  2404
  2405 1B54 A5 58			lda T0B
  2406 1B56 CD A4 30			cmp D
  2407 1B59 D0 04			jne l_0AA8
  2408 1B5B A9 02			lda #$02
  2409 1B5D 85 58			sta T0B
  2410 1B5F			l_0AA8
  2411
  2412 				; optimize OK (ai.inc), line = 89
  2413
  2414 1B5F A5 58			lda T0B
  2415 1B61 CD A3 30			cmp U
  2416 1B64 D0 04			jne l_0AC3
  2417 1B66 A9 01			lda #$01
  2418 1B68 85 58			sta T0B
  2419 1B6A			l_0AC3
  2420
  2421 				; optimize OK (ai.inc), line = 90
  2422
  2423 1B6A A5 58			lda T0B
  2424 1B6C CD A1 30			cmp L
  2425 1B6F D0 04			jne l_0ADE
  2426 1B71 A9 04			lda #$04
  2427 1B73 85 58			sta T0B
  2428 1B75			l_0ADE
  2429
  2430 				; optimize OK (ai.inc), line = 91
  2431
  2432 1B75 A5 58			lda T0B
  2433 1B77 CD A2 30			cmp R
  2434 1B7A D0 04			jne l_0AF9
  2435 1B7C A9 08			lda #$08
  2436 1B7E 85 58			sta T0B
  2437 1B80			l_0AF9
  2438
  2439 				; optimize OK (ai.inc), line = 93
  2440
  2441 1B80 A5 5C			lda AVAILDIR
  2442 1B82 25 58			and T0B
  2443 1B84 F0 07			jeq l_0B18
  2444 1B86 A5 58			lda T0B
  2445 1B88 85 5B			sta NEWDIR
  2446 1B8A 4C 90 1B			jmp l_0B28
  2447 1B8D			l_0B18
  2448
  2449 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 94
  2450
  2451 1B8D 20 C4 18			jsr AISTRAIGHT
  2452 1B90			l_0B28
  2453
  2454 				; ------------------------------------------------------------
  2455
  2456 = 30A1			L	= DATAORIGIN+$0451
  2457 = 30A2			R	= DATAORIGIN+$0452
  2458 = 30A3			U	= DATAORIGIN+$0453
  2459 = 30A4			D	= DATAORIGIN+$0454
  2460 = 0001			@FORTMP_07E0	= $01
  2461 = 0001			@FORTMP_0880	= $01
  2462 = 0001			@FORTMP_0920	= $01
  2463 = 0001			@FORTMP_09BA	= $01
  2464
  2465 = 30A1			@VarData	= L
  2466 = 0004			@VarDataSize	= 4
  2467
  2468 1B90			@exit
  2469 					.ifdef @new
  2470 					lda <@VarData
  2471 					sta :ztmp
  2472 					lda >@VarData
  2473 					ldy #@VarDataSize-1
  2474 					jmp @FreeMem
  2475 					els
  2476 1B90 60				rts						; ret
  2477 					eif
  2478 				.endl
  2479
  2480 1B91			.local	AIBULLY						; PROCEDURE
  2481
  2482 				; optimize OK (ai.inc), line = 101
  2483
  2484 1B91 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  2485 1B9B A0 04			ldy #PLY.DIR-DATAORIGIN
  2486 1B9D B1 12			lda (:bp2),y
  2487 1B9F 85 58			sta T0B
  2488
  2489 				; optimize OK (ai.inc), line = 103
  2490
  2491 1BA1 AD 69 2C			lda PLAYER1.ISALIVE
  2492 1BA4 0D 71 2C			ora PLAYER2.ISALIVE
  2493 1BA7 D0 03 4C 4E 1C		jeq l_0B45
  2494
  2495 				; optimize OK (ai.inc), line = 105
  2496
  2497 1BAC AD 69 2C			lda PLAYER1.ISALIVE
  2498 1BAF F0 0F			jeq l_0B52
  2499 1BB1 AD 45 2C			lda PLAYER1
  2500 1BB4 8D 41 2C			sta TMPPLY
  2501 1BB7 AD 46 2C			lda PLAYER1+1
  2502 1BBA 8D 42 2C			sta TMPPLY+1
  2503 1BBD 4C CC 1B			jmp l_0B61
  2504 1BC0			l_0B52
  2505 1BC0 AD 47 2C			lda PLAYER2
  2506 1BC3 8D 41 2C			sta TMPPLY
  2507 1BC6 AD 48 2C			lda PLAYER2+1
  2508 1BC9 8D 42 2C			sta TMPPLY+1
  2509 1BCC			l_0B61
  2510
  2511 				; optimize OK (ai.inc), line = 107
  2512
  2513 1BCC AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  2514 1BD6 A0 01			ldy #PLY.Y-DATAORIGIN
  2515 1BD8 B1 12			lda (:bp2),y
  2516 1BDA 85 21			sta :STACKORIGIN+9
  2517 1BDC AC 41 2C 84 12 AC + 	mwy TMPPLY :bp2
  2518 1BE6 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  2519 1BE8 B1 12			lda (:bp2),y
  2520 1BEA C5 21			cmp :STACKORIGIN+9
  2521 1BEC B0 07			jcs l_0B7A
  2522 1BEE A9 01			lda #$01
  2523 1BF0 85 58			sta T0B
  2524 1BF2 4C F9 1B			jmp l_0B88
  2525 1BF5			l_0B7A
  2526 1BF5 A9 02			lda #$02
  2527 1BF7 85 58			sta T0B
  2528 1BF9			l_0B88
  2529
  2530 				; optimize OK (ai.inc), line = 108
  2531
  2532 1BF9 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  2533 1C03 A0 01			ldy #PLY.Y-DATAORIGIN
  2534 1C05 B1 12			lda (:bp2),y
  2535 1C07 85 21			sta :STACKORIGIN+9
  2536 1C09 AC 41 2C 84 12 AC + 	mwy TMPPLY :bp2
  2537 1C13 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  2538 1C15 B1 12			lda (:bp2),y
  2539 1C17 C5 21			cmp :STACKORIGIN+9
  2540 1C19 F0 06			jeq l_0BB2x
  2541 1C1B A5 5C			lda AVAILDIR
  2542 1C1D 25 58			and T0B
  2543 1C1F D0 2D			jne l_0BB2
  2544 1C21			l_0BB2x
  2545
  2546 				; optimize OK (ai.inc), line = 109
  2547
  2548 1C21 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  2549 1C2B A0 00			ldy #PLY.X-DATAORIGIN
  2550 1C2D B1 12			lda (:bp2),y
  2551 1C2F 85 21			sta :STACKORIGIN+9
  2552 1C31 AC 41 2C 84 12 AC + 	mwy TMPPLY :bp2
  2553 1C3B A0 00			ldy #TMPPLY.X-DATAORIGIN
  2554 1C3D B1 12			lda (:bp2),y
  2555 1C3F C5 21			cmp :STACKORIGIN+9
  2556 1C41 B0 07			jcs l_0BC7
  2557 1C43 A9 04			lda #$04
  2558 1C45 85 58			sta T0B
  2559 1C47 4C 4E 1C			jmp l_0BD5
  2560 1C4A			l_0BC7
  2561 1C4A A9 08			lda #$08
  2562 1C4C 85 58			sta T0B
  2563 1C4E			l_0BD5
  2564 1C4E			l_0BB2
  2565 1C4E			l_0B45
  2566
  2567 				; optimize OK (ai.inc), line = 113
  2568
  2569 1C4E A5 5C			lda AVAILDIR
  2570 1C50 25 58			and T0B
  2571 1C52 F0 07			jeq l_0BF5
  2572 1C54 A5 58			lda T0B
  2573 1C56 85 5B			sta NEWDIR
  2574 1C58 4C 5E 1C			jmp l_0C05
  2575 1C5B			l_0BF5
  2576
  2577 				; optimize FAIL ('AISAPPER', ai.inc), line = 114
  2578
  2579 1C5B 20 41 19			jsr AISAPPER
  2580 1C5E			l_0C05
  2581 1C5E			@exit
  2582 					.ifdef @new
  2583 					lda <@VarData
  2584 					sta :ztmp
  2585 					lda >@VarData
  2586 					ldy #@VarDataSize-1
  2587 					jmp @FreeMem
  2588 					els
  2589 1C5E 60				rts						; ret
  2590 					eif
  2591 				.endl
  2592
  2593 1C5F			.local	AIMIRROR					; PROCEDURE
  2594
  2595 				; optimize OK (ai.inc), line = 122
  2596
  2597 1C5F AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  2598 1C69 A0 04			ldy #PLY.DIR-DATAORIGIN
  2599 1C6B B1 12			lda (:bp2),y
  2600 1C6D 85 58			sta T0B
  2601
  2602 				; optimize OK (ai.inc), line = 124
  2603
  2604 1C6F AD 69 2C			lda PLAYER1.ISALIVE
  2605 1C72 F0 2F			jeq l_0C1C
  2606
  2607 				; optimize OK (ai.inc), line = 125
  2608
  2609 1C74 AD 66 2C			lda PLAYER1.DIR
  2610 1C77 8D A5 30			sta @CASETMP_0008
  2611 1C7A C9 01			cmp #$01
  2612 1C7C D0 07			jne l_0C28
  2613 1C7E			@
  2614
  2615 				; optimize OK (ai.inc), line = 126
  2616
  2617 1C7E A9 02			lda #$02
  2618 1C80 85 58			sta T0B
  2619
  2620 1C82 4C A3 1C			jmp a_0008
  2621 1C85			l_0C28
  2622 1C85 C9 02			cmp #$02
  2623 1C87 D0 07			jne l_0C35
  2624 1C89			@
  2625
  2626 				; optimize OK (ai.inc), line = 127
  2627
  2628 1C89 A9 01			lda #$01
  2629 1C8B 85 58			sta T0B
  2630
  2631 1C8D 4C A3 1C			jmp a_0008
  2632 1C90			l_0C35
  2633 1C90 C9 04			cmp #$04
  2634 1C92 D0 07			jne l_0C42
  2635 1C94			@
  2636
  2637 				; optimize OK (ai.inc), line = 128
  2638
  2639 1C94 A9 08			lda #$08
  2640 1C96 85 58			sta T0B
  2641
  2642 1C98 4C A3 1C			jmp a_0008
  2643 1C9B			l_0C42
  2644 1C9B C9 08			cmp #$08
  2645 1C9D D0 04			jne l_0C4F
  2646 1C9F			@
  2647
  2648 				; optimize OK (ai.inc), line = 129
  2649
  2650 1C9F A9 04			lda #$04
  2651 1CA1 85 58			sta T0B
  2652
  2653 1CA3			l_0C4F
  2654 1CA3			a_0008
  2655 1CA3			l_0C1C
  2656
  2657 				; optimize OK (ai.inc), line = 133
  2658
  2659 1CA3 A5 5C			lda AVAILDIR
  2660 1CA5 25 58			and T0B
  2661 1CA7 F0 07			jeq l_0C75
  2662 1CA9 A5 58			lda T0B
  2663 1CAB 85 5B			sta NEWDIR
  2664 1CAD 4C B3 1C			jmp l_0C85
  2665 1CB0			l_0C75
  2666
  2667 				; optimize FAIL ('AISAPPER', ai.inc), line = 134
  2668
  2669 1CB0 20 41 19			jsr AISAPPER
  2670 1CB3			l_0C85
  2671
  2672 				; ------------------------------------------------------------
  2673
  2674 = 30A5			@CASETMP_0008	= DATAORIGIN+$0455
  2675
  2676 = 30A5			@VarData	= @CASETMP_0008
  2677 = 0001			@VarDataSize	= 1
  2678
  2679 1CB3			@exit
  2680 					.ifdef @new
  2681 					lda <@VarData
  2682 					sta :ztmp
  2683 					lda >@VarData
  2684 					ldy #@VarDataSize-1
  2685 					jmp @FreeMem
  2686 					els
  2687 1CB3 60				rts						; ret
  2688 					eif
  2689 				.endl
  2690
  2691 1CB4			.local	SETLEVEL00					; PROCEDURE
  2692
  2693 				; optimize OK (levels.inc), line = 5
  2694
  2695 1CB4 A9 01			lda #$01
  2696 1CB6 8D 9A 2D			sta SETPLAYER.ISALIVE
  2697 1CB9 A9 62			lda #$62
  2698 1CBB 8D 99 2D			sta SETPLAYER.COLOUR
  2699 1CBE A9 00			lda #$00
  2700 1CC0 8D 98 2D			sta SETPLAYER.BRAIN
  2701 1CC3 A9 08			lda #$08
  2702 1CC5 8D 97 2D			sta SETPLAYER.DIR
  2703 1CC8 A9 0C			lda #$0C
  2704 1CCA 8D 96 2D			sta SETPLAYER.Y
  2705 1CCD A9 0A			lda #$0A
  2706 1CCF 8D 95 2D			sta SETPLAYER.X
  2707 1CD2 AD 45 2C			lda PLAYER1
  2708 1CD5 8D 93 2D			sta SETPLAYER.P
  2709 1CD8 AD 46 2C			lda PLAYER1+1
  2710 1CDB 8D 94 2D			sta SETPLAYER.P+1
  2711 1CDE 20 44 16			jsr SETPLAYER
  2712
  2713 				; optimize OK (levels.inc), line = 6
  2714
  2715 1CE1 A9 01			lda #$01
  2716 1CE3 8D 9A 2D			sta SETPLAYER.ISALIVE
  2717 1CE6 A9 5D			lda #$5D
  2718 1CE8 8D 99 2D			sta SETPLAYER.COLOUR
  2719 1CEB A9 01			lda #$01
  2720 1CED 8D 98 2D			sta SETPLAYER.BRAIN
  2721 1CF0 A9 04			lda #$04
  2722 1CF2 8D 97 2D			sta SETPLAYER.DIR
  2723 1CF5 A9 0C			lda #$0C
  2724 1CF7 8D 96 2D			sta SETPLAYER.Y
  2725 1CFA A9 1E			lda #$1E
  2726 1CFC 8D 95 2D			sta SETPLAYER.X
  2727 1CFF AD 47 2C			lda PLAYER2
  2728 1D02 8D 93 2D			sta SETPLAYER.P
  2729 1D05 AD 48 2C			lda PLAYER2+1
  2730 1D08 8D 94 2D			sta SETPLAYER.P+1
  2731 1D0B 20 44 16			jsr SETPLAYER
  2732
  2733 				; optimize FAIL (1, levels.inc), line = 8
  2734
  2735 1D0E E8				inx
  2736 1D0F A9 00 95 18			mva #$00 :STACKORIGIN,x
  2737 1D13 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2738 1D15 A9 06			lda #$06
  2739 1D17 8D 83 2C			sta CALCSCREENADDR.Y
  2740 1D1A A9 0A			lda #$0A
  2741 1D1C 8D 82 2C			sta CALCSCREENADDR.X
  2742 1D1F 20 01 12			jsr CALCSCREENADDR
  2743 1D22 B4 17			ldy :STACKORIGIN-1,x
  2744 1D24 B5 18			lda :STACKORIGIN,x
  2745 1D26 99 60 00			sta adr.OBSTACLES,y
  2746 1D29 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2747 1D2B 99 61 00			sta adr.OBSTACLES+1,y
  2748 1D2E CA				dex
  2749 1D2F A9 02 95 18			mva #$02 :STACKORIGIN,x
  2750 1D33 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2751 1D37 A9 06			lda #$06
  2752 1D39 8D 83 2C			sta CALCSCREENADDR.Y
  2753 1D3C A9 1E			lda #$1E
  2754 1D3E 8D 82 2C			sta CALCSCREENADDR.X
  2755 1D41 20 01 12			jsr CALCSCREENADDR
  2756 1D44 B4 17			ldy :STACKORIGIN-1,x
  2757 1D46 B5 18			lda :STACKORIGIN,x
  2758 1D48 99 60 00			sta adr.OBSTACLES,y
  2759 1D4B B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2760 1D4D 99 61 00			sta adr.OBSTACLES+1,y
  2761 1D50 CA				dex
  2762
  2763 				; optimize FAIL (1, levels.inc), line = 9
  2764
  2765 1D51 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2766 1D55 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2767 1D59 A9 12			lda #$12
  2768 1D5B 8D 83 2C			sta CALCSCREENADDR.Y
  2769 1D5E A9 0A			lda #$0A
  2770 1D60 8D 82 2C			sta CALCSCREENADDR.X
  2771 1D63 20 01 12			jsr CALCSCREENADDR
  2772 1D66 B4 17			ldy :STACKORIGIN-1,x
  2773 1D68 B5 18			lda :STACKORIGIN,x
  2774 1D6A 99 60 00			sta adr.OBSTACLES,y
  2775 1D6D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2776 1D6F 99 61 00			sta adr.OBSTACLES+1,y
  2777 1D72 CA				dex
  2778 1D73 A9 06 95 18			mva #$06 :STACKORIGIN,x
  2779 1D77 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2780 1D7B A9 12			lda #$12
  2781 1D7D 8D 83 2C			sta CALCSCREENADDR.Y
  2782 1D80 A9 1E			lda #$1E
  2783 1D82 8D 82 2C			sta CALCSCREENADDR.X
  2784 1D85 20 01 12			jsr CALCSCREENADDR
  2785 1D88 B4 17			ldy :STACKORIGIN-1,x
  2786 1D8A B5 18			lda :STACKORIGIN,x
  2787 1D8C 99 60 00			sta adr.OBSTACLES,y
  2788 1D8F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2789 1D91 99 61 00			sta adr.OBSTACLES+1,y
  2790 1D94 CA				dex
  2791
  2792 				; optimize FAIL (1, levels.inc), line = 10
  2793
  2794 1D95 A9 08 95 18			mva #$08 :STACKORIGIN,x
  2795 1D99 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2796 1D9D A9 02			lda #$02
  2797 1D9F 8D 83 2C			sta CALCSCREENADDR.Y
  2798 1DA2 A9 14			lda #$14
  2799 1DA4 8D 82 2C			sta CALCSCREENADDR.X
  2800 1DA7 20 01 12			jsr CALCSCREENADDR
  2801 1DAA B4 17			ldy :STACKORIGIN-1,x
  2802 1DAC B5 18			lda :STACKORIGIN,x
  2803 1DAE 99 60 00			sta adr.OBSTACLES,y
  2804 1DB1 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2805 1DB3 99 61 00			sta adr.OBSTACLES+1,y
  2806 1DB6 CA				dex
  2807 1DB7 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2808 1DBB A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2809 1DBF A9 16			lda #$16
  2810 1DC1 8D 83 2C			sta CALCSCREENADDR.Y
  2811 1DC4 A9 14			lda #$14
  2812 1DC6 8D 82 2C			sta CALCSCREENADDR.X
  2813 1DC9 20 01 12			jsr CALCSCREENADDR
  2814 1DCC B4 17			ldy :STACKORIGIN-1,x
  2815 1DCE B5 18			lda :STACKORIGIN,x
  2816 1DD0 99 60 00			sta adr.OBSTACLES,y
  2817 1DD3 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2818 1DD5 99 61 00			sta adr.OBSTACLES+1,y
  2819 1DD8 CA				dex
  2820 1DD9 CA				dex
  2821 1DDA			@exit
  2822 					.ifdef @new
  2823 					lda <@VarData
  2824 					sta :ztmp
  2825 					lda >@VarData
  2826 					ldy #@VarDataSize-1
  2827 					jmp @FreeMem
  2828 					els
  2829 1DDA 60				rts						; ret
  2830 					eif
  2831 				.endl
  2832
  2833 1DDB			.local	SETLEVEL01					; PROCEDURE
  2834
  2835 				; optimize OK (levels.inc), line = 17
  2836
  2837 1DDB A9 01			lda #$01
  2838 1DDD 8D 9A 2D			sta SETPLAYER.ISALIVE
  2839 1DE0 A9 62			lda #$62
  2840 1DE2 8D 99 2D			sta SETPLAYER.COLOUR
  2841 1DE5 A9 00			lda #$00
  2842 1DE7 8D 98 2D			sta SETPLAYER.BRAIN
  2843 1DEA A9 08			lda #$08
  2844 1DEC 8D 97 2D			sta SETPLAYER.DIR
  2845 1DEF A9 0C			lda #$0C
  2846 1DF1 8D 96 2D			sta SETPLAYER.Y
  2847 1DF4 A9 0A			lda #$0A
  2848 1DF6 8D 95 2D			sta SETPLAYER.X
  2849 1DF9 AD 45 2C			lda PLAYER1
  2850 1DFC 8D 93 2D			sta SETPLAYER.P
  2851 1DFF AD 46 2C			lda PLAYER1+1
  2852 1E02 8D 94 2D			sta SETPLAYER.P+1
  2853 1E05 20 44 16			jsr SETPLAYER
  2854
  2855 				; optimize OK (levels.inc), line = 18
  2856
  2857 1E08 A9 01			lda #$01
  2858 1E0A 8D 9A 2D			sta SETPLAYER.ISALIVE
  2859 1E0D A9 5D			lda #$5D
  2860 1E0F 8D 99 2D			sta SETPLAYER.COLOUR
  2861 1E12 A9 01			lda #$01
  2862 1E14 8D 98 2D			sta SETPLAYER.BRAIN
  2863 1E17 A9 04			lda #$04
  2864 1E19 8D 97 2D			sta SETPLAYER.DIR
  2865 1E1C A9 0C			lda #$0C
  2866 1E1E 8D 96 2D			sta SETPLAYER.Y
  2867 1E21 A9 1E			lda #$1E
  2868 1E23 8D 95 2D			sta SETPLAYER.X
  2869 1E26 AD 47 2C			lda PLAYER2
  2870 1E29 8D 93 2D			sta SETPLAYER.P
  2871 1E2C AD 48 2C			lda PLAYER2+1
  2872 1E2F 8D 94 2D			sta SETPLAYER.P+1
  2873 1E32 20 44 16			jsr SETPLAYER
  2874
  2875 				; optimize FAIL (1, levels.inc), line = 20
  2876
  2877 1E35 E8				inx
  2878 1E36 A9 00 95 18			mva #$00 :STACKORIGIN,x
  2879 1E3A 95 28			sta :STACKORIGIN+STACKWIDTH,x
  2880 1E3C A9 06			lda #$06
  2881 1E3E 8D 83 2C			sta CALCSCREENADDR.Y
  2882 1E41 A9 0A			lda #$0A
  2883 1E43 8D 82 2C			sta CALCSCREENADDR.X
  2884 1E46 20 01 12			jsr CALCSCREENADDR
  2885 1E49 B4 17			ldy :STACKORIGIN-1,x
  2886 1E4B B5 18			lda :STACKORIGIN,x
  2887 1E4D 99 60 00			sta adr.OBSTACLES,y
  2888 1E50 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2889 1E52 99 61 00			sta adr.OBSTACLES+1,y
  2890 1E55 CA				dex
  2891 1E56 A9 02 95 18			mva #$02 :STACKORIGIN,x
  2892 1E5A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2893 1E5E A9 06			lda #$06
  2894 1E60 8D 83 2C			sta CALCSCREENADDR.Y
  2895 1E63 A9 1E			lda #$1E
  2896 1E65 8D 82 2C			sta CALCSCREENADDR.X
  2897 1E68 20 01 12			jsr CALCSCREENADDR
  2898 1E6B B4 17			ldy :STACKORIGIN-1,x
  2899 1E6D B5 18			lda :STACKORIGIN,x
  2900 1E6F 99 60 00			sta adr.OBSTACLES,y
  2901 1E72 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2902 1E74 99 61 00			sta adr.OBSTACLES+1,y
  2903 1E77 CA				dex
  2904
  2905 				; optimize FAIL (1, levels.inc), line = 21
  2906
  2907 1E78 A9 04 95 18			mva #$04 :STACKORIGIN,x
  2908 1E7C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2909 1E80 A9 12			lda #$12
  2910 1E82 8D 83 2C			sta CALCSCREENADDR.Y
  2911 1E85 A9 0A			lda #$0A
  2912 1E87 8D 82 2C			sta CALCSCREENADDR.X
  2913 1E8A 20 01 12			jsr CALCSCREENADDR
  2914 1E8D B4 17			ldy :STACKORIGIN-1,x
  2915 1E8F B5 18			lda :STACKORIGIN,x
  2916 1E91 99 60 00			sta adr.OBSTACLES,y
  2917 1E94 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2918 1E96 99 61 00			sta adr.OBSTACLES+1,y
  2919 1E99 CA				dex
  2920 1E9A A9 06 95 18			mva #$06 :STACKORIGIN,x
  2921 1E9E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2922 1EA2 A9 12			lda #$12
  2923 1EA4 8D 83 2C			sta CALCSCREENADDR.Y
  2924 1EA7 A9 1E			lda #$1E
  2925 1EA9 8D 82 2C			sta CALCSCREENADDR.X
  2926 1EAC 20 01 12			jsr CALCSCREENADDR
  2927 1EAF B4 17			ldy :STACKORIGIN-1,x
  2928 1EB1 B5 18			lda :STACKORIGIN,x
  2929 1EB3 99 60 00			sta adr.OBSTACLES,y
  2930 1EB6 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2931 1EB8 99 61 00			sta adr.OBSTACLES+1,y
  2932 1EBB CA				dex
  2933
  2934 				; optimize FAIL (1, levels.inc), line = 22
  2935
  2936 1EBC A9 08 95 18			mva #$08 :STACKORIGIN,x
  2937 1EC0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2938 1EC4 A9 02			lda #$02
  2939 1EC6 8D 83 2C			sta CALCSCREENADDR.Y
  2940 1EC9 A9 14			lda #$14
  2941 1ECB 8D 82 2C			sta CALCSCREENADDR.X
  2942 1ECE 20 01 12			jsr CALCSCREENADDR
  2943 1ED1 B4 17			ldy :STACKORIGIN-1,x
  2944 1ED3 B5 18			lda :STACKORIGIN,x
  2945 1ED5 99 60 00			sta adr.OBSTACLES,y
  2946 1ED8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2947 1EDA 99 61 00			sta adr.OBSTACLES+1,y
  2948 1EDD CA				dex
  2949 1EDE A9 0A 95 18			mva #$0A :STACKORIGIN,x
  2950 1EE2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2951 1EE6 A9 16			lda #$16
  2952 1EE8 8D 83 2C			sta CALCSCREENADDR.Y
  2953 1EEB A9 14			lda #$14
  2954 1EED 8D 82 2C			sta CALCSCREENADDR.X
  2955 1EF0 20 01 12			jsr CALCSCREENADDR
  2956 1EF3 B4 17			ldy :STACKORIGIN-1,x
  2957 1EF5 B5 18			lda :STACKORIGIN,x
  2958 1EF7 99 60 00			sta adr.OBSTACLES,y
  2959 1EFA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  2960 1EFC 99 61 00			sta adr.OBSTACLES+1,y
  2961 1EFF CA				dex
  2962 1F00 CA				dex
  2963 1F01			@exit
  2964 					.ifdef @new
  2965 					lda <@VarData
  2966 					sta :ztmp
  2967 					lda >@VarData
  2968 					ldy #@VarDataSize-1
  2969 					jmp @FreeMem
  2970 					els
  2971 1F01 60				rts						; ret
  2972 					eif
  2973 				.endl
  2974
  2975 1F02			.local	SETLEVEL02					; PROCEDURE
  2976
  2977 				; optimize OK (levels.inc), line = 29
  2978
  2979 1F02 A9 01			lda #$01
  2980 1F04 8D 9A 2D			sta SETPLAYER.ISALIVE
  2981 1F07 A9 62			lda #$62
  2982 1F09 8D 99 2D			sta SETPLAYER.COLOUR
  2983 1F0C A9 00			lda #$00
  2984 1F0E 8D 98 2D			sta SETPLAYER.BRAIN
  2985 1F11 A9 08			lda #$08
  2986 1F13 8D 97 2D			sta SETPLAYER.DIR
  2987 1F16 A9 0C			lda #$0C
  2988 1F18 8D 96 2D			sta SETPLAYER.Y
  2989 1F1B A9 0A			lda #$0A
  2990 1F1D 8D 95 2D			sta SETPLAYER.X
  2991 1F20 AD 45 2C			lda PLAYER1
  2992 1F23 8D 93 2D			sta SETPLAYER.P
  2993 1F26 AD 46 2C			lda PLAYER1+1
  2994 1F29 8D 94 2D			sta SETPLAYER.P+1
  2995 1F2C 20 44 16			jsr SETPLAYER
  2996
  2997 				; optimize OK (levels.inc), line = 30
  2998
  2999 1F2F A9 01			lda #$01
  3000 1F31 8D 9A 2D			sta SETPLAYER.ISALIVE
  3001 1F34 A9 5D			lda #$5D
  3002 1F36 8D 99 2D			sta SETPLAYER.COLOUR
  3003 1F39 A9 03			lda #$03
  3004 1F3B 8D 98 2D			sta SETPLAYER.BRAIN
  3005 1F3E A9 04			lda #$04
  3006 1F40 8D 97 2D			sta SETPLAYER.DIR
  3007 1F43 A9 0C			lda #$0C
  3008 1F45 8D 96 2D			sta SETPLAYER.Y
  3009 1F48 A9 1E			lda #$1E
  3010 1F4A 8D 95 2D			sta SETPLAYER.X
  3011 1F4D AD 47 2C			lda PLAYER2
  3012 1F50 8D 93 2D			sta SETPLAYER.P
  3013 1F53 AD 48 2C			lda PLAYER2+1
  3014 1F56 8D 94 2D			sta SETPLAYER.P+1
  3015 1F59 20 44 16			jsr SETPLAYER
  3016
  3017 				; optimize FAIL (1, levels.inc), line = 32
  3018
  3019 1F5C E8				inx
  3020 1F5D A9 00 95 18			mva #$00 :STACKORIGIN,x
  3021 1F61 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3022 1F63 A9 06			lda #$06
  3023 1F65 8D 83 2C			sta CALCSCREENADDR.Y
  3024 1F68 A9 0A			lda #$0A
  3025 1F6A 8D 82 2C			sta CALCSCREENADDR.X
  3026 1F6D 20 01 12			jsr CALCSCREENADDR
  3027 1F70 B4 17			ldy :STACKORIGIN-1,x
  3028 1F72 B5 18			lda :STACKORIGIN,x
  3029 1F74 99 60 00			sta adr.OBSTACLES,y
  3030 1F77 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3031 1F79 99 61 00			sta adr.OBSTACLES+1,y
  3032 1F7C CA				dex
  3033 1F7D A9 02 95 18			mva #$02 :STACKORIGIN,x
  3034 1F81 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3035 1F85 A9 06			lda #$06
  3036 1F87 8D 83 2C			sta CALCSCREENADDR.Y
  3037 1F8A A9 1E			lda #$1E
  3038 1F8C 8D 82 2C			sta CALCSCREENADDR.X
  3039 1F8F 20 01 12			jsr CALCSCREENADDR
  3040 1F92 B4 17			ldy :STACKORIGIN-1,x
  3041 1F94 B5 18			lda :STACKORIGIN,x
  3042 1F96 99 60 00			sta adr.OBSTACLES,y
  3043 1F99 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3044 1F9B 99 61 00			sta adr.OBSTACLES+1,y
  3045 1F9E CA				dex
  3046
  3047 				; optimize FAIL (1, levels.inc), line = 33
  3048
  3049 1F9F A9 04 95 18			mva #$04 :STACKORIGIN,x
  3050 1FA3 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3051 1FA7 A9 12			lda #$12
  3052 1FA9 8D 83 2C			sta CALCSCREENADDR.Y
  3053 1FAC A9 0A			lda #$0A
  3054 1FAE 8D 82 2C			sta CALCSCREENADDR.X
  3055 1FB1 20 01 12			jsr CALCSCREENADDR
  3056 1FB4 B4 17			ldy :STACKORIGIN-1,x
  3057 1FB6 B5 18			lda :STACKORIGIN,x
  3058 1FB8 99 60 00			sta adr.OBSTACLES,y
  3059 1FBB B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3060 1FBD 99 61 00			sta adr.OBSTACLES+1,y
  3061 1FC0 CA				dex
  3062 1FC1 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3063 1FC5 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3064 1FC9 A9 12			lda #$12
  3065 1FCB 8D 83 2C			sta CALCSCREENADDR.Y
  3066 1FCE A9 1E			lda #$1E
  3067 1FD0 8D 82 2C			sta CALCSCREENADDR.X
  3068 1FD3 20 01 12			jsr CALCSCREENADDR
  3069 1FD6 B4 17			ldy :STACKORIGIN-1,x
  3070 1FD8 B5 18			lda :STACKORIGIN,x
  3071 1FDA 99 60 00			sta adr.OBSTACLES,y
  3072 1FDD B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3073 1FDF 99 61 00			sta adr.OBSTACLES+1,y
  3074 1FE2 CA				dex
  3075
  3076 				; optimize FAIL (1, levels.inc), line = 34
  3077
  3078 1FE3 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3079 1FE7 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3080 1FEB A9 02			lda #$02
  3081 1FED 8D 83 2C			sta CALCSCREENADDR.Y
  3082 1FF0 A9 14			lda #$14
  3083 1FF2 8D 82 2C			sta CALCSCREENADDR.X
  3084 1FF5 20 01 12			jsr CALCSCREENADDR
  3085 1FF8 B4 17			ldy :STACKORIGIN-1,x
  3086 1FFA B5 18			lda :STACKORIGIN,x
  3087 1FFC 99 60 00			sta adr.OBSTACLES,y
  3088 1FFF B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3089 2001 99 61 00			sta adr.OBSTACLES+1,y
  3090 2004 CA				dex
  3091 2005 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3092 2009 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3093 200D A9 16			lda #$16
  3094 200F 8D 83 2C			sta CALCSCREENADDR.Y
  3095 2012 A9 14			lda #$14
  3096 2014 8D 82 2C			sta CALCSCREENADDR.X
  3097 2017 20 01 12			jsr CALCSCREENADDR
  3098 201A B4 17			ldy :STACKORIGIN-1,x
  3099 201C B5 18			lda :STACKORIGIN,x
  3100 201E 99 60 00			sta adr.OBSTACLES,y
  3101 2021 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3102 2023 99 61 00			sta adr.OBSTACLES+1,y
  3103 2026 CA				dex
  3104 2027 CA				dex
  3105 2028			@exit
  3106 					.ifdef @new
  3107 					lda <@VarData
  3108 					sta :ztmp
  3109 					lda >@VarData
  3110 					ldy #@VarDataSize-1
  3111 					jmp @FreeMem
  3112 					els
  3113 2028 60				rts						; ret
  3114 					eif
  3115 				.endl
  3116
  3117 2029			.local	SETLEVEL03					; PROCEDURE
  3118
  3119 				; optimize OK (levels.inc), line = 41
  3120
  3121 2029 A9 01			lda #$01
  3122 202B 8D 9A 2D			sta SETPLAYER.ISALIVE
  3123 202E A9 62			lda #$62
  3124 2030 8D 99 2D			sta SETPLAYER.COLOUR
  3125 2033 A9 00			lda #$00
  3126 2035 8D 98 2D			sta SETPLAYER.BRAIN
  3127 2038 A9 08			lda #$08
  3128 203A 8D 97 2D			sta SETPLAYER.DIR
  3129 203D A9 0C			lda #$0C
  3130 203F 8D 96 2D			sta SETPLAYER.Y
  3131 2042 A9 0A			lda #$0A
  3132 2044 8D 95 2D			sta SETPLAYER.X
  3133 2047 AD 45 2C			lda PLAYER1
  3134 204A 8D 93 2D			sta SETPLAYER.P
  3135 204D AD 46 2C			lda PLAYER1+1
  3136 2050 8D 94 2D			sta SETPLAYER.P+1
  3137 2053 20 44 16			jsr SETPLAYER
  3138
  3139 				; optimize OK (levels.inc), line = 42
  3140
  3141 2056 A9 01			lda #$01
  3142 2058 8D 9A 2D			sta SETPLAYER.ISALIVE
  3143 205B A9 5D			lda #$5D
  3144 205D 8D 99 2D			sta SETPLAYER.COLOUR
  3145 2060 A9 02			lda #$02
  3146 2062 8D 98 2D			sta SETPLAYER.BRAIN
  3147 2065 A9 04			lda #$04
  3148 2067 8D 97 2D			sta SETPLAYER.DIR
  3149 206A A9 0C			lda #$0C
  3150 206C 8D 96 2D			sta SETPLAYER.Y
  3151 206F A9 1E			lda #$1E
  3152 2071 8D 95 2D			sta SETPLAYER.X
  3153 2074 AD 47 2C			lda PLAYER2
  3154 2077 8D 93 2D			sta SETPLAYER.P
  3155 207A AD 48 2C			lda PLAYER2+1
  3156 207D 8D 94 2D			sta SETPLAYER.P+1
  3157 2080 20 44 16			jsr SETPLAYER
  3158
  3159 				; optimize FAIL (1, levels.inc), line = 44
  3160
  3161 2083 E8				inx
  3162 2084 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3163 2088 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3164 208A A9 06			lda #$06
  3165 208C 8D 83 2C			sta CALCSCREENADDR.Y
  3166 208F A9 0A			lda #$0A
  3167 2091 8D 82 2C			sta CALCSCREENADDR.X
  3168 2094 20 01 12			jsr CALCSCREENADDR
  3169 2097 B4 17			ldy :STACKORIGIN-1,x
  3170 2099 B5 18			lda :STACKORIGIN,x
  3171 209B 99 60 00			sta adr.OBSTACLES,y
  3172 209E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3173 20A0 99 61 00			sta adr.OBSTACLES+1,y
  3174 20A3 CA				dex
  3175 20A4 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3176 20A8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3177 20AC A9 06			lda #$06
  3178 20AE 8D 83 2C			sta CALCSCREENADDR.Y
  3179 20B1 A9 1E			lda #$1E
  3180 20B3 8D 82 2C			sta CALCSCREENADDR.X
  3181 20B6 20 01 12			jsr CALCSCREENADDR
  3182 20B9 B4 17			ldy :STACKORIGIN-1,x
  3183 20BB B5 18			lda :STACKORIGIN,x
  3184 20BD 99 60 00			sta adr.OBSTACLES,y
  3185 20C0 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3186 20C2 99 61 00			sta adr.OBSTACLES+1,y
  3187 20C5 CA				dex
  3188
  3189 				; optimize FAIL (1, levels.inc), line = 45
  3190
  3191 20C6 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3192 20CA A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3193 20CE A9 12			lda #$12
  3194 20D0 8D 83 2C			sta CALCSCREENADDR.Y
  3195 20D3 A9 0A			lda #$0A
  3196 20D5 8D 82 2C			sta CALCSCREENADDR.X
  3197 20D8 20 01 12			jsr CALCSCREENADDR
  3198 20DB B4 17			ldy :STACKORIGIN-1,x
  3199 20DD B5 18			lda :STACKORIGIN,x
  3200 20DF 99 60 00			sta adr.OBSTACLES,y
  3201 20E2 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3202 20E4 99 61 00			sta adr.OBSTACLES+1,y
  3203 20E7 CA				dex
  3204 20E8 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3205 20EC A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3206 20F0 A9 12			lda #$12
  3207 20F2 8D 83 2C			sta CALCSCREENADDR.Y
  3208 20F5 A9 1E			lda #$1E
  3209 20F7 8D 82 2C			sta CALCSCREENADDR.X
  3210 20FA 20 01 12			jsr CALCSCREENADDR
  3211 20FD B4 17			ldy :STACKORIGIN-1,x
  3212 20FF B5 18			lda :STACKORIGIN,x
  3213 2101 99 60 00			sta adr.OBSTACLES,y
  3214 2104 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3215 2106 99 61 00			sta adr.OBSTACLES+1,y
  3216 2109 CA				dex
  3217
  3218 				; optimize FAIL (1, levels.inc), line = 46
  3219
  3220 210A A9 08 95 18			mva #$08 :STACKORIGIN,x
  3221 210E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3222 2112 A9 0C			lda #$0C
  3223 2114 8D 83 2C			sta CALCSCREENADDR.Y
  3224 2117 A9 01			lda #$01
  3225 2119 8D 82 2C			sta CALCSCREENADDR.X
  3226 211C 20 01 12			jsr CALCSCREENADDR
  3227 211F B4 17			ldy :STACKORIGIN-1,x
  3228 2121 B5 18			lda :STACKORIGIN,x
  3229 2123 99 60 00			sta adr.OBSTACLES,y
  3230 2126 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3231 2128 99 61 00			sta adr.OBSTACLES+1,y
  3232 212B CA				dex
  3233 212C A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3234 2130 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3235 2134 A9 02			lda #$02
  3236 2136 8D 83 2C			sta CALCSCREENADDR.Y
  3237 2139 A9 14			lda #$14
  3238 213B 8D 82 2C			sta CALCSCREENADDR.X
  3239 213E 20 01 12			jsr CALCSCREENADDR
  3240 2141 B4 17			ldy :STACKORIGIN-1,x
  3241 2143 B5 18			lda :STACKORIGIN,x
  3242 2145 99 60 00			sta adr.OBSTACLES,y
  3243 2148 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3244 214A 99 61 00			sta adr.OBSTACLES+1,y
  3245 214D CA				dex
  3246
  3247 				; optimize FAIL (1, levels.inc), line = 47
  3248
  3249 214E A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3250 2152 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3251 2156 A9 16			lda #$16
  3252 2158 8D 83 2C			sta CALCSCREENADDR.Y
  3253 215B A9 14			lda #$14
  3254 215D 8D 82 2C			sta CALCSCREENADDR.X
  3255 2160 20 01 12			jsr CALCSCREENADDR
  3256 2163 B4 17			ldy :STACKORIGIN-1,x
  3257 2165 B5 18			lda :STACKORIGIN,x
  3258 2167 99 60 00			sta adr.OBSTACLES,y
  3259 216A B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3260 216C 99 61 00			sta adr.OBSTACLES+1,y
  3261 216F CA				dex
  3262 2170 CA				dex
  3263 2171			@exit
  3264 					.ifdef @new
  3265 					lda <@VarData
  3266 					sta :ztmp
  3267 					lda >@VarData
  3268 					ldy #@VarDataSize-1
  3269 					jmp @FreeMem
  3270 					els
  3271 2171 60				rts						; ret
  3272 					eif
  3273 				.endl
  3274
  3275 2172			.local	SETLEVEL04					; PROCEDURE
  3276
  3277 				; optimize OK (levels.inc), line = 54
  3278
  3279 2172 A9 01			lda #$01
  3280 2174 8D 9A 2D			sta SETPLAYER.ISALIVE
  3281 2177 A9 62			lda #$62
  3282 2179 8D 99 2D			sta SETPLAYER.COLOUR
  3283 217C A9 00			lda #$00
  3284 217E 8D 98 2D			sta SETPLAYER.BRAIN
  3285 2181 A9 04			lda #$04
  3286 2183 8D 97 2D			sta SETPLAYER.DIR
  3287 2186 A9 0C			lda #$0C
  3288 2188 8D 96 2D			sta SETPLAYER.Y
  3289 218B A9 12			lda #$12
  3290 218D 8D 95 2D			sta SETPLAYER.X
  3291 2190 AD 45 2C			lda PLAYER1
  3292 2193 8D 93 2D			sta SETPLAYER.P
  3293 2196 AD 46 2C			lda PLAYER1+1
  3294 2199 8D 94 2D			sta SETPLAYER.P+1
  3295 219C 20 44 16			jsr SETPLAYER
  3296
  3297 				; optimize OK (levels.inc), line = 55
  3298
  3299 219F A9 01			lda #$01
  3300 21A1 8D 9A 2D			sta SETPLAYER.ISALIVE
  3301 21A4 A9 5D			lda #$5D
  3302 21A6 8D 99 2D			sta SETPLAYER.COLOUR
  3303 21A9 A9 04			lda #$04
  3304 21AB 8D 98 2D			sta SETPLAYER.BRAIN
  3305 21AE A9 08			lda #$08
  3306 21B0 8D 97 2D			sta SETPLAYER.DIR
  3307 21B3 A9 0C			lda #$0C
  3308 21B5 8D 96 2D			sta SETPLAYER.Y
  3309 21B8 A9 16			lda #$16
  3310 21BA 8D 95 2D			sta SETPLAYER.X
  3311 21BD AD 47 2C			lda PLAYER2
  3312 21C0 8D 93 2D			sta SETPLAYER.P
  3313 21C3 AD 48 2C			lda PLAYER2+1
  3314 21C6 8D 94 2D			sta SETPLAYER.P+1
  3315 21C9 20 44 16			jsr SETPLAYER
  3316
  3317 				; optimize FAIL (1, levels.inc), line = 57
  3318
  3319 21CC E8				inx
  3320 21CD A9 00 95 18			mva #$00 :STACKORIGIN,x
  3321 21D1 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3322 21D3 A9 06			lda #$06
  3323 21D5 8D 83 2C			sta CALCSCREENADDR.Y
  3324 21D8 A9 0A			lda #$0A
  3325 21DA 8D 82 2C			sta CALCSCREENADDR.X
  3326 21DD 20 01 12			jsr CALCSCREENADDR
  3327 21E0 B4 17			ldy :STACKORIGIN-1,x
  3328 21E2 B5 18			lda :STACKORIGIN,x
  3329 21E4 99 60 00			sta adr.OBSTACLES,y
  3330 21E7 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3331 21E9 99 61 00			sta adr.OBSTACLES+1,y
  3332 21EC CA				dex
  3333 21ED A9 02 95 18			mva #$02 :STACKORIGIN,x
  3334 21F1 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3335 21F5 A9 06			lda #$06
  3336 21F7 8D 83 2C			sta CALCSCREENADDR.Y
  3337 21FA A9 1E			lda #$1E
  3338 21FC 8D 82 2C			sta CALCSCREENADDR.X
  3339 21FF 20 01 12			jsr CALCSCREENADDR
  3340 2202 B4 17			ldy :STACKORIGIN-1,x
  3341 2204 B5 18			lda :STACKORIGIN,x
  3342 2206 99 60 00			sta adr.OBSTACLES,y
  3343 2209 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3344 220B 99 61 00			sta adr.OBSTACLES+1,y
  3345 220E CA				dex
  3346
  3347 				; optimize FAIL (1, levels.inc), line = 58
  3348
  3349 220F A9 04 95 18			mva #$04 :STACKORIGIN,x
  3350 2213 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3351 2217 A9 12			lda #$12
  3352 2219 8D 83 2C			sta CALCSCREENADDR.Y
  3353 221C A9 0A			lda #$0A
  3354 221E 8D 82 2C			sta CALCSCREENADDR.X
  3355 2221 20 01 12			jsr CALCSCREENADDR
  3356 2224 B4 17			ldy :STACKORIGIN-1,x
  3357 2226 B5 18			lda :STACKORIGIN,x
  3358 2228 99 60 00			sta adr.OBSTACLES,y
  3359 222B B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3360 222D 99 61 00			sta adr.OBSTACLES+1,y
  3361 2230 CA				dex
  3362 2231 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3363 2235 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3364 2239 A9 12			lda #$12
  3365 223B 8D 83 2C			sta CALCSCREENADDR.Y
  3366 223E A9 1E			lda #$1E
  3367 2240 8D 82 2C			sta CALCSCREENADDR.X
  3368 2243 20 01 12			jsr CALCSCREENADDR
  3369 2246 B4 17			ldy :STACKORIGIN-1,x
  3370 2248 B5 18			lda :STACKORIGIN,x
  3371 224A 99 60 00			sta adr.OBSTACLES,y
  3372 224D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3373 224F 99 61 00			sta adr.OBSTACLES+1,y
  3374 2252 CA				dex
  3375
  3376 				; optimize FAIL (1, levels.inc), line = 59
  3377
  3378 2253 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3379 2257 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3380 225B A9 0C			lda #$0C
  3381 225D 8D 83 2C			sta CALCSCREENADDR.Y
  3382 2260 A9 01			lda #$01
  3383 2262 8D 82 2C			sta CALCSCREENADDR.X
  3384 2265 20 01 12			jsr CALCSCREENADDR
  3385 2268 B4 17			ldy :STACKORIGIN-1,x
  3386 226A B5 18			lda :STACKORIGIN,x
  3387 226C 99 60 00			sta adr.OBSTACLES,y
  3388 226F B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3389 2271 99 61 00			sta adr.OBSTACLES+1,y
  3390 2274 CA				dex
  3391 2275 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3392 2279 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3393 227D A9 02			lda #$02
  3394 227F 8D 83 2C			sta CALCSCREENADDR.Y
  3395 2282 A9 14			lda #$14
  3396 2284 8D 82 2C			sta CALCSCREENADDR.X
  3397 2287 20 01 12			jsr CALCSCREENADDR
  3398 228A B4 17			ldy :STACKORIGIN-1,x
  3399 228C B5 18			lda :STACKORIGIN,x
  3400 228E 99 60 00			sta adr.OBSTACLES,y
  3401 2291 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3402 2293 99 61 00			sta adr.OBSTACLES+1,y
  3403 2296 CA				dex
  3404
  3405 				; optimize FAIL (1, levels.inc), line = 60
  3406
  3407 2297 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3408 229B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3409 229F A9 16			lda #$16
  3410 22A1 8D 83 2C			sta CALCSCREENADDR.Y
  3411 22A4 A9 14			lda #$14
  3412 22A6 8D 82 2C			sta CALCSCREENADDR.X
  3413 22A9 20 01 12			jsr CALCSCREENADDR
  3414 22AC B4 17			ldy :STACKORIGIN-1,x
  3415 22AE B5 18			lda :STACKORIGIN,x
  3416 22B0 99 60 00			sta adr.OBSTACLES,y
  3417 22B3 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3418 22B5 99 61 00			sta adr.OBSTACLES+1,y
  3419 22B8 CA				dex
  3420 22B9 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3421 22BD A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3422 22C1 A9 0C			lda #$0C
  3423 22C3 8D 83 2C			sta CALCSCREENADDR.Y
  3424 22C6 A9 14			lda #$14
  3425 22C8 8D 82 2C			sta CALCSCREENADDR.X
  3426 22CB 20 01 12			jsr CALCSCREENADDR
  3427 22CE B4 17			ldy :STACKORIGIN-1,x
  3428 22D0 B5 18			lda :STACKORIGIN,x
  3429 22D2 99 60 00			sta adr.OBSTACLES,y
  3430 22D5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3431 22D7 99 61 00			sta adr.OBSTACLES+1,y
  3432 22DA CA				dex
  3433 22DB CA				dex
  3434 22DC			@exit
  3435 					.ifdef @new
  3436 					lda <@VarData
  3437 					sta :ztmp
  3438 					lda >@VarData
  3439 					ldy #@VarDataSize-1
  3440 					jmp @FreeMem
  3441 					els
  3442 22DC 60				rts						; ret
  3443 					eif
  3444 				.endl
  3445
  3446 22DD			.local	SETLEVEL05					; PROCEDURE
  3447
  3448 				; optimize OK (levels.inc), line = 67
  3449
  3450 22DD A9 01			lda #$01
  3451 22DF 8D 9A 2D			sta SETPLAYER.ISALIVE
  3452 22E2 A9 62			lda #$62
  3453 22E4 8D 99 2D			sta SETPLAYER.COLOUR
  3454 22E7 A9 00			lda #$00
  3455 22E9 8D 98 2D			sta SETPLAYER.BRAIN
  3456 22EC A9 08			lda #$08
  3457 22EE 8D 97 2D			sta SETPLAYER.DIR
  3458 22F1 A9 0C			lda #$0C
  3459 22F3 8D 96 2D			sta SETPLAYER.Y
  3460 22F6 A9 0A			lda #$0A
  3461 22F8 8D 95 2D			sta SETPLAYER.X
  3462 22FB AD 45 2C			lda PLAYER1
  3463 22FE 8D 93 2D			sta SETPLAYER.P
  3464 2301 AD 46 2C			lda PLAYER1+1
  3465 2304 8D 94 2D			sta SETPLAYER.P+1
  3466 2307 20 44 16			jsr SETPLAYER
  3467
  3468 				; optimize OK (levels.inc), line = 68
  3469
  3470 230A A9 01			lda #$01
  3471 230C 8D 9A 2D			sta SETPLAYER.ISALIVE
  3472 230F A9 5D			lda #$5D
  3473 2311 8D 99 2D			sta SETPLAYER.COLOUR
  3474 2314 A9 04			lda #$04
  3475 2316 8D 98 2D			sta SETPLAYER.BRAIN
  3476 2319 8D 97 2D			sta SETPLAYER.DIR
  3477 231C A9 0C			lda #$0C
  3478 231E 8D 96 2D			sta SETPLAYER.Y
  3479 2321 A9 1E			lda #$1E
  3480 2323 8D 95 2D			sta SETPLAYER.X
  3481 2326 AD 47 2C			lda PLAYER2
  3482 2329 8D 93 2D			sta SETPLAYER.P
  3483 232C AD 48 2C			lda PLAYER2+1
  3484 232F 8D 94 2D			sta SETPLAYER.P+1
  3485 2332 20 44 16			jsr SETPLAYER
  3486
  3487 				; optimize OK (levels.inc), line = 69
  3488
  3489 2335 A9 01			lda #$01
  3490 2337 8D 9A 2D			sta SETPLAYER.ISALIVE
  3491 233A A9 71			lda #$71
  3492 233C 8D 99 2D			sta SETPLAYER.COLOUR
  3493 233F A9 03			lda #$03
  3494 2341 8D 98 2D			sta SETPLAYER.BRAIN
  3495 2344 A9 02			lda #$02
  3496 2346 8D 97 2D			sta SETPLAYER.DIR
  3497 2349 A9 04			lda #$04
  3498 234B 8D 96 2D			sta SETPLAYER.Y
  3499 234E A9 14			lda #$14
  3500 2350 8D 95 2D			sta SETPLAYER.X
  3501 2353 AD 49 2C			lda PLAYER3
  3502 2356 8D 93 2D			sta SETPLAYER.P
  3503 2359 AD 4A 2C			lda PLAYER3+1
  3504 235C 8D 94 2D			sta SETPLAYER.P+1
  3505 235F 20 44 16			jsr SETPLAYER
  3506
  3507 				; optimize OK (levels.inc), line = 70
  3508
  3509 2362 A9 01			lda #$01
  3510 2364 8D 9A 2D			sta SETPLAYER.ISALIVE
  3511 2367 A9 55			lda #$55
  3512 2369 8D 99 2D			sta SETPLAYER.COLOUR
  3513 236C A9 02			lda #$02
  3514 236E 8D 98 2D			sta SETPLAYER.BRAIN
  3515 2371 A9 01			lda #$01
  3516 2373 8D 97 2D			sta SETPLAYER.DIR
  3517 2376 A9 12			lda #$12
  3518 2378 8D 96 2D			sta SETPLAYER.Y
  3519 237B A9 14			lda #$14
  3520 237D 8D 95 2D			sta SETPLAYER.X
  3521 2380 AD 4B 2C			lda PLAYER4
  3522 2383 8D 93 2D			sta SETPLAYER.P
  3523 2386 AD 4C 2C			lda PLAYER4+1
  3524 2389 8D 94 2D			sta SETPLAYER.P+1
  3525 238C 20 44 16			jsr SETPLAYER
  3526
  3527 				; optimize FAIL (1, levels.inc), line = 72
  3528
  3529 238F E8				inx
  3530 2390 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3531 2394 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3532 2396 A9 06			lda #$06
  3533 2398 8D 83 2C			sta CALCSCREENADDR.Y
  3534 239B A9 0A			lda #$0A
  3535 239D 8D 82 2C			sta CALCSCREENADDR.X
  3536 23A0 20 01 12			jsr CALCSCREENADDR
  3537 23A3 B4 17			ldy :STACKORIGIN-1,x
  3538 23A5 B5 18			lda :STACKORIGIN,x
  3539 23A7 99 60 00			sta adr.OBSTACLES,y
  3540 23AA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3541 23AC 99 61 00			sta adr.OBSTACLES+1,y
  3542 23AF CA				dex
  3543 23B0 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3544 23B4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3545 23B8 A9 06			lda #$06
  3546 23BA 8D 83 2C			sta CALCSCREENADDR.Y
  3547 23BD A9 1E			lda #$1E
  3548 23BF 8D 82 2C			sta CALCSCREENADDR.X
  3549 23C2 20 01 12			jsr CALCSCREENADDR
  3550 23C5 B4 17			ldy :STACKORIGIN-1,x
  3551 23C7 B5 18			lda :STACKORIGIN,x
  3552 23C9 99 60 00			sta adr.OBSTACLES,y
  3553 23CC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3554 23CE 99 61 00			sta adr.OBSTACLES+1,y
  3555 23D1 CA				dex
  3556
  3557 				; optimize FAIL (1, levels.inc), line = 73
  3558
  3559 23D2 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3560 23D6 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3561 23DA A9 12			lda #$12
  3562 23DC 8D 83 2C			sta CALCSCREENADDR.Y
  3563 23DF A9 0A			lda #$0A
  3564 23E1 8D 82 2C			sta CALCSCREENADDR.X
  3565 23E4 20 01 12			jsr CALCSCREENADDR
  3566 23E7 B4 17			ldy :STACKORIGIN-1,x
  3567 23E9 B5 18			lda :STACKORIGIN,x
  3568 23EB 99 60 00			sta adr.OBSTACLES,y
  3569 23EE B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3570 23F0 99 61 00			sta adr.OBSTACLES+1,y
  3571 23F3 CA				dex
  3572 23F4 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3573 23F8 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3574 23FC A9 12			lda #$12
  3575 23FE 8D 83 2C			sta CALCSCREENADDR.Y
  3576 2401 A9 1E			lda #$1E
  3577 2403 8D 82 2C			sta CALCSCREENADDR.X
  3578 2406 20 01 12			jsr CALCSCREENADDR
  3579 2409 B4 17			ldy :STACKORIGIN-1,x
  3580 240B B5 18			lda :STACKORIGIN,x
  3581 240D 99 60 00			sta adr.OBSTACLES,y
  3582 2410 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3583 2412 99 61 00			sta adr.OBSTACLES+1,y
  3584 2415 CA				dex
  3585
  3586 				; optimize FAIL (1, levels.inc), line = 74
  3587
  3588 2416 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3589 241A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3590 241E A9 0C			lda #$0C
  3591 2420 8D 83 2C			sta CALCSCREENADDR.Y
  3592 2423 A9 01			lda #$01
  3593 2425 8D 82 2C			sta CALCSCREENADDR.X
  3594 2428 20 01 12			jsr CALCSCREENADDR
  3595 242B B4 17			ldy :STACKORIGIN-1,x
  3596 242D B5 18			lda :STACKORIGIN,x
  3597 242F 99 60 00			sta adr.OBSTACLES,y
  3598 2432 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3599 2434 99 61 00			sta adr.OBSTACLES+1,y
  3600 2437 CA				dex
  3601 2438 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3602 243C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3603 2440 A9 02			lda #$02
  3604 2442 8D 83 2C			sta CALCSCREENADDR.Y
  3605 2445 A9 14			lda #$14
  3606 2447 8D 82 2C			sta CALCSCREENADDR.X
  3607 244A 20 01 12			jsr CALCSCREENADDR
  3608 244D B4 17			ldy :STACKORIGIN-1,x
  3609 244F B5 18			lda :STACKORIGIN,x
  3610 2451 99 60 00			sta adr.OBSTACLES,y
  3611 2454 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3612 2456 99 61 00			sta adr.OBSTACLES+1,y
  3613 2459 CA				dex
  3614
  3615 				; optimize FAIL (1, levels.inc), line = 75
  3616
  3617 245A A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3618 245E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3619 2462 A9 16			lda #$16
  3620 2464 8D 83 2C			sta CALCSCREENADDR.Y
  3621 2467 A9 14			lda #$14
  3622 2469 8D 82 2C			sta CALCSCREENADDR.X
  3623 246C 20 01 12			jsr CALCSCREENADDR
  3624 246F B4 17			ldy :STACKORIGIN-1,x
  3625 2471 B5 18			lda :STACKORIGIN,x
  3626 2473 99 60 00			sta adr.OBSTACLES,y
  3627 2476 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3628 2478 99 61 00			sta adr.OBSTACLES+1,y
  3629 247B CA				dex
  3630 247C CA				dex
  3631 247D			@exit
  3632 					.ifdef @new
  3633 					lda <@VarData
  3634 					sta :ztmp
  3635 					lda >@VarData
  3636 					ldy #@VarDataSize-1
  3637 					jmp @FreeMem
  3638 					els
  3639 247D 60				rts						; ret
  3640 					eif
  3641 				.endl
  3642
  3643 247E			.local	SETLEVEL06					; PROCEDURE
  3644
  3645 				; optimize OK (levels.inc), line = 82
  3646
  3647 247E A9 01			lda #$01
  3648 2480 8D 9A 2D			sta SETPLAYER.ISALIVE
  3649 2483 A9 62			lda #$62
  3650 2485 8D 99 2D			sta SETPLAYER.COLOUR
  3651 2488 A9 00			lda #$00
  3652 248A 8D 98 2D			sta SETPLAYER.BRAIN
  3653 248D A9 04			lda #$04
  3654 248F 8D 97 2D			sta SETPLAYER.DIR
  3655 2492 A9 0C			lda #$0C
  3656 2494 8D 96 2D			sta SETPLAYER.Y
  3657 2497 A9 12			lda #$12
  3658 2499 8D 95 2D			sta SETPLAYER.X
  3659 249C AD 45 2C			lda PLAYER1
  3660 249F 8D 93 2D			sta SETPLAYER.P
  3661 24A2 AD 46 2C			lda PLAYER1+1
  3662 24A5 8D 94 2D			sta SETPLAYER.P+1
  3663 24A8 20 44 16			jsr SETPLAYER
  3664
  3665 				; optimize OK (levels.inc), line = 83
  3666
  3667 24AB A9 01			lda #$01
  3668 24AD 8D 9A 2D			sta SETPLAYER.ISALIVE
  3669 24B0 A9 5D			lda #$5D
  3670 24B2 8D 99 2D			sta SETPLAYER.COLOUR
  3671 24B5 A9 02			lda #$02
  3672 24B7 8D 98 2D			sta SETPLAYER.BRAIN
  3673 24BA A9 08			lda #$08
  3674 24BC 8D 97 2D			sta SETPLAYER.DIR
  3675 24BF A9 0C			lda #$0C
  3676 24C1 8D 96 2D			sta SETPLAYER.Y
  3677 24C4 A9 16			lda #$16
  3678 24C6 8D 95 2D			sta SETPLAYER.X
  3679 24C9 AD 47 2C			lda PLAYER2
  3680 24CC 8D 93 2D			sta SETPLAYER.P
  3681 24CF AD 48 2C			lda PLAYER2+1
  3682 24D2 8D 94 2D			sta SETPLAYER.P+1
  3683 24D5 20 44 16			jsr SETPLAYER
  3684
  3685 				; optimize OK (levels.inc), line = 84
  3686
  3687 24D8 A9 01			lda #$01
  3688 24DA 8D 9A 2D			sta SETPLAYER.ISALIVE
  3689 24DD A9 71			lda #$71
  3690 24DF 8D 99 2D			sta SETPLAYER.COLOUR
  3691 24E2 A9 02			lda #$02
  3692 24E4 8D 98 2D			sta SETPLAYER.BRAIN
  3693 24E7 8D 97 2D			sta SETPLAYER.DIR
  3694 24EA A9 06			lda #$06
  3695 24EC 8D 96 2D			sta SETPLAYER.Y
  3696 24EF 8D 95 2D			sta SETPLAYER.X
  3697 24F2 AD 49 2C			lda PLAYER3
  3698 24F5 8D 93 2D			sta SETPLAYER.P
  3699 24F8 AD 4A 2C			lda PLAYER3+1
  3700 24FB 8D 94 2D			sta SETPLAYER.P+1
  3701 24FE 20 44 16			jsr SETPLAYER
  3702
  3703 				; optimize OK (levels.inc), line = 85
  3704
  3705 2501 A9 01			lda #$01
  3706 2503 8D 9A 2D			sta SETPLAYER.ISALIVE
  3707 2506 A9 55			lda #$55
  3708 2508 8D 99 2D			sta SETPLAYER.COLOUR
  3709 250B A9 03			lda #$03
  3710 250D 8D 98 2D			sta SETPLAYER.BRAIN
  3711 2510 A9 08			lda #$08
  3712 2512 8D 97 2D			sta SETPLAYER.DIR
  3713 2515 A9 12			lda #$12
  3714 2517 8D 96 2D			sta SETPLAYER.Y
  3715 251A A9 24			lda #$24
  3716 251C 8D 95 2D			sta SETPLAYER.X
  3717 251F AD 4B 2C			lda PLAYER4
  3718 2522 8D 93 2D			sta SETPLAYER.P
  3719 2525 AD 4C 2C			lda PLAYER4+1
  3720 2528 8D 94 2D			sta SETPLAYER.P+1
  3721 252B 20 44 16			jsr SETPLAYER
  3722
  3723 				; optimize FAIL (1, levels.inc), line = 87
  3724
  3725 252E E8				inx
  3726 252F A9 00 95 18			mva #$00 :STACKORIGIN,x
  3727 2533 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3728 2535 A9 06			lda #$06
  3729 2537 8D 83 2C			sta CALCSCREENADDR.Y
  3730 253A A9 0A			lda #$0A
  3731 253C 8D 82 2C			sta CALCSCREENADDR.X
  3732 253F 20 01 12			jsr CALCSCREENADDR
  3733 2542 B4 17			ldy :STACKORIGIN-1,x
  3734 2544 B5 18			lda :STACKORIGIN,x
  3735 2546 99 60 00			sta adr.OBSTACLES,y
  3736 2549 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3737 254B 99 61 00			sta adr.OBSTACLES+1,y
  3738 254E CA				dex
  3739 254F A9 02 95 18			mva #$02 :STACKORIGIN,x
  3740 2553 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3741 2557 A9 06			lda #$06
  3742 2559 8D 83 2C			sta CALCSCREENADDR.Y
  3743 255C A9 1E			lda #$1E
  3744 255E 8D 82 2C			sta CALCSCREENADDR.X
  3745 2561 20 01 12			jsr CALCSCREENADDR
  3746 2564 B4 17			ldy :STACKORIGIN-1,x
  3747 2566 B5 18			lda :STACKORIGIN,x
  3748 2568 99 60 00			sta adr.OBSTACLES,y
  3749 256B B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3750 256D 99 61 00			sta adr.OBSTACLES+1,y
  3751 2570 CA				dex
  3752
  3753 				; optimize FAIL (1, levels.inc), line = 88
  3754
  3755 2571 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3756 2575 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3757 2579 A9 12			lda #$12
  3758 257B 8D 83 2C			sta CALCSCREENADDR.Y
  3759 257E A9 0A			lda #$0A
  3760 2580 8D 82 2C			sta CALCSCREENADDR.X
  3761 2583 20 01 12			jsr CALCSCREENADDR
  3762 2586 B4 17			ldy :STACKORIGIN-1,x
  3763 2588 B5 18			lda :STACKORIGIN,x
  3764 258A 99 60 00			sta adr.OBSTACLES,y
  3765 258D B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3766 258F 99 61 00			sta adr.OBSTACLES+1,y
  3767 2592 CA				dex
  3768 2593 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3769 2597 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3770 259B A9 12			lda #$12
  3771 259D 8D 83 2C			sta CALCSCREENADDR.Y
  3772 25A0 A9 1E			lda #$1E
  3773 25A2 8D 82 2C			sta CALCSCREENADDR.X
  3774 25A5 20 01 12			jsr CALCSCREENADDR
  3775 25A8 B4 17			ldy :STACKORIGIN-1,x
  3776 25AA B5 18			lda :STACKORIGIN,x
  3777 25AC 99 60 00			sta adr.OBSTACLES,y
  3778 25AF B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3779 25B1 99 61 00			sta adr.OBSTACLES+1,y
  3780 25B4 CA				dex
  3781
  3782 				; optimize FAIL (1, levels.inc), line = 89
  3783
  3784 25B5 A9 08 95 18			mva #$08 :STACKORIGIN,x
  3785 25B9 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3786 25BD A9 0C			lda #$0C
  3787 25BF 8D 83 2C			sta CALCSCREENADDR.Y
  3788 25C2 A9 01			lda #$01
  3789 25C4 8D 82 2C			sta CALCSCREENADDR.X
  3790 25C7 20 01 12			jsr CALCSCREENADDR
  3791 25CA B4 17			ldy :STACKORIGIN-1,x
  3792 25CC B5 18			lda :STACKORIGIN,x
  3793 25CE 99 60 00			sta adr.OBSTACLES,y
  3794 25D1 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3795 25D3 99 61 00			sta adr.OBSTACLES+1,y
  3796 25D6 CA				dex
  3797 25D7 A9 0A 95 18			mva #$0A :STACKORIGIN,x
  3798 25DB A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3799 25DF A9 02			lda #$02
  3800 25E1 8D 83 2C			sta CALCSCREENADDR.Y
  3801 25E4 A9 14			lda #$14
  3802 25E6 8D 82 2C			sta CALCSCREENADDR.X
  3803 25E9 20 01 12			jsr CALCSCREENADDR
  3804 25EC B4 17			ldy :STACKORIGIN-1,x
  3805 25EE B5 18			lda :STACKORIGIN,x
  3806 25F0 99 60 00			sta adr.OBSTACLES,y
  3807 25F3 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3808 25F5 99 61 00			sta adr.OBSTACLES+1,y
  3809 25F8 CA				dex
  3810
  3811 				; optimize FAIL (1, levels.inc), line = 90
  3812
  3813 25F9 A9 0C 95 18			mva #$0C :STACKORIGIN,x
  3814 25FD A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3815 2601 A9 16			lda #$16
  3816 2603 8D 83 2C			sta CALCSCREENADDR.Y
  3817 2606 A9 14			lda #$14
  3818 2608 8D 82 2C			sta CALCSCREENADDR.X
  3819 260B 20 01 12			jsr CALCSCREENADDR
  3820 260E B4 17			ldy :STACKORIGIN-1,x
  3821 2610 B5 18			lda :STACKORIGIN,x
  3822 2612 99 60 00			sta adr.OBSTACLES,y
  3823 2615 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3824 2617 99 61 00			sta adr.OBSTACLES+1,y
  3825 261A CA				dex
  3826 261B A9 0E 95 18			mva #$0E :STACKORIGIN,x
  3827 261F A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3828 2623 A9 0C			lda #$0C
  3829 2625 8D 83 2C			sta CALCSCREENADDR.Y
  3830 2628 A9 14			lda #$14
  3831 262A 8D 82 2C			sta CALCSCREENADDR.X
  3832 262D 20 01 12			jsr CALCSCREENADDR
  3833 2630 B4 17			ldy :STACKORIGIN-1,x
  3834 2632 B5 18			lda :STACKORIGIN,x
  3835 2634 99 60 00			sta adr.OBSTACLES,y
  3836 2637 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3837 2639 99 61 00			sta adr.OBSTACLES+1,y
  3838 263C CA				dex
  3839 263D CA				dex
  3840 263E			@exit
  3841 					.ifdef @new
  3842 					lda <@VarData
  3843 					sta :ztmp
  3844 					lda >@VarData
  3845 					ldy #@VarDataSize-1
  3846 					jmp @FreeMem
  3847 					els
  3848 263E 60				rts						; ret
  3849 					eif
  3850 				.endl
  3851
  3852 263F			.local	SETLEVEL07					; PROCEDURE
  3853
  3854 				; optimize OK (levels.inc), line = 97
  3855
  3856 263F A9 01			lda #$01
  3857 2641 8D 9A 2D			sta SETPLAYER.ISALIVE
  3858 2644 A9 62			lda #$62
  3859 2646 8D 99 2D			sta SETPLAYER.COLOUR
  3860 2649 A9 00			lda #$00
  3861 264B 8D 98 2D			sta SETPLAYER.BRAIN
  3862 264E A9 04			lda #$04
  3863 2650 8D 97 2D			sta SETPLAYER.DIR
  3864 2653 A9 0C			lda #$0C
  3865 2655 8D 96 2D			sta SETPLAYER.Y
  3866 2658 A9 12			lda #$12
  3867 265A 8D 95 2D			sta SETPLAYER.X
  3868 265D AD 45 2C			lda PLAYER1
  3869 2660 8D 93 2D			sta SETPLAYER.P
  3870 2663 AD 46 2C			lda PLAYER1+1
  3871 2666 8D 94 2D			sta SETPLAYER.P+1
  3872 2669 20 44 16			jsr SETPLAYER
  3873
  3874 				; optimize OK (levels.inc), line = 98
  3875
  3876 266C A9 01			lda #$01
  3877 266E 8D 9A 2D			sta SETPLAYER.ISALIVE
  3878 2671 A9 5D			lda #$5D
  3879 2673 8D 99 2D			sta SETPLAYER.COLOUR
  3880 2676 A9 03			lda #$03
  3881 2678 8D 98 2D			sta SETPLAYER.BRAIN
  3882 267B A9 08			lda #$08
  3883 267D 8D 97 2D			sta SETPLAYER.DIR
  3884 2680 A9 17			lda #$17
  3885 2682 8D 96 2D			sta SETPLAYER.Y
  3886 2685 A9 01			lda #$01
  3887 2687 8D 95 2D			sta SETPLAYER.X
  3888 268A AD 47 2C			lda PLAYER2
  3889 268D 8D 93 2D			sta SETPLAYER.P
  3890 2690 AD 48 2C			lda PLAYER2+1
  3891 2693 8D 94 2D			sta SETPLAYER.P+1
  3892 2696 20 44 16			jsr SETPLAYER
  3893
  3894 				; optimize OK (levels.inc), line = 99
  3895
  3896 2699 A9 01			lda #$01
  3897 269B 8D 9A 2D			sta SETPLAYER.ISALIVE
  3898 269E A9 71			lda #$71
  3899 26A0 8D 99 2D			sta SETPLAYER.COLOUR
  3900 26A3 A9 03			lda #$03
  3901 26A5 8D 98 2D			sta SETPLAYER.BRAIN
  3902 26A8 A9 02			lda #$02
  3903 26AA 8D 97 2D			sta SETPLAYER.DIR
  3904 26AD A9 04			lda #$04
  3905 26AF 8D 96 2D			sta SETPLAYER.Y
  3906 26B2 A9 1E			lda #$1E
  3907 26B4 8D 95 2D			sta SETPLAYER.X
  3908 26B7 AD 49 2C			lda PLAYER3
  3909 26BA 8D 93 2D			sta SETPLAYER.P
  3910 26BD AD 4A 2C			lda PLAYER3+1
  3911 26C0 8D 94 2D			sta SETPLAYER.P+1
  3912 26C3 20 44 16			jsr SETPLAYER
  3913
  3914 				; optimize OK (levels.inc), line = 100
  3915
  3916 26C6 A9 01			lda #$01
  3917 26C8 8D 9A 2D			sta SETPLAYER.ISALIVE
  3918 26CB A9 55			lda #$55
  3919 26CD 8D 99 2D			sta SETPLAYER.COLOUR
  3920 26D0 A9 02			lda #$02
  3921 26D2 8D 98 2D			sta SETPLAYER.BRAIN
  3922 26D5 A9 01			lda #$01
  3923 26D7 8D 97 2D			sta SETPLAYER.DIR
  3924 26DA A9 15			lda #$15
  3925 26DC 8D 96 2D			sta SETPLAYER.Y
  3926 26DF A9 24			lda #$24
  3927 26E1 8D 95 2D			sta SETPLAYER.X
  3928 26E4 AD 4B 2C			lda PLAYER4
  3929 26E7 8D 93 2D			sta SETPLAYER.P
  3930 26EA AD 4C 2C			lda PLAYER4+1
  3931 26ED 8D 94 2D			sta SETPLAYER.P+1
  3932 26F0 20 44 16			jsr SETPLAYER
  3933
  3934 				; optimize FAIL (1, levels.inc), line = 102
  3935
  3936 26F3 E8				inx
  3937 26F4 A9 00 95 18			mva #$00 :STACKORIGIN,x
  3938 26F8 95 28			sta :STACKORIGIN+STACKWIDTH,x
  3939 26FA A9 06			lda #$06
  3940 26FC 8D 83 2C			sta CALCSCREENADDR.Y
  3941 26FF A9 0A			lda #$0A
  3942 2701 8D 82 2C			sta CALCSCREENADDR.X
  3943 2704 20 01 12			jsr CALCSCREENADDR
  3944 2707 B4 17			ldy :STACKORIGIN-1,x
  3945 2709 B5 18			lda :STACKORIGIN,x
  3946 270B 99 60 00			sta adr.OBSTACLES,y
  3947 270E B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3948 2710 99 61 00			sta adr.OBSTACLES+1,y
  3949 2713 CA				dex
  3950 2714 A9 02 95 18			mva #$02 :STACKORIGIN,x
  3951 2718 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3952 271C A9 06			lda #$06
  3953 271E 8D 83 2C			sta CALCSCREENADDR.Y
  3954 2721 A9 1E			lda #$1E
  3955 2723 8D 82 2C			sta CALCSCREENADDR.X
  3956 2726 20 01 12			jsr CALCSCREENADDR
  3957 2729 B4 17			ldy :STACKORIGIN-1,x
  3958 272B B5 18			lda :STACKORIGIN,x
  3959 272D 99 60 00			sta adr.OBSTACLES,y
  3960 2730 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3961 2732 99 61 00			sta adr.OBSTACLES+1,y
  3962 2735 CA				dex
  3963
  3964 				; optimize FAIL (1, levels.inc), line = 103
  3965
  3966 2736 A9 04 95 18			mva #$04 :STACKORIGIN,x
  3967 273A A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3968 273E A9 12			lda #$12
  3969 2740 8D 83 2C			sta CALCSCREENADDR.Y
  3970 2743 A9 0A			lda #$0A
  3971 2745 8D 82 2C			sta CALCSCREENADDR.X
  3972 2748 20 01 12			jsr CALCSCREENADDR
  3973 274B B4 17			ldy :STACKORIGIN-1,x
  3974 274D B5 18			lda :STACKORIGIN,x
  3975 274F 99 60 00			sta adr.OBSTACLES,y
  3976 2752 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3977 2754 99 61 00			sta adr.OBSTACLES+1,y
  3978 2757 CA				dex
  3979 2758 A9 06 95 18			mva #$06 :STACKORIGIN,x
  3980 275C A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3981 2760 A9 12			lda #$12
  3982 2762 8D 83 2C			sta CALCSCREENADDR.Y
  3983 2765 A9 1E			lda #$1E
  3984 2767 8D 82 2C			sta CALCSCREENADDR.X
  3985 276A 20 01 12			jsr CALCSCREENADDR
  3986 276D B4 17			ldy :STACKORIGIN-1,x
  3987 276F B5 18			lda :STACKORIGIN,x
  3988 2771 99 60 00			sta adr.OBSTACLES,y
  3989 2774 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  3990 2776 99 61 00			sta adr.OBSTACLES+1,y
  3991 2779 CA				dex
  3992
  3993 				; optimize FAIL (1, levels.inc), line = 104
  3994
  3995 277A A9 08 95 18			mva #$08 :STACKORIGIN,x
  3996 277E A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3997 2782 A9 0C			lda #$0C
  3998 2784 8D 83 2C			sta CALCSCREENADDR.Y
  3999 2787 A9 01			lda #$01
  4000 2789 8D 82 2C			sta CALCSCREENADDR.X
  4001 278C 20 01 12			jsr CALCSCREENADDR
  4002 278F B4 17			ldy :STACKORIGIN-1,x
  4003 2791 B5 18			lda :STACKORIGIN,x
  4004 2793 99 60 00			sta adr.OBSTACLES,y
  4005 2796 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4006 2798 99 61 00			sta adr.OBSTACLES+1,y
  4007 279B CA				dex
  4008 279C A9 0A 95 18			mva #$0A :STACKORIGIN,x
  4009 27A0 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4010 27A4 A9 02			lda #$02
  4011 27A6 8D 83 2C			sta CALCSCREENADDR.Y
  4012 27A9 A9 14			lda #$14
  4013 27AB 8D 82 2C			sta CALCSCREENADDR.X
  4014 27AE 20 01 12			jsr CALCSCREENADDR
  4015 27B1 B4 17			ldy :STACKORIGIN-1,x
  4016 27B3 B5 18			lda :STACKORIGIN,x
  4017 27B5 99 60 00			sta adr.OBSTACLES,y
  4018 27B8 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4019 27BA 99 61 00			sta adr.OBSTACLES+1,y
  4020 27BD CA				dex
  4021
  4022 				; optimize FAIL (1, levels.inc), line = 105
  4023
  4024 27BE A9 0C 95 18			mva #$0C :STACKORIGIN,x
  4025 27C2 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4026 27C6 A9 16			lda #$16
  4027 27C8 8D 83 2C			sta CALCSCREENADDR.Y
  4028 27CB A9 14			lda #$14
  4029 27CD 8D 82 2C			sta CALCSCREENADDR.X
  4030 27D0 20 01 12			jsr CALCSCREENADDR
  4031 27D3 B4 17			ldy :STACKORIGIN-1,x
  4032 27D5 B5 18			lda :STACKORIGIN,x
  4033 27D7 99 60 00			sta adr.OBSTACLES,y
  4034 27DA B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4035 27DC 99 61 00			sta adr.OBSTACLES+1,y
  4036 27DF CA				dex
  4037 27E0 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  4038 27E4 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4039 27E8 A9 0C			lda #$0C
  4040 27EA 8D 83 2C			sta CALCSCREENADDR.Y
  4041 27ED A9 14			lda #$14
  4042 27EF 8D 82 2C			sta CALCSCREENADDR.X
  4043 27F2 20 01 12			jsr CALCSCREENADDR
  4044 27F5 B4 17			ldy :STACKORIGIN-1,x
  4045 27F7 B5 18			lda :STACKORIGIN,x
  4046 27F9 99 60 00			sta adr.OBSTACLES,y
  4047 27FC B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4048 27FE 99 61 00			sta adr.OBSTACLES+1,y
  4049 2801 CA				dex
  4050 2802 CA				dex
  4051 2803			@exit
  4052 					.ifdef @new
  4053 					lda <@VarData
  4054 					sta :ztmp
  4055 					lda >@VarData
  4056 					ldy #@VarDataSize-1
  4057 					jmp @FreeMem
  4058 					els
  4059 2803 60				rts						; ret
  4060 					eif
  4061 				.endl
  4062
  4063 2804			.local	SETLEVEL08					; PROCEDURE
  4064
  4065 				; optimize OK (levels.inc), line = 112
  4066
  4067 2804 A9 01			lda #$01
  4068 2806 8D 9A 2D			sta SETPLAYER.ISALIVE
  4069 2809 A9 62			lda #$62
  4070 280B 8D 99 2D			sta SETPLAYER.COLOUR
  4071 280E A9 00			lda #$00
  4072 2810 8D 98 2D			sta SETPLAYER.BRAIN
  4073 2813 A9 08			lda #$08
  4074 2815 8D 97 2D			sta SETPLAYER.DIR
  4075 2818 A9 17			lda #$17
  4076 281A 8D 96 2D			sta SETPLAYER.Y
  4077 281D A9 01			lda #$01
  4078 281F 8D 95 2D			sta SETPLAYER.X
  4079 2822 AD 45 2C			lda PLAYER1
  4080 2825 8D 93 2D			sta SETPLAYER.P
  4081 2828 AD 46 2C			lda PLAYER1+1
  4082 282B 8D 94 2D			sta SETPLAYER.P+1
  4083 282E 20 44 16			jsr SETPLAYER
  4084
  4085 				; optimize OK (levels.inc), line = 113
  4086
  4087 2831 A9 01			lda #$01
  4088 2833 8D 9A 2D			sta SETPLAYER.ISALIVE
  4089 2836 A9 5D			lda #$5D
  4090 2838 8D 99 2D			sta SETPLAYER.COLOUR
  4091 283B A9 03			lda #$03
  4092 283D 8D 98 2D			sta SETPLAYER.BRAIN
  4093 2840 A9 04			lda #$04
  4094 2842 8D 97 2D			sta SETPLAYER.DIR
  4095 2845 A9 17			lda #$17
  4096 2847 8D 96 2D			sta SETPLAYER.Y
  4097 284A A9 26			lda #$26
  4098 284C 8D 95 2D			sta SETPLAYER.X
  4099 284F AD 47 2C			lda PLAYER2
  4100 2852 8D 93 2D			sta SETPLAYER.P
  4101 2855 AD 48 2C			lda PLAYER2+1
  4102 2858 8D 94 2D			sta SETPLAYER.P+1
  4103 285B 20 44 16			jsr SETPLAYER
  4104
  4105 				; optimize OK (levels.inc), line = 114
  4106
  4107 285E A9 01			lda #$01
  4108 2860 8D 9A 2D			sta SETPLAYER.ISALIVE
  4109 2863 A9 71			lda #$71
  4110 2865 8D 99 2D			sta SETPLAYER.COLOUR
  4111 2868 A9 02			lda #$02
  4112 286A 8D 98 2D			sta SETPLAYER.BRAIN
  4113 286D 8D 97 2D			sta SETPLAYER.DIR
  4114 2870 A9 01			lda #$01
  4115 2872 8D 96 2D			sta SETPLAYER.Y
  4116 2875 A9 0A			lda #$0A
  4117 2877 8D 95 2D			sta SETPLAYER.X
  4118 287A AD 49 2C			lda PLAYER3
  4119 287D 8D 93 2D			sta SETPLAYER.P
  4120 2880 AD 4A 2C			lda PLAYER3+1
  4121 2883 8D 94 2D			sta SETPLAYER.P+1
  4122 2886 20 44 16			jsr SETPLAYER
  4123
  4124 				; optimize OK (levels.inc), line = 115
  4125
  4126 2889 A9 01			lda #$01
  4127 288B 8D 9A 2D			sta SETPLAYER.ISALIVE
  4128 288E A9 55			lda #$55
  4129 2890 8D 99 2D			sta SETPLAYER.COLOUR
  4130 2893 A9 04			lda #$04
  4131 2895 8D 98 2D			sta SETPLAYER.BRAIN
  4132 2898 8D 97 2D			sta SETPLAYER.DIR
  4133 289B A9 01			lda #$01
  4134 289D 8D 96 2D			sta SETPLAYER.Y
  4135 28A0 A9 26			lda #$26
  4136 28A2 8D 95 2D			sta SETPLAYER.X
  4137 28A5 AD 4B 2C			lda PLAYER4
  4138 28A8 8D 93 2D			sta SETPLAYER.P
  4139 28AB AD 4C 2C			lda PLAYER4+1
  4140 28AE 8D 94 2D			sta SETPLAYER.P+1
  4141 28B1 20 44 16			jsr SETPLAYER
  4142
  4143 				; optimize FAIL (1, levels.inc), line = 117
  4144
  4145 28B4 E8				inx
  4146 28B5 A9 00 95 18			mva #$00 :STACKORIGIN,x
  4147 28B9 95 28			sta :STACKORIGIN+STACKWIDTH,x
  4148 28BB A9 06			lda #$06
  4149 28BD 8D 83 2C			sta CALCSCREENADDR.Y
  4150 28C0 A9 0A			lda #$0A
  4151 28C2 8D 82 2C			sta CALCSCREENADDR.X
  4152 28C5 20 01 12			jsr CALCSCREENADDR
  4153 28C8 B4 17			ldy :STACKORIGIN-1,x
  4154 28CA B5 18			lda :STACKORIGIN,x
  4155 28CC 99 60 00			sta adr.OBSTACLES,y
  4156 28CF B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4157 28D1 99 61 00			sta adr.OBSTACLES+1,y
  4158 28D4 CA				dex
  4159 28D5 A9 02 95 18			mva #$02 :STACKORIGIN,x
  4160 28D9 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4161 28DD A9 06			lda #$06
  4162 28DF 8D 83 2C			sta CALCSCREENADDR.Y
  4163 28E2 A9 1E			lda #$1E
  4164 28E4 8D 82 2C			sta CALCSCREENADDR.X
  4165 28E7 20 01 12			jsr CALCSCREENADDR
  4166 28EA B4 17			ldy :STACKORIGIN-1,x
  4167 28EC B5 18			lda :STACKORIGIN,x
  4168 28EE 99 60 00			sta adr.OBSTACLES,y
  4169 28F1 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4170 28F3 99 61 00			sta adr.OBSTACLES+1,y
  4171 28F6 CA				dex
  4172
  4173 				; optimize FAIL (1, levels.inc), line = 118
  4174
  4175 28F7 A9 04 95 18			mva #$04 :STACKORIGIN,x
  4176 28FB A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4177 28FF A9 12			lda #$12
  4178 2901 8D 83 2C			sta CALCSCREENADDR.Y
  4179 2904 A9 0A			lda #$0A
  4180 2906 8D 82 2C			sta CALCSCREENADDR.X
  4181 2909 20 01 12			jsr CALCSCREENADDR
  4182 290C B4 17			ldy :STACKORIGIN-1,x
  4183 290E B5 18			lda :STACKORIGIN,x
  4184 2910 99 60 00			sta adr.OBSTACLES,y
  4185 2913 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4186 2915 99 61 00			sta adr.OBSTACLES+1,y
  4187 2918 CA				dex
  4188 2919 A9 06 95 18			mva #$06 :STACKORIGIN,x
  4189 291D A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4190 2921 A9 12			lda #$12
  4191 2923 8D 83 2C			sta CALCSCREENADDR.Y
  4192 2926 A9 1E			lda #$1E
  4193 2928 8D 82 2C			sta CALCSCREENADDR.X
  4194 292B 20 01 12			jsr CALCSCREENADDR
  4195 292E B4 17			ldy :STACKORIGIN-1,x
  4196 2930 B5 18			lda :STACKORIGIN,x
  4197 2932 99 60 00			sta adr.OBSTACLES,y
  4198 2935 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4199 2937 99 61 00			sta adr.OBSTACLES+1,y
  4200 293A CA				dex
  4201
  4202 				; optimize FAIL (1, levels.inc), line = 119
  4203
  4204 293B A9 08 95 18			mva #$08 :STACKORIGIN,x
  4205 293F A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4206 2943 A9 0C			lda #$0C
  4207 2945 8D 83 2C			sta CALCSCREENADDR.Y
  4208 2948 A9 01			lda #$01
  4209 294A 8D 82 2C			sta CALCSCREENADDR.X
  4210 294D 20 01 12			jsr CALCSCREENADDR
  4211 2950 B4 17			ldy :STACKORIGIN-1,x
  4212 2952 B5 18			lda :STACKORIGIN,x
  4213 2954 99 60 00			sta adr.OBSTACLES,y
  4214 2957 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4215 2959 99 61 00			sta adr.OBSTACLES+1,y
  4216 295C CA				dex
  4217 295D A9 0A 95 18			mva #$0A :STACKORIGIN,x
  4218 2961 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4219 2965 A9 02			lda #$02
  4220 2967 8D 83 2C			sta CALCSCREENADDR.Y
  4221 296A A9 14			lda #$14
  4222 296C 8D 82 2C			sta CALCSCREENADDR.X
  4223 296F 20 01 12			jsr CALCSCREENADDR
  4224 2972 B4 17			ldy :STACKORIGIN-1,x
  4225 2974 B5 18			lda :STACKORIGIN,x
  4226 2976 99 60 00			sta adr.OBSTACLES,y
  4227 2979 B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4228 297B 99 61 00			sta adr.OBSTACLES+1,y
  4229 297E CA				dex
  4230
  4231 				; optimize FAIL (1, levels.inc), line = 120
  4232
  4233 297F A9 0C 95 18			mva #$0C :STACKORIGIN,x
  4234 2983 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4235 2987 A9 16			lda #$16
  4236 2989 8D 83 2C			sta CALCSCREENADDR.Y
  4237 298C A9 14			lda #$14
  4238 298E 8D 82 2C			sta CALCSCREENADDR.X
  4239 2991 20 01 12			jsr CALCSCREENADDR
  4240 2994 B4 17			ldy :STACKORIGIN-1,x
  4241 2996 B5 18			lda :STACKORIGIN,x
  4242 2998 99 60 00			sta adr.OBSTACLES,y
  4243 299B B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4244 299D 99 61 00			sta adr.OBSTACLES+1,y
  4245 29A0 CA				dex
  4246 29A1 A9 0E 95 18			mva #$0E :STACKORIGIN,x
  4247 29A5 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  4248 29A9 A9 0C			lda #$0C
  4249 29AB 8D 83 2C			sta CALCSCREENADDR.Y
  4250 29AE A9 14			lda #$14
  4251 29B0 8D 82 2C			sta CALCSCREENADDR.X
  4252 29B3 20 01 12			jsr CALCSCREENADDR
  4253 29B6 B4 17			ldy :STACKORIGIN-1,x
  4254 29B8 B5 18			lda :STACKORIGIN,x
  4255 29BA 99 60 00			sta adr.OBSTACLES,y
  4256 29BD B5 28			lda :STACKORIGIN+STACKWIDTH,x
  4257 29BF 99 61 00			sta adr.OBSTACLES+1,y
  4258 29C2 CA				dex
  4259 29C3 CA				dex
  4260 29C4			@exit
  4261 					.ifdef @new
  4262 					lda <@VarData
  4263 					sta :ztmp
  4264 					lda >@VarData
  4265 					ldy #@VarDataSize-1
  4266 					jmp @FreeMem
  4267 					els
  4268 29C4 60				rts						; ret
  4269 					eif
  4270 				.endl
  4271
  4272 29C5			.local	INITPLAYFIELD					; PROCEDURE
  4273
  4274 				; optimize OK (init.inc), line = 5
  4275
  4276 29C5 A9 1F			lda #$1F
  4277 29C7 8D 15 FF			sta BACKGROUND
  4278 29CA A9 00			lda #$00
  4279 29CC 8D 19 FF			sta BOREDER
  4280
  4281 				; optimize OK (init.inc), line = 6
  4282
  4283 29CF A9 20			lda #$20
  4284 29D1 85 04			sta SYSTEM.FILLCHAR_006E.VALUE
  4285 29D3 A9 C0			lda #$C0
  4286 29D5 85 0C			sta SYSTEM.FILLCHAR_006E.COUNT
  4287 29D7 A9 03			lda #$03
  4288 29D9 85 0D			sta SYSTEM.FILLCHAR_006E.COUNT+1
  4289 29DB A9 00			lda #$00
  4290 29DD 85 08			sta SYSTEM.FILLCHAR_006E.A
  4291 29DF A9 0C			lda #$0C
  4292 29E1 85 09			sta SYSTEM.FILLCHAR_006E.A+1
  4293 29E3 20 A0 11			jsr SYSTEM.FILLCHAR_006E
  4294
  4295 				; optimize OK (init.inc), line = 8
  4296
  4297 29E6 A9 27			lda #$27
  4298 29E8 85 58			sta T0B
  4299
  4300 29EA			l_0F6D
  4301 				; --- ForToDoCondition
  4302
  4303 				; optimize OK (init.inc), line = 9
  4304
  4305 29EA A4 58			ldy T0B
  4306 29EC A9 A0			lda #$A0
  4307 29EE 99 00 0C			sta $0C00,y
  4308
  4309 				; optimize OK (init.inc), line = 10
  4310
  4311 29F1 99 C0 0F			sta $0FC0,y
  4312
  4313 				; optimize OK (init.inc), line = 11
  4314
  4315 29F4 A9 41			lda #$41
  4316 29F6 99 00 08			sta $0800,y
  4317
  4318 				; optimize OK (init.inc), line = 12
  4319
  4320 29F9 99 C0 0B			sta $0BC0,y
  4321
  4322 				; --- ForToDoEpilog
  4323 29FC C6 58			dec T0B
  4324 29FE 10 EA			jpl l_0F6D
  4325 2A00			l_0F7B
  4326
  4327 				; optimize OK (init.inc), line = 15
  4328
  4329 2A00 A9 18			lda #$18
  4330 2A02 85 58			sta T0B
  4331
  4332 2A04			l_0FAD
  4333 				; --- ForToDoCondition
  4334 2A04 A5 58			lda T0B
  4335 2A06 C9 01			cmp #$01
  4336 2A08 90 3A			jcc l_0FBB
  4337
  4338 				; optimize OK (init.inc), line = 16
  4339
  4340 2A0A 0A				asl @
  4341 2A0B A8				tay
  4342 2A0C A9 FF			lda #$FF
  4343 2A0E 18 79 26 10			add adr.MUL40,y
  4344 2A12 85 12			sta :bp2
  4345 2A14 A9 0B			lda #$0B
  4346 2A16 79 27 10			adc adr.MUL40+1,y
  4347 2A19 85 13			sta :bp2+1
  4348 2A1B A0 00			ldy #$00
  4349 2A1D A9 A0			lda #$A0
  4350 2A1F 91 12			sta (:bp2),y
  4351 2A21 C8				iny
  4352 2A22 91 12			sta (:bp2),y
  4353
  4354 				; optimize OK (init.inc), line = 17
  4355
  4356 2A24 A5 58			lda T0B
  4357 2A26 0A				asl @
  4358 2A27 A8				tay
  4359 2A28 A9 FF			lda #$FF
  4360 2A2A 18 79 26 10			add adr.MUL40,y
  4361 2A2E 85 12			sta :bp2
  4362 2A30 A9 07			lda #$07
  4363 2A32 79 27 10			adc adr.MUL40+1,y
  4364 2A35 85 13			sta :bp2+1
  4365 2A37 A0 00			ldy #$00
  4366 2A39 A9 41			lda #$41
  4367 2A3B 91 12			sta (:bp2),y
  4368 2A3D C8				iny
  4369 2A3E 91 12			sta (:bp2),y
  4370
  4371 				; --- ForToDoEpilog
  4372 2A40 C6 58			dec T0B
  4373 2A42 10 C0			jpl l_0FAD
  4374 2A44			l_0FBB
  4375
  4376 				; optimize OK (init.inc), line = 20
  4377
  4378 2A44 A9 07			lda #$07
  4379 2A46 85 59			sta I0B
  4380
  4381 2A48			l_0FDF
  4382 				; --- ForToDoCondition
  4383 2A48 A5 59			lda I0B
  4384 2A4A 0A				asl @
  4385 2A4B A8				tay
  4386 2A4C A9 5E			lda #$5E
  4387 2A4E 99 60 00			sta adr.OBSTACLES,y
  4388 2A51 A9 00			lda #$00
  4389 2A53 99 61 00			sta adr.OBSTACLES+1,y
  4390
  4391 				; --- ForToDoEpilog
  4392 2A56 C6 59			dec I0B
  4393 2A58 10 EE			jpl l_0FDF
  4394 2A5A			l_0FED
  4395
  4396 				; ------------------------------------------------------------
  4397
  4398 = 0000			@FORTMP_0F6A	= $00
  4399 = 0001			@FORTMP_0FAA	= $01
  4400 = 0000			@FORTMP_0FDC	= $00
  4401 2A5A			@exit
  4402 					.ifdef @new
  4403 					lda <@VarData
  4404 					sta :ztmp
  4405 					lda >@VarData
  4406 					ldy #@VarDataSize-1
  4407 					jmp @FreeMem
  4408 					els
  4409 2A5A 60				rts						; ret
  4410 					eif
  4411 				.endl
  4412
  4413 2A5B			.local	INITPLAYERS					; PROCEDURE
  4414
  4415 				; optimize OK (init.inc), line = 27
  4416
  4417 2A5B A9 FF			lda #$FF
  4418 2A5D 85 5A			sta ALIVE
  4419
  4420 				; optimize OK (init.inc), line = 28
  4421
  4422 2A5F A9 00			lda #$00
  4423 2A61 8D 69 2C			sta PLAYER1.ISALIVE
  4424 2A64 8D 71 2C			sta PLAYER2.ISALIVE
  4425
  4426 				; optimize OK (init.inc), line = 29
  4427
  4428 2A67 8D 79 2C			sta PLAYER3.ISALIVE
  4429 2A6A 8D 81 2C			sta PLAYER4.ISALIVE
  4430 2A6D			@exit
  4431 					.ifdef @new
  4432 					lda <@VarData
  4433 					sta :ztmp
  4434 					lda >@VarData
  4435 					ldy #@VarDataSize-1
  4436 					jmp @FreeMem
  4437 					els
  4438 2A6D 60				rts						; ret
  4439 					eif
  4440 				.endl
  4441
  4442 2A6E			.local	INITSCORE					; PROCEDURE
  4443
  4444 				; optimize OK (init.inc), line = 36
  4445
  4446 2A6E A9 30			lda #$30
  4447 2A70 8D 68 2C			sta PLAYER1.SCORE
  4448 2A73 8D 70 2C			sta PLAYER2.SCORE
  4449
  4450 				; optimize OK (init.inc), line = 37
  4451
  4452 2A76 8D 78 2C			sta PLAYER3.SCORE
  4453 2A79 8D 80 2C			sta PLAYER4.SCORE
  4454 2A7C			@exit
  4455 					.ifdef @new
  4456 					lda <@VarData
  4457 					sta :ztmp
  4458 					lda >@VarData
  4459 					ldy #@VarDataSize-1
  4460 					jmp @FreeMem
  4461 					els
  4462 2A7C 60				rts						; ret
  4463 					eif
  4464 				.endl
  4465
  4466 2A7D			.local	INITARENA					; PROCEDURE
  4467
  4468 				; optimize FAIL ('INITPLAYFIELD', init.inc), line = 44
  4469
  4470 2A7D 20 C5 29			jsr INITPLAYFIELD
  4471 2A80 20 5B 2A			jsr INITPLAYERS
  4472
  4473 				; optimize OK (init.inc), line = 46
  4474
  4475 2A83 AD 60 2C			lda LEVEL
  4476 2A86 8D A6 30			sta @CASETMP_0009
  4477 2A89 C9 00			cmp #$00
  4478 2A8B D0 06			jne l_1036
  4479 2A8D			@
  4480
  4481 				; optimize FAIL ('SETLEVEL00', init.inc), line = 47
  4482
  4483 2A8D 20 B4 1C			jsr SETLEVEL00
  4484 2A90 4C E0 2A			jmp a_0009
  4485 2A93			l_1036
  4486 2A93 C9 01			cmp #$01
  4487 2A95 D0 06			jne l_1040
  4488 2A97			@
  4489
  4490 				; optimize FAIL ('SETLEVEL01', init.inc), line = 48
  4491
  4492 2A97 20 DB 1D			jsr SETLEVEL01
  4493 2A9A 4C E0 2A			jmp a_0009
  4494 2A9D			l_1040
  4495 2A9D C9 02			cmp #$02
  4496 2A9F D0 06			jne l_104A
  4497 2AA1			@
  4498
  4499 				; optimize FAIL ('SETLEVEL02', init.inc), line = 49
  4500
  4501 2AA1 20 02 1F			jsr SETLEVEL02
  4502 2AA4 4C E0 2A			jmp a_0009
  4503 2AA7			l_104A
  4504 2AA7 C9 03			cmp #$03
  4505 2AA9 D0 06			jne l_1054
  4506 2AAB			@
  4507
  4508 				; optimize FAIL ('SETLEVEL03', init.inc), line = 50
  4509
  4510 2AAB 20 29 20			jsr SETLEVEL03
  4511 2AAE 4C E0 2A			jmp a_0009
  4512 2AB1			l_1054
  4513 2AB1 C9 04			cmp #$04
  4514 2AB3 D0 06			jne l_105E
  4515 2AB5			@
  4516
  4517 				; optimize FAIL ('SETLEVEL04', init.inc), line = 51
  4518
  4519 2AB5 20 72 21			jsr SETLEVEL04
  4520 2AB8 4C E0 2A			jmp a_0009
  4521 2ABB			l_105E
  4522 2ABB C9 05			cmp #$05
  4523 2ABD D0 06			jne l_1068
  4524 2ABF			@
  4525
  4526 				; optimize FAIL ('SETLEVEL05', init.inc), line = 52
  4527
  4528 2ABF 20 DD 22			jsr SETLEVEL05
  4529 2AC2 4C E0 2A			jmp a_0009
  4530 2AC5			l_1068
  4531 2AC5 C9 06			cmp #$06
  4532 2AC7 D0 06			jne l_1072
  4533 2AC9			@
  4534
  4535 				; optimize FAIL ('SETLEVEL06', init.inc), line = 53
  4536
  4537 2AC9 20 7E 24			jsr SETLEVEL06
  4538 2ACC 4C E0 2A			jmp a_0009
  4539 2ACF			l_1072
  4540 2ACF C9 07			cmp #$07
  4541 2AD1 D0 06			jne l_107C
  4542 2AD3			@
  4543
  4544 				; optimize FAIL ('SETLEVEL07', init.inc), line = 54
  4545
  4546 2AD3 20 3F 26			jsr SETLEVEL07
  4547 2AD6 4C E0 2A			jmp a_0009
  4548 2AD9			l_107C
  4549 2AD9 C9 08			cmp #$08
  4550 2ADB D0 03			jne l_1086
  4551 2ADD			@
  4552
  4553 				; optimize FAIL ('SETLEVEL08', init.inc), line = 55
  4554
  4555 2ADD 20 04 28			jsr SETLEVEL08
  4556 2AE0			l_1086
  4557 2AE0			a_0009
  4558
  4559 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 58
  4560
  4561 2AE0 20 49 14			jsr SAVEOBSTACLES
  4562 2AE3 20 14 14			jsr ANIMATEOBSTACLES
  4563 2AE6 20 EF 12			jsr SHOWSCORE
  4564
  4565 				; ------------------------------------------------------------
  4566
  4567 = 30A6			@CASETMP_0009	= DATAORIGIN+$0456
  4568
  4569 = 30A6			@VarData	= @CASETMP_0009
  4570 = 0001			@VarDataSize	= 1
  4571
  4572 2AE9			@exit
  4573 					.ifdef @new
  4574 					lda <@VarData
  4575 					sta :ztmp
  4576 					lda >@VarData
  4577 					ldy #@VarDataSize-1
  4578 					jmp @FreeMem
  4579 					els
  4580 2AE9 60				rts						; ret
  4581 					eif
  4582 				.endl
  4583
  4584 2AEA			.local	INITFONTS					; PROCEDURE
  4585
  4586 				; optimize OK (init.inc), line = 73
  4587
  4588 2AEA A9 00			lda #$00
  4589 2AEC 85 04			sta SYSTEM.MOVE_006F.COUNT
  4590 2AEE A9 04			lda #$04
  4591 2AF0 85 05			sta SYSTEM.MOVE_006F.COUNT+1
  4592 2AF2 A9 00			lda #$00
  4593 2AF4 85 0C			sta SYSTEM.MOVE_006F.DEST
  4594 2AF6 A9 60			lda #$60
  4595 2AF8 85 0D			sta SYSTEM.MOVE_006F.DEST+1
  4596 2AFA A9 00			lda #$00
  4597 2AFC 85 08			sta SYSTEM.MOVE_006F.SOURCE
  4598 2AFE A9 D0			lda #$D0
  4599 2B00 85 09			sta SYSTEM.MOVE_006F.SOURCE+1
  4600 2B02 20 A4 11			jsr SYSTEM.MOVE_006F
  4601
  4602 				; optimize OK (init.inc), line = 74
  4603
  4604 2B05 AD 32 2B			lda FONTS
  4605 2B08 85 12			sta :bp2
  4606 2B0A AD 33 2B			lda FONTS+1
  4607 2B0D 85 13			sta :bp2+1
  4608 2B0F A0 2F			ldy #$2F
  4609 2B11 B1 12 99 80 62 88 + 	mva:rpl (:bp2),y $6280,y-
  4610
  4611 				; optimize OK (init.inc), line = 77
  4612
  4613 2B19 AD 12 FF			lda RAMROMSEL
  4614 2B1C 29 FB			and #$FB
  4615 2B1E 8D 12 FF			sta RAMROMSEL
  4616
  4617 				; optimize OK (init.inc), line = 80
  4618
  4619 2B21 AD 13 FF			lda CHBAS
  4620 2B24 29 03			and #$03
  4621 2B26 85 21			sta :STACKORIGIN+9
  4622 2B28 A9 18			lda #$18
  4623 2B2A 0A				asl @
  4624 2B2B 0A				asl @
  4625 2B2C 05 21			ora :STACKORIGIN+9
  4626 2B2E 8D 13 FF			sta CHBAS
  4627
  4628 				; ------------------------------------------------------------
  4629
  4630 = 30A7			adr.FONTS	= [DATAORIGIN+$0457] .array [48]
  4631 2B31			.var FONTS	= adr.FONTS .word
  4632
  4633 = 2B32			@VarData	= FONTS
  4634 = 0030			@VarDataSize	= 48
  4635
  4636 2B31			@exit
  4637 					.ifdef @new
  4638 					lda <@VarData
  4639 					sta :ztmp
  4640 					lda >@VarData
  4641 					ldy #@VarDataSize-1
  4642 					jmp @FreeMem
  4643 					els
  4644 2B31 60				rts						; ret
  4645 					eif
  4646 = 2B32 A7 30		FONTS
  4646 				.endl
  4647
  4648 2B34			.local	PLAYERMOVE					; PROCEDURE
  4649
  4650 				; optimize OK (main.pas), line = 15
  4651
  4652 2B34 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  4653 2B3E A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  4654 2B40 B1 12			lda (:bp2),y
  4655 2B42 F0 50			jeq l_10D0
  4656
  4657 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 17
  4658
  4659 2B44 20 89 13			jsr CHECKAVAILDIR
  4660
  4661 				; optimize OK (main.pas), line = 18
  4662
  4663 2B47 A5 5C			lda AVAILDIR
  4664 2B49 D0 06			jne l_10E4
  4665
  4666 				; optimize FAIL ('PLAYERBUSTED', main.pas), line = 19
  4667
  4668 2B4B 20 FD 15			jsr PLAYERBUSTED
  4669 2B4E 4C 94 2B			jmp l_10EF
  4670 2B51			l_10E4
  4671
  4672 				; optimize OK (main.pas), line = 21
  4673
  4674 2B51 AC 3F 2C 84 12 AC + 	mwy PLY :bp2
  4675 2B5B A0 05			ldy #PLY.BRAIN-DATAORIGIN
  4676 2B5D B1 12			lda (:bp2),y
  4677 2B5F 8D D7 30			sta @CASETMP_000A
  4678 2B62 C9 00			cmp #$00
  4679 2B64 D0 06			jne l_10FA
  4680 2B66			@
  4681
  4682 				; optimize FAIL ('HUMAN', main.pas), line = 22
  4683
  4684 2B66 20 22 18			jsr HUMAN
  4685 2B69 4C 91 2B			jmp a_000A
  4686 2B6C			l_10FA
  4687 2B6C C9 01			cmp #$01
  4688 2B6E D0 06			jne l_1104
  4689 2B70			@
  4690
  4691 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 23
  4692
  4693 2B70 20 C4 18			jsr AISTRAIGHT
  4694 2B73 4C 91 2B			jmp a_000A
  4695 2B76			l_1104
  4696 2B76 C9 02			cmp #$02
  4697 2B78 D0 06			jne l_110E
  4698 2B7A			@
  4699
  4700 				; optimize FAIL ('AISAPPER', main.pas), line = 24
  4701
  4702 2B7A 20 41 19			jsr AISAPPER
  4703 2B7D 4C 91 2B			jmp a_000A
  4704 2B80			l_110E
  4705 2B80 C9 03			cmp #$03
  4706 2B82 D0 06			jne l_1118
  4707 2B84			@
  4708
  4709 				; optimize FAIL ('AIBULLY', main.pas), line = 25
  4710
  4711 2B84 20 91 1B			jsr AIBULLY
  4712 2B87 4C 91 2B			jmp a_000A
  4713 2B8A			l_1118
  4714 2B8A C9 04			cmp #$04
  4715 2B8C D0 03			jne l_1122
  4716 2B8E			@
  4717
  4718 				; optimize FAIL ('AIMIRROR', main.pas), line = 26
  4719
  4720 2B8E 20 5F 1C			jsr AIMIRROR
  4721 2B91			l_1122
  4722 2B91			a_000A
  4723
  4724 				; optimize FAIL ('DRAWPLAYER', main.pas), line = 29
  4725
  4726 2B91 20 8D 14			jsr DRAWPLAYER
  4727 2B94			l_10EF
  4728 2B94			l_10D0
  4729
  4730 				; ------------------------------------------------------------
  4731
  4732 = 30D7			@CASETMP_000A	= DATAORIGIN+$0487
  4733
  4734 = 30D7			@VarData	= @CASETMP_000A
  4735 = 0001			@VarDataSize	= 1
  4736
  4737 2B94			@exit
  4738 					.ifdef @new
  4739 					lda <@VarData
  4740 					sta :ztmp
  4741 					lda >@VarData
  4742 					ldy #@VarDataSize-1
  4743 					jmp @FreeMem
  4744 					els
  4745 2B94 60				rts						; ret
  4746 					eif
  4747 				.endl
  4748
  4749 2B95			.local	MAINLOOP					; PROCEDURE
  4750
  4751 				; optimize FAIL ('INITARENA', main.pas), line = 39
  4752
  4753 2B95 20 7D 2A			jsr INITARENA
  4754 2B98 20 EB 16			jsr STARTSCREEN
  4755
  4756 				; --- RepeatUntilProlog
  4757 2B9B			l_1136
  4758
  4759 				; optimize FAIL ('SYSTEM.PAUSE_0085', main.pas), line = 42
  4760
  4761 2B9B 20 AC 11			jsr SYSTEM.PAUSE_0085
  4762 2B9E AD 45 2C			lda PLAYER1
  4763 2BA1 8D 3F 2C			sta PLY
  4764 2BA4 AD 46 2C			lda PLAYER1+1
  4765 2BA7 8D 40 2C			sta PLY+1
  4766 2BAA 20 34 2B			jsr PLAYERMOVE
  4767
  4768 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 44
  4769
  4770 2BAD 20 14 14			jsr ANIMATEOBSTACLES
  4771
  4772 				; optimize OK (main.pas), line = 46
  4773
  4774 2BB0 A9 02			lda #$02
  4775 2BB2 8D 5C 2C			sta SYSTEM.PAUSE_0086.N
  4776 2BB5 A9 00			lda #$00
  4777 2BB7 8D 5D 2C			sta SYSTEM.PAUSE_0086.N+1
  4778 2BBA 20 B3 11			jsr SYSTEM.PAUSE_0086
  4779
  4780 				; optimize OK (main.pas), line = 47
  4781
  4782 2BBD AD 47 2C			lda PLAYER2
  4783 2BC0 8D 3F 2C			sta PLY
  4784 2BC3 AD 48 2C			lda PLAYER2+1
  4785 2BC6 8D 40 2C			sta PLY+1
  4786 2BC9 20 34 2B			jsr PLAYERMOVE
  4787
  4788 				; optimize OK (main.pas), line = 48
  4789
  4790 2BCC AD 49 2C			lda PLAYER3
  4791 2BCF 8D 3F 2C			sta PLY
  4792 2BD2 AD 4A 2C			lda PLAYER3+1
  4793 2BD5 8D 40 2C			sta PLY+1
  4794 2BD8 20 34 2B			jsr PLAYERMOVE
  4795
  4796 				; optimize OK (main.pas), line = 49
  4797
  4798 2BDB AD 4B 2C			lda PLAYER4
  4799 2BDE 8D 3F 2C			sta PLY
  4800 2BE1 AD 4C 2C			lda PLAYER4+1
  4801 2BE4 8D 40 2C			sta PLY+1
  4802 2BE7 20 34 2B			jsr PLAYERMOVE
  4803
  4804 				; optimize FAIL ('ISONELEFT', main.pas), line = 50
  4805
  4806 2BEA 20 03 18			jsr ISONELEFT
  4807 2BED CA				dex
  4808 2BEE B5 19			lda :STACKORIGIN+1,x
  4809 2BF0 F0 A9			jeq l_1136
  4810
  4811 				; optimize FAIL ('UPDATESCORE', main.pas), line = 52
  4812
  4813 2BF2 20 68 13			jsr UPDATESCORE
  4814 2BF5 A9 64			lda #$64
  4815 2BF7 8D 5C 2C			sta SYSTEM.PAUSE_0086.N
  4816 2BFA A9 00			lda #$00
  4817 2BFC 8D 5D 2C			sta SYSTEM.PAUSE_0086.N+1
  4818 2BFF 20 B3 11			jsr SYSTEM.PAUSE_0086
  4819 2C02 20 DB 16			jsr NEXTLEVEL
  4820 2C05			@exit
  4821 					.ifdef @new
  4822 					lda <@VarData
  4823 					sta :ztmp
  4824 					lda >@VarData
  4825 					ldy #@VarDataSize-1
  4826 					jmp @FreeMem
  4827 					els
  4828 2C05 60				rts						; ret
  4829 					eif
  4830 				.endl
  4831 2C06			l_001F
  4832
  4833 				; optimize FAIL ('INITFONTS', main.pas), line = 58
  4834
  4835 2C06 20 EA 2A			jsr INITFONTS
  4836
  4837 				; --- RepeatUntilProlog
  4838 2C09			l_115E
  4839
  4840 				; optimize FAIL ('INITSCORE', main.pas), line = 61
  4841
  4842 2C09 20 6E 2A			jsr INITSCORE
  4843 2C0C A9 00			lda #$00
  4844 2C0E 8D 61 2C			sta GAMEOVER
  4845 2C11 A9 01			lda #$01
  4846 2C13 8D 60 2C			sta LEVEL
  4847
  4848 				; --- RepeatUntilProlog
  4849 2C16			l_1168
  4850
  4851 				; optimize FAIL ('MAINLOOP', main.pas), line = 63
  4852
  4853 2C16 20 95 2B			jsr MAINLOOP
  4854 2C19 20 C6 17			jsr ISGAMEOVER
  4855 2C1C CA				dex
  4856 2C1D B5 19			lda :STACKORIGIN+1,x
  4857 2C1F F0 F5			jeq l_1168
  4858
  4859 				; optimize FAIL ('SHOWSCORE', main.pas), line = 65
  4860
  4861 2C21 20 EF 12			jsr SHOWSCORE
  4862 2C24 20 7D 17			jsr ENDSCREEN
  4863 2C27 A9 C8			lda #$C8
  4864 2C29 8D 5C 2C			sta SYSTEM.PAUSE_0086.N
  4865 2C2C A9 00			lda #$00
  4866 2C2E 8D 5D 2C			sta SYSTEM.PAUSE_0086.N+1
  4867 2C31 20 B3 11			jsr SYSTEM.PAUSE_0086
  4868
  4869 				; optimize OK (main.pas), line = 66
  4870
  4871 2C34 4C 09 2C			jmp l_115E
  4872
  4873 				; ------------------------------------------------------------
  4874
  4875 = 0800			ATTRIBUTE_ADDR	= $0800
  4876 = 0C00			SCREEN_ADDR	= $0C00
  4877 = 0400			OFFSET	= $0400
  4878 = 001F			BACKGROUND_COLOUR	= $1F
  4879 = 0000			BOREDER_COLOUR	= $00
  4880 = 0007			OBST_QUANTITY	= $07
  4881 = 0009			VICTORIES	= $09
  4882 = 005E			TRASH	= $5E
  4883 = 0005			LOOK_AHEAD	= $05
  4884 = 0020			EMPTY	= $20
  4885 = 00A0			WALL	= $A0
  4886 = 0041			WALL_COLOUR	= $41
  4887 = 0030			ZERO	= $30
  4888 = 0054			OBSTACLE_1	= $54
  4889 = 0055			OBSTACLE_2	= $55
  4890 = 0065			OBST_COLOUR	= $65
  4891 = 0050			PLY_HEAD_UP	= $50
  4892 = 0051			PLY_HEAD_LEFT	= $51
  4893 = 0052			PLY_HEAD_RIGHT	= $52
  4894 = 0053			PLY_HEAD_DOWN	= $53
  4895 = 002A			PLY_CRASH	= $2A
  4896 = 0057			PLY_BUSTED	= $57
  4897 = 0042			PLY_TAIL_UD	= $42
  4898 = 0040			PLY_TAIL_LR	= $40
  4899 = 007D			PLY_TAIL_RD	= $7D
  4900 = 006E			PLY_TAIL_RU	= $6E
  4901 = 006D			PLY_TAIL_LD	= $6D
  4902 = 0070			PLY_TAIL_LU	= $70
  4903 = 0062			PLY1_COLOUR	= $62
  4904 = 005D			PLY2_COLOUR	= $5D
  4905 = 0071			PLY3_COLOUR	= $71
  4906 = 0055			PLY4_COLOUR	= $55
  4907 = 0000			PLY_CTRL	= $00
  4908 = 0001			AI_STRAIGHT	= $01
  4909 = 0002			AI_SAPPER	= $02
  4910 = 0003			AI_BULLY	= $03
  4911 = 0004			AI_MIRROR	= $04
  4912 = 0001			JOY_UP	= $01
  4913 = 0002			JOY_DOWN	= $02
  4914 = 0004			JOY_LEFT	= $04
  4915 = 0008			JOY_RIGHT	= $08
  4916 = 0040			JOY_FIRE	= $40
  4917 = 0002			JOY_SELECT_1	= $02
  4918 = 0004			JOY_SELECT_2	= $04
  4919 = 1026			adr.MUL40	= CODEORIGIN+$0018
  4920 2C37			.var MUL40	= adr.MUL40 .word
  4921 = 1058			adr.DIRECTION	= CODEORIGIN+$004A
  4922 2C37			.var DIRECTION	= adr.DIRECTION .word
  4923 = FD30			KEYSCAN	= $FD30
  4924 = FF08			JOY	= $FF08
  4925 = FF12			RAMROMSEL	= $FF12
  4926 = FF13			CHBAS	= $FF13
  4927 = FF15			BACKGROUND	= $FF15
  4928 = FF19			BOREDER	= $FF19
  4929 = 0058			T0B	= $58
  4930 = 0059			I0B	= $59
  4931 = 005A			ALIVE	= $5A
  4932 = 005B			NEWDIR	= $5B
  4933 = 005C			AVAILDIR	= $5C
  4934 = 005D			JOYSTATUS	= $5D
  4935 = 005E			T0W	= $5E
  4936 = 0070			adr.PLY	= $70
  4937 2C37			.var PLY	= adr.PLY .word
  4938 = 2C50			PLY.X	= DATAORIGIN+$0000
  4939 = 2C51			PLY.Y	= DATAORIGIN+$0001
  4940 = 2C52			PLY.HEAD	= DATAORIGIN+$0002
  4941 = 2C53			PLY.COLOUR	= DATAORIGIN+$0003
  4942 = 2C54			PLY.DIR	= DATAORIGIN+$0004
  4943 = 2C55			PLY.BRAIN	= DATAORIGIN+$0005
  4944 = 2C56			PLY.SCORE	= DATAORIGIN+$0006
  4945 = 2C57			PLY.ISALIVE	= DATAORIGIN+$0007
  4946 = 0072			adr.TMPPLY	= $72
  4947 2C37			.var TMPPLY	= adr.TMPPLY .word
  4948 = 2C50			TMPPLY.X	= DATAORIGIN+$0000
  4949 = 2C51			TMPPLY.Y	= DATAORIGIN+$0001
  4950 = 2C52			TMPPLY.HEAD	= DATAORIGIN+$0002
  4951 = 2C53			TMPPLY.COLOUR	= DATAORIGIN+$0003
  4952 = 2C54			TMPPLY.DIR	= DATAORIGIN+$0004
  4953 = 2C55			TMPPLY.BRAIN	= DATAORIGIN+$0005
  4954 = 2C56			TMPPLY.SCORE	= DATAORIGIN+$0006
  4955 = 2C57			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  4956 = 0060			adr.OBSTACLES	= $60
  4957 2C37			.var OBSTACLES	= adr.OBSTACLES .word
  4958 = 2C60			LEVEL	= DATAORIGIN+$0010
  4959 = 2C61			GAMEOVER	= DATAORIGIN+$0011
  4960 = 2C62			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  4961 2C37			.var PLAYER1	= adr.PLAYER1 .word
  4962 = 2C62			PLAYER1.X	= DATAORIGIN+$0012
  4963 = 2C63			PLAYER1.Y	= DATAORIGIN+$0013
  4964 = 2C64			PLAYER1.HEAD	= DATAORIGIN+$0014
  4965 = 2C65			PLAYER1.COLOUR	= DATAORIGIN+$0015
  4966 = 2C66			PLAYER1.DIR	= DATAORIGIN+$0016
  4967 = 2C67			PLAYER1.BRAIN	= DATAORIGIN+$0017
  4968 = 2C68			PLAYER1.SCORE	= DATAORIGIN+$0018
  4969 = 2C69			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  4970 = 2C6A			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  4971 2C37			.var PLAYER2	= adr.PLAYER2 .word
  4972 = 2C6A			PLAYER2.X	= DATAORIGIN+$001A
  4973 = 2C6B			PLAYER2.Y	= DATAORIGIN+$001B
  4974 = 2C6C			PLAYER2.HEAD	= DATAORIGIN+$001C
  4975 = 2C6D			PLAYER2.COLOUR	= DATAORIGIN+$001D
  4976 = 2C6E			PLAYER2.DIR	= DATAORIGIN+$001E
  4977 = 2C6F			PLAYER2.BRAIN	= DATAORIGIN+$001F
  4978 = 2C70			PLAYER2.SCORE	= DATAORIGIN+$0020
  4979 = 2C71			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  4980 = 2C72			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  4981 2C37			.var PLAYER3	= adr.PLAYER3 .word
  4982 = 2C72			PLAYER3.X	= DATAORIGIN+$0022
  4983 = 2C73			PLAYER3.Y	= DATAORIGIN+$0023
  4984 = 2C74			PLAYER3.HEAD	= DATAORIGIN+$0024
  4985 = 2C75			PLAYER3.COLOUR	= DATAORIGIN+$0025
  4986 = 2C76			PLAYER3.DIR	= DATAORIGIN+$0026
  4987 = 2C77			PLAYER3.BRAIN	= DATAORIGIN+$0027
  4988 = 2C78			PLAYER3.SCORE	= DATAORIGIN+$0028
  4989 = 2C79			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  4990 = 2C7A			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  4991 2C37			.var PLAYER4	= adr.PLAYER4 .word
  4992 = 2C7A			PLAYER4.X	= DATAORIGIN+$002A
  4993 = 2C7B			PLAYER4.Y	= DATAORIGIN+$002B
  4994 = 2C7C			PLAYER4.HEAD	= DATAORIGIN+$002C
  4995 = 2C7D			PLAYER4.COLOUR	= DATAORIGIN+$002D
  4996 = 2C7E			PLAYER4.DIR	= DATAORIGIN+$002E
  4997 = 2C7F			PLAYER4.BRAIN	= DATAORIGIN+$002F
  4998 = 2C80			PLAYER4.SCORE	= DATAORIGIN+$0030
  4999 = 2C81			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  5000 2C37			@exit
  5001
  5002 2C37 A2 00		@halt	ldx #$00
  5003 2C39 9A				txs
  5004
  5005 2C3A 60				rts
  5006
  5007 				; ------------------------------------------------------------
  5008
  5009 				; ------------------------------------------------------------
  5010
  5011 2C3B			.local	@DEFINES
  5012 2C3B			C4P
  5013 				.endl
  5014
  5015 2C3B			.local	@RESOURCE
  5016 				.endl
  5017
  5018 = 2C3B 26 10		MUL40
  5018 = 2C3D 58 10		DIRECTION
  5018 = 2C3F 70 00		PLY
  5018 = 2C41 72 00		TMPPLY
  5018 = 2C43 60 00		OBSTACLES
  5018 = 2C45 62 2C		PLAYER1
  5018 = 2C47 6A 2C		PLAYER2
  5018 = 2C49 72 2C		PLAYER3
  5018 = 2C4B 7A 2C		PLAYER4
  5018 				.endl							; MAIN
  5019
  5020 				; ------------------------------------------------------------
  5021 				; ------------------------------------------------------------
  5022
  5023 				.macro	UNITINITIALIZATION
  5024 				
  5025 					.ifdef MAIN.SYSTEM.@UnitInit
  5026 					jsr MAIN.SYSTEM.@UnitInit
  5027 					eif
  5028 				.endm
  5029
  5030 				; ------------------------------------------------------------
  5031
  5032 					ift .SIZEOF(MAIN.SYSTEM) > 0
  5033 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  5033 				SYSTEM: $1156..$1200
  5034 					eif
  5035
  5036 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  5036 				CODE: $100E..$2C3A
  5037
  5038 				; ------------------------------------------------------------
  5039
  5040 2C4D				.align $04
  5041
  5042 2C50			DATAORIGIN
  5043 2C50 28 00 18 00 2D 0C + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5044 2C68 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5045 2C80 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5046 2C98 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5047 2CB0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5048 2CC8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5049 2CE0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5050 2CF8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5051 2D10 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5052 2D28 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5053 2D40 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5054 2D58 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5055 2D70 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5056 2D88 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $05 $06 $09 $12
  5057 2DA0 05 21 00 00 00 00 + .by  $05 $21 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5058 2DB8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5059 2DD0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5060 2DE8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5061 2E00 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5062 2E18 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5063 2E30 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5064 2E48 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5065 2E60 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5066 2E78 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5067 2E90 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $07 $17 $09 $0E  $0E $05 $12 $21 $00 $00 $00 $00
  5068 2EA8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5069 2EC0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5070 2ED8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5071 2EF0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5072 2F08 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5073 2F20 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5074 2F38 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5075 2F50 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5076 2F68 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5077 2F80 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5078 2F98 00 00 00 00 06 0C + .by  $00 $00 $00 $00 $06 $0C $0F $13  $05 $12 $21 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5079 2FB0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5080 2FC8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5081 2FE0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5082 2FF8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5083 3010 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5084 3028 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5085 3040 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5086 3058 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5087 3070 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5088 3088 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  5089 30A0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $18  $18 $24 $24 $24 $3C $66 $5A $00  $03 $3E $C5 $C5 $3E $03 $00 $00
  5090 30B8 C0 7C A3 A3 7C C0 + .by  $C0 $7C $A3 $A3 $7C $C0 $00 $5A  $66 $3C $24 $24 $24 $18 $18 $00  $3C $6E $62 $46 $76 $3C $00 $00
  5091 30D0 3C 76 46 62 6E 3C	.by  $3C $76 $46 $62 $6E $3C
  5092
  5093 = 0486			VARINITSIZE	= *-DATAORIGIN
  5094 = 0488			VARDATASIZE	= 1160
  5095
  5096 = 30D8			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  5097
  5098 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  5098 				DATA: $2C50..$30D8
  5099
  5100 				; ------------------------------------------------------------
  5101
  5102 				.macro	STATICDATA
  5103 				.by  $05 $06 $09 $12 $05 $21 $00 $07  $17 $09 $0E $0E $05 $12 $21 $00  $06 $0C $0F $13 $05 $12 $21 $00
  5104 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  5105 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  5106 				.by  $C0 $03 $01 $02 $04 $08
  5107 				.endm
  5108
  5109 					end
