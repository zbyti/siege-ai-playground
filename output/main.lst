mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E 59 1A			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0045			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 1A72			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 BB			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D B7 19 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 B7 85 02 A9 1A + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C FA 19			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 77 1A		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 77 1A 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 1A77			RESULT	= DATAORIGIN+$000B
   182
   183 = 1A77			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD 78 1A		loop  lda n
   307 1126 0D 79 1A		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD 78 1A D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 1A78			N	= DATAORIGIN+$000C
   321
   322 = 1A78			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D 7A 1A			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD 7A 1A		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C 7B 1A		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD 7B 1A 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 1A7A			RANGE	= DATAORIGIN+$000E
   383 = 1A7B			RESULT	= DATAORIGIN+$000F
   384
   385 = 1A7A			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 1A6C			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 1A6E			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 1A70			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 1A71			FILEMODE	= DATAORIGIN+$0005
   450 = 1A72			GRAPHMODE	= DATAORIGIN+$0006
   451 = 1A73			IORESULT	= DATAORIGIN+$0007
   452 = 1A74			EOLN	= DATAORIGIN+$0008
   453 = 1A75			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD A0 1A			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D 9F 1A			add X
   466 117D 85 5B			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5C			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5B			ldy T0W
   475 118A AD A2 1A			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5C			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD A1 1A			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 1A9F			X	= DATAORIGIN+$0033
   486 = 1AA0			Y	= DATAORIGIN+$0034
   487 = 1AA1			V	= DATAORIGIN+$0035
   488 = 1AA2			C	= DATAORIGIN+$0036
   489
   490 = 1A9F			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 82 1A			lda PLAYER1.COLOUR
   510 119F 8D A2 1A			sta PUTCHAR.C
   511 11A2 AD 85 1A			lda PLAYER1.SCORE
   512 11A5 8D A1 1A			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D A0 1A			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D 9F 1A			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD 8A 1A			lda PLAYER2.COLOUR
   522 11B8 8D A2 1A			sta PUTCHAR.C
   523 11BB AD 8D 1A			lda PLAYER2.SCORE
   524 11BE 8D A1 1A			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D A0 1A			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D 9F 1A			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD 92 1A			lda PLAYER3.COLOUR
   534 11D1 8D A2 1A			sta PUTCHAR.C
   535 11D4 AD 95 1A			lda PLAYER3.SCORE
   536 11D7 8D A1 1A			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D A0 1A			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D 9F 1A			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD 9A 1A			lda PLAYER4.COLOUR
   546 11EA 8D A2 1A			sta PUTCHAR.C
   547 11ED AD 9D 1A			lda PLAYER4.SCORE
   548 11F0 8D A1 1A			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D A0 1A			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D 9F 1A			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5A			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AD A4 1A			lda Y
   576 1208 0A				asl @
   577 1209 A8				tay
   578 120A B9 0E 10			lda adr.MUL40,y
   579 120D 18 6D A3 1A			add X
   580 1211 85 5B			sta T0W
   581 1213 B9 0F 10			lda adr.MUL40+1,y
   582 1216 69 0C			adc #$0C
   583 1218 85 5C			sta T0W+1
   584
   585 				; optimize OK (tools.inc), line = 26
   586
   587 121A A5 5B			lda T0W
   588 121C 38 E9 28			sub #$28
   589 121F 85 21			sta :STACKORIGIN+9
   590 1221 A5 5C			lda T0W+1
   591 1223 E9 00			sbc #$00
   592 1225 85 11			sta :bp+1
   593 1227 A4 21			ldy :STACKORIGIN+9
   594 1229 B1 10			lda (:bp),y
   595 122B C9 20			cmp #$20
   596 122D D0 06			jne l_00EE
   597 122F A5 5A			lda AVAILDIR
   598 1231 09 01			ora #$01
   599 1233 85 5A			sta AVAILDIR
   600 1235			l_00EE
   601
   602 				; optimize OK (tools.inc), line = 27
   603
   604 1235 A4 5B 84 12 A4 5C + 	mwy T0W :bp2
   605 123D A0 28			ldy #$28
   606 123F B1 12			lda (:bp2),y
   607 1241 C9 20			cmp #$20
   608 1243 D0 06			jne l_0111
   609 1245 A5 5A			lda AVAILDIR
   610 1247 09 02			ora #$02
   611 1249 85 5A			sta AVAILDIR
   612 124B			l_0111
   613
   614 				; optimize OK (tools.inc), line = 28
   615
   616 124B A5 5B			lda T0W
   617 124D 38 E9 01			sub #$01
   618 1250 85 21			sta :STACKORIGIN+9
   619 1252 A5 5C			lda T0W+1
   620 1254 E9 00			sbc #$00
   621 1256 85 11			sta :bp+1
   622 1258 A4 21			ldy :STACKORIGIN+9
   623 125A B1 10			lda (:bp),y
   624 125C C9 20			cmp #$20
   625 125E D0 06			jne l_0134
   626 1260 A5 5A			lda AVAILDIR
   627 1262 09 04			ora #$04
   628 1264 85 5A			sta AVAILDIR
   629 1266			l_0134
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 1266 A4 5B 84 12 A4 5C + 	mwy T0W :bp2
   634 126E A0 01			ldy #$01
   635 1270 B1 12			lda (:bp2),y
   636 1272 C9 20			cmp #$20
   637 1274 D0 06			jne l_0157
   638 1276 A5 5A			lda AVAILDIR
   639 1278 09 08			ora #$08
   640 127A 85 5A			sta AVAILDIR
   641 127C			l_0157
   642
   643 				; ------------------------------------------------------------
   644
   645 = 1AA3			X	= DATAORIGIN+$0037
   646 = 1AA4			Y	= DATAORIGIN+$0038
   647
   648 = 1AA3			@VarData	= X
   649 = 0002			@VarDataSize	= 2
   650
   651 127C			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 127C 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 127D			.local	INITPLAYERS					; PROCEDURE
   664
   665 				; optimize OK (init.inc), line = 5
   666
   667 127D AD A5 1A			lda P
   668 1280 8D 60 1A			sta PLY
   669 1283 85 12			sta :bp2
   670 1285 AD A6 1A			lda P+1
   671 1288 8D 61 1A			sta PLY+1
   672 128B 85 13			sta :bp2+1
   673 				; optimize OK (init.inc), line = 6
   674 128D A0 05			ldy #PLY.BRAIN-DATAORIGIN
   675 128F AD AA 1A			lda BRAIN
   676 1292 91 12			sta (:bp2),y
   677 1294 A0 00			ldy #PLY.X-DATAORIGIN
   678 1296 AD A7 1A			lda X
   679 1299 91 12			sta (:bp2),y
   680 129B A0 01			ldy #PLY.Y-DATAORIGIN
   681 129D AD A8 1A			lda Y
   682 12A0 91 12			sta (:bp2),y
   683 12A2 A0 04			ldy #PLY.DIR-DATAORIGIN
   684 12A4 AD A9 1A			lda DIR
   685 12A7 91 12			sta (:bp2),y
   686
   687 				; optimize OK (init.inc), line = 7
   688
   689 12A9 A0 02			ldy #PLY.HEAD-DATAORIGIN
   690 12AB AD AB 1A			lda HEAD
   691 12AE 91 12			sta (:bp2),y
   692 12B0 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   693 12B2 AD AC 1A			lda COLOUR
   694 12B5 91 12			sta (:bp2),y
   695 12B7 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
   696 12B9 AD AD 1A			lda ISDEAD
   697 12BC 91 12			sta (:bp2),y
   698
   699 				; ------------------------------------------------------------
   700
   701 = 1AA5			P	= DATAORIGIN+$0039
   702 = 1AA7			X	= DATAORIGIN+$003B
   703 = 1AA8			Y	= DATAORIGIN+$003C
   704 = 1AA9			DIR	= DATAORIGIN+$003D
   705 = 1AAA			BRAIN	= DATAORIGIN+$003E
   706 = 1AAB			HEAD	= DATAORIGIN+$003F
   707 = 1AAC			COLOUR	= DATAORIGIN+$0040
   708 = 1AAD			ISDEAD	= DATAORIGIN+$0041
   709
   710 = 1AA5			@VarData	= P
   711 = 0009			@VarDataSize	= 9
   712
   713 12BE			@exit
   714 					.ifdef @new
   715 					lda <@VarData
   716 					sta :ztmp
   717 					lda >@VarData
   718 					ldy #@VarDataSize-1
   719 					jmp @FreeMem
   720 					els
   721 12BE 60				rts						; ret
   722 					eif
   723 				.endl
   724
   725 12BF			.local	INITPLAYFIELD					; PROCEDURE
   726
   727 				; optimize OK (init.inc), line = 14
   728
   729 12BF A9 00			lda #$00
   730 12C1 8D AD 1A			sta INITPLAYERS.ISDEAD
   731 12C4 A9 5F			lda #$5F
   732 12C6 8D AC 1A			sta INITPLAYERS.COLOUR
   733 12C9 A9 51			lda #$51
   734 12CB 8D AB 1A			sta INITPLAYERS.HEAD
   735 12CE A9 00			lda #$00
   736 12D0 8D AA 1A			sta INITPLAYERS.BRAIN
   737 12D3 A9 08			lda #$08
   738 12D5 8D A9 1A			sta INITPLAYERS.DIR
   739 12D8 A9 0C			lda #$0C
   740 12DA 8D A8 1A			sta INITPLAYERS.Y
   741 12DD A9 0A			lda #$0A
   742 12DF 8D A7 1A			sta INITPLAYERS.X
   743 12E2 AD 62 1A			lda PLAYER1
   744 12E5 8D A5 1A			sta INITPLAYERS.P
   745 12E8 AD 63 1A			lda PLAYER1+1
   746 12EB 8D A6 1A			sta INITPLAYERS.P+1
   747 12EE 20 7D 12			jsr INITPLAYERS
   748
   749 				; optimize OK (init.inc), line = 15
   750
   751 12F1 A9 00			lda #$00
   752 12F3 8D AD 1A			sta INITPLAYERS.ISDEAD
   753 12F6 A9 5D			lda #$5D
   754 12F8 8D AC 1A			sta INITPLAYERS.COLOUR
   755 12FB A9 51			lda #$51
   756 12FD 8D AB 1A			sta INITPLAYERS.HEAD
   757 1300 A9 04			lda #$04
   758 1302 8D AA 1A			sta INITPLAYERS.BRAIN
   759 1305 8D A9 1A			sta INITPLAYERS.DIR
   760 1308 A9 0C			lda #$0C
   761 130A 8D A8 1A			sta INITPLAYERS.Y
   762 130D A9 1E			lda #$1E
   763 130F 8D A7 1A			sta INITPLAYERS.X
   764 1312 AD 64 1A			lda PLAYER2
   765 1315 8D A5 1A			sta INITPLAYERS.P
   766 1318 AD 65 1A			lda PLAYER2+1
   767 131B 8D A6 1A			sta INITPLAYERS.P+1
   768 131E 20 7D 12			jsr INITPLAYERS
   769
   770 				; optimize OK (init.inc), line = 16
   771
   772 1321 A9 01			lda #$01
   773 1323 8D AD 1A			sta INITPLAYERS.ISDEAD
   774 1326 A9 71			lda #$71
   775 1328 8D AC 1A			sta INITPLAYERS.COLOUR
   776 132B A9 51			lda #$51
   777 132D 8D AB 1A			sta INITPLAYERS.HEAD
   778 1330 A9 01			lda #$01
   779 1332 8D AA 1A			sta INITPLAYERS.BRAIN
   780 1335 A9 02			lda #$02
   781 1337 8D A9 1A			sta INITPLAYERS.DIR
   782 133A A9 06			lda #$06
   783 133C 8D A8 1A			sta INITPLAYERS.Y
   784 133F A9 14			lda #$14
   785 1341 8D A7 1A			sta INITPLAYERS.X
   786 1344 AD 66 1A			lda PLAYER3
   787 1347 8D A5 1A			sta INITPLAYERS.P
   788 134A AD 67 1A			lda PLAYER3+1
   789 134D 8D A6 1A			sta INITPLAYERS.P+1
   790 1350 20 7D 12			jsr INITPLAYERS
   791
   792 				; optimize OK (init.inc), line = 17
   793
   794 1353 A9 01			lda #$01
   795 1355 8D AD 1A			sta INITPLAYERS.ISDEAD
   796 1358 A9 55			lda #$55
   797 135A 8D AC 1A			sta INITPLAYERS.COLOUR
   798 135D A9 51			lda #$51
   799 135F 8D AB 1A			sta INITPLAYERS.HEAD
   800 1362 A9 03			lda #$03
   801 1364 8D AA 1A			sta INITPLAYERS.BRAIN
   802 1367 A9 01			lda #$01
   803 1369 8D A9 1A			sta INITPLAYERS.DIR
   804 136C A9 12			lda #$12
   805 136E 8D A8 1A			sta INITPLAYERS.Y
   806 1371 A9 14			lda #$14
   807 1373 8D A7 1A			sta INITPLAYERS.X
   808 1376 AD 68 1A			lda PLAYER4
   809 1379 8D A5 1A			sta INITPLAYERS.P
   810 137C AD 69 1A			lda PLAYER4+1
   811 137F 8D A6 1A			sta INITPLAYERS.P+1
   812 1382 20 7D 12			jsr INITPLAYERS
   813
   814 				; optimize OK (init.inc), line = 19
   815
   816 1385 A9 1F			lda #$1F
   817 1387 8D 15 FF			sta BORDERCOLOR
   818 138A A9 00			lda #$00
   819 138C 8D 19 FF			sta BGCOLOR
   820
   821 				; optimize OK (init.inc), line = 20
   822
   823 138F A9 20			lda #$20
   824 1391 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   825 1393 A9 C0			lda #$C0
   826 1395 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   827 1397 A9 03			lda #$03
   828 1399 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
   829 139B A9 00			lda #$00
   830 139D 85 08			sta SYSTEM.FILLCHAR_0056.A
   831 139F A9 0C			lda #$0C
   832 13A1 85 09			sta SYSTEM.FILLCHAR_0056.A+1
   833 13A3 20 1F 11			jsr SYSTEM.FILLCHAR_0056
   834
   835 				; optimize OK (init.inc), line = 22
   836
   837 13A6 A9 27			lda #$27
   838 13A8 85 58			sta T0B
   839
   840 13AA			l_01D8
   841 				; --- ForToDoCondition
   842
   843 				; optimize OK (init.inc), line = 23
   844
   845 13AA A4 58			ldy T0B
   846 13AC A9 A0			lda #$A0
   847 13AE 99 00 0C			sta $0C00,y
   848
   849 				; optimize OK (init.inc), line = 24
   850
   851 13B1 99 C0 0F			sta $0FC0,y
   852
   853 				; optimize OK (init.inc), line = 25
   854
   855 13B4 A9 41			lda #$41
   856 13B6 99 00 08			sta $0800,y
   857
   858 				; optimize OK (init.inc), line = 26
   859
   860 13B9 99 C0 0B			sta $0BC0,y
   861
   862 				; --- ForToDoEpilog
   863 13BC C6 58			dec T0B
   864 13BE 10 EA			jpl l_01D8
   865 13C0			l_01E6
   866
   867 				; optimize OK (init.inc), line = 29
   868
   869 13C0 A9 18			lda #$18
   870 13C2 85 58			sta T0B
   871
   872 13C4			l_0218
   873 				; --- ForToDoCondition
   874 13C4 A5 58			lda T0B
   875 13C6 C9 01			cmp #$01
   876 13C8 90 3A			jcc l_0226
   877
   878 				; optimize OK (init.inc), line = 30
   879
   880 13CA 0A				asl @
   881 13CB A8				tay
   882 13CC A9 FF			lda #$FF
   883 13CE 18 79 0E 10			add adr.MUL40,y
   884 13D2 85 12			sta :bp2
   885 13D4 A9 0B			lda #$0B
   886 13D6 79 0F 10			adc adr.MUL40+1,y
   887 13D9 85 13			sta :bp2+1
   888 13DB A0 00			ldy #$00
   889 13DD A9 A0			lda #$A0
   890 13DF 91 12			sta (:bp2),y
   891 13E1 C8				iny
   892 13E2 91 12			sta (:bp2),y
   893
   894 				; optimize OK (init.inc), line = 31
   895
   896 13E4 A5 58			lda T0B
   897 13E6 0A				asl @
   898 13E7 A8				tay
   899 13E8 A9 FF			lda #$FF
   900 13EA 18 79 0E 10			add adr.MUL40,y
   901 13EE 85 12			sta :bp2
   902 13F0 A9 07			lda #$07
   903 13F2 79 0F 10			adc adr.MUL40+1,y
   904 13F5 85 13			sta :bp2+1
   905 13F7 A0 00			ldy #$00
   906 13F9 A9 41			lda #$41
   907 13FB 91 12			sta (:bp2),y
   908 13FD C8				iny
   909 13FE 91 12			sta (:bp2),y
   910
   911 				; --- ForToDoEpilog
   912 1400 C6 58			dec T0B
   913 1402 10 C0			jpl l_0218
   914 1404			l_0226
   915
   916 				; optimize OK (init.inc), line = 34
   917
   918 1404 AD 82 1A			lda PLAYER1.COLOUR
   919 1407 8D A2 1A			sta PUTCHAR.C
   920 140A AD 81 1A			lda PLAYER1.HEAD
   921 140D 8D A1 1A			sta PUTCHAR.V
   922 1410 AD 80 1A			lda PLAYER1.Y
   923 1413 8D A0 1A			sta PUTCHAR.Y
   924 1416 AD 7F 1A			lda PLAYER1.X
   925 1419 8D 9F 1A			sta PUTCHAR.X
   926 141C 20 71 11			jsr PUTCHAR
   927
   928 				; optimize OK (init.inc), line = 35
   929
   930 141F AD 8A 1A			lda PLAYER2.COLOUR
   931 1422 8D A2 1A			sta PUTCHAR.C
   932 1425 AD 89 1A			lda PLAYER2.HEAD
   933 1428 8D A1 1A			sta PUTCHAR.V
   934 142B AD 88 1A			lda PLAYER2.Y
   935 142E 8D A0 1A			sta PUTCHAR.Y
   936 1431 AD 87 1A			lda PLAYER2.X
   937 1434 8D 9F 1A			sta PUTCHAR.X
   938 1437 20 71 11			jsr PUTCHAR
   939
   940 				; optimize OK (init.inc), line = 36
   941
   942 143A AD 92 1A			lda PLAYER3.COLOUR
   943 143D 8D A2 1A			sta PUTCHAR.C
   944 1440 AD 91 1A			lda PLAYER3.HEAD
   945 1443 8D A1 1A			sta PUTCHAR.V
   946 1446 AD 90 1A			lda PLAYER3.Y
   947 1449 8D A0 1A			sta PUTCHAR.Y
   948 144C AD 8F 1A			lda PLAYER3.X
   949 144F 8D 9F 1A			sta PUTCHAR.X
   950 1452 20 71 11			jsr PUTCHAR
   951
   952 				; optimize OK (init.inc), line = 37
   953
   954 1455 AD 9A 1A			lda PLAYER4.COLOUR
   955 1458 8D A2 1A			sta PUTCHAR.C
   956 145B AD 99 1A			lda PLAYER4.HEAD
   957 145E 8D A1 1A			sta PUTCHAR.V
   958 1461 AD 98 1A			lda PLAYER4.Y
   959 1464 8D A0 1A			sta PUTCHAR.Y
   960 1467 AD 97 1A			lda PLAYER4.X
   961 146A 8D 9F 1A			sta PUTCHAR.X
   962 146D 20 71 11			jsr PUTCHAR
   963
   964 				; optimize OK (init.inc), line = 39
   965
   966 1470 A9 35			lda #$35
   967 1472 8D A2 1A			sta PUTCHAR.C
   968 1475 A9 56			lda #$56
   969 1477 8D A1 1A			sta PUTCHAR.V
   970 147A A9 06			lda #$06
   971 147C 8D A0 1A			sta PUTCHAR.Y
   972 147F A9 0A			lda #$0A
   973 1481 8D 9F 1A			sta PUTCHAR.X
   974 1484 20 71 11			jsr PUTCHAR
   975
   976 				; optimize OK (init.inc), line = 40
   977
   978 1487 A9 35			lda #$35
   979 1489 8D A2 1A			sta PUTCHAR.C
   980 148C A9 56			lda #$56
   981 148E 8D A1 1A			sta PUTCHAR.V
   982 1491 A9 06			lda #$06
   983 1493 8D A0 1A			sta PUTCHAR.Y
   984 1496 A9 1E			lda #$1E
   985 1498 8D 9F 1A			sta PUTCHAR.X
   986 149B 20 71 11			jsr PUTCHAR
   987
   988 				; optimize OK (init.inc), line = 41
   989
   990 149E A9 35			lda #$35
   991 14A0 8D A2 1A			sta PUTCHAR.C
   992 14A3 A9 56			lda #$56
   993 14A5 8D A1 1A			sta PUTCHAR.V
   994 14A8 A9 12			lda #$12
   995 14AA 8D A0 1A			sta PUTCHAR.Y
   996 14AD A9 0A			lda #$0A
   997 14AF 8D 9F 1A			sta PUTCHAR.X
   998 14B2 20 71 11			jsr PUTCHAR
   999
  1000 				; optimize OK (init.inc), line = 42
  1001
  1002 14B5 A9 35			lda #$35
  1003 14B7 8D A2 1A			sta PUTCHAR.C
  1004 14BA A9 56			lda #$56
  1005 14BC 8D A1 1A			sta PUTCHAR.V
  1006 14BF A9 12			lda #$12
  1007 14C1 8D A0 1A			sta PUTCHAR.Y
  1008 14C4 A9 1E			lda #$1E
  1009 14C6 8D 9F 1A			sta PUTCHAR.X
  1010 14C9 20 71 11			jsr PUTCHAR
  1011
  1012 				; optimize FAIL ('SHOWSCORE', init.inc), line = 44
  1013
  1014 14CC 20 9C 11			jsr SHOWSCORE
  1015
  1016 				; ------------------------------------------------------------
  1017
  1018 = 0000			@FORTMP_01D5	= $00
  1019 = 0001			@FORTMP_0215	= $01
  1020 14CF			@exit
  1021 					.ifdef @new
  1022 					lda <@VarData
  1023 					sta :ztmp
  1024 					lda >@VarData
  1025 					ldy #@VarDataSize-1
  1026 					jmp @FreeMem
  1027 					els
  1028 14CF 60				rts						; ret
  1029 					eif
  1030 				.endl
  1031
  1032 14D0			.local	AISTRAIGHT					; PROCEDURE
  1033
  1034 				; optimize OK (ai.inc), line = 5
  1035
  1036 14D0 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1037 14DA A0 04			ldy #PLY.DIR-DATAORIGIN
  1038 14DC B1 12			lda (:bp2),y
  1039 14DE 25 5A			and AVAILDIR
  1040 14E0 F0 07			jeq l_02A6
  1041 14E2 B1 12			lda (:bp2),y
  1042 14E4 85 59			sta NEWDIR
  1043 14E6 4C 60 15			jmp l_02B6
  1044 14E9			l_02A6
  1045
  1046 				; optimize OK (ai.inc), line = 7
  1047
  1048 14E9 A5 5A			lda AVAILDIR
  1049 14EB C9 03			cmp #$03
  1050 14ED D0 16			jne l_02C8
  1051 14EF A9 00			lda #$00
  1052 14F1 20 40 11			jsr SYSTEM.RANDOM_006C
  1053 14F4 B5 18			lda :STACKORIGIN,x
  1054 14F6 29 01			and #$01
  1055 14F8 95 18			sta :STACKORIGIN,x
  1056 14FA B4 18			ldy :STACKORIGIN,x
  1057 14FC B9 40 10			lda adr.DIRECTION,y
  1058 14FF 85 59			sta NEWDIR
  1059 1501 CA				dex
  1060 1502 4C 1D 15			jmp l_02DE
  1061 1505			l_02C8
  1062
  1063 				; optimize OK (ai.inc), line = 9
  1064
  1065 1505 A5 5A			lda AVAILDIR
  1066 1507 8D AE 1A			sta @CASETMP_0003
  1067 150A C9 01			cmp #$01
  1068 150C D0 07			jne l_02E9
  1069 150E			@
  1070
  1071 				; optimize OK (ai.inc), line = 10
  1072
  1073 150E A9 01			lda #$01
  1074 1510 85 59			sta NEWDIR
  1075
  1076 1512 4C 1D 15			jmp a_0003
  1077 1515			l_02E9
  1078 1515 C9 02			cmp #$02
  1079 1517 D0 04			jne l_02F6
  1080 1519			@
  1081
  1082 				; optimize OK (ai.inc), line = 11
  1083
  1084 1519 A9 02			lda #$02
  1085 151B 85 59			sta NEWDIR
  1086
  1087 151D			l_02F6
  1088 151D			a_0003
  1089 151D			l_02DE
  1090
  1091 				; optimize OK (ai.inc), line = 14
  1092
  1093 151D A5 5A			lda AVAILDIR
  1094 151F C9 0C			cmp #$0C
  1095 1521 D0 25			jne l_0312
  1096 1523 A9 00			lda #$00
  1097 1525 20 40 11			jsr SYSTEM.RANDOM_006C
  1098 1528 B5 18			lda :STACKORIGIN,x
  1099 152A 29 01			and #$01
  1100 152C 95 18			sta :STACKORIGIN,x
  1101 152E E8				inx
  1102 152F A9 02 95 18			mva #$02 :STACKORIGIN,x
  1103 1533 A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1104 1537 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1105 1539 20 44 10			jsr addAX_CX
  1106 153C CA				dex
  1107 153D B4 18			ldy :STACKORIGIN,x
  1108 153F B9 40 10			lda adr.DIRECTION,y
  1109 1542 85 59			sta NEWDIR
  1110 1544 CA				dex
  1111 1545 4C 60 15			jmp l_032C
  1112 1548			l_0312
  1113
  1114 				; optimize OK (ai.inc), line = 16
  1115
  1116 1548 A5 5A			lda AVAILDIR
  1117 154A 8D AF 1A			sta @CASETMP_0004
  1118 154D C9 04			cmp #$04
  1119 154F D0 07			jne l_0337
  1120 1551			@
  1121
  1122 				; optimize OK (ai.inc), line = 17
  1123
  1124 1551 A9 04			lda #$04
  1125 1553 85 59			sta NEWDIR
  1126
  1127 1555 4C 60 15			jmp a_0004
  1128 1558			l_0337
  1129 1558 C9 08			cmp #$08
  1130 155A D0 04			jne l_0344
  1131 155C			@
  1132
  1133 				; optimize OK (ai.inc), line = 18
  1134
  1135 155C A9 08			lda #$08
  1136 155E 85 59			sta NEWDIR
  1137
  1138 1560			l_0344
  1139 1560			a_0004
  1140 1560			l_032C
  1141 1560			l_02B6
  1142
  1143 				; ------------------------------------------------------------
  1144
  1145 = 1AAE			@CASETMP_0003	= DATAORIGIN+$0042
  1146 = 1AAF			@CASETMP_0004	= DATAORIGIN+$0043
  1147
  1148 = 1AAE			@VarData	= @CASETMP_0003
  1149 = 0002			@VarDataSize	= 2
  1150
  1151 1560			@exit
  1152 					.ifdef @new
  1153 					lda <@VarData
  1154 					sta :ztmp
  1155 					lda >@VarData
  1156 					ldy #@VarDataSize-1
  1157 					jmp @FreeMem
  1158 					els
  1159 1560 60				rts						; ret
  1160 					eif
  1161 				.endl
  1162
  1163 1561			.local	AIMIRROR					; PROCEDURE
  1164
  1165 				; optimize OK (ai.inc), line = 28
  1166
  1167 1561 AD 83 1A			lda PLAYER1.DIR
  1168 1564 8D B0 1A			sta @CASETMP_0005
  1169 1567 C9 01			cmp #$01
  1170 1569 D0 07			jne l_035D
  1171 156B			@
  1172
  1173 				; optimize OK (ai.inc), line = 29
  1174
  1175 156B A9 02			lda #$02
  1176 156D 85 58			sta T0B
  1177
  1178 156F 4C 90 15			jmp a_0005
  1179 1572			l_035D
  1180 1572 C9 02			cmp #$02
  1181 1574 D0 07			jne l_036A
  1182 1576			@
  1183
  1184 				; optimize OK (ai.inc), line = 30
  1185
  1186 1576 A9 01			lda #$01
  1187 1578 85 58			sta T0B
  1188
  1189 157A 4C 90 15			jmp a_0005
  1190 157D			l_036A
  1191 157D C9 04			cmp #$04
  1192 157F D0 07			jne l_0377
  1193 1581			@
  1194
  1195 				; optimize OK (ai.inc), line = 31
  1196
  1197 1581 A9 08			lda #$08
  1198 1583 85 58			sta T0B
  1199
  1200 1585 4C 90 15			jmp a_0005
  1201 1588			l_0377
  1202 1588 C9 08			cmp #$08
  1203 158A D0 04			jne l_0384
  1204 158C			@
  1205
  1206 				; optimize OK (ai.inc), line = 32
  1207
  1208 158C A9 04			lda #$04
  1209 158E 85 58			sta T0B
  1210
  1211 1590			l_0384
  1212 1590			a_0005
  1213
  1214 				; optimize OK (ai.inc), line = 35
  1215
  1216 1590 A5 5A			lda AVAILDIR
  1217 1592 25 58			and T0B
  1218 1594 F0 07			jeq l_03A8
  1219 1596 A5 58			lda T0B
  1220 1598 85 59			sta NEWDIR
  1221 159A 4C A0 15			jmp l_03B8
  1222 159D			l_03A8
  1223
  1224 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 36
  1225
  1226 159D 20 D0 14			jsr AISTRAIGHT
  1227 15A0			l_03B8
  1228
  1229 				; ------------------------------------------------------------
  1230
  1231 = 1AB0			@CASETMP_0005	= DATAORIGIN+$0044
  1232
  1233 = 1AB0			@VarData	= @CASETMP_0005
  1234 = 0001			@VarDataSize	= 1
  1235
  1236 15A0			@exit
  1237 					.ifdef @new
  1238 					lda <@VarData
  1239 					sta :ztmp
  1240 					lda >@VarData
  1241 					ldy #@VarDataSize-1
  1242 					jmp @FreeMem
  1243 					els
  1244 15A0 60				rts						; ret
  1245 					eif
  1246 				.endl
  1247
  1248 15A1			.local	AIRANDOM					; PROCEDURE
  1249
  1250 				; optimize OK (ai.inc), line = 43
  1251
  1252 15A1 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1253 15AB A0 04			ldy #PLY.DIR-DATAORIGIN
  1254 15AD B1 12			lda (:bp2),y
  1255 15AF 85 58			sta T0B
  1256
  1257 				; optimize OK (ai.inc), line = 44
  1258
  1259 15B1 A9 00			lda #$00
  1260 15B3 20 40 11			jsr SYSTEM.RANDOM_006C
  1261 15B6 CA				dex
  1262 15B7 B5 19			lda :STACKORIGIN+1,x
  1263 15B9 29 03			and #$03
  1264 15BB D0 0D			jne l_03D8
  1265 15BD			@
  1266 15BD A9 04			lda #$04
  1267 15BF 20 40 11			jsr SYSTEM.RANDOM_006C
  1268 15C2 B4 18			ldy :STACKORIGIN,x
  1269 15C4 B9 40 10			lda adr.DIRECTION,y
  1270 15C7 85 58			sta T0B
  1271 15C9 CA				dex
  1272 15CA			l_03D8
  1273
  1274 				; optimize OK (ai.inc), line = 46
  1275
  1276 15CA A5 5A			lda AVAILDIR
  1277 15CC 25 58			and T0B
  1278 15CE F0 07			jeq l_03FB
  1279 15D0 A5 58			lda T0B
  1280 15D2 85 59			sta NEWDIR
  1281 15D4 4C DA 15			jmp l_040B
  1282 15D7			l_03FB
  1283
  1284 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 47
  1285
  1286 15D7 20 D0 14			jsr AISTRAIGHT
  1287 15DA			l_040B
  1288 15DA			@exit
  1289 					.ifdef @new
  1290 					lda <@VarData
  1291 					sta :ztmp
  1292 					lda >@VarData
  1293 					ldy #@VarDataSize-1
  1294 					jmp @FreeMem
  1295 					els
  1296 15DA 60				rts						; ret
  1297 					eif
  1298 				.endl
  1299
  1300 15DB			.local	AIBULLY						; PROCEDURE
  1301
  1302 				; optimize OK (ai.inc), line = 54
  1303
  1304 15DB AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1305 15E5 A0 04			ldy #PLY.DIR-DATAORIGIN
  1306 15E7 B1 12			lda (:bp2),y
  1307 15E9 85 58			sta T0B
  1308
  1309 				; optimize OK (ai.inc), line = 56
  1310
  1311 15EB A0 01			ldy #PLY.Y-DATAORIGIN
  1312 15ED AD 80 1A			lda PLAYER1.Y
  1313 15F0 D1 12			cmp (:bp2),y
  1314 15F2 B0 07			jcs l_042A
  1315 15F4 A9 01			lda #$01
  1316 15F6 85 58			sta T0B
  1317 15F8 4C FF 15			jmp l_0438
  1318 15FB			l_042A
  1319 15FB A9 02			lda #$02
  1320 15FD 85 58			sta T0B
  1321 15FF			l_0438
  1322
  1323 				; optimize OK (ai.inc), line = 57
  1324
  1325 15FF AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1326 1609 A0 01			ldy #PLY.Y-DATAORIGIN
  1327 160B B1 12			lda (:bp2),y
  1328 160D CD 80 1A			cmp PLAYER1.Y
  1329 1610 F0 06			jeq l_0462x
  1330 1612 A5 5A			lda AVAILDIR
  1331 1614 25 58			and T0B
  1332 1616 D0 1E			jne l_0462
  1333 1618			l_0462x
  1334
  1335 				; optimize OK (ai.inc), line = 58
  1336
  1337 1618 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1338 1622 A0 00			ldy #PLY.X-DATAORIGIN
  1339 1624 AD 7F 1A			lda PLAYER1.X
  1340 1627 D1 12			cmp (:bp2),y
  1341 1629 B0 07			jcs l_0477
  1342 162B A9 04			lda #$04
  1343 162D 85 58			sta T0B
  1344 162F 4C 36 16			jmp l_0485
  1345 1632			l_0477
  1346 1632 A9 08			lda #$08
  1347 1634 85 58			sta T0B
  1348 1636			l_0485
  1349 1636			l_0462
  1350
  1351 				; optimize OK (ai.inc), line = 61
  1352
  1353 1636 A5 5A			lda AVAILDIR
  1354 1638 25 58			and T0B
  1355 163A F0 07			jeq l_04A3
  1356 163C A5 58			lda T0B
  1357 163E 85 59			sta NEWDIR
  1358 1640 4C 46 16			jmp l_04B3
  1359 1643			l_04A3
  1360
  1361 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 62
  1362
  1363 1643 20 D0 14			jsr AISTRAIGHT
  1364 1646			l_04B3
  1365 1646			@exit
  1366 					.ifdef @new
  1367 					lda <@VarData
  1368 					sta :ztmp
  1369 					lda >@VarData
  1370 					ldy #@VarDataSize-1
  1371 					jmp @FreeMem
  1372 					els
  1373 1646 60				rts						; ret
  1374 					eif
  1375 				.endl
  1376
  1377 1647			.local	AIMAD						; PROCEDURE
  1378
  1379 				; optimize OK (ai.inc), line = 70
  1380
  1381 1647 A9 03			lda #$03
  1382 1649 20 40 11			jsr SYSTEM.RANDOM_006C
  1383 164C B5 18			lda :STACKORIGIN,x
  1384 164E 18 69 01			add #$01
  1385 1651 85 58			sta T0B
  1386 1653 CA				dex
  1387
  1388 				; optimize OK (ai.inc), line = 71
  1389
  1390 1654 A5 58			lda T0B
  1391 1656 8D B1 1A			sta @CASETMP_0006
  1392 1659 C9 01			cmp #$01
  1393 165B D0 06			jne l_04CC
  1394 165D			@
  1395
  1396 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 72
  1397
  1398 165D 20 D0 14			jsr AISTRAIGHT
  1399 1660 4C 74 16			jmp a_0006
  1400 1663			l_04CC
  1401 1663 C9 02			cmp #$02
  1402 1665 D0 06			jne l_04D6
  1403 1667			@
  1404
  1405 				; optimize FAIL ('AIMIRROR', ai.inc), line = 73
  1406
  1407 1667 20 61 15			jsr AIMIRROR
  1408 166A 4C 74 16			jmp a_0006
  1409 166D			l_04D6
  1410 166D C9 03			cmp #$03
  1411 166F D0 03			jne l_04E0
  1412 1671			@
  1413
  1414 				; optimize FAIL ('AIRANDOM', ai.inc), line = 74
  1415
  1416 1671 20 A1 15			jsr AIRANDOM
  1417 1674			l_04E0
  1418 1674			a_0006
  1419
  1420 				; ------------------------------------------------------------
  1421
  1422 = 1AB1			@CASETMP_0006	= DATAORIGIN+$0045
  1423
  1424 = 1AB1			@VarData	= @CASETMP_0006
  1425 = 0001			@VarDataSize	= 1
  1426
  1427 1674			@exit
  1428 					.ifdef @new
  1429 					lda <@VarData
  1430 					sta :ztmp
  1431 					lda >@VarData
  1432 					ldy #@VarDataSize-1
  1433 					jmp @FreeMem
  1434 					els
  1435 1674 60				rts						; ret
  1436 					eif
  1437 				.endl
  1438
  1439 1675			.local	HUMAN						; PROCEDURE
  1440
  1441 				; optimize OK (main.pas), line = 14
  1442
  1443 1675 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1444 167F A0 04			ldy #PLY.DIR-DATAORIGIN
  1445 1681 B1 12			lda (:bp2),y
  1446 1683 85 59			sta NEWDIR
  1447
  1448 				; optimize OK (main.pas), line = 15
  1449
  1450 1685 A9 02			lda #$02
  1451 1687 8D 08 FF			sta JOY
  1452 168A A9 FF			lda #$FF
  1453 168C 8D 30 FD			sta KEY_PIO
  1454 168F AD 08 FF			lda JOY
  1455 1692 49 FF			eor #$FF
  1456 1694 85 58			sta T0B
  1457
  1458 				; optimize OK (main.pas), line = 17
  1459
  1460 1696 8D B2 1A			sta @CASETMP_0007
  1461 1699 C9 01			cmp #$01
  1462 169B D0 19			jne l_050F
  1463 169D			@
  1464
  1465 				; optimize OK (main.pas), line = 18
  1466
  1467 169D AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1468 16A7 A0 04			ldy #PLY.DIR-DATAORIGIN
  1469 16A9 B1 12			lda (:bp2),y
  1470 16AB C9 02			cmp #$02
  1471 16AD F0 04			jeq l_0521
  1472 16AF A9 01			lda #$01
  1473 16B1 85 59			sta NEWDIR
  1474 16B3			l_0521
  1475
  1476 16B3 4C 0A 17			jmp a_0007
  1477 16B6			l_050F
  1478 16B6 C9 02			cmp #$02
  1479 16B8 D0 19			jne l_0531
  1480 16BA			@
  1481
  1482 				; optimize OK (main.pas), line = 19
  1483
  1484 16BA AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1485 16C4 A0 04			ldy #PLY.DIR-DATAORIGIN
  1486 16C6 B1 12			lda (:bp2),y
  1487 16C8 C9 01			cmp #$01
  1488 16CA F0 04			jeq l_0543
  1489 16CC A9 02			lda #$02
  1490 16CE 85 59			sta NEWDIR
  1491 16D0			l_0543
  1492
  1493 16D0 4C 0A 17			jmp a_0007
  1494 16D3			l_0531
  1495 16D3 C9 04			cmp #$04
  1496 16D5 D0 19			jne l_0553
  1497 16D7			@
  1498
  1499 				; optimize OK (main.pas), line = 20
  1500
  1501 16D7 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1502 16E1 A0 04			ldy #PLY.DIR-DATAORIGIN
  1503 16E3 B1 12			lda (:bp2),y
  1504 16E5 C9 08			cmp #$08
  1505 16E7 F0 04			jeq l_0565
  1506 16E9 A9 04			lda #$04
  1507 16EB 85 59			sta NEWDIR
  1508 16ED			l_0565
  1509
  1510 16ED 4C 0A 17			jmp a_0007
  1511 16F0			l_0553
  1512 16F0 C9 08			cmp #$08
  1513 16F2 D0 16			jne l_0575
  1514 16F4			@
  1515
  1516 				; optimize OK (main.pas), line = 21
  1517
  1518 16F4 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1519 16FE A0 04			ldy #PLY.DIR-DATAORIGIN
  1520 1700 B1 12			lda (:bp2),y
  1521 1702 C9 04			cmp #$04
  1522 1704 F0 04			jeq l_0587
  1523 1706 A9 08			lda #$08
  1524 1708 85 59			sta NEWDIR
  1525 170A			l_0587
  1526
  1527 170A			l_0575
  1528 170A			a_0007
  1529
  1530 				; optimize OK (main.pas), line = 24
  1531
  1532 170A A5 59			lda NEWDIR
  1533 170C 25 5A			and AVAILDIR
  1534 170E D0 19			jne l_05AE
  1535
  1536 				; optimize OK (main.pas), line = 25
  1537
  1538 1710 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1539 171A A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1540 171C A9 01			lda #$01
  1541 171E 91 12			sta (:bp2),y
  1542 1720 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1543 1722 A9 2A			lda #$2A
  1544 1724 91 12			sta (:bp2),y
  1545 1726 CE 7C 1A			dec ALIVE
  1546 1729			l_05AE
  1547
  1548 				; ------------------------------------------------------------
  1549
  1550 = 1AB2			@CASETMP_0007	= DATAORIGIN+$0046
  1551
  1552 = 1AB2			@VarData	= @CASETMP_0007
  1553 = 0001			@VarDataSize	= 1
  1554
  1555 1729			@exit
  1556 					.ifdef @new
  1557 					lda <@VarData
  1558 					sta :ztmp
  1559 					lda >@VarData
  1560 					ldy #@VarDataSize-1
  1561 					jmp @FreeMem
  1562 					els
  1563 1729 60				rts						; ret
  1564 					eif
  1565 				.endl
  1566
  1567 172A			.local	PLAYERMOVE					; PROCEDURE
  1568
  1569 				; optimize OK (main.pas), line = 33
  1570
  1571 172A AD B3 1A			lda P
  1572 172D 8D 60 1A			sta PLY
  1573 1730 85 12			sta :bp2
  1574 1732 AD B4 1A			lda P+1
  1575 1735 8D 61 1A			sta PLY+1
  1576 1738 85 13			sta :bp2+1
  1577 				; optimize OK (main.pas), line = 35
  1578 173A A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1579 173C B1 12			lda (:bp2),y
  1580 173E F0 03 4C 38 19		jne l_05D5
  1581
  1582 				; optimize OK (main.pas), line = 37
  1583
  1584 1743 A0 00			ldy #PLY.X-DATAORIGIN
  1585 1745 B1 12			lda (:bp2),y
  1586 1747 8D A3 1A			sta CHECKAVAILDIR.X
  1587 174A A0 01			ldy #PLY.Y-DATAORIGIN
  1588 174C B1 12			lda (:bp2),y
  1589 174E 8D A4 1A			sta CHECKAVAILDIR.Y
  1590 1751 20 01 12			jsr CHECKAVAILDIR
  1591
  1592 				; optimize OK (main.pas), line = 39
  1593
  1594 1754 A5 5A			lda AVAILDIR
  1595 1756 D0 36			jne l_05EF
  1596
  1597 				; optimize OK (main.pas), line = 40
  1598
  1599 1758 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1600 1762 A0 07			ldy #PLY.ISDEAD-DATAORIGIN
  1601 1764 A9 01			lda #$01
  1602 1766 91 12			sta (:bp2),y
  1603 1768 CE 7C 1A			dec ALIVE
  1604
  1605 				; optimize OK (main.pas), line = 41
  1606
  1607 176B A0 00			ldy #PLY.X-DATAORIGIN
  1608 176D B1 12			lda (:bp2),y
  1609 176F 8D 9F 1A			sta PUTCHAR.X
  1610 1772 A0 01			ldy #PLY.Y-DATAORIGIN
  1611 1774 B1 12			lda (:bp2),y
  1612 1776 8D A0 1A			sta PUTCHAR.Y
  1613 1779 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1614 177B B1 12			lda (:bp2),y
  1615 177D 18 69 80			add #$80
  1616 1780 8D A2 1A			sta PUTCHAR.C
  1617 1783 A9 57			lda #$57
  1618 1785 8D A1 1A			sta PUTCHAR.V
  1619 1788 20 71 11			jsr PUTCHAR
  1620 178B 4C 38 19			jmp l_0610
  1621 178E			l_05EF
  1622
  1623 				; optimize OK (main.pas), line = 44
  1624
  1625 178E AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1626 1798 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  1627 179A B1 12			lda (:bp2),y
  1628 179C 8D B5 1A			sta @CASETMP_0008
  1629 179F C9 00			cmp #$00
  1630 17A1 D0 06			jne l_061B
  1631 17A3			@
  1632
  1633 				; optimize FAIL ('HUMAN', main.pas), line = 45
  1634
  1635 17A3 20 75 16			jsr HUMAN
  1636 17A6 4C D8 17			jmp a_0008
  1637 17A9			l_061B
  1638 17A9 C9 01			cmp #$01
  1639 17AB D0 06			jne l_0625
  1640 17AD			@
  1641
  1642 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 46
  1643
  1644 17AD 20 D0 14			jsr AISTRAIGHT
  1645 17B0 4C D8 17			jmp a_0008
  1646 17B3			l_0625
  1647 17B3 C9 02			cmp #$02
  1648 17B5 D0 06			jne l_062F
  1649 17B7			@
  1650
  1651 				; optimize FAIL ('AIMIRROR', main.pas), line = 47
  1652
  1653 17B7 20 61 15			jsr AIMIRROR
  1654 17BA 4C D8 17			jmp a_0008
  1655 17BD			l_062F
  1656 17BD C9 03			cmp #$03
  1657 17BF D0 06			jne l_0639
  1658 17C1			@
  1659
  1660 				; optimize FAIL ('AIRANDOM', main.pas), line = 48
  1661
  1662 17C1 20 A1 15			jsr AIRANDOM
  1663 17C4 4C D8 17			jmp a_0008
  1664 17C7			l_0639
  1665 17C7 C9 04			cmp #$04
  1666 17C9 D0 06			jne l_0643
  1667 17CB			@
  1668
  1669 				; optimize FAIL ('AIBULLY', main.pas), line = 49
  1670
  1671 17CB 20 DB 15			jsr AIBULLY
  1672 17CE 4C D8 17			jmp a_0008
  1673 17D1			l_0643
  1674 17D1 C9 07			cmp #$07
  1675 17D3 D0 03			jne l_064D
  1676 17D5			@
  1677
  1678 				; optimize FAIL ('AIMAD', main.pas), line = 50
  1679
  1680 17D5 20 47 16			jsr AIMAD
  1681 17D8			l_064D
  1682 17D8			a_0008
  1683
  1684 				; optimize OK (main.pas), line = 53
  1685
  1686 17D8 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1687 17E2 A0 04			ldy #PLY.DIR-DATAORIGIN
  1688 17E4 B1 12			lda (:bp2),y
  1689 17E6 C5 59			cmp NEWDIR
  1690 17E8 D0 14			jne l_066C
  1691
  1692 				; optimize OK (main.pas), line = 54
  1693
  1694 17EA A5 59			lda NEWDIR
  1695 17EC 29 0C			and #$0C
  1696 17EE F0 07			jeq l_0683
  1697 17F0 A9 40			lda #$40
  1698 17F2 85 58			sta T0B
  1699 17F4 4C FB 17			jmp l_0691
  1700 17F7			l_0683
  1701 17F7 A9 42			lda #$42
  1702 17F9 85 58			sta T0B
  1703 17FB			l_0691
  1704 17FB 4C 6E 18			jmp l_069E
  1705 17FE			l_066C
  1706
  1707 				; optimize OK (main.pas), line = 56
  1708
  1709 17FE AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1710 1808 A0 04			ldy #PLY.DIR-DATAORIGIN
  1711 180A B1 12			lda (:bp2),y
  1712 180C 29 0A			and #$0A
  1713 180E F0 0A			jeq l_06C4
  1714 1810 A5 59			lda NEWDIR
  1715 1812 29 05			and #$05
  1716 1814 F0 04			jeq l_06C4
  1717 1816 A9 7D			lda #$7D
  1718 1818 85 58			sta T0B
  1719 181A			l_06C4
  1720
  1721 				; optimize OK (main.pas), line = 57
  1722
  1723 181A AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1724 1824 A0 04			ldy #PLY.DIR-DATAORIGIN
  1725 1826 B1 12			lda (:bp2),y
  1726 1828 29 09			and #$09
  1727 182A F0 0A			jeq l_06F1
  1728 182C A5 59			lda NEWDIR
  1729 182E 29 06			and #$06
  1730 1830 F0 04			jeq l_06F1
  1731 1832 A9 6E			lda #$6E
  1732 1834 85 58			sta T0B
  1733 1836			l_06F1
  1734
  1735 				; optimize OK (main.pas), line = 58
  1736
  1737 1836 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1738 1840 A0 04			ldy #PLY.DIR-DATAORIGIN
  1739 1842 B1 12			lda (:bp2),y
  1740 1844 29 06			and #$06
  1741 1846 F0 0A			jeq l_071E
  1742 1848 A5 59			lda NEWDIR
  1743 184A 29 09			and #$09
  1744 184C F0 04			jeq l_071E
  1745 184E A9 6D			lda #$6D
  1746 1850 85 58			sta T0B
  1747 1852			l_071E
  1748
  1749 				; optimize OK (main.pas), line = 59
  1750
  1751 1852 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1752 185C A0 04			ldy #PLY.DIR-DATAORIGIN
  1753 185E B1 12			lda (:bp2),y
  1754 1860 29 05			and #$05
  1755 1862 F0 0A			jeq l_074B
  1756 1864 A5 59			lda NEWDIR
  1757 1866 29 0A			and #$0A
  1758 1868 F0 04			jeq l_074B
  1759 186A A9 70			lda #$70
  1760 186C 85 58			sta T0B
  1761 186E			l_074B
  1762 186E			l_069E
  1763
  1764 				; optimize OK (main.pas), line = 61
  1765
  1766 186E AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1767 1878 A0 00			ldy #PLY.X-DATAORIGIN
  1768 187A B1 12			lda (:bp2),y
  1769 187C 8D 9F 1A			sta PUTCHAR.X
  1770 187F A0 01			ldy #PLY.Y-DATAORIGIN
  1771 1881 B1 12			lda (:bp2),y
  1772 1883 8D A0 1A			sta PUTCHAR.Y
  1773 1886 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1774 1888 B1 12			lda (:bp2),y
  1775 188A 8D A2 1A			sta PUTCHAR.C
  1776 188D A5 58			lda T0B
  1777 188F 8D A1 1A			sta PUTCHAR.V
  1778 1892 20 71 11			jsr PUTCHAR
  1779
  1780 				; optimize OK (main.pas), line = 63
  1781
  1782 1895 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1783 189F A0 04			ldy #PLY.DIR-DATAORIGIN
  1784 18A1 A5 59			lda NEWDIR
  1785 18A3 91 12			sta (:bp2),y
  1786
  1787 				; optimize OK (main.pas), line = 65
  1788
  1789 18A5 A5 59			lda NEWDIR
  1790 18A7 8D B6 1A			sta @CASETMP_0009
  1791 18AA C9 01			cmp #$01
  1792 18AC D0 16			jne l_0770
  1793 18AE			@
  1794
  1795 				; optimize OK (main.pas), line = 66
  1796
  1797 18AE AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1798 18B8 A0 01			ldy #PLY.Y-DATAORIGIN
  1799 18BA B1 12			lda (:bp2),y
  1800 18BC 38 E9 01			sub #$01
  1801 18BF 91 12			sta (:bp2),y
  1802
  1803 18C1 4C 0F 19			jmp a_0009
  1804 18C4			l_0770
  1805 18C4 C9 02			cmp #$02
  1806 18C6 D0 16			jne l_077A
  1807 18C8			@
  1808
  1809 				; optimize OK (main.pas), line = 67
  1810
  1811 18C8 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1812 18D2 A0 01			ldy #PLY.Y-DATAORIGIN
  1813 18D4 B1 12			lda (:bp2),y
  1814 18D6 18 69 01			add #$01
  1815 18D9 91 12			sta (:bp2),y
  1816
  1817 18DB 4C 0F 19			jmp a_0009
  1818 18DE			l_077A
  1819 18DE C9 04			cmp #$04
  1820 18E0 D0 16			jne l_0784
  1821 18E2			@
  1822
  1823 				; optimize OK (main.pas), line = 68
  1824
  1825 18E2 AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1826 18EC A0 00			ldy #PLY.X-DATAORIGIN
  1827 18EE B1 12			lda (:bp2),y
  1828 18F0 38 E9 01			sub #$01
  1829 18F3 91 12			sta (:bp2),y
  1830
  1831 18F5 4C 0F 19			jmp a_0009
  1832 18F8			l_0784
  1833 18F8 C9 08			cmp #$08
  1834 18FA D0 13			jne l_078E
  1835 18FC			@
  1836
  1837 				; optimize OK (main.pas), line = 69
  1838
  1839 18FC AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1840 1906 A0 00			ldy #PLY.X-DATAORIGIN
  1841 1908 B1 12			lda (:bp2),y
  1842 190A 18 69 01			add #$01
  1843 190D 91 12			sta (:bp2),y
  1844
  1845 190F			l_078E
  1846 190F			a_0009
  1847
  1848 				; optimize OK (main.pas), line = 72
  1849
  1850 190F AC 60 1A 84 12 AC + 	mwy PLY :bp2
  1851 1919 A0 00			ldy #PLY.X-DATAORIGIN
  1852 191B B1 12			lda (:bp2),y
  1853 191D 8D 9F 1A			sta PUTCHAR.X
  1854 1920 A0 01			ldy #PLY.Y-DATAORIGIN
  1855 1922 B1 12			lda (:bp2),y
  1856 1924 8D A0 1A			sta PUTCHAR.Y
  1857 1927 A0 02			ldy #PLY.HEAD-DATAORIGIN
  1858 1929 B1 12			lda (:bp2),y
  1859 192B 8D A1 1A			sta PUTCHAR.V
  1860 192E A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1861 1930 B1 12			lda (:bp2),y
  1862 1932 8D A2 1A			sta PUTCHAR.C
  1863 1935 20 71 11			jsr PUTCHAR
  1864 1938			l_0610
  1865 1938			l_05D5
  1866
  1867 				; ------------------------------------------------------------
  1868
  1869 = 1AB3			P	= DATAORIGIN+$0047
  1870 = 1AB5			@CASETMP_0008	= DATAORIGIN+$0049
  1871 = 1AB6			@CASETMP_0009	= DATAORIGIN+$004A
  1872
  1873 = 1AB3			@VarData	= P
  1874 = 0004			@VarDataSize	= 4
  1875
  1876 1938			@exit
  1877 					.ifdef @new
  1878 					lda <@VarData
  1879 					sta :ztmp
  1880 					lda >@VarData
  1881 					ldy #@VarDataSize-1
  1882 					jmp @FreeMem
  1883 					els
  1884 1938 60				rts						; ret
  1885 					eif
  1886 				.endl
  1887
  1888 1939			.local	STARTSCREEN					; PROCEDURE
  1889
  1890 				; --- RepeatUntilProlog
  1891 1939			l_07AB
  1892
  1893 				; optimize OK (main.pas), line = 84
  1894
  1895 1939 A9 02			lda #$02
  1896 193B 8D 08 FF			sta JOY
  1897 193E A9 FF			lda #$FF
  1898 1940 8D 30 FD			sta KEY_PIO
  1899 1943 AD 08 FF			lda JOY
  1900 1946 49 FF			eor #$FF
  1901 1948 85 58			sta T0B
  1902
  1903 				; optimize OK (main.pas), line = 85
  1904
  1905 194A C9 40			cmp #$40
  1906 194C D0 EB			jne l_07AB
  1907 194E			@exit
  1908 					.ifdef @new
  1909 					lda <@VarData
  1910 					sta :ztmp
  1911 					lda >@VarData
  1912 					ldy #@VarDataSize-1
  1913 					jmp @FreeMem
  1914 					els
  1915 194E 60				rts						; ret
  1916 					eif
  1917 				.endl
  1918
  1919 194F			.local	MAINLOOP					; PROCEDURE
  1920
  1921 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 92
  1922
  1923 194F 20 BF 12			jsr INITPLAYFIELD
  1924
  1925 				; optimize FAIL ('STARTSCREEN', main.pas), line = 93
  1926
  1927 1952 20 39 19			jsr STARTSCREEN
  1928
  1929 				; optimize OK (main.pas), line = 95
  1930
  1931 1955 A9 FF			lda #$FF
  1932 1957 8D 7C 1A			sta ALIVE
  1933
  1934 				; optimize OK (main.pas), line = 96
  1935
  1936 195A AD 86 1A			lda PLAYER1.ISDEAD
  1937 195D D0 03			jne l_07E3
  1938 195F EE 7C 1A			inc ALIVE
  1939 1962			l_07E3
  1940
  1941 				; optimize OK (main.pas), line = 97
  1942
  1943 1962 AD 8E 1A			lda PLAYER2.ISDEAD
  1944 1965 D0 03			jne l_07F9
  1945 1967 EE 7C 1A			inc ALIVE
  1946 196A			l_07F9
  1947
  1948 				; optimize OK (main.pas), line = 98
  1949
  1950 196A AD 96 1A			lda PLAYER3.ISDEAD
  1951 196D D0 03			jne l_080F
  1952 196F EE 7C 1A			inc ALIVE
  1953 1972			l_080F
  1954
  1955 				; optimize OK (main.pas), line = 99
  1956
  1957 1972 AD 9E 1A			lda PLAYER4.ISDEAD
  1958 1975 D0 03			jne l_0825
  1959 1977 EE 7C 1A			inc ALIVE
  1960 197A			l_0825
  1961
  1962 				; --- RepeatUntilProlog
  1963 197A			l_082D
  1964
  1965 				; optimize OK (main.pas), line = 102
  1966
  1967 197A A9 03			lda #$03
  1968 197C 8D 78 1A			sta SYSTEM.PAUSE_006B.N
  1969 197F A9 00			lda #$00
  1970 1981 8D 79 1A			sta SYSTEM.PAUSE_006B.N+1
  1971 1984 20 23 11			jsr SYSTEM.PAUSE_006B
  1972
  1973 				; optimize OK (main.pas), line = 103
  1974
  1975 1987 AD 62 1A			lda PLAYER1
  1976 198A 8D B3 1A			sta PLAYERMOVE.P
  1977 198D AD 63 1A			lda PLAYER1+1
  1978 1990 8D B4 1A			sta PLAYERMOVE.P+1
  1979 1993 20 2A 17			jsr PLAYERMOVE
  1980 1996 AD 64 1A			lda PLAYER2
  1981 1999 8D B3 1A			sta PLAYERMOVE.P
  1982 199C AD 65 1A			lda PLAYER2+1
  1983 199F 8D B4 1A			sta PLAYERMOVE.P+1
  1984 19A2 20 2A 17			jsr PLAYERMOVE
  1985
  1986 				; optimize OK (main.pas), line = 104
  1987
  1988 19A5 AD 66 1A			lda PLAYER3
  1989 19A8 8D B3 1A			sta PLAYERMOVE.P
  1990 19AB AD 67 1A			lda PLAYER3+1
  1991 19AE 8D B4 1A			sta PLAYERMOVE.P+1
  1992 19B1 20 2A 17			jsr PLAYERMOVE
  1993 19B4 AD 68 1A			lda PLAYER4
  1994 19B7 8D B3 1A			sta PLAYERMOVE.P
  1995 19BA AD 69 1A			lda PLAYER4+1
  1996 19BD 8D B4 1A			sta PLAYERMOVE.P+1
  1997 19C0 20 2A 17			jsr PLAYERMOVE
  1998
  1999 				; optimize OK (main.pas), line = 105
  2000
  2001 19C3 AD 7C 1A			lda ALIVE
  2002 19C6 F0 04			jeq l_082Dx
  2003 19C8 C9 FF			cmp #$FF
  2004 19CA D0 AE			jne l_082D
  2005 19CC			l_082Dx
  2006
  2007 				; optimize OK (main.pas), line = 107
  2008
  2009 19CC AD 86 1A			lda PLAYER1.ISDEAD
  2010 19CF D0 03			jne l_0863
  2011 19D1 EE 85 1A			inc PLAYER1.SCORE
  2012 19D4			l_0863
  2013
  2014 				; optimize OK (main.pas), line = 108
  2015
  2016 19D4 AD 8E 1A			lda PLAYER2.ISDEAD
  2017 19D7 D0 03			jne l_0879
  2018 19D9 EE 8D 1A			inc PLAYER2.SCORE
  2019 19DC			l_0879
  2020
  2021 				; optimize OK (main.pas), line = 109
  2022
  2023 19DC AD 96 1A			lda PLAYER3.ISDEAD
  2024 19DF D0 03			jne l_088F
  2025 19E1 EE 95 1A			inc PLAYER3.SCORE
  2026 19E4			l_088F
  2027
  2028 				; optimize OK (main.pas), line = 110
  2029
  2030 19E4 AD 9E 1A			lda PLAYER4.ISDEAD
  2031 19E7 D0 03			jne l_08A5
  2032 19E9 EE 9D 1A			inc PLAYER4.SCORE
  2033 19EC			l_08A5
  2034
  2035 				; optimize OK (main.pas), line = 112
  2036
  2037 19EC A9 64			lda #$64
  2038 19EE 8D 78 1A			sta SYSTEM.PAUSE_006B.N
  2039 19F1 A9 00			lda #$00
  2040 19F3 8D 79 1A			sta SYSTEM.PAUSE_006B.N+1
  2041 19F6 20 23 11			jsr SYSTEM.PAUSE_006B
  2042 19F9			@exit
  2043 					.ifdef @new
  2044 					lda <@VarData
  2045 					sta :ztmp
  2046 					lda >@VarData
  2047 					ldy #@VarDataSize-1
  2048 					jmp @FreeMem
  2049 					els
  2050 19F9 60				rts						; ret
  2051 					eif
  2052 				.endl
  2053 19FA			l_0007
  2054
  2055 				; --- RepeatUntilProlog
  2056 19FA			l_08B0
  2057
  2058 				; optimize OK (main.pas), line = 119
  2059
  2060 19FA A9 30			lda #$30
  2061 19FC 8D 85 1A			sta PLAYER1.SCORE
  2062 19FF 8D 8D 1A			sta PLAYER2.SCORE
  2063
  2064 				; optimize OK (main.pas), line = 120
  2065
  2066 1A02 8D 95 1A			sta PLAYER3.SCORE
  2067 1A05 8D 9D 1A			sta PLAYER4.SCORE
  2068
  2069 				; optimize OK (main.pas), line = 122
  2070
  2071 1A08 A9 00			lda #$00
  2072 1A0A 8D 7E 1A			sta GAMEOVER
  2073
  2074 				; --- RepeatUntilProlog
  2075 1A0D			l_08C5
  2076
  2077 				; optimize FAIL ('MAINLOOP', main.pas), line = 124
  2078
  2079 1A0D 20 4F 19			jsr MAINLOOP
  2080
  2081 				; optimize OK (main.pas), line = 125
  2082
  2083 1A10 AD 85 1A			lda PLAYER1.SCORE
  2084 1A13 C9 39			cmp #$39
  2085 1A15 D0 05			jne l_08D8
  2086 1A17 A9 01			lda #$01
  2087 1A19 8D 7E 1A			sta GAMEOVER
  2088 1A1C			l_08D8
  2089
  2090 				; optimize OK (main.pas), line = 126
  2091
  2092 1A1C AD 8D 1A			lda PLAYER2.SCORE
  2093 1A1F C9 39			cmp #$39
  2094 1A21 D0 05			jne l_08F1
  2095 1A23 A9 01			lda #$01
  2096 1A25 8D 7E 1A			sta GAMEOVER
  2097 1A28			l_08F1
  2098
  2099 				; optimize OK (main.pas), line = 127
  2100
  2101 1A28 AD 95 1A			lda PLAYER3.SCORE
  2102 1A2B C9 39			cmp #$39
  2103 1A2D D0 05			jne l_090A
  2104 1A2F A9 01			lda #$01
  2105 1A31 8D 7E 1A			sta GAMEOVER
  2106 1A34			l_090A
  2107
  2108 				; optimize OK (main.pas), line = 128
  2109
  2110 1A34 AD 9D 1A			lda PLAYER4.SCORE
  2111 1A37 C9 39			cmp #$39
  2112 1A39 D0 05			jne l_0923
  2113 1A3B A9 01			lda #$01
  2114 1A3D 8D 7E 1A			sta GAMEOVER
  2115 1A40			l_0923
  2116
  2117 				; optimize OK (main.pas), line = 129
  2118
  2119 1A40 AD 7E 1A			lda GAMEOVER
  2120 1A43 F0 C8			jeq l_08C5
  2121
  2122 				; optimize FAIL ('SHOWSCORE', main.pas), line = 130
  2123
  2124 1A45 20 9C 11			jsr SHOWSCORE
  2125
  2126 				; optimize OK (main.pas), line = 132
  2127
  2128 1A48 A9 C8			lda #$C8
  2129 1A4A 8D 78 1A			sta SYSTEM.PAUSE_006B.N
  2130 1A4D A9 00			lda #$00
  2131 1A4F 8D 79 1A			sta SYSTEM.PAUSE_006B.N+1
  2132 1A52 20 23 11			jsr SYSTEM.PAUSE_006B
  2133
  2134 				; optimize OK (main.pas), line = 133
  2135
  2136 1A55 4C FA 19			jmp l_08B0
  2137
  2138 				; ------------------------------------------------------------
  2139
  2140 = 0800			ATTRIBUTE_ADDR	= $0800
  2141 = 0C00			SCREEN_ADDR	= $0C00
  2142 = 0020			EMPTY	= $20
  2143 = 00A0			WALL	= $A0
  2144 = 0041			WALL_COLOUR	= $41
  2145 = 0030			ZERO	= $30
  2146 = 0056			OBSTACLE	= $56
  2147 = 0035			OBST_COLOUR	= $35
  2148 = 0051			PLY_HEAD	= $51
  2149 = 0057			PLY_CRASH	= $57
  2150 = 002A			PLY_CRASH_1	= $2A
  2151 = 0042			PLY_TAIL_UD	= $42
  2152 = 0040			PLY_TAIL_LR	= $40
  2153 = 007D			PLY_TAIL_RD	= $7D
  2154 = 006E			PLY_TAIL_RU	= $6E
  2155 = 006D			PLY_TAIL_LD	= $6D
  2156 = 0070			PLY_TAIL_LU	= $70
  2157 = 005F			PLY1_COLOUR	= $5F
  2158 = 005D			PLY2_COLOUR	= $5D
  2159 = 0071			PLY3_COLOUR	= $71
  2160 = 0055			PLY4_COLOUR	= $55
  2161 = 0000			PLY_CTRL	= $00
  2162 = 0001			AI_STRAIGHT	= $01
  2163 = 0002			AI_MIRROR	= $02
  2164 = 0003			AI_RANDOM	= $03
  2165 = 0004			AI_BULLY	= $04
  2166 = 0007			AI_MAD	= $07
  2167 = 0001			JOY_UP	= $01
  2168 = 0002			JOY_DOWN	= $02
  2169 = 0004			JOY_LEFT	= $04
  2170 = 0008			JOY_RIGHT	= $08
  2171 = 0040			JOY_FIRE	= $40
  2172 = 0002			JOY_SELECT_1	= $02
  2173 = 0004			JOY_SELECT_2	= $04
  2174 = 100E			adr.MUL40	= CODEORIGIN+$0000
  2175 1A58			.var MUL40	= adr.MUL40 .word
  2176 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  2177 1A58			.var DIRECTION	= adr.DIRECTION .word
  2178 = FD30			KEY_PIO	= $FD30
  2179 = FF08			JOY	= $FF08
  2180 = FF15			BORDERCOLOR	= $FF15
  2181 = FF19			BGCOLOR	= $FF19
  2182 = 0058			T0B	= $58
  2183 = 0059			NEWDIR	= $59
  2184 = 005A			AVAILDIR	= $5A
  2185 = 005B			T0W	= $5B
  2186 = 005D			adr.PLY	= $5D
  2187 1A58			.var PLY	= adr.PLY .word
  2188 = 1A6C			PLY.X	= DATAORIGIN+$0000
  2189 = 1A6D			PLY.Y	= DATAORIGIN+$0001
  2190 = 1A6E			PLY.HEAD	= DATAORIGIN+$0002
  2191 = 1A6F			PLY.COLOUR	= DATAORIGIN+$0003
  2192 = 1A70			PLY.DIR	= DATAORIGIN+$0004
  2193 = 1A71			PLY.BRAIN	= DATAORIGIN+$0005
  2194 = 1A72			PLY.SCORE	= DATAORIGIN+$0006
  2195 = 1A73			PLY.ISDEAD	= DATAORIGIN+$0007
  2196 = 1A7C			ALIVE	= DATAORIGIN+$0010
  2197 = 1A7D			SPEED	= DATAORIGIN+$0011
  2198 = 1A7E			GAMEOVER	= DATAORIGIN+$0012
  2199 = 1A7F			adr.PLAYER1	= [DATAORIGIN+$0013] .array [6]
  2200 1A58			.var PLAYER1	= adr.PLAYER1 .word
  2201 = 1A7F			PLAYER1.X	= DATAORIGIN+$0013
  2202 = 1A80			PLAYER1.Y	= DATAORIGIN+$0014
  2203 = 1A81			PLAYER1.HEAD	= DATAORIGIN+$0015
  2204 = 1A82			PLAYER1.COLOUR	= DATAORIGIN+$0016
  2205 = 1A83			PLAYER1.DIR	= DATAORIGIN+$0017
  2206 = 1A84			PLAYER1.BRAIN	= DATAORIGIN+$0018
  2207 = 1A85			PLAYER1.SCORE	= DATAORIGIN+$0019
  2208 = 1A86			PLAYER1.ISDEAD	= DATAORIGIN+$001A
  2209 = 1A87			adr.PLAYER2	= [DATAORIGIN+$001B] .array [6]
  2210 1A58			.var PLAYER2	= adr.PLAYER2 .word
  2211 = 1A87			PLAYER2.X	= DATAORIGIN+$001B
  2212 = 1A88			PLAYER2.Y	= DATAORIGIN+$001C
  2213 = 1A89			PLAYER2.HEAD	= DATAORIGIN+$001D
  2214 = 1A8A			PLAYER2.COLOUR	= DATAORIGIN+$001E
  2215 = 1A8B			PLAYER2.DIR	= DATAORIGIN+$001F
  2216 = 1A8C			PLAYER2.BRAIN	= DATAORIGIN+$0020
  2217 = 1A8D			PLAYER2.SCORE	= DATAORIGIN+$0021
  2218 = 1A8E			PLAYER2.ISDEAD	= DATAORIGIN+$0022
  2219 = 1A8F			adr.PLAYER3	= [DATAORIGIN+$0023] .array [6]
  2220 1A58			.var PLAYER3	= adr.PLAYER3 .word
  2221 = 1A8F			PLAYER3.X	= DATAORIGIN+$0023
  2222 = 1A90			PLAYER3.Y	= DATAORIGIN+$0024
  2223 = 1A91			PLAYER3.HEAD	= DATAORIGIN+$0025
  2224 = 1A92			PLAYER3.COLOUR	= DATAORIGIN+$0026
  2225 = 1A93			PLAYER3.DIR	= DATAORIGIN+$0027
  2226 = 1A94			PLAYER3.BRAIN	= DATAORIGIN+$0028
  2227 = 1A95			PLAYER3.SCORE	= DATAORIGIN+$0029
  2228 = 1A96			PLAYER3.ISDEAD	= DATAORIGIN+$002A
  2229 = 1A97			adr.PLAYER4	= [DATAORIGIN+$002B] .array [6]
  2230 1A58			.var PLAYER4	= adr.PLAYER4 .word
  2231 = 1A97			PLAYER4.X	= DATAORIGIN+$002B
  2232 = 1A98			PLAYER4.Y	= DATAORIGIN+$002C
  2233 = 1A99			PLAYER4.HEAD	= DATAORIGIN+$002D
  2234 = 1A9A			PLAYER4.COLOUR	= DATAORIGIN+$002E
  2235 = 1A9B			PLAYER4.DIR	= DATAORIGIN+$002F
  2236 = 1A9C			PLAYER4.BRAIN	= DATAORIGIN+$0030
  2237 = 1A9D			PLAYER4.SCORE	= DATAORIGIN+$0031
  2238 = 1A9E			PLAYER4.ISDEAD	= DATAORIGIN+$0032
  2239 1A58			@exit
  2240
  2241 1A58 A2 00		@halt	ldx #$00
  2242 1A5A 9A				txs
  2243
  2244 1A5B 60				rts
  2245
  2246 				; ------------------------------------------------------------
  2247
  2248 				; ------------------------------------------------------------
  2249
  2250 1A5C			.local	@DEFINES
  2251 1A5C			C4P
  2252 				.endl
  2253
  2254 1A5C			.local	@RESOURCE
  2255 				.endl
  2256
  2257 = 1A5C 0E 10		MUL40
  2257 = 1A5E 40 10		DIRECTION
  2257 = 1A60 5D 00		PLY
  2257 = 1A62 7F 1A		PLAYER1
  2257 = 1A64 87 1A		PLAYER2
  2257 = 1A66 8F 1A		PLAYER3
  2257 = 1A68 97 1A		PLAYER4
  2257 				.endl							; MAIN
  2258
  2259 				; ------------------------------------------------------------
  2260 				; ------------------------------------------------------------
  2261
  2262 				.macro	UNITINITIALIZATION
  2263 				
  2264 					.ifdef MAIN.SYSTEM.@UnitInit
  2265 					jsr MAIN.SYSTEM.@UnitInit
  2266 					eif
  2267 				.endm
  2268
  2269 				; ------------------------------------------------------------
  2270
  2271 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2272 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2272 				SYSTEM: $10D5..$1170
  2273 					eif
  2274
  2275 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2275 				CODE: $100E..$1A5B
  2276
  2277 				; ------------------------------------------------------------
  2278
  2279 1A6A				.align $04
  2280
  2281 1A6C			DATAORIGIN
  2282 1A6C 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  2283
  2284 = 0006			VARINITSIZE	= *-DATAORIGIN
  2285 = 004B			VARDATASIZE	= 75
  2286
  2287 = 1AB7			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2288
  2289 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2289 				DATA: $1A6C..$1AB7
  2290
  2291 				; ------------------------------------------------------------
  2292
  2293 				.macro	STATICDATA
  2294 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  2295 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  2296 				.by  $C0 $03 $01 $02 $04 $08
  2297 				.endm
  2298
  2299 					end
