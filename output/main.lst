mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E FE 24			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0056			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 251A			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 AA			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D 70 24 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 70 85 02 A9 25 + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C 8D 24			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 1F 25		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 1F 25 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 251F			RESULT	= DATAORIGIN+$000B
   182
   183 = 251F			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 035  ---------------------
   304
   305
   306 1123 AD 20 25		loop  lda n
   307 1126 0D 21 25		  ora n+1
   308 1129 F0 14		  beq stop
   309
   310 112B A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   311
   312 1131 AD 20 25 D0 03 CE +   dew n
   313
   314 113C 4C 23 11		  jmp loop
   315 113F			stop
   316
   317
   318 				; ------------------------------------------------------------
   319
   320 = 2520			N	= DATAORIGIN+$000C
   321
   322 = 2520			@VarData	= N
   323 = 0002			@VarDataSize	= 2
   324
   325 113F			@exit
   326 					.ifdef @new
   327 					lda <@VarData
   328 					sta :ztmp
   329 					lda >@VarData
   330 					ldy #@VarDataSize-1
   331 					jmp @FreeMem
   332 					els
   333 113F 60				rts						; ret
   334 					eif
   335 				.endl
   336
   337 1140			.local	RANDOM_006C					; FUNCTION | ASSEMBLER | OVERLOAD
   338 1140 8D 22 25			sta RANGE
   339
   340 				; ---------------------  ASM Block 039  ---------------------
   341
   342
   343 1143 AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   344 1146 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   345 1149 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   346 114C 6D 1E FF		  adc ted_hcount    //Horizontal counter
   347 114F 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   348 1152 4D 1E FF		  eor ted_hcount    //Horizontal counter
   349 1155 A8			  tay
   350
   351 1156 AD 22 25		  lda range
   352 1159 F0 08		  beq stop
   353
   354 115B 85 0C		  sta ecx
   355 115D 84 04		  sty eax
   356
   357 115F 20 A3 10		  jsr imulCL
   358 1162 A8			  tay
   359
   360 1163 8C 23 25		stop  sty Result
   361
   362 1166			@exit
   363
   364 				; ------------------------------------------------------------
   365
   366 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   367 				; as Pointer
   368
   369 1166 E8				inx
   370 1167 AD 23 25 95 18		mva RESULT :STACKORIGIN,x
   371
   372 					.ifdef @new
   373 					lda <@VarData
   374 					sta :ztmp
   375 					lda >@VarData
   376 					ldy #@VarDataSize-1
   377 					jmp @FreeMem
   378 					eif
   379
   380 				; ------------------------------------------------------------
   381
   382 = 2522			RANGE	= DATAORIGIN+$000E
   383 = 2523			RESULT	= DATAORIGIN+$000F
   384
   385 = 2522			@VarData	= RANGE
   386 = 0002			@VarDataSize	= 2
   387
   388 116C 60				rts						; ret
   389 				.endl
   390
   391 				; ------------------------------------------------------------
   392
   393 = 0101			__PORTB_BANKS	= $0101
   394 = 0648			M_PI_2	= $0648
   395 = 0192			D_PI_2	= $0192
   396 = 0004			D_PI_180	= $04
   397 = 0000			MGTIA	= $00
   398 = 0080			MVBXE	= $80
   399 = 0000			VBXE_XDLADR	= $00
   400 = 0100			VBXE_BCBADR	= $0100
   401 = 1000			VBXE_MAPADR	= $1000
   402 = 5000			VBXE_OVRADR	= $5000
   403 = B000			VBXE_WINDOW	= $B000
   404 = 0000			IDLI	= $00
   405 = 0001			IVBL	= $01
   406 = 00FE			CH_DELCHR	= $FE
   407 = 009B			CH_ENTER	= $9B
   408 = 001B			CH_ESC	= $1B
   409 = 001C			CH_CURS_UP	= $1C
   410 = 001D			CH_CURS_DOWN	= $1D
   411 = 001E			CH_CURS_LEFT	= $1E
   412 = 001F			CH_CURS_RIGHT	= $1F
   413 = 007F			CH_TAB	= $7F
   414 = 009B			CH_EOL	= $9B
   415 = 007D			CH_CLR	= $7D
   416 = 00FD			CH_BELL	= $FD
   417 = 007E			CH_DEL	= $7E
   418 = 009C			CH_DELLINE	= $9C
   419 = 009D			CH_INSLINE	= $9D
   420 = 0000			COLOR_BLACK	= $00
   421 = 000E			COLOR_WHITE	= $0E
   422 = 0032			COLOR_RED	= $32
   423 = 0096			COLOR_CYAN	= $96
   424 = 0068			COLOR_VIOLET	= $68
   425 = 00C4			COLOR_GREEN	= $C4
   426 = 0074			COLOR_BLUE	= $74
   427 = 00EE			COLOR_YELLOW	= $EE
   428 = 0028			COLOR_ORANGE	= $28
   429 = 00E4			COLOR_BROWN	= $E4
   430 = 003C			COLOR_LIGHTRED	= $3C
   431 = 0004			COLOR_GRAY1	= $04
   432 = 0006			COLOR_GRAY2	= $06
   433 = 000A			COLOR_GRAY3	= $0A
   434 = 00CC			COLOR_LIGHTGREEN	= $CC
   435 = 007C			COLOR_LIGHTBLUE	= $7C
   436 = 0004			FMOPENREAD	= $04
   437 = 0008			FMOPENWRITE	= $08
   438 = 0009			FMOPENAPPEND	= $09
   439 = 000C			FMOPENREADWRITE	= $0C
   440 = 2514			SCREENWIDTH	= DATAORIGIN+$0000
   441 = 2516			SCREENHEIGHT	= DATAORIGIN+$0002
   442 = 2518			DATESEPARATOR	= DATAORIGIN+$0004
   443 = D014			TVSYSTEM	= $D014
   444 = D20A			RND	= $D20A
   445 = 02C0			adr.PALETTE	= $02C0
   446 116D			.var PALETTE	= adr.PALETTE .word
   447 = D012			adr.HPALETTE	= $D012
   448 116D			.var HPALETTE	= adr.HPALETTE .word
   449 = 2519			FILEMODE	= DATAORIGIN+$0005
   450 = 251A			GRAPHMODE	= DATAORIGIN+$0006
   451 = 251B			IORESULT	= DATAORIGIN+$0007
   452 = 251C			EOLN	= DATAORIGIN+$0008
   453 = 251D			RNDSEED	= DATAORIGIN+$0009
   454
   455 = 116D C0 02		PALETTE
   455 = 116F 12 D0		HPALETTE
   455 				.endl							; UNIT SYSTEM
   456
   457 1171			.local	PUTCHAR						; PROCEDURE
   458
   459 				; optimize OK (tools.inc), line = 5
   460
   461 1171 AD 57 25			lda Y
   462 1174 0A				asl @
   463 1175 A8				tay
   464 1176 B9 0E 10			lda adr.MUL40,y
   465 1179 18 6D 56 25			add X
   466 117D 85 5D			sta T0W
   467 117F B9 0F 10			lda adr.MUL40+1,y
   468 1182 69 08			adc #$08
   469 1184 85 5E			sta T0W+1
   470
   471 				; optimize OK (tools.inc), line = 6
   472
   473 1186 85 11			sta :bp+1
   474 1188 A4 5D			ldy T0W
   475 118A AD 59 25			lda C
   476 118D 91 10			sta (:bp),y
   477 118F A5 5E			lda T0W+1
   478 1191 18 69 04			add #$04
   479 1194 85 11			sta :bp+1
   480 1196 AD 58 25			lda V
   481 1199 91 10			sta (:bp),y
   482
   483 				; ------------------------------------------------------------
   484
   485 = 2556			X	= DATAORIGIN+$0042
   486 = 2557			Y	= DATAORIGIN+$0043
   487 = 2558			V	= DATAORIGIN+$0044
   488 = 2559			C	= DATAORIGIN+$0045
   489
   490 = 2556			@VarData	= X
   491 = 0004			@VarDataSize	= 4
   492
   493 119B			@exit
   494 					.ifdef @new
   495 					lda <@VarData
   496 					sta :ztmp
   497 					lda >@VarData
   498 					ldy #@VarDataSize-1
   499 					jmp @FreeMem
   500 					els
   501 119B 60				rts						; ret
   502 					eif
   503 				.endl
   504
   505 119C			.local	SHOWSCORE					; PROCEDURE
   506
   507 				; optimize OK (tools.inc), line = 13
   508
   509 119C AD 29 25			lda PLAYER1.COLOUR
   510 119F 8D 59 25			sta PUTCHAR.C
   511 11A2 AD 2C 25			lda PLAYER1.SCORE
   512 11A5 8D 58 25			sta PUTCHAR.V
   513 11A8 A9 00			lda #$00
   514 11AA 8D 57 25			sta PUTCHAR.Y
   515 11AD A9 1E			lda #$1E
   516 11AF 8D 56 25			sta PUTCHAR.X
   517 11B2 20 71 11			jsr PUTCHAR
   518
   519 				; optimize OK (tools.inc), line = 14
   520
   521 11B5 AD 31 25			lda PLAYER2.COLOUR
   522 11B8 8D 59 25			sta PUTCHAR.C
   523 11BB AD 34 25			lda PLAYER2.SCORE
   524 11BE 8D 58 25			sta PUTCHAR.V
   525 11C1 A9 00			lda #$00
   526 11C3 8D 57 25			sta PUTCHAR.Y
   527 11C6 A9 20			lda #$20
   528 11C8 8D 56 25			sta PUTCHAR.X
   529 11CB 20 71 11			jsr PUTCHAR
   530
   531 				; optimize OK (tools.inc), line = 15
   532
   533 11CE AD 39 25			lda PLAYER3.COLOUR
   534 11D1 8D 59 25			sta PUTCHAR.C
   535 11D4 AD 3C 25			lda PLAYER3.SCORE
   536 11D7 8D 58 25			sta PUTCHAR.V
   537 11DA A9 00			lda #$00
   538 11DC 8D 57 25			sta PUTCHAR.Y
   539 11DF A9 22			lda #$22
   540 11E1 8D 56 25			sta PUTCHAR.X
   541 11E4 20 71 11			jsr PUTCHAR
   542
   543 				; optimize OK (tools.inc), line = 16
   544
   545 11E7 AD 41 25			lda PLAYER4.COLOUR
   546 11EA 8D 59 25			sta PUTCHAR.C
   547 11ED AD 44 25			lda PLAYER4.SCORE
   548 11F0 8D 58 25			sta PUTCHAR.V
   549 11F3 A9 00			lda #$00
   550 11F5 8D 57 25			sta PUTCHAR.Y
   551 11F8 A9 24			lda #$24
   552 11FA 8D 56 25			sta PUTCHAR.X
   553 11FD 20 71 11			jsr PUTCHAR
   554 1200			@exit
   555 					.ifdef @new
   556 					lda <@VarData
   557 					sta :ztmp
   558 					lda >@VarData
   559 					ldy #@VarDataSize-1
   560 					jmp @FreeMem
   561 					els
   562 1200 60				rts						; ret
   563 					eif
   564 				.endl
   565
   566 1201			.local	CHECKAVAILDIR					; PROCEDURE
   567
   568 				; optimize OK (tools.inc), line = 23
   569
   570 1201 A9 00			lda #$00
   571 1203 85 5C			sta AVAILDIR
   572
   573 				; optimize OK (tools.inc), line = 24
   574
   575 1205 AC 05 25 84 12 AC + 	mwy PLY :bp2
   576 120F A0 01			ldy #PLY.Y-DATAORIGIN
   577 1211 B1 12			lda (:bp2),y
   578 1213 0A				asl @
   579 1214 A8				tay
   580 1215 A9 00			lda #$00
   581 1217 18 79 0E 10			add adr.MUL40,y
   582 121B 85 21			sta :STACKORIGIN+9
   583 121D A9 0C			lda #$0C
   584 121F 79 0F 10			adc adr.MUL40+1,y
   585 1222 85 31			sta :STACKORIGIN+STACKWIDTH+9
   586 1224 A0 00			ldy #PLY.X-DATAORIGIN
   587 1226 A5 21			lda :STACKORIGIN+9
   588 1228 18 71 12			add (:bp2),y
   589 122B 85 5D			sta T0W
   590 122D A5 31			lda :STACKORIGIN+STACKWIDTH+9
   591 122F 69 00			adc #$00
   592 1231 85 5E			sta T0W+1
   593
   594 				; optimize OK (tools.inc), line = 26
   595
   596 1233 A5 5D			lda T0W
   597 1235 38 E9 28			sub #$28
   598 1238 85 21			sta :STACKORIGIN+9
   599 123A A5 5E			lda T0W+1
   600 123C E9 00			sbc #$00
   601 123E 85 11			sta :bp+1
   602 1240 A4 21			ldy :STACKORIGIN+9
   603 1242 B1 10			lda (:bp),y
   604 1244 C9 20			cmp #$20
   605 1246 D0 06			jne l_00EE
   606 1248 A5 5C			lda AVAILDIR
   607 124A 09 01			ora #$01
   608 124C 85 5C			sta AVAILDIR
   609 124E			l_00EE
   610
   611 				; optimize OK (tools.inc), line = 27
   612
   613 124E A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   614 1256 A0 28			ldy #$28
   615 1258 B1 12			lda (:bp2),y
   616 125A C9 20			cmp #$20
   617 125C D0 06			jne l_0111
   618 125E A5 5C			lda AVAILDIR
   619 1260 09 02			ora #$02
   620 1262 85 5C			sta AVAILDIR
   621 1264			l_0111
   622
   623 				; optimize OK (tools.inc), line = 28
   624
   625 1264 A5 5D			lda T0W
   626 1266 38 E9 01			sub #$01
   627 1269 85 21			sta :STACKORIGIN+9
   628 126B A5 5E			lda T0W+1
   629 126D E9 00			sbc #$00
   630 126F 85 11			sta :bp+1
   631 1271 A4 21			ldy :STACKORIGIN+9
   632 1273 B1 10			lda (:bp),y
   633 1275 C9 20			cmp #$20
   634 1277 D0 06			jne l_0134
   635 1279 A5 5C			lda AVAILDIR
   636 127B 09 04			ora #$04
   637 127D 85 5C			sta AVAILDIR
   638 127F			l_0134
   639
   640 				; optimize OK (tools.inc), line = 29
   641
   642 127F A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   643 1287 A0 01			ldy #$01
   644 1289 B1 12			lda (:bp2),y
   645 128B C9 20			cmp #$20
   646 128D D0 06			jne l_0157
   647 128F A5 5C			lda AVAILDIR
   648 1291 09 08			ora #$08
   649 1293 85 5C			sta AVAILDIR
   650 1295			l_0157
   651 1295			@exit
   652 					.ifdef @new
   653 					lda <@VarData
   654 					sta :ztmp
   655 					lda >@VarData
   656 					ldy #@VarDataSize-1
   657 					jmp @FreeMem
   658 					els
   659 1295 60				rts						; ret
   660 					eif
   661 				.endl
   662
   663 1296			.local	ANIMATEOBSTACLES				; PROCEDURE
   664
   665 				; optimize FAIL (0, tools.inc), line = 38
   666
   667 1296 EE 5A 25			inc COUNTER
   668
   669 				; optimize OK (tools.inc), line = 39
   670
   671 1299 AD 5A 25			lda COUNTER
   672 129C 29 01			and #$01
   673 129E F0 08			jeq l_0182
   674 12A0 A9 56			lda #$56
   675 12A2 8D 5B 25			sta OBST
   676 12A5 4C AD 12			jmp l_0190
   677 12A8			l_0182
   678 12A8 A9 5B			lda #$5B
   679 12AA 8D 5B 25			sta OBST
   680 12AD			l_0190
   681
   682 				; optimize OK (tools.inc), line = 40
   683
   684 12AD A9 07			lda #$07
   685 12AF 85 59			sta I0B
   686
   687 12B1			l_019D
   688 				; --- ForToDoCondition
   689 12B1 A5 59			lda I0B
   690 12B3 0A				asl @
   691 12B4 A8				tay
   692 12B5 B9 46 25			lda adr.OBSTACLES,y
   693 12B8 85 21			sta :STACKORIGIN+9
   694 12BA B9 47 25			lda adr.OBSTACLES+1,y
   695 12BD 85 11			sta :bp+1
   696 12BF A4 21			ldy :STACKORIGIN+9
   697 12C1 AD 5B 25			lda OBST
   698 12C4 91 10			sta (:bp),y
   699 12C6 C6 59			dec I0B
   700 12C8 10 E7			jpl l_019D
   701 12CA			l_01AB
   702
   703 				; ------------------------------------------------------------
   704
   705 = 255A			COUNTER	= DATAORIGIN+$0046
   706 = 255B			OBST	= DATAORIGIN+$0047
   707 = 0000			@FORTMP_019A	= $00
   708
   709 = 255A			@VarData	= COUNTER
   710 = 0002			@VarDataSize	= 2
   711
   712 12CA			@exit
   713 					.ifdef @new
   714 					lda <@VarData
   715 					sta :ztmp
   716 					lda >@VarData
   717 					ldy #@VarDataSize-1
   718 					jmp @FreeMem
   719 					els
   720 12CA 60				rts						; ret
   721 					eif
   722 				.endl
   723
   724 12CB			.local	SAVEOBSTACLES					; PROCEDURE
   725
   726 				; optimize OK (tools.inc), line = 47
   727
   728 12CB A9 07			lda #$07
   729 12CD 85 59			sta I0B
   730
   731 12CF			l_01C6
   732 				; --- ForToDoCondition
   733
   734 				; optimize OK (tools.inc), line = 48
   735
   736 12CF A5 59			lda I0B
   737 12D1 0A				asl @
   738 12D2 A8				tay
   739 12D3 B9 47 25			lda adr.OBSTACLES+1,y
   740 12D6 C9 00			cmp #$00
   741 12D8 D0 05			bne @+
   742 12DA B9 46 25			lda adr.OBSTACLES,y
   743 12DD C9 FE			cmp #$FE
   744 12DF			@
   745 12DF F0 29			jeq l_01E8
   746
   747 				; optimize OK (tools.inc), line = 49
   748
   749 12E1 B9 46 25			lda adr.OBSTACLES,y
   750 12E4 85 21			sta :STACKORIGIN+9
   751 12E6 B9 47 25			lda adr.OBSTACLES+1,y
   752 12E9 85 11			sta :bp+1
   753 12EB A4 21			ldy :STACKORIGIN+9
   754 12ED A9 56			lda #$56
   755 12EF 91 10			sta (:bp),y
   756
   757 				; optimize OK (tools.inc), line = 50
   758
   759 12F1 A5 59			lda I0B
   760 12F3 0A				asl @
   761 12F4 A8				tay
   762 12F5 B9 46 25			lda adr.OBSTACLES,y
   763 12F8 38 E9 00			sub #$00
   764 12FB 85 21			sta :STACKORIGIN+9
   765 12FD B9 47 25			lda adr.OBSTACLES+1,y
   766 1300 E9 04			sbc #$04
   767 1302 85 11			sta :bp+1
   768 1304 A4 21			ldy :STACKORIGIN+9
   769 1306 A9 35			lda #$35
   770 1308 91 10			sta (:bp),y
   771 130A			l_01E8
   772
   773 				; --- ForToDoEpilog
   774 130A C6 59			dec I0B
   775 130C 10 C1			jpl l_01C6
   776 130E			l_01D4
   777
   778 				; ------------------------------------------------------------
   779
   780 = 0000			@FORTMP_01C3	= $00
   781 130E			@exit
   782 					.ifdef @new
   783 					lda <@VarData
   784 					sta :ztmp
   785 					lda >@VarData
   786 					ldy #@VarDataSize-1
   787 					jmp @FreeMem
   788 					els
   789 130E 60				rts						; ret
   790 					eif
   791 				.endl
   792
   793 130F			.local	DRAWTAIL					; PROCEDURE
   794
   795 				; optimize OK (tools.inc), line = 59
   796
   797 130F AC 05 25 84 12 AC + 	mwy PLY :bp2
   798 1319 A0 04			ldy #PLY.DIR-DATAORIGIN
   799 131B B1 12			lda (:bp2),y
   800 131D C5 5B			cmp NEWDIR
   801 131F D0 14			jne l_021A
   802
   803 				; optimize OK (tools.inc), line = 60
   804
   805 1321 A5 5B			lda NEWDIR
   806 1323 29 0C			and #$0C
   807 1325 F0 07			jeq l_0231
   808 1327 A9 40			lda #$40
   809 1329 85 58			sta T0B
   810 132B 4C 32 13			jmp l_023F
   811 132E			l_0231
   812 132E A9 42			lda #$42
   813 1330 85 58			sta T0B
   814 1332			l_023F
   815 1332 4C A5 13			jmp l_024C
   816 1335			l_021A
   817
   818 				; optimize OK (tools.inc), line = 62
   819
   820 1335 AC 05 25 84 12 AC + 	mwy PLY :bp2
   821 133F A0 04			ldy #PLY.DIR-DATAORIGIN
   822 1341 B1 12			lda (:bp2),y
   823 1343 29 0A			and #$0A
   824 1345 F0 0A			jeq l_0272
   825 1347 A5 5B			lda NEWDIR
   826 1349 29 05			and #$05
   827 134B F0 04			jeq l_0272
   828 134D A9 7D			lda #$7D
   829 134F 85 58			sta T0B
   830 1351			l_0272
   831
   832 				; optimize OK (tools.inc), line = 63
   833
   834 1351 AC 05 25 84 12 AC + 	mwy PLY :bp2
   835 135B A0 04			ldy #PLY.DIR-DATAORIGIN
   836 135D B1 12			lda (:bp2),y
   837 135F 29 09			and #$09
   838 1361 F0 0A			jeq l_029F
   839 1363 A5 5B			lda NEWDIR
   840 1365 29 06			and #$06
   841 1367 F0 04			jeq l_029F
   842 1369 A9 6E			lda #$6E
   843 136B 85 58			sta T0B
   844 136D			l_029F
   845
   846 				; optimize OK (tools.inc), line = 64
   847
   848 136D AC 05 25 84 12 AC + 	mwy PLY :bp2
   849 1377 A0 04			ldy #PLY.DIR-DATAORIGIN
   850 1379 B1 12			lda (:bp2),y
   851 137B 29 06			and #$06
   852 137D F0 0A			jeq l_02CC
   853 137F A5 5B			lda NEWDIR
   854 1381 29 09			and #$09
   855 1383 F0 04			jeq l_02CC
   856 1385 A9 6D			lda #$6D
   857 1387 85 58			sta T0B
   858 1389			l_02CC
   859
   860 				; optimize OK (tools.inc), line = 65
   861
   862 1389 AC 05 25 84 12 AC + 	mwy PLY :bp2
   863 1393 A0 04			ldy #PLY.DIR-DATAORIGIN
   864 1395 B1 12			lda (:bp2),y
   865 1397 29 05			and #$05
   866 1399 F0 0A			jeq l_02F9
   867 139B A5 5B			lda NEWDIR
   868 139D 29 0A			and #$0A
   869 139F F0 04			jeq l_02F9
   870 13A1 A9 70			lda #$70
   871 13A3 85 58			sta T0B
   872 13A5			l_02F9
   873 13A5			l_024C
   874
   875 				; optimize OK (tools.inc), line = 67
   876
   877 13A5 AC 05 25 84 12 AC + 	mwy PLY :bp2
   878 13AF A0 00			ldy #PLY.X-DATAORIGIN
   879 13B1 B1 12			lda (:bp2),y
   880 13B3 8D 56 25			sta PUTCHAR.X
   881 13B6 A0 01			ldy #PLY.Y-DATAORIGIN
   882 13B8 B1 12			lda (:bp2),y
   883 13BA 8D 57 25			sta PUTCHAR.Y
   884 13BD A0 03			ldy #PLY.COLOUR-DATAORIGIN
   885 13BF B1 12			lda (:bp2),y
   886 13C1 8D 59 25			sta PUTCHAR.C
   887 13C4 A5 58			lda T0B
   888 13C6 8D 58 25			sta PUTCHAR.V
   889 13C9 20 71 11			jsr PUTCHAR
   890 13CC			@exit
   891 					.ifdef @new
   892 					lda <@VarData
   893 					sta :ztmp
   894 					lda >@VarData
   895 					ldy #@VarDataSize-1
   896 					jmp @FreeMem
   897 					els
   898 13CC 60				rts						; ret
   899 					eif
   900 				.endl
   901
   902 13CD			.local	INITPLAYERS					; PROCEDURE
   903
   904 				; optimize OK (init.inc), line = 5
   905
   906 13CD AD 5C 25			lda P
   907 13D0 8D 05 25			sta PLY
   908 13D3 85 12			sta :bp2
   909 13D5 AD 5D 25			lda P+1
   910 13D8 8D 06 25			sta PLY+1
   911 13DB 85 13			sta :bp2+1
   912 				; optimize OK (init.inc), line = 6
   913 13DD A0 05			ldy #PLY.BRAIN-DATAORIGIN
   914 13DF AD 61 25			lda BRAIN
   915 13E2 91 12			sta (:bp2),y
   916 13E4 A0 00			ldy #PLY.X-DATAORIGIN
   917 13E6 AD 5E 25			lda X
   918 13E9 91 12			sta (:bp2),y
   919 13EB A0 01			ldy #PLY.Y-DATAORIGIN
   920 13ED AD 5F 25			lda Y
   921 13F0 91 12			sta (:bp2),y
   922 13F2 A0 04			ldy #PLY.DIR-DATAORIGIN
   923 13F4 AD 60 25			lda DIR
   924 13F7 91 12			sta (:bp2),y
   925
   926 				; optimize OK (init.inc), line = 7
   927
   928 13F9 A0 02			ldy #PLY.HEAD-DATAORIGIN
   929 13FB AD 62 25			lda HEAD
   930 13FE 91 12			sta (:bp2),y
   931 1400 A0 03			ldy #PLY.COLOUR-DATAORIGIN
   932 1402 AD 63 25			lda COLOUR
   933 1405 91 12			sta (:bp2),y
   934 1407 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
   935 1409 AD 64 25			lda ISALIVE
   936 140C 91 12			sta (:bp2),y
   937
   938 				; optimize OK (init.inc), line = 8
   939
   940 140E AD 64 25			lda ISALIVE
   941 1411 F0 1D			jeq l_034C
   942
   943 				; optimize FAIL (0, init.inc), line = 9
   944
   945 1413 E6 5A			inc ALIVE
   946 1415 AD 63 25			lda COLOUR
   947 1418 8D 59 25			sta PUTCHAR.C
   948 141B AD 62 25			lda HEAD
   949 141E 8D 58 25			sta PUTCHAR.V
   950 1421 AD 5F 25			lda Y
   951 1424 8D 57 25			sta PUTCHAR.Y
   952 1427 AD 5E 25			lda X
   953 142A 8D 56 25			sta PUTCHAR.X
   954 142D 20 71 11			jsr PUTCHAR
   955 1430			l_034C
   956
   957 				; ------------------------------------------------------------
   958
   959 = 255C			P	= DATAORIGIN+$0048
   960 = 255E			X	= DATAORIGIN+$004A
   961 = 255F			Y	= DATAORIGIN+$004B
   962 = 2560			DIR	= DATAORIGIN+$004C
   963 = 2561			BRAIN	= DATAORIGIN+$004D
   964 = 2562			HEAD	= DATAORIGIN+$004E
   965 = 2563			COLOUR	= DATAORIGIN+$004F
   966 = 2564			ISALIVE	= DATAORIGIN+$0050
   967
   968 = 255C			@VarData	= P
   969 = 0009			@VarDataSize	= 9
   970
   971 1430			@exit
   972 					.ifdef @new
   973 					lda <@VarData
   974 					sta :ztmp
   975 					lda >@VarData
   976 					ldy #@VarDataSize-1
   977 					jmp @FreeMem
   978 					els
   979 1430 60				rts						; ret
   980 					eif
   981 				.endl
   982
   983 1431			.local	INITPLAYFIELD					; PROCEDURE
   984
   985 				; optimize OK (init.inc), line = 17
   986
   987 1431 A9 1F			lda #$1F
   988 1433 8D 15 FF			sta BACKGROUND
   989 1436 A9 00			lda #$00
   990 1438 8D 19 FF			sta BOREDER
   991
   992 				; optimize OK (init.inc), line = 18
   993
   994 143B A9 20			lda #$20
   995 143D 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
   996 143F A9 C0			lda #$C0
   997 1441 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
   998 1443 A9 03			lda #$03
   999 1445 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
  1000 1447 A9 00			lda #$00
  1001 1449 85 08			sta SYSTEM.FILLCHAR_0056.A
  1002 144B A9 0C			lda #$0C
  1003 144D 85 09			sta SYSTEM.FILLCHAR_0056.A+1
  1004 144F 20 1F 11			jsr SYSTEM.FILLCHAR_0056
  1005
  1006 				; optimize OK (init.inc), line = 20
  1007
  1008 1452 A9 27			lda #$27
  1009 1454 85 58			sta T0B
  1010
  1011 1456			l_0379
  1012 				; --- ForToDoCondition
  1013
  1014 				; optimize OK (init.inc), line = 21
  1015
  1016 1456 A4 58			ldy T0B
  1017 1458 A9 A0			lda #$A0
  1018 145A 99 00 0C			sta $0C00,y
  1019
  1020 				; optimize OK (init.inc), line = 22
  1021
  1022 145D 99 C0 0F			sta $0FC0,y
  1023
  1024 				; optimize OK (init.inc), line = 23
  1025
  1026 1460 A9 41			lda #$41
  1027 1462 99 00 08			sta $0800,y
  1028
  1029 				; optimize OK (init.inc), line = 24
  1030
  1031 1465 99 C0 0B			sta $0BC0,y
  1032
  1033 				; --- ForToDoEpilog
  1034 1468 C6 58			dec T0B
  1035 146A 10 EA			jpl l_0379
  1036 146C			l_0387
  1037
  1038 				; optimize OK (init.inc), line = 27
  1039
  1040 146C A9 18			lda #$18
  1041 146E 85 58			sta T0B
  1042
  1043 1470			l_03B9
  1044 				; --- ForToDoCondition
  1045 1470 A5 58			lda T0B
  1046 1472 C9 01			cmp #$01
  1047 1474 90 3A			jcc l_03C7
  1048
  1049 				; optimize OK (init.inc), line = 28
  1050
  1051 1476 0A				asl @
  1052 1477 A8				tay
  1053 1478 A9 FF			lda #$FF
  1054 147A 18 79 0E 10			add adr.MUL40,y
  1055 147E 85 12			sta :bp2
  1056 1480 A9 0B			lda #$0B
  1057 1482 79 0F 10			adc adr.MUL40+1,y
  1058 1485 85 13			sta :bp2+1
  1059 1487 A0 00			ldy #$00
  1060 1489 A9 A0			lda #$A0
  1061 148B 91 12			sta (:bp2),y
  1062 148D C8				iny
  1063 148E 91 12			sta (:bp2),y
  1064
  1065 				; optimize OK (init.inc), line = 29
  1066
  1067 1490 A5 58			lda T0B
  1068 1492 0A				asl @
  1069 1493 A8				tay
  1070 1494 A9 FF			lda #$FF
  1071 1496 18 79 0E 10			add adr.MUL40,y
  1072 149A 85 12			sta :bp2
  1073 149C A9 07			lda #$07
  1074 149E 79 0F 10			adc adr.MUL40+1,y
  1075 14A1 85 13			sta :bp2+1
  1076 14A3 A0 00			ldy #$00
  1077 14A5 A9 41			lda #$41
  1078 14A7 91 12			sta (:bp2),y
  1079 14A9 C8				iny
  1080 14AA 91 12			sta (:bp2),y
  1081
  1082 				; --- ForToDoEpilog
  1083 14AC C6 58			dec T0B
  1084 14AE 10 C0			jpl l_03B9
  1085 14B0			l_03C7
  1086
  1087 				; ------------------------------------------------------------
  1088
  1089 = 0000			@FORTMP_0376	= $00
  1090 = 0001			@FORTMP_03B6	= $01
  1091 14B0			@exit
  1092 					.ifdef @new
  1093 					lda <@VarData
  1094 					sta :ztmp
  1095 					lda >@VarData
  1096 					ldy #@VarDataSize-1
  1097 					jmp @FreeMem
  1098 					els
  1099 14B0 60				rts						; ret
  1100 					eif
  1101 				.endl
  1102
  1103 14B1			.local	SETLEVEL01					; PROCEDURE
  1104
  1105 				; optimize OK (init.inc), line = 46
  1106
  1107 14B1 A9 01			lda #$01
  1108 14B3 8D 64 25			sta INITPLAYERS.ISALIVE
  1109 14B6 A9 5F			lda #$5F
  1110 14B8 8D 63 25			sta INITPLAYERS.COLOUR
  1111 14BB A9 51			lda #$51
  1112 14BD 8D 62 25			sta INITPLAYERS.HEAD
  1113 14C0 A9 00			lda #$00
  1114 14C2 8D 61 25			sta INITPLAYERS.BRAIN
  1115 14C5 A9 08			lda #$08
  1116 14C7 8D 60 25			sta INITPLAYERS.DIR
  1117 14CA A9 0C			lda #$0C
  1118 14CC 8D 5F 25			sta INITPLAYERS.Y
  1119 14CF A9 0A			lda #$0A
  1120 14D1 8D 5E 25			sta INITPLAYERS.X
  1121 14D4 AD 09 25			lda PLAYER1
  1122 14D7 8D 5C 25			sta INITPLAYERS.P
  1123 14DA AD 0A 25			lda PLAYER1+1
  1124 14DD 8D 5D 25			sta INITPLAYERS.P+1
  1125 14E0 20 CD 13			jsr INITPLAYERS
  1126
  1127 				; optimize OK (init.inc), line = 47
  1128
  1129 14E3 A9 01			lda #$01
  1130 14E5 8D 64 25			sta INITPLAYERS.ISALIVE
  1131 14E8 A9 5D			lda #$5D
  1132 14EA 8D 63 25			sta INITPLAYERS.COLOUR
  1133 14ED A9 51			lda #$51
  1134 14EF 8D 62 25			sta INITPLAYERS.HEAD
  1135 14F2 A9 01			lda #$01
  1136 14F4 8D 61 25			sta INITPLAYERS.BRAIN
  1137 14F7 A9 04			lda #$04
  1138 14F9 8D 60 25			sta INITPLAYERS.DIR
  1139 14FC A9 0C			lda #$0C
  1140 14FE 8D 5F 25			sta INITPLAYERS.Y
  1141 1501 A9 1E			lda #$1E
  1142 1503 8D 5E 25			sta INITPLAYERS.X
  1143 1506 AD 0B 25			lda PLAYER2
  1144 1509 8D 5C 25			sta INITPLAYERS.P
  1145 150C AD 0C 25			lda PLAYER2+1
  1146 150F 8D 5D 25			sta INITPLAYERS.P+1
  1147 1512 20 CD 13			jsr INITPLAYERS
  1148
  1149 				; optimize OK (init.inc), line = 48
  1150
  1151 1515 A9 00			lda #$00
  1152 1517 8D 64 25			sta INITPLAYERS.ISALIVE
  1153 151A A9 71			lda #$71
  1154 151C 8D 63 25			sta INITPLAYERS.COLOUR
  1155 151F A9 51			lda #$51
  1156 1521 8D 62 25			sta INITPLAYERS.HEAD
  1157 1524 A9 03			lda #$03
  1158 1526 8D 61 25			sta INITPLAYERS.BRAIN
  1159 1529 A9 02			lda #$02
  1160 152B 8D 60 25			sta INITPLAYERS.DIR
  1161 152E A9 04			lda #$04
  1162 1530 8D 5F 25			sta INITPLAYERS.Y
  1163 1533 A9 14			lda #$14
  1164 1535 8D 5E 25			sta INITPLAYERS.X
  1165 1538 AD 0D 25			lda PLAYER3
  1166 153B 8D 5C 25			sta INITPLAYERS.P
  1167 153E AD 0E 25			lda PLAYER3+1
  1168 1541 8D 5D 25			sta INITPLAYERS.P+1
  1169 1544 20 CD 13			jsr INITPLAYERS
  1170
  1171 				; optimize OK (init.inc), line = 49
  1172
  1173 1547 A9 00			lda #$00
  1174 1549 8D 64 25			sta INITPLAYERS.ISALIVE
  1175 154C A9 55			lda #$55
  1176 154E 8D 63 25			sta INITPLAYERS.COLOUR
  1177 1551 A9 51			lda #$51
  1178 1553 8D 62 25			sta INITPLAYERS.HEAD
  1179 1556 A9 02			lda #$02
  1180 1558 8D 61 25			sta INITPLAYERS.BRAIN
  1181 155B A9 01			lda #$01
  1182 155D 8D 60 25			sta INITPLAYERS.DIR
  1183 1560 A9 12			lda #$12
  1184 1562 8D 5F 25			sta INITPLAYERS.Y
  1185 1565 A9 14			lda #$14
  1186 1567 8D 5E 25			sta INITPLAYERS.X
  1187 156A AD 0F 25			lda PLAYER4
  1188 156D 8D 5C 25			sta INITPLAYERS.P
  1189 1570 AD 10 25			lda PLAYER4+1
  1190 1573 8D 5D 25			sta INITPLAYERS.P+1
  1191 1576 20 CD 13			jsr INITPLAYERS
  1192
  1193 				; optimize OK (init.inc), line = 51
  1194
  1195 1579 A9 FA			lda #$FA
  1196 157B 8D 46 25			sta adr.OBSTACLES+$00
  1197 157E A9 0C			lda #$0C
  1198 1580 8D 47 25			sta adr.OBSTACLES+1+$00
  1199
  1200 				; optimize OK (init.inc), line = 52
  1201
  1202 1583 A9 0E			lda #$0E
  1203 1585 8D 48 25			sta adr.OBSTACLES+$02
  1204 1588 A9 0D			lda #$0D
  1205 158A 8D 49 25			sta adr.OBSTACLES+1+$02
  1206
  1207 				; optimize OK (init.inc), line = 53
  1208
  1209 158D A9 DA			lda #$DA
  1210 158F 8D 4A 25			sta adr.OBSTACLES+$04
  1211 1592 A9 0E			lda #$0E
  1212 1594 8D 4B 25			sta adr.OBSTACLES+1+$04
  1213
  1214 				; optimize OK (init.inc), line = 54
  1215
  1216 1597 A9 EE			lda #$EE
  1217 1599 8D 4C 25			sta adr.OBSTACLES+$06
  1218 159C A9 0E			lda #$0E
  1219 159E 8D 4D 25			sta adr.OBSTACLES+1+$06
  1220
  1221 				; optimize OK (init.inc), line = 55
  1222
  1223 15A1 A9 E1			lda #$E1
  1224 15A3 8D 4E 25			sta adr.OBSTACLES+$08
  1225 15A6 A9 0D			lda #$0D
  1226 15A8 8D 4F 25			sta adr.OBSTACLES+1+$08
  1227
  1228 				; optimize OK (init.inc), line = 56
  1229
  1230 15AB A9 64			lda #$64
  1231 15AD 8D 50 25			sta adr.OBSTACLES+$0A
  1232 15B0 A9 0C			lda #$0C
  1233 15B2 8D 51 25			sta adr.OBSTACLES+1+$0A
  1234
  1235 				; optimize OK (init.inc), line = 57
  1236
  1237 15B5 A9 84			lda #$84
  1238 15B7 8D 52 25			sta adr.OBSTACLES+$0C
  1239 15BA A9 0F			lda #$0F
  1240 15BC 8D 53 25			sta adr.OBSTACLES+1+$0C
  1241
  1242 				; optimize OK (init.inc), line = 58
  1243
  1244 15BF A9 FE			lda #$FE
  1245 15C1 8D 54 25			sta adr.OBSTACLES+$0E
  1246 15C4 A9 00			lda #$00
  1247 15C6 8D 55 25			sta adr.OBSTACLES+1+$0E
  1248
  1249 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 60
  1250
  1251 15C9 20 CB 12			jsr SAVEOBSTACLES
  1252 15CC			@exit
  1253 					.ifdef @new
  1254 					lda <@VarData
  1255 					sta :ztmp
  1256 					lda >@VarData
  1257 					ldy #@VarDataSize-1
  1258 					jmp @FreeMem
  1259 					els
  1260 15CC 60				rts						; ret
  1261 					eif
  1262 				.endl
  1263
  1264 15CD			.local	SETLEVEL02					; PROCEDURE
  1265
  1266 				; optimize OK (init.inc), line = 67
  1267
  1268 15CD A9 01			lda #$01
  1269 15CF 8D 64 25			sta INITPLAYERS.ISALIVE
  1270 15D2 A9 5F			lda #$5F
  1271 15D4 8D 63 25			sta INITPLAYERS.COLOUR
  1272 15D7 A9 51			lda #$51
  1273 15D9 8D 62 25			sta INITPLAYERS.HEAD
  1274 15DC A9 00			lda #$00
  1275 15DE 8D 61 25			sta INITPLAYERS.BRAIN
  1276 15E1 A9 08			lda #$08
  1277 15E3 8D 60 25			sta INITPLAYERS.DIR
  1278 15E6 A9 0C			lda #$0C
  1279 15E8 8D 5F 25			sta INITPLAYERS.Y
  1280 15EB A9 0A			lda #$0A
  1281 15ED 8D 5E 25			sta INITPLAYERS.X
  1282 15F0 AD 09 25			lda PLAYER1
  1283 15F3 8D 5C 25			sta INITPLAYERS.P
  1284 15F6 AD 0A 25			lda PLAYER1+1
  1285 15F9 8D 5D 25			sta INITPLAYERS.P+1
  1286 15FC 20 CD 13			jsr INITPLAYERS
  1287
  1288 				; optimize OK (init.inc), line = 68
  1289
  1290 15FF A9 01			lda #$01
  1291 1601 8D 64 25			sta INITPLAYERS.ISALIVE
  1292 1604 A9 5D			lda #$5D
  1293 1606 8D 63 25			sta INITPLAYERS.COLOUR
  1294 1609 A9 51			lda #$51
  1295 160B 8D 62 25			sta INITPLAYERS.HEAD
  1296 160E A9 03			lda #$03
  1297 1610 8D 61 25			sta INITPLAYERS.BRAIN
  1298 1613 A9 04			lda #$04
  1299 1615 8D 60 25			sta INITPLAYERS.DIR
  1300 1618 A9 0C			lda #$0C
  1301 161A 8D 5F 25			sta INITPLAYERS.Y
  1302 161D A9 1E			lda #$1E
  1303 161F 8D 5E 25			sta INITPLAYERS.X
  1304 1622 AD 0B 25			lda PLAYER2
  1305 1625 8D 5C 25			sta INITPLAYERS.P
  1306 1628 AD 0C 25			lda PLAYER2+1
  1307 162B 8D 5D 25			sta INITPLAYERS.P+1
  1308 162E 20 CD 13			jsr INITPLAYERS
  1309
  1310 				; optimize OK (init.inc), line = 69
  1311
  1312 1631 A9 00			lda #$00
  1313 1633 8D 64 25			sta INITPLAYERS.ISALIVE
  1314 1636 A9 71			lda #$71
  1315 1638 8D 63 25			sta INITPLAYERS.COLOUR
  1316 163B A9 51			lda #$51
  1317 163D 8D 62 25			sta INITPLAYERS.HEAD
  1318 1640 A9 03			lda #$03
  1319 1642 8D 61 25			sta INITPLAYERS.BRAIN
  1320 1645 A9 02			lda #$02
  1321 1647 8D 60 25			sta INITPLAYERS.DIR
  1322 164A A9 04			lda #$04
  1323 164C 8D 5F 25			sta INITPLAYERS.Y
  1324 164F A9 14			lda #$14
  1325 1651 8D 5E 25			sta INITPLAYERS.X
  1326 1654 AD 0D 25			lda PLAYER3
  1327 1657 8D 5C 25			sta INITPLAYERS.P
  1328 165A AD 0E 25			lda PLAYER3+1
  1329 165D 8D 5D 25			sta INITPLAYERS.P+1
  1330 1660 20 CD 13			jsr INITPLAYERS
  1331
  1332 				; optimize OK (init.inc), line = 70
  1333
  1334 1663 A9 00			lda #$00
  1335 1665 8D 64 25			sta INITPLAYERS.ISALIVE
  1336 1668 A9 55			lda #$55
  1337 166A 8D 63 25			sta INITPLAYERS.COLOUR
  1338 166D A9 51			lda #$51
  1339 166F 8D 62 25			sta INITPLAYERS.HEAD
  1340 1672 A9 02			lda #$02
  1341 1674 8D 61 25			sta INITPLAYERS.BRAIN
  1342 1677 A9 01			lda #$01
  1343 1679 8D 60 25			sta INITPLAYERS.DIR
  1344 167C A9 12			lda #$12
  1345 167E 8D 5F 25			sta INITPLAYERS.Y
  1346 1681 A9 14			lda #$14
  1347 1683 8D 5E 25			sta INITPLAYERS.X
  1348 1686 AD 0F 25			lda PLAYER4
  1349 1689 8D 5C 25			sta INITPLAYERS.P
  1350 168C AD 10 25			lda PLAYER4+1
  1351 168F 8D 5D 25			sta INITPLAYERS.P+1
  1352 1692 20 CD 13			jsr INITPLAYERS
  1353
  1354 				; optimize OK (init.inc), line = 72
  1355
  1356 1695 A9 FA			lda #$FA
  1357 1697 8D 46 25			sta adr.OBSTACLES+$00
  1358 169A A9 0C			lda #$0C
  1359 169C 8D 47 25			sta adr.OBSTACLES+1+$00
  1360
  1361 				; optimize OK (init.inc), line = 73
  1362
  1363 169F A9 0E			lda #$0E
  1364 16A1 8D 48 25			sta adr.OBSTACLES+$02
  1365 16A4 A9 0D			lda #$0D
  1366 16A6 8D 49 25			sta adr.OBSTACLES+1+$02
  1367
  1368 				; optimize OK (init.inc), line = 74
  1369
  1370 16A9 A9 DA			lda #$DA
  1371 16AB 8D 4A 25			sta adr.OBSTACLES+$04
  1372 16AE A9 0E			lda #$0E
  1373 16B0 8D 4B 25			sta adr.OBSTACLES+1+$04
  1374
  1375 				; optimize OK (init.inc), line = 75
  1376
  1377 16B3 A9 EE			lda #$EE
  1378 16B5 8D 4C 25			sta adr.OBSTACLES+$06
  1379 16B8 A9 0E			lda #$0E
  1380 16BA 8D 4D 25			sta adr.OBSTACLES+1+$06
  1381
  1382 				; optimize OK (init.inc), line = 76
  1383
  1384 16BD A9 E1			lda #$E1
  1385 16BF 8D 4E 25			sta adr.OBSTACLES+$08
  1386 16C2 A9 0D			lda #$0D
  1387 16C4 8D 4F 25			sta adr.OBSTACLES+1+$08
  1388
  1389 				; optimize OK (init.inc), line = 77
  1390
  1391 16C7 A9 64			lda #$64
  1392 16C9 8D 50 25			sta adr.OBSTACLES+$0A
  1393 16CC A9 0C			lda #$0C
  1394 16CE 8D 51 25			sta adr.OBSTACLES+1+$0A
  1395
  1396 				; optimize OK (init.inc), line = 78
  1397
  1398 16D1 A9 84			lda #$84
  1399 16D3 8D 52 25			sta adr.OBSTACLES+$0C
  1400 16D6 A9 0F			lda #$0F
  1401 16D8 8D 53 25			sta adr.OBSTACLES+1+$0C
  1402
  1403 				; optimize OK (init.inc), line = 79
  1404
  1405 16DB A9 FE			lda #$FE
  1406 16DD 8D 54 25			sta adr.OBSTACLES+$0E
  1407 16E0 A9 00			lda #$00
  1408 16E2 8D 55 25			sta adr.OBSTACLES+1+$0E
  1409
  1410 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 81
  1411
  1412 16E5 20 CB 12			jsr SAVEOBSTACLES
  1413 16E8			@exit
  1414 					.ifdef @new
  1415 					lda <@VarData
  1416 					sta :ztmp
  1417 					lda >@VarData
  1418 					ldy #@VarDataSize-1
  1419 					jmp @FreeMem
  1420 					els
  1421 16E8 60				rts						; ret
  1422 					eif
  1423 				.endl
  1424
  1425 16E9			.local	SETLEVEL03					; PROCEDURE
  1426
  1427 				; optimize OK (init.inc), line = 88
  1428
  1429 16E9 A9 01			lda #$01
  1430 16EB 8D 64 25			sta INITPLAYERS.ISALIVE
  1431 16EE A9 5F			lda #$5F
  1432 16F0 8D 63 25			sta INITPLAYERS.COLOUR
  1433 16F3 A9 51			lda #$51
  1434 16F5 8D 62 25			sta INITPLAYERS.HEAD
  1435 16F8 A9 00			lda #$00
  1436 16FA 8D 61 25			sta INITPLAYERS.BRAIN
  1437 16FD A9 08			lda #$08
  1438 16FF 8D 60 25			sta INITPLAYERS.DIR
  1439 1702 A9 0C			lda #$0C
  1440 1704 8D 5F 25			sta INITPLAYERS.Y
  1441 1707 A9 0A			lda #$0A
  1442 1709 8D 5E 25			sta INITPLAYERS.X
  1443 170C AD 09 25			lda PLAYER1
  1444 170F 8D 5C 25			sta INITPLAYERS.P
  1445 1712 AD 0A 25			lda PLAYER1+1
  1446 1715 8D 5D 25			sta INITPLAYERS.P+1
  1447 1718 20 CD 13			jsr INITPLAYERS
  1448
  1449 				; optimize OK (init.inc), line = 89
  1450
  1451 171B A9 01			lda #$01
  1452 171D 8D 64 25			sta INITPLAYERS.ISALIVE
  1453 1720 A9 5D			lda #$5D
  1454 1722 8D 63 25			sta INITPLAYERS.COLOUR
  1455 1725 A9 51			lda #$51
  1456 1727 8D 62 25			sta INITPLAYERS.HEAD
  1457 172A A9 02			lda #$02
  1458 172C 8D 61 25			sta INITPLAYERS.BRAIN
  1459 172F A9 04			lda #$04
  1460 1731 8D 60 25			sta INITPLAYERS.DIR
  1461 1734 A9 0C			lda #$0C
  1462 1736 8D 5F 25			sta INITPLAYERS.Y
  1463 1739 A9 1E			lda #$1E
  1464 173B 8D 5E 25			sta INITPLAYERS.X
  1465 173E AD 0B 25			lda PLAYER2
  1466 1741 8D 5C 25			sta INITPLAYERS.P
  1467 1744 AD 0C 25			lda PLAYER2+1
  1468 1747 8D 5D 25			sta INITPLAYERS.P+1
  1469 174A 20 CD 13			jsr INITPLAYERS
  1470
  1471 				; optimize OK (init.inc), line = 90
  1472
  1473 174D A9 00			lda #$00
  1474 174F 8D 64 25			sta INITPLAYERS.ISALIVE
  1475 1752 A9 71			lda #$71
  1476 1754 8D 63 25			sta INITPLAYERS.COLOUR
  1477 1757 A9 51			lda #$51
  1478 1759 8D 62 25			sta INITPLAYERS.HEAD
  1479 175C A9 03			lda #$03
  1480 175E 8D 61 25			sta INITPLAYERS.BRAIN
  1481 1761 A9 02			lda #$02
  1482 1763 8D 60 25			sta INITPLAYERS.DIR
  1483 1766 A9 04			lda #$04
  1484 1768 8D 5F 25			sta INITPLAYERS.Y
  1485 176B A9 14			lda #$14
  1486 176D 8D 5E 25			sta INITPLAYERS.X
  1487 1770 AD 0D 25			lda PLAYER3
  1488 1773 8D 5C 25			sta INITPLAYERS.P
  1489 1776 AD 0E 25			lda PLAYER3+1
  1490 1779 8D 5D 25			sta INITPLAYERS.P+1
  1491 177C 20 CD 13			jsr INITPLAYERS
  1492
  1493 				; optimize OK (init.inc), line = 91
  1494
  1495 177F A9 00			lda #$00
  1496 1781 8D 64 25			sta INITPLAYERS.ISALIVE
  1497 1784 A9 55			lda #$55
  1498 1786 8D 63 25			sta INITPLAYERS.COLOUR
  1499 1789 A9 51			lda #$51
  1500 178B 8D 62 25			sta INITPLAYERS.HEAD
  1501 178E A9 03			lda #$03
  1502 1790 8D 61 25			sta INITPLAYERS.BRAIN
  1503 1793 A9 01			lda #$01
  1504 1795 8D 60 25			sta INITPLAYERS.DIR
  1505 1798 A9 12			lda #$12
  1506 179A 8D 5F 25			sta INITPLAYERS.Y
  1507 179D A9 14			lda #$14
  1508 179F 8D 5E 25			sta INITPLAYERS.X
  1509 17A2 AD 0F 25			lda PLAYER4
  1510 17A5 8D 5C 25			sta INITPLAYERS.P
  1511 17A8 AD 10 25			lda PLAYER4+1
  1512 17AB 8D 5D 25			sta INITPLAYERS.P+1
  1513 17AE 20 CD 13			jsr INITPLAYERS
  1514
  1515 				; optimize OK (init.inc), line = 93
  1516
  1517 17B1 A9 FA			lda #$FA
  1518 17B3 8D 46 25			sta adr.OBSTACLES+$00
  1519 17B6 A9 0C			lda #$0C
  1520 17B8 8D 47 25			sta adr.OBSTACLES+1+$00
  1521
  1522 				; optimize OK (init.inc), line = 94
  1523
  1524 17BB A9 0E			lda #$0E
  1525 17BD 8D 48 25			sta adr.OBSTACLES+$02
  1526 17C0 A9 0D			lda #$0D
  1527 17C2 8D 49 25			sta adr.OBSTACLES+1+$02
  1528
  1529 				; optimize OK (init.inc), line = 95
  1530
  1531 17C5 A9 DA			lda #$DA
  1532 17C7 8D 4A 25			sta adr.OBSTACLES+$04
  1533 17CA A9 0E			lda #$0E
  1534 17CC 8D 4B 25			sta adr.OBSTACLES+1+$04
  1535
  1536 				; optimize OK (init.inc), line = 96
  1537
  1538 17CF A9 EE			lda #$EE
  1539 17D1 8D 4C 25			sta adr.OBSTACLES+$06
  1540 17D4 A9 0E			lda #$0E
  1541 17D6 8D 4D 25			sta adr.OBSTACLES+1+$06
  1542
  1543 				; optimize OK (init.inc), line = 97
  1544
  1545 17D9 A9 E1			lda #$E1
  1546 17DB 8D 4E 25			sta adr.OBSTACLES+$08
  1547 17DE A9 0D			lda #$0D
  1548 17E0 8D 4F 25			sta adr.OBSTACLES+1+$08
  1549
  1550 				; optimize OK (init.inc), line = 98
  1551
  1552 17E3 A9 64			lda #$64
  1553 17E5 8D 50 25			sta adr.OBSTACLES+$0A
  1554 17E8 A9 0C			lda #$0C
  1555 17EA 8D 51 25			sta adr.OBSTACLES+1+$0A
  1556
  1557 				; optimize OK (init.inc), line = 99
  1558
  1559 17ED A9 84			lda #$84
  1560 17EF 8D 52 25			sta adr.OBSTACLES+$0C
  1561 17F2 A9 0F			lda #$0F
  1562 17F4 8D 53 25			sta adr.OBSTACLES+1+$0C
  1563
  1564 				; optimize OK (init.inc), line = 100
  1565
  1566 17F7 A9 FE			lda #$FE
  1567 17F9 8D 54 25			sta adr.OBSTACLES+$0E
  1568 17FC A9 00			lda #$00
  1569 17FE 8D 55 25			sta adr.OBSTACLES+1+$0E
  1570
  1571 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 102
  1572
  1573 1801 20 CB 12			jsr SAVEOBSTACLES
  1574 1804			@exit
  1575 					.ifdef @new
  1576 					lda <@VarData
  1577 					sta :ztmp
  1578 					lda >@VarData
  1579 					ldy #@VarDataSize-1
  1580 					jmp @FreeMem
  1581 					els
  1582 1804 60				rts						; ret
  1583 					eif
  1584 				.endl
  1585
  1586 1805			.local	SETLEVEL04					; PROCEDURE
  1587
  1588 				; optimize OK (init.inc), line = 109
  1589
  1590 1805 A9 01			lda #$01
  1591 1807 8D 64 25			sta INITPLAYERS.ISALIVE
  1592 180A A9 5F			lda #$5F
  1593 180C 8D 63 25			sta INITPLAYERS.COLOUR
  1594 180F A9 51			lda #$51
  1595 1811 8D 62 25			sta INITPLAYERS.HEAD
  1596 1814 A9 00			lda #$00
  1597 1816 8D 61 25			sta INITPLAYERS.BRAIN
  1598 1819 A9 04			lda #$04
  1599 181B 8D 60 25			sta INITPLAYERS.DIR
  1600 181E A9 0C			lda #$0C
  1601 1820 8D 5F 25			sta INITPLAYERS.Y
  1602 1823 A9 12			lda #$12
  1603 1825 8D 5E 25			sta INITPLAYERS.X
  1604 1828 AD 09 25			lda PLAYER1
  1605 182B 8D 5C 25			sta INITPLAYERS.P
  1606 182E AD 0A 25			lda PLAYER1+1
  1607 1831 8D 5D 25			sta INITPLAYERS.P+1
  1608 1834 20 CD 13			jsr INITPLAYERS
  1609
  1610 				; optimize OK (init.inc), line = 110
  1611
  1612 1837 A9 01			lda #$01
  1613 1839 8D 64 25			sta INITPLAYERS.ISALIVE
  1614 183C A9 5D			lda #$5D
  1615 183E 8D 63 25			sta INITPLAYERS.COLOUR
  1616 1841 A9 51			lda #$51
  1617 1843 8D 62 25			sta INITPLAYERS.HEAD
  1618 1846 A9 04			lda #$04
  1619 1848 8D 61 25			sta INITPLAYERS.BRAIN
  1620 184B A9 08			lda #$08
  1621 184D 8D 60 25			sta INITPLAYERS.DIR
  1622 1850 A9 0C			lda #$0C
  1623 1852 8D 5F 25			sta INITPLAYERS.Y
  1624 1855 A9 16			lda #$16
  1625 1857 8D 5E 25			sta INITPLAYERS.X
  1626 185A AD 0B 25			lda PLAYER2
  1627 185D 8D 5C 25			sta INITPLAYERS.P
  1628 1860 AD 0C 25			lda PLAYER2+1
  1629 1863 8D 5D 25			sta INITPLAYERS.P+1
  1630 1866 20 CD 13			jsr INITPLAYERS
  1631
  1632 				; optimize OK (init.inc), line = 111
  1633
  1634 1869 A9 00			lda #$00
  1635 186B 8D 64 25			sta INITPLAYERS.ISALIVE
  1636 186E A9 71			lda #$71
  1637 1870 8D 63 25			sta INITPLAYERS.COLOUR
  1638 1873 A9 51			lda #$51
  1639 1875 8D 62 25			sta INITPLAYERS.HEAD
  1640 1878 A9 03			lda #$03
  1641 187A 8D 61 25			sta INITPLAYERS.BRAIN
  1642 187D A9 02			lda #$02
  1643 187F 8D 60 25			sta INITPLAYERS.DIR
  1644 1882 A9 04			lda #$04
  1645 1884 8D 5F 25			sta INITPLAYERS.Y
  1646 1887 A9 14			lda #$14
  1647 1889 8D 5E 25			sta INITPLAYERS.X
  1648 188C AD 0D 25			lda PLAYER3
  1649 188F 8D 5C 25			sta INITPLAYERS.P
  1650 1892 AD 0E 25			lda PLAYER3+1
  1651 1895 8D 5D 25			sta INITPLAYERS.P+1
  1652 1898 20 CD 13			jsr INITPLAYERS
  1653
  1654 				; optimize OK (init.inc), line = 112
  1655
  1656 189B A9 00			lda #$00
  1657 189D 8D 64 25			sta INITPLAYERS.ISALIVE
  1658 18A0 A9 55			lda #$55
  1659 18A2 8D 63 25			sta INITPLAYERS.COLOUR
  1660 18A5 A9 51			lda #$51
  1661 18A7 8D 62 25			sta INITPLAYERS.HEAD
  1662 18AA A9 03			lda #$03
  1663 18AC 8D 61 25			sta INITPLAYERS.BRAIN
  1664 18AF A9 01			lda #$01
  1665 18B1 8D 60 25			sta INITPLAYERS.DIR
  1666 18B4 A9 12			lda #$12
  1667 18B6 8D 5F 25			sta INITPLAYERS.Y
  1668 18B9 A9 14			lda #$14
  1669 18BB 8D 5E 25			sta INITPLAYERS.X
  1670 18BE AD 0F 25			lda PLAYER4
  1671 18C1 8D 5C 25			sta INITPLAYERS.P
  1672 18C4 AD 10 25			lda PLAYER4+1
  1673 18C7 8D 5D 25			sta INITPLAYERS.P+1
  1674 18CA 20 CD 13			jsr INITPLAYERS
  1675
  1676 				; optimize OK (init.inc), line = 114
  1677
  1678 18CD A9 FA			lda #$FA
  1679 18CF 8D 46 25			sta adr.OBSTACLES+$00
  1680 18D2 A9 0C			lda #$0C
  1681 18D4 8D 47 25			sta adr.OBSTACLES+1+$00
  1682
  1683 				; optimize OK (init.inc), line = 115
  1684
  1685 18D7 A9 0E			lda #$0E
  1686 18D9 8D 48 25			sta adr.OBSTACLES+$02
  1687 18DC A9 0D			lda #$0D
  1688 18DE 8D 49 25			sta adr.OBSTACLES+1+$02
  1689
  1690 				; optimize OK (init.inc), line = 116
  1691
  1692 18E1 A9 DA			lda #$DA
  1693 18E3 8D 4A 25			sta adr.OBSTACLES+$04
  1694 18E6 A9 0E			lda #$0E
  1695 18E8 8D 4B 25			sta adr.OBSTACLES+1+$04
  1696
  1697 				; optimize OK (init.inc), line = 117
  1698
  1699 18EB A9 EE			lda #$EE
  1700 18ED 8D 4C 25			sta adr.OBSTACLES+$06
  1701 18F0 A9 0E			lda #$0E
  1702 18F2 8D 4D 25			sta adr.OBSTACLES+1+$06
  1703
  1704 				; optimize OK (init.inc), line = 118
  1705
  1706 18F5 A9 E1			lda #$E1
  1707 18F7 8D 4E 25			sta adr.OBSTACLES+$08
  1708 18FA A9 0D			lda #$0D
  1709 18FC 8D 4F 25			sta adr.OBSTACLES+1+$08
  1710
  1711 				; optimize OK (init.inc), line = 119
  1712
  1713 18FF A9 64			lda #$64
  1714 1901 8D 50 25			sta adr.OBSTACLES+$0A
  1715 1904 A9 0C			lda #$0C
  1716 1906 8D 51 25			sta adr.OBSTACLES+1+$0A
  1717
  1718 				; optimize OK (init.inc), line = 120
  1719
  1720 1909 A9 84			lda #$84
  1721 190B 8D 52 25			sta adr.OBSTACLES+$0C
  1722 190E A9 0F			lda #$0F
  1723 1910 8D 53 25			sta adr.OBSTACLES+1+$0C
  1724
  1725 				; optimize OK (init.inc), line = 121
  1726
  1727 1913 A9 F4			lda #$F4
  1728 1915 8D 54 25			sta adr.OBSTACLES+$0E
  1729 1918 A9 0D			lda #$0D
  1730 191A 8D 55 25			sta adr.OBSTACLES+1+$0E
  1731
  1732 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 123
  1733
  1734 191D 20 CB 12			jsr SAVEOBSTACLES
  1735 1920			@exit
  1736 					.ifdef @new
  1737 					lda <@VarData
  1738 					sta :ztmp
  1739 					lda >@VarData
  1740 					ldy #@VarDataSize-1
  1741 					jmp @FreeMem
  1742 					els
  1743 1920 60				rts						; ret
  1744 					eif
  1745 				.endl
  1746
  1747 1921			.local	SETLEVEL05					; PROCEDURE
  1748
  1749 				; optimize OK (init.inc), line = 130
  1750
  1751 1921 A9 01			lda #$01
  1752 1923 8D 64 25			sta INITPLAYERS.ISALIVE
  1753 1926 A9 5F			lda #$5F
  1754 1928 8D 63 25			sta INITPLAYERS.COLOUR
  1755 192B A9 51			lda #$51
  1756 192D 8D 62 25			sta INITPLAYERS.HEAD
  1757 1930 A9 00			lda #$00
  1758 1932 8D 61 25			sta INITPLAYERS.BRAIN
  1759 1935 A9 04			lda #$04
  1760 1937 8D 60 25			sta INITPLAYERS.DIR
  1761 193A A9 0C			lda #$0C
  1762 193C 8D 5F 25			sta INITPLAYERS.Y
  1763 193F A9 12			lda #$12
  1764 1941 8D 5E 25			sta INITPLAYERS.X
  1765 1944 AD 09 25			lda PLAYER1
  1766 1947 8D 5C 25			sta INITPLAYERS.P
  1767 194A AD 0A 25			lda PLAYER1+1
  1768 194D 8D 5D 25			sta INITPLAYERS.P+1
  1769 1950 20 CD 13			jsr INITPLAYERS
  1770
  1771 				; optimize OK (init.inc), line = 131
  1772
  1773 1953 A9 01			lda #$01
  1774 1955 8D 64 25			sta INITPLAYERS.ISALIVE
  1775 1958 A9 5D			lda #$5D
  1776 195A 8D 63 25			sta INITPLAYERS.COLOUR
  1777 195D A9 51			lda #$51
  1778 195F 8D 62 25			sta INITPLAYERS.HEAD
  1779 1962 A9 04			lda #$04
  1780 1964 8D 61 25			sta INITPLAYERS.BRAIN
  1781 1967 A9 08			lda #$08
  1782 1969 8D 60 25			sta INITPLAYERS.DIR
  1783 196C A9 0C			lda #$0C
  1784 196E 8D 5F 25			sta INITPLAYERS.Y
  1785 1971 A9 16			lda #$16
  1786 1973 8D 5E 25			sta INITPLAYERS.X
  1787 1976 AD 0B 25			lda PLAYER2
  1788 1979 8D 5C 25			sta INITPLAYERS.P
  1789 197C AD 0C 25			lda PLAYER2+1
  1790 197F 8D 5D 25			sta INITPLAYERS.P+1
  1791 1982 20 CD 13			jsr INITPLAYERS
  1792
  1793 				; optimize OK (init.inc), line = 132
  1794
  1795 1985 A9 01			lda #$01
  1796 1987 8D 64 25			sta INITPLAYERS.ISALIVE
  1797 198A A9 71			lda #$71
  1798 198C 8D 63 25			sta INITPLAYERS.COLOUR
  1799 198F A9 51			lda #$51
  1800 1991 8D 62 25			sta INITPLAYERS.HEAD
  1801 1994 A9 03			lda #$03
  1802 1996 8D 61 25			sta INITPLAYERS.BRAIN
  1803 1999 A9 02			lda #$02
  1804 199B 8D 60 25			sta INITPLAYERS.DIR
  1805 199E A9 04			lda #$04
  1806 19A0 8D 5F 25			sta INITPLAYERS.Y
  1807 19A3 A9 14			lda #$14
  1808 19A5 8D 5E 25			sta INITPLAYERS.X
  1809 19A8 AD 0D 25			lda PLAYER3
  1810 19AB 8D 5C 25			sta INITPLAYERS.P
  1811 19AE AD 0E 25			lda PLAYER3+1
  1812 19B1 8D 5D 25			sta INITPLAYERS.P+1
  1813 19B4 20 CD 13			jsr INITPLAYERS
  1814
  1815 				; optimize OK (init.inc), line = 133
  1816
  1817 19B7 A9 01			lda #$01
  1818 19B9 8D 64 25			sta INITPLAYERS.ISALIVE
  1819 19BC A9 55			lda #$55
  1820 19BE 8D 63 25			sta INITPLAYERS.COLOUR
  1821 19C1 A9 51			lda #$51
  1822 19C3 8D 62 25			sta INITPLAYERS.HEAD
  1823 19C6 A9 03			lda #$03
  1824 19C8 8D 61 25			sta INITPLAYERS.BRAIN
  1825 19CB A9 01			lda #$01
  1826 19CD 8D 60 25			sta INITPLAYERS.DIR
  1827 19D0 A9 12			lda #$12
  1828 19D2 8D 5F 25			sta INITPLAYERS.Y
  1829 19D5 A9 14			lda #$14
  1830 19D7 8D 5E 25			sta INITPLAYERS.X
  1831 19DA AD 0F 25			lda PLAYER4
  1832 19DD 8D 5C 25			sta INITPLAYERS.P
  1833 19E0 AD 10 25			lda PLAYER4+1
  1834 19E3 8D 5D 25			sta INITPLAYERS.P+1
  1835 19E6 20 CD 13			jsr INITPLAYERS
  1836
  1837 				; optimize OK (init.inc), line = 135
  1838
  1839 19E9 A9 FA			lda #$FA
  1840 19EB 8D 46 25			sta adr.OBSTACLES+$00
  1841 19EE A9 0C			lda #$0C
  1842 19F0 8D 47 25			sta adr.OBSTACLES+1+$00
  1843
  1844 				; optimize OK (init.inc), line = 136
  1845
  1846 19F3 A9 0E			lda #$0E
  1847 19F5 8D 48 25			sta adr.OBSTACLES+$02
  1848 19F8 A9 0D			lda #$0D
  1849 19FA 8D 49 25			sta adr.OBSTACLES+1+$02
  1850
  1851 				; optimize OK (init.inc), line = 137
  1852
  1853 19FD A9 DA			lda #$DA
  1854 19FF 8D 4A 25			sta adr.OBSTACLES+$04
  1855 1A02 A9 0E			lda #$0E
  1856 1A04 8D 4B 25			sta adr.OBSTACLES+1+$04
  1857
  1858 				; optimize OK (init.inc), line = 138
  1859
  1860 1A07 A9 EE			lda #$EE
  1861 1A09 8D 4C 25			sta adr.OBSTACLES+$06
  1862 1A0C A9 0E			lda #$0E
  1863 1A0E 8D 4D 25			sta adr.OBSTACLES+1+$06
  1864
  1865 				; optimize OK (init.inc), line = 139
  1866
  1867 1A11 A9 E1			lda #$E1
  1868 1A13 8D 4E 25			sta adr.OBSTACLES+$08
  1869 1A16 A9 0D			lda #$0D
  1870 1A18 8D 4F 25			sta adr.OBSTACLES+1+$08
  1871
  1872 				; optimize OK (init.inc), line = 140
  1873
  1874 1A1B A9 64			lda #$64
  1875 1A1D 8D 50 25			sta adr.OBSTACLES+$0A
  1876 1A20 A9 0C			lda #$0C
  1877 1A22 8D 51 25			sta adr.OBSTACLES+1+$0A
  1878
  1879 				; optimize OK (init.inc), line = 141
  1880
  1881 1A25 A9 84			lda #$84
  1882 1A27 8D 52 25			sta adr.OBSTACLES+$0C
  1883 1A2A A9 0F			lda #$0F
  1884 1A2C 8D 53 25			sta adr.OBSTACLES+1+$0C
  1885
  1886 				; optimize OK (init.inc), line = 142
  1887
  1888 1A2F A9 F4			lda #$F4
  1889 1A31 8D 54 25			sta adr.OBSTACLES+$0E
  1890 1A34 A9 0D			lda #$0D
  1891 1A36 8D 55 25			sta adr.OBSTACLES+1+$0E
  1892
  1893 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 144
  1894
  1895 1A39 20 CB 12			jsr SAVEOBSTACLES
  1896 1A3C			@exit
  1897 					.ifdef @new
  1898 					lda <@VarData
  1899 					sta :ztmp
  1900 					lda >@VarData
  1901 					ldy #@VarDataSize-1
  1902 					jmp @FreeMem
  1903 					els
  1904 1A3C 60				rts						; ret
  1905 					eif
  1906 				.endl
  1907
  1908 1A3D			.local	SETLEVEL06					; PROCEDURE
  1909
  1910 				; optimize OK (init.inc), line = 151
  1911
  1912 1A3D A9 01			lda #$01
  1913 1A3F 8D 64 25			sta INITPLAYERS.ISALIVE
  1914 1A42 A9 5F			lda #$5F
  1915 1A44 8D 63 25			sta INITPLAYERS.COLOUR
  1916 1A47 A9 51			lda #$51
  1917 1A49 8D 62 25			sta INITPLAYERS.HEAD
  1918 1A4C A9 00			lda #$00
  1919 1A4E 8D 61 25			sta INITPLAYERS.BRAIN
  1920 1A51 A9 08			lda #$08
  1921 1A53 8D 60 25			sta INITPLAYERS.DIR
  1922 1A56 A9 0C			lda #$0C
  1923 1A58 8D 5F 25			sta INITPLAYERS.Y
  1924 1A5B A9 0A			lda #$0A
  1925 1A5D 8D 5E 25			sta INITPLAYERS.X
  1926 1A60 AD 09 25			lda PLAYER1
  1927 1A63 8D 5C 25			sta INITPLAYERS.P
  1928 1A66 AD 0A 25			lda PLAYER1+1
  1929 1A69 8D 5D 25			sta INITPLAYERS.P+1
  1930 1A6C 20 CD 13			jsr INITPLAYERS
  1931
  1932 				; optimize OK (init.inc), line = 152
  1933
  1934 1A6F A9 01			lda #$01
  1935 1A71 8D 64 25			sta INITPLAYERS.ISALIVE
  1936 1A74 A9 5D			lda #$5D
  1937 1A76 8D 63 25			sta INITPLAYERS.COLOUR
  1938 1A79 A9 51			lda #$51
  1939 1A7B 8D 62 25			sta INITPLAYERS.HEAD
  1940 1A7E A9 04			lda #$04
  1941 1A80 8D 61 25			sta INITPLAYERS.BRAIN
  1942 1A83 8D 60 25			sta INITPLAYERS.DIR
  1943 1A86 A9 0C			lda #$0C
  1944 1A88 8D 5F 25			sta INITPLAYERS.Y
  1945 1A8B A9 1E			lda #$1E
  1946 1A8D 8D 5E 25			sta INITPLAYERS.X
  1947 1A90 AD 0B 25			lda PLAYER2
  1948 1A93 8D 5C 25			sta INITPLAYERS.P
  1949 1A96 AD 0C 25			lda PLAYER2+1
  1950 1A99 8D 5D 25			sta INITPLAYERS.P+1
  1951 1A9C 20 CD 13			jsr INITPLAYERS
  1952
  1953 				; optimize OK (init.inc), line = 153
  1954
  1955 1A9F A9 01			lda #$01
  1956 1AA1 8D 64 25			sta INITPLAYERS.ISALIVE
  1957 1AA4 A9 71			lda #$71
  1958 1AA6 8D 63 25			sta INITPLAYERS.COLOUR
  1959 1AA9 A9 51			lda #$51
  1960 1AAB 8D 62 25			sta INITPLAYERS.HEAD
  1961 1AAE A9 03			lda #$03
  1962 1AB0 8D 61 25			sta INITPLAYERS.BRAIN
  1963 1AB3 A9 02			lda #$02
  1964 1AB5 8D 60 25			sta INITPLAYERS.DIR
  1965 1AB8 A9 04			lda #$04
  1966 1ABA 8D 5F 25			sta INITPLAYERS.Y
  1967 1ABD A9 14			lda #$14
  1968 1ABF 8D 5E 25			sta INITPLAYERS.X
  1969 1AC2 AD 0D 25			lda PLAYER3
  1970 1AC5 8D 5C 25			sta INITPLAYERS.P
  1971 1AC8 AD 0E 25			lda PLAYER3+1
  1972 1ACB 8D 5D 25			sta INITPLAYERS.P+1
  1973 1ACE 20 CD 13			jsr INITPLAYERS
  1974
  1975 				; optimize OK (init.inc), line = 154
  1976
  1977 1AD1 A9 01			lda #$01
  1978 1AD3 8D 64 25			sta INITPLAYERS.ISALIVE
  1979 1AD6 A9 55			lda #$55
  1980 1AD8 8D 63 25			sta INITPLAYERS.COLOUR
  1981 1ADB A9 51			lda #$51
  1982 1ADD 8D 62 25			sta INITPLAYERS.HEAD
  1983 1AE0 A9 02			lda #$02
  1984 1AE2 8D 61 25			sta INITPLAYERS.BRAIN
  1985 1AE5 A9 01			lda #$01
  1986 1AE7 8D 60 25			sta INITPLAYERS.DIR
  1987 1AEA A9 12			lda #$12
  1988 1AEC 8D 5F 25			sta INITPLAYERS.Y
  1989 1AEF A9 14			lda #$14
  1990 1AF1 8D 5E 25			sta INITPLAYERS.X
  1991 1AF4 AD 0F 25			lda PLAYER4
  1992 1AF7 8D 5C 25			sta INITPLAYERS.P
  1993 1AFA AD 10 25			lda PLAYER4+1
  1994 1AFD 8D 5D 25			sta INITPLAYERS.P+1
  1995 1B00 20 CD 13			jsr INITPLAYERS
  1996
  1997 				; optimize OK (init.inc), line = 156
  1998
  1999 1B03 A9 FA			lda #$FA
  2000 1B05 8D 46 25			sta adr.OBSTACLES+$00
  2001 1B08 A9 0C			lda #$0C
  2002 1B0A 8D 47 25			sta adr.OBSTACLES+1+$00
  2003
  2004 				; optimize OK (init.inc), line = 157
  2005
  2006 1B0D A9 0E			lda #$0E
  2007 1B0F 8D 48 25			sta adr.OBSTACLES+$02
  2008 1B12 A9 0D			lda #$0D
  2009 1B14 8D 49 25			sta adr.OBSTACLES+1+$02
  2010
  2011 				; optimize OK (init.inc), line = 158
  2012
  2013 1B17 A9 DA			lda #$DA
  2014 1B19 8D 4A 25			sta adr.OBSTACLES+$04
  2015 1B1C A9 0E			lda #$0E
  2016 1B1E 8D 4B 25			sta adr.OBSTACLES+1+$04
  2017
  2018 				; optimize OK (init.inc), line = 159
  2019
  2020 1B21 A9 EE			lda #$EE
  2021 1B23 8D 4C 25			sta adr.OBSTACLES+$06
  2022 1B26 A9 0E			lda #$0E
  2023 1B28 8D 4D 25			sta adr.OBSTACLES+1+$06
  2024
  2025 				; optimize OK (init.inc), line = 160
  2026
  2027 1B2B A9 E1			lda #$E1
  2028 1B2D 8D 4E 25			sta adr.OBSTACLES+$08
  2029 1B30 A9 0D			lda #$0D
  2030 1B32 8D 4F 25			sta adr.OBSTACLES+1+$08
  2031
  2032 				; optimize OK (init.inc), line = 161
  2033
  2034 1B35 A9 64			lda #$64
  2035 1B37 8D 50 25			sta adr.OBSTACLES+$0A
  2036 1B3A A9 0C			lda #$0C
  2037 1B3C 8D 51 25			sta adr.OBSTACLES+1+$0A
  2038
  2039 				; optimize OK (init.inc), line = 162
  2040
  2041 1B3F A9 84			lda #$84
  2042 1B41 8D 52 25			sta adr.OBSTACLES+$0C
  2043 1B44 A9 0F			lda #$0F
  2044 1B46 8D 53 25			sta adr.OBSTACLES+1+$0C
  2045
  2046 				; optimize OK (init.inc), line = 163
  2047
  2048 1B49 A9 FE			lda #$FE
  2049 1B4B 8D 54 25			sta adr.OBSTACLES+$0E
  2050 1B4E A9 00			lda #$00
  2051 1B50 8D 55 25			sta adr.OBSTACLES+1+$0E
  2052
  2053 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 165
  2054
  2055 1B53 20 CB 12			jsr SAVEOBSTACLES
  2056 1B56			@exit
  2057 					.ifdef @new
  2058 					lda <@VarData
  2059 					sta :ztmp
  2060 					lda >@VarData
  2061 					ldy #@VarDataSize-1
  2062 					jmp @FreeMem
  2063 					els
  2064 1B56 60				rts						; ret
  2065 					eif
  2066 				.endl
  2067
  2068 1B57			.local	SETLEVEL07					; PROCEDURE
  2069
  2070 				; optimize OK (init.inc), line = 172
  2071
  2072 1B57 A9 01			lda #$01
  2073 1B59 8D 64 25			sta INITPLAYERS.ISALIVE
  2074 1B5C A9 5F			lda #$5F
  2075 1B5E 8D 63 25			sta INITPLAYERS.COLOUR
  2076 1B61 A9 51			lda #$51
  2077 1B63 8D 62 25			sta INITPLAYERS.HEAD
  2078 1B66 A9 00			lda #$00
  2079 1B68 8D 61 25			sta INITPLAYERS.BRAIN
  2080 1B6B A9 04			lda #$04
  2081 1B6D 8D 60 25			sta INITPLAYERS.DIR
  2082 1B70 A9 0C			lda #$0C
  2083 1B72 8D 5F 25			sta INITPLAYERS.Y
  2084 1B75 A9 12			lda #$12
  2085 1B77 8D 5E 25			sta INITPLAYERS.X
  2086 1B7A AD 09 25			lda PLAYER1
  2087 1B7D 8D 5C 25			sta INITPLAYERS.P
  2088 1B80 AD 0A 25			lda PLAYER1+1
  2089 1B83 8D 5D 25			sta INITPLAYERS.P+1
  2090 1B86 20 CD 13			jsr INITPLAYERS
  2091
  2092 				; optimize OK (init.inc), line = 173
  2093
  2094 1B89 A9 01			lda #$01
  2095 1B8B 8D 64 25			sta INITPLAYERS.ISALIVE
  2096 1B8E A9 5D			lda #$5D
  2097 1B90 8D 63 25			sta INITPLAYERS.COLOUR
  2098 1B93 A9 51			lda #$51
  2099 1B95 8D 62 25			sta INITPLAYERS.HEAD
  2100 1B98 A9 04			lda #$04
  2101 1B9A 8D 61 25			sta INITPLAYERS.BRAIN
  2102 1B9D A9 08			lda #$08
  2103 1B9F 8D 60 25			sta INITPLAYERS.DIR
  2104 1BA2 A9 0C			lda #$0C
  2105 1BA4 8D 5F 25			sta INITPLAYERS.Y
  2106 1BA7 A9 16			lda #$16
  2107 1BA9 8D 5E 25			sta INITPLAYERS.X
  2108 1BAC AD 0B 25			lda PLAYER2
  2109 1BAF 8D 5C 25			sta INITPLAYERS.P
  2110 1BB2 AD 0C 25			lda PLAYER2+1
  2111 1BB5 8D 5D 25			sta INITPLAYERS.P+1
  2112 1BB8 20 CD 13			jsr INITPLAYERS
  2113
  2114 				; optimize OK (init.inc), line = 174
  2115
  2116 1BBB A9 01			lda #$01
  2117 1BBD 8D 64 25			sta INITPLAYERS.ISALIVE
  2118 1BC0 A9 71			lda #$71
  2119 1BC2 8D 63 25			sta INITPLAYERS.COLOUR
  2120 1BC5 A9 51			lda #$51
  2121 1BC7 8D 62 25			sta INITPLAYERS.HEAD
  2122 1BCA A9 03			lda #$03
  2123 1BCC 8D 61 25			sta INITPLAYERS.BRAIN
  2124 1BCF A9 02			lda #$02
  2125 1BD1 8D 60 25			sta INITPLAYERS.DIR
  2126 1BD4 A9 01			lda #$01
  2127 1BD6 8D 5F 25			sta INITPLAYERS.Y
  2128 1BD9 8D 5E 25			sta INITPLAYERS.X
  2129 1BDC AD 0D 25			lda PLAYER3
  2130 1BDF 8D 5C 25			sta INITPLAYERS.P
  2131 1BE2 AD 0E 25			lda PLAYER3+1
  2132 1BE5 8D 5D 25			sta INITPLAYERS.P+1
  2133 1BE8 20 CD 13			jsr INITPLAYERS
  2134
  2135 				; optimize OK (init.inc), line = 175
  2136
  2137 1BEB A9 01			lda #$01
  2138 1BED 8D 64 25			sta INITPLAYERS.ISALIVE
  2139 1BF0 A9 55			lda #$55
  2140 1BF2 8D 63 25			sta INITPLAYERS.COLOUR
  2141 1BF5 A9 51			lda #$51
  2142 1BF7 8D 62 25			sta INITPLAYERS.HEAD
  2143 1BFA A9 02			lda #$02
  2144 1BFC 8D 61 25			sta INITPLAYERS.BRAIN
  2145 1BFF 8D 60 25			sta INITPLAYERS.DIR
  2146 1C02 A9 0E			lda #$0E
  2147 1C04 8D 5F 25			sta INITPLAYERS.Y
  2148 1C07 A9 14			lda #$14
  2149 1C09 8D 5E 25			sta INITPLAYERS.X
  2150 1C0C AD 0F 25			lda PLAYER4
  2151 1C0F 8D 5C 25			sta INITPLAYERS.P
  2152 1C12 AD 10 25			lda PLAYER4+1
  2153 1C15 8D 5D 25			sta INITPLAYERS.P+1
  2154 1C18 20 CD 13			jsr INITPLAYERS
  2155
  2156 				; optimize OK (init.inc), line = 177
  2157
  2158 1C1B A9 FA			lda #$FA
  2159 1C1D 8D 46 25			sta adr.OBSTACLES+$00
  2160 1C20 A9 0C			lda #$0C
  2161 1C22 8D 47 25			sta adr.OBSTACLES+1+$00
  2162
  2163 				; optimize OK (init.inc), line = 178
  2164
  2165 1C25 A9 0E			lda #$0E
  2166 1C27 8D 48 25			sta adr.OBSTACLES+$02
  2167 1C2A A9 0D			lda #$0D
  2168 1C2C 8D 49 25			sta adr.OBSTACLES+1+$02
  2169
  2170 				; optimize OK (init.inc), line = 179
  2171
  2172 1C2F A9 DA			lda #$DA
  2173 1C31 8D 4A 25			sta adr.OBSTACLES+$04
  2174 1C34 A9 0E			lda #$0E
  2175 1C36 8D 4B 25			sta adr.OBSTACLES+1+$04
  2176
  2177 				; optimize OK (init.inc), line = 180
  2178
  2179 1C39 A9 EE			lda #$EE
  2180 1C3B 8D 4C 25			sta adr.OBSTACLES+$06
  2181 1C3E A9 0E			lda #$0E
  2182 1C40 8D 4D 25			sta adr.OBSTACLES+1+$06
  2183
  2184 				; optimize OK (init.inc), line = 181
  2185
  2186 1C43 A9 E1			lda #$E1
  2187 1C45 8D 4E 25			sta adr.OBSTACLES+$08
  2188 1C48 A9 0D			lda #$0D
  2189 1C4A 8D 4F 25			sta adr.OBSTACLES+1+$08
  2190
  2191 				; optimize OK (init.inc), line = 182
  2192
  2193 1C4D A9 64			lda #$64
  2194 1C4F 8D 50 25			sta adr.OBSTACLES+$0A
  2195 1C52 A9 0C			lda #$0C
  2196 1C54 8D 51 25			sta adr.OBSTACLES+1+$0A
  2197
  2198 				; optimize OK (init.inc), line = 183
  2199
  2200 1C57 A9 84			lda #$84
  2201 1C59 8D 52 25			sta adr.OBSTACLES+$0C
  2202 1C5C A9 0F			lda #$0F
  2203 1C5E 8D 53 25			sta adr.OBSTACLES+1+$0C
  2204
  2205 				; optimize OK (init.inc), line = 184
  2206
  2207 1C61 A9 F4			lda #$F4
  2208 1C63 8D 54 25			sta adr.OBSTACLES+$0E
  2209 1C66 A9 0D			lda #$0D
  2210 1C68 8D 55 25			sta adr.OBSTACLES+1+$0E
  2211
  2212 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 186
  2213
  2214 1C6B 20 CB 12			jsr SAVEOBSTACLES
  2215 1C6E			@exit
  2216 					.ifdef @new
  2217 					lda <@VarData
  2218 					sta :ztmp
  2219 					lda >@VarData
  2220 					ldy #@VarDataSize-1
  2221 					jmp @FreeMem
  2222 					els
  2223 1C6E 60				rts						; ret
  2224 					eif
  2225 				.endl
  2226
  2227 1C6F			.local	SETLEVEL08					; PROCEDURE
  2228
  2229 				; optimize OK (init.inc), line = 193
  2230
  2231 1C6F A9 01			lda #$01
  2232 1C71 8D 64 25			sta INITPLAYERS.ISALIVE
  2233 1C74 A9 5F			lda #$5F
  2234 1C76 8D 63 25			sta INITPLAYERS.COLOUR
  2235 1C79 A9 51			lda #$51
  2236 1C7B 8D 62 25			sta INITPLAYERS.HEAD
  2237 1C7E A9 00			lda #$00
  2238 1C80 8D 61 25			sta INITPLAYERS.BRAIN
  2239 1C83 A9 08			lda #$08
  2240 1C85 8D 60 25			sta INITPLAYERS.DIR
  2241 1C88 A9 17			lda #$17
  2242 1C8A 8D 5F 25			sta INITPLAYERS.Y
  2243 1C8D A9 01			lda #$01
  2244 1C8F 8D 5E 25			sta INITPLAYERS.X
  2245 1C92 AD 09 25			lda PLAYER1
  2246 1C95 8D 5C 25			sta INITPLAYERS.P
  2247 1C98 AD 0A 25			lda PLAYER1+1
  2248 1C9B 8D 5D 25			sta INITPLAYERS.P+1
  2249 1C9E 20 CD 13			jsr INITPLAYERS
  2250
  2251 				; optimize OK (init.inc), line = 194
  2252
  2253 1CA1 A9 01			lda #$01
  2254 1CA3 8D 64 25			sta INITPLAYERS.ISALIVE
  2255 1CA6 A9 5D			lda #$5D
  2256 1CA8 8D 63 25			sta INITPLAYERS.COLOUR
  2257 1CAB A9 51			lda #$51
  2258 1CAD 8D 62 25			sta INITPLAYERS.HEAD
  2259 1CB0 A9 03			lda #$03
  2260 1CB2 8D 61 25			sta INITPLAYERS.BRAIN
  2261 1CB5 A9 04			lda #$04
  2262 1CB7 8D 60 25			sta INITPLAYERS.DIR
  2263 1CBA A9 17			lda #$17
  2264 1CBC 8D 5F 25			sta INITPLAYERS.Y
  2265 1CBF A9 26			lda #$26
  2266 1CC1 8D 5E 25			sta INITPLAYERS.X
  2267 1CC4 AD 0B 25			lda PLAYER2
  2268 1CC7 8D 5C 25			sta INITPLAYERS.P
  2269 1CCA AD 0C 25			lda PLAYER2+1
  2270 1CCD 8D 5D 25			sta INITPLAYERS.P+1
  2271 1CD0 20 CD 13			jsr INITPLAYERS
  2272
  2273 				; optimize OK (init.inc), line = 195
  2274
  2275 1CD3 A9 01			lda #$01
  2276 1CD5 8D 64 25			sta INITPLAYERS.ISALIVE
  2277 1CD8 A9 71			lda #$71
  2278 1CDA 8D 63 25			sta INITPLAYERS.COLOUR
  2279 1CDD A9 51			lda #$51
  2280 1CDF 8D 62 25			sta INITPLAYERS.HEAD
  2281 1CE2 A9 03			lda #$03
  2282 1CE4 8D 61 25			sta INITPLAYERS.BRAIN
  2283 1CE7 A9 02			lda #$02
  2284 1CE9 8D 60 25			sta INITPLAYERS.DIR
  2285 1CEC A9 01			lda #$01
  2286 1CEE 8D 5F 25			sta INITPLAYERS.Y
  2287 1CF1 8D 5E 25			sta INITPLAYERS.X
  2288 1CF4 AD 0D 25			lda PLAYER3
  2289 1CF7 8D 5C 25			sta INITPLAYERS.P
  2290 1CFA AD 0E 25			lda PLAYER3+1
  2291 1CFD 8D 5D 25			sta INITPLAYERS.P+1
  2292 1D00 20 CD 13			jsr INITPLAYERS
  2293
  2294 				; optimize OK (init.inc), line = 196
  2295
  2296 1D03 A9 01			lda #$01
  2297 1D05 8D 64 25			sta INITPLAYERS.ISALIVE
  2298 1D08 A9 55			lda #$55
  2299 1D0A 8D 63 25			sta INITPLAYERS.COLOUR
  2300 1D0D A9 51			lda #$51
  2301 1D0F 8D 62 25			sta INITPLAYERS.HEAD
  2302 1D12 A9 04			lda #$04
  2303 1D14 8D 61 25			sta INITPLAYERS.BRAIN
  2304 1D17 8D 60 25			sta INITPLAYERS.DIR
  2305 1D1A A9 01			lda #$01
  2306 1D1C 8D 5F 25			sta INITPLAYERS.Y
  2307 1D1F A9 26			lda #$26
  2308 1D21 8D 5E 25			sta INITPLAYERS.X
  2309 1D24 AD 0F 25			lda PLAYER4
  2310 1D27 8D 5C 25			sta INITPLAYERS.P
  2311 1D2A AD 10 25			lda PLAYER4+1
  2312 1D2D 8D 5D 25			sta INITPLAYERS.P+1
  2313 1D30 20 CD 13			jsr INITPLAYERS
  2314
  2315 				; optimize OK (init.inc), line = 198
  2316
  2317 1D33 A9 FA			lda #$FA
  2318 1D35 8D 46 25			sta adr.OBSTACLES+$00
  2319 1D38 A9 0C			lda #$0C
  2320 1D3A 8D 47 25			sta adr.OBSTACLES+1+$00
  2321
  2322 				; optimize OK (init.inc), line = 199
  2323
  2324 1D3D A9 0E			lda #$0E
  2325 1D3F 8D 48 25			sta adr.OBSTACLES+$02
  2326 1D42 A9 0D			lda #$0D
  2327 1D44 8D 49 25			sta adr.OBSTACLES+1+$02
  2328
  2329 				; optimize OK (init.inc), line = 200
  2330
  2331 1D47 A9 DA			lda #$DA
  2332 1D49 8D 4A 25			sta adr.OBSTACLES+$04
  2333 1D4C A9 0E			lda #$0E
  2334 1D4E 8D 4B 25			sta adr.OBSTACLES+1+$04
  2335
  2336 				; optimize OK (init.inc), line = 201
  2337
  2338 1D51 A9 EE			lda #$EE
  2339 1D53 8D 4C 25			sta adr.OBSTACLES+$06
  2340 1D56 A9 0E			lda #$0E
  2341 1D58 8D 4D 25			sta adr.OBSTACLES+1+$06
  2342
  2343 				; optimize OK (init.inc), line = 202
  2344
  2345 1D5B A9 E1			lda #$E1
  2346 1D5D 8D 4E 25			sta adr.OBSTACLES+$08
  2347 1D60 A9 0D			lda #$0D
  2348 1D62 8D 4F 25			sta adr.OBSTACLES+1+$08
  2349
  2350 				; optimize OK (init.inc), line = 203
  2351
  2352 1D65 A9 64			lda #$64
  2353 1D67 8D 50 25			sta adr.OBSTACLES+$0A
  2354 1D6A A9 0C			lda #$0C
  2355 1D6C 8D 51 25			sta adr.OBSTACLES+1+$0A
  2356
  2357 				; optimize OK (init.inc), line = 204
  2358
  2359 1D6F A9 84			lda #$84
  2360 1D71 8D 52 25			sta adr.OBSTACLES+$0C
  2361 1D74 A9 0F			lda #$0F
  2362 1D76 8D 53 25			sta adr.OBSTACLES+1+$0C
  2363
  2364 				; optimize OK (init.inc), line = 205
  2365
  2366 1D79 A9 F4			lda #$F4
  2367 1D7B 8D 54 25			sta adr.OBSTACLES+$0E
  2368 1D7E A9 0D			lda #$0D
  2369 1D80 8D 55 25			sta adr.OBSTACLES+1+$0E
  2370
  2371 				; optimize FAIL ('SAVEOBSTACLES', init.inc), line = 207
  2372
  2373 1D83 20 CB 12			jsr SAVEOBSTACLES
  2374 1D86			@exit
  2375 					.ifdef @new
  2376 					lda <@VarData
  2377 					sta :ztmp
  2378 					lda >@VarData
  2379 					ldy #@VarDataSize-1
  2380 					jmp @FreeMem
  2381 					els
  2382 1D86 60				rts						; ret
  2383 					eif
  2384 				.endl
  2385
  2386 1D87			.local	AISTRAIGHT					; PROCEDURE
  2387
  2388 				; optimize OK (ai.inc), line = 5
  2389
  2390 1D87 AC 05 25 84 12 AC + 	mwy PLY :bp2
  2391 1D91 A0 04			ldy #PLY.DIR-DATAORIGIN
  2392 1D93 B1 12			lda (:bp2),y
  2393 1D95 25 5C			and AVAILDIR
  2394 1D97 F0 07			jeq l_06A6
  2395 1D99 B1 12			lda (:bp2),y
  2396 1D9B 85 5B			sta NEWDIR
  2397 1D9D 4C 0B 1E			jmp l_06B6
  2398 1DA0			l_06A6
  2399
  2400 				; optimize OK (ai.inc), line = 7
  2401
  2402 1DA0 A5 5C			lda AVAILDIR
  2403 1DA2 C9 03			cmp #$03
  2404 1DA4 D0 10			jne l_06C8
  2405 1DA6 A9 02			lda #$02
  2406 1DA8 20 40 11			jsr SYSTEM.RANDOM_006C
  2407 1DAB B4 18			ldy :STACKORIGIN,x
  2408 1DAD B9 40 10			lda adr.DIRECTION,y
  2409 1DB0 85 5B			sta NEWDIR
  2410 1DB2 CA				dex
  2411 1DB3 4C CE 1D			jmp l_06DA
  2412 1DB6			l_06C8
  2413
  2414 				; optimize OK (ai.inc), line = 9
  2415
  2416 1DB6 A5 5C			lda AVAILDIR
  2417 1DB8 8D 65 25			sta @CASETMP_0003
  2418 1DBB C9 01			cmp #$01
  2419 1DBD D0 07			jne l_06E5
  2420 1DBF			@
  2421
  2422 				; optimize OK (ai.inc), line = 10
  2423
  2424 1DBF A9 01			lda #$01
  2425 1DC1 85 5B			sta NEWDIR
  2426
  2427 1DC3 4C CE 1D			jmp a_0003
  2428 1DC6			l_06E5
  2429 1DC6 C9 02			cmp #$02
  2430 1DC8 D0 04			jne l_06F2
  2431 1DCA			@
  2432
  2433 				; optimize OK (ai.inc), line = 11
  2434
  2435 1DCA A9 02			lda #$02
  2436 1DCC 85 5B			sta NEWDIR
  2437
  2438 1DCE			l_06F2
  2439 1DCE			a_0003
  2440 1DCE			l_06DA
  2441
  2442 				; optimize OK (ai.inc), line = 14
  2443
  2444 1DCE A5 5C			lda AVAILDIR
  2445 1DD0 C9 0C			cmp #$0C
  2446 1DD2 D0 1F			jne l_070E
  2447 1DD4 A9 02			lda #$02
  2448 1DD6 20 40 11			jsr SYSTEM.RANDOM_006C
  2449 1DD9 E8				inx
  2450 1DDA A9 02 95 18			mva #$02 :STACKORIGIN,x
  2451 1DDE A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  2452 1DE2 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  2453 1DE4 20 44 10			jsr addAX_CX
  2454 1DE7 CA				dex
  2455 1DE8 B4 18			ldy :STACKORIGIN,x
  2456 1DEA B9 40 10			lda adr.DIRECTION,y
  2457 1DED 85 5B			sta NEWDIR
  2458 1DEF CA				dex
  2459 1DF0 4C 0B 1E			jmp l_0724
  2460 1DF3			l_070E
  2461
  2462 				; optimize OK (ai.inc), line = 16
  2463
  2464 1DF3 A5 5C			lda AVAILDIR
  2465 1DF5 8D 66 25			sta @CASETMP_0004
  2466 1DF8 C9 04			cmp #$04
  2467 1DFA D0 07			jne l_072F
  2468 1DFC			@
  2469
  2470 				; optimize OK (ai.inc), line = 17
  2471
  2472 1DFC A9 04			lda #$04
  2473 1DFE 85 5B			sta NEWDIR
  2474
  2475 1E00 4C 0B 1E			jmp a_0004
  2476 1E03			l_072F
  2477 1E03 C9 08			cmp #$08
  2478 1E05 D0 04			jne l_073C
  2479 1E07			@
  2480
  2481 				; optimize OK (ai.inc), line = 18
  2482
  2483 1E07 A9 08			lda #$08
  2484 1E09 85 5B			sta NEWDIR
  2485
  2486 1E0B			l_073C
  2487 1E0B			a_0004
  2488 1E0B			l_0724
  2489 1E0B			l_06B6
  2490
  2491 				; ------------------------------------------------------------
  2492
  2493 = 2565			@CASETMP_0003	= DATAORIGIN+$0051
  2494 = 2566			@CASETMP_0004	= DATAORIGIN+$0052
  2495
  2496 = 2565			@VarData	= @CASETMP_0003
  2497 = 0002			@VarDataSize	= 2
  2498
  2499 1E0B			@exit
  2500 					.ifdef @new
  2501 					lda <@VarData
  2502 					sta :ztmp
  2503 					lda >@VarData
  2504 					ldy #@VarDataSize-1
  2505 					jmp @FreeMem
  2506 					els
  2507 1E0B 60				rts						; ret
  2508 					eif
  2509 				.endl
  2510
  2511 1E0C			.local	AISAPPER					; PROCEDURE
  2512
  2513 				; optimize OK (ai.inc), line = 31
  2514
  2515 1E0C A9 00			lda #$00
  2516 1E0E 8D 67 25			sta L
  2517 1E11 8D 68 25			sta R
  2518 1E14 8D 69 25			sta U
  2519 1E17 8D 6A 25			sta D
  2520
  2521 				; optimize OK (ai.inc), line = 32
  2522
  2523 1E1A AC 05 25 84 12 AC + 	mwy PLY :bp2
  2524 1E24 A0 01			ldy #PLY.Y-DATAORIGIN
  2525 1E26 B1 12			lda (:bp2),y
  2526 1E28 0A				asl @
  2527 1E29 A8				tay
  2528 1E2A A9 00			lda #$00
  2529 1E2C 18 79 0E 10			add adr.MUL40,y
  2530 1E30 85 21			sta :STACKORIGIN+9
  2531 1E32 A9 0C			lda #$0C
  2532 1E34 79 0F 10			adc adr.MUL40+1,y
  2533 1E37 85 31			sta :STACKORIGIN+STACKWIDTH+9
  2534 1E39 A0 00			ldy #PLY.X-DATAORIGIN
  2535 1E3B A5 21			lda :STACKORIGIN+9
  2536 1E3D 18 71 12			add (:bp2),y
  2537 1E40 85 5D			sta T0W
  2538 1E42 A5 31			lda :STACKORIGIN+STACKWIDTH+9
  2539 1E44 69 00			adc #$00
  2540 1E46 85 5E			sta T0W+1
  2541
  2542 				; optimize OK (ai.inc), line = 34
  2543
  2544 1E48 A5 5C			lda AVAILDIR
  2545 1E4A 29 01			and #$01
  2546 1E4C F0 73			jeq l_0782
  2547
  2548 				; optimize OK (ai.inc), line = 35
  2549
  2550 1E4E A9 05			lda #$05
  2551 1E50 85 59			sta I0B
  2552
  2553 1E52			l_078C
  2554 				; --- ForToDoCondition
  2555 1E52 A5 59			lda I0B
  2556 1E54 C9 01			cmp #$01
  2557 1E56 90 69			jcc l_079A
  2558
  2559 				; optimize OK (ai.inc), line = 36
  2560
  2561 1E58 0A				asl @
  2562 1E59 A8				tay
  2563 1E5A A5 5D			lda T0W
  2564 1E5C 38 F9 0E 10			sub adr.MUL40,y
  2565 1E60 85 21			sta :STACKORIGIN+9
  2566 1E62 A5 5E			lda T0W+1
  2567 1E64 F9 0F 10			sbc adr.MUL40+1,y
  2568 1E67 85 11			sta :bp+1
  2569 1E69 A4 21			ldy :STACKORIGIN+9
  2570 1E6B B1 10			lda (:bp),y
  2571 1E6D C9 20			cmp #$20
  2572 1E6F D0 03			jne l_07B4
  2573 1E71 EE 69 25			inc U
  2574 1E74			l_07B4
  2575
  2576 				; optimize OK (ai.inc), line = 37
  2577
  2578 1E74 A5 59			lda I0B
  2579 1E76 0A				asl @
  2580 1E77 A8				tay
  2581 1E78 A5 5D			lda T0W
  2582 1E7A 38 F9 0E 10			sub adr.MUL40,y
  2583 1E7E 85 21			sta :STACKORIGIN+9
  2584 1E80 A5 5E			lda T0W+1
  2585 1E82 F9 0F 10			sbc adr.MUL40+1,y
  2586 1E85 85 11			sta :bp+1
  2587 1E87 A5 21			lda :STACKORIGIN+9
  2588 1E89 18 69 01			add #$01
  2589 1E8C A8				tay
  2590 1E8D 90 02			scc
  2591 1E8F E6 11			inc :bp+1
  2592 1E91 B1 10			lda (:bp),y
  2593 1E93 C9 20			cmp #$20
  2594 1E95 D0 03			jne l_07D9
  2595 1E97 EE 69 25			inc U
  2596 1E9A			l_07D9
  2597
  2598 				; optimize OK (ai.inc), line = 38
  2599
  2600 1E9A A5 59			lda I0B
  2601 1E9C 0A				asl @
  2602 1E9D A8				tay
  2603 1E9E A5 5D			lda T0W
  2604 1EA0 38 F9 0E 10			sub adr.MUL40,y
  2605 1EA4 85 21			sta :STACKORIGIN+9
  2606 1EA6 A5 5E			lda T0W+1
  2607 1EA8 F9 0F 10			sbc adr.MUL40+1,y
  2608 1EAB 85 11			sta :bp+1
  2609 1EAD A4 21			ldy :STACKORIGIN+9
  2610 1EAF 88				dey
  2611 1EB0 B0 02			scs
  2612 1EB2 C6 11			dec :bp+1
  2613 1EB4 B1 10			lda (:bp),y
  2614 1EB6 C9 20			cmp #$20
  2615 1EB8 D0 03			jne l_07FE
  2616 1EBA EE 69 25			inc U
  2617 1EBD			l_07FE
  2618
  2619 				; --- ForToDoEpilog
  2620 1EBD C6 59			dec I0B
  2621 1EBF 10 91			jpl l_078C
  2622 1EC1			l_079A
  2623 1EC1			l_0782
  2624
  2625 				; optimize OK (ai.inc), line = 42
  2626
  2627 1EC1 A5 5C			lda AVAILDIR
  2628 1EC3 29 02			and #$02
  2629 1EC5 F0 73			jeq l_0822
  2630
  2631 				; optimize OK (ai.inc), line = 43
  2632
  2633 1EC7 A9 05			lda #$05
  2634 1EC9 85 59			sta I0B
  2635
  2636 1ECB			l_082C
  2637 				; --- ForToDoCondition
  2638 1ECB A5 59			lda I0B
  2639 1ECD C9 01			cmp #$01
  2640 1ECF 90 69			jcc l_083A
  2641
  2642 				; optimize OK (ai.inc), line = 44
  2643
  2644 1ED1 0A				asl @
  2645 1ED2 A8				tay
  2646 1ED3 A5 5D			lda T0W
  2647 1ED5 18 79 0E 10			add adr.MUL40,y
  2648 1ED9 85 21			sta :STACKORIGIN+9
  2649 1EDB A5 5E			lda T0W+1
  2650 1EDD 79 0F 10			adc adr.MUL40+1,y
  2651 1EE0 85 11			sta :bp+1
  2652 1EE2 A4 21			ldy :STACKORIGIN+9
  2653 1EE4 B1 10			lda (:bp),y
  2654 1EE6 C9 20			cmp #$20
  2655 1EE8 D0 03			jne l_0854
  2656 1EEA EE 6A 25			inc D
  2657 1EED			l_0854
  2658
  2659 				; optimize OK (ai.inc), line = 45
  2660
  2661 1EED A5 59			lda I0B
  2662 1EEF 0A				asl @
  2663 1EF0 A8				tay
  2664 1EF1 A5 5D			lda T0W
  2665 1EF3 18 79 0E 10			add adr.MUL40,y
  2666 1EF7 85 21			sta :STACKORIGIN+9
  2667 1EF9 A5 5E			lda T0W+1
  2668 1EFB 79 0F 10			adc adr.MUL40+1,y
  2669 1EFE 85 11			sta :bp+1
  2670 1F00 A5 21			lda :STACKORIGIN+9
  2671 1F02 18 69 01			add #$01
  2672 1F05 A8				tay
  2673 1F06 90 02			scc
  2674 1F08 E6 11			inc :bp+1
  2675 1F0A B1 10			lda (:bp),y
  2676 1F0C C9 20			cmp #$20
  2677 1F0E D0 03			jne l_0879
  2678 1F10 EE 6A 25			inc D
  2679 1F13			l_0879
  2680
  2681 				; optimize OK (ai.inc), line = 46
  2682
  2683 1F13 A5 59			lda I0B
  2684 1F15 0A				asl @
  2685 1F16 A8				tay
  2686 1F17 A5 5D			lda T0W
  2687 1F19 18 79 0E 10			add adr.MUL40,y
  2688 1F1D 85 21			sta :STACKORIGIN+9
  2689 1F1F A5 5E			lda T0W+1
  2690 1F21 79 0F 10			adc adr.MUL40+1,y
  2691 1F24 85 11			sta :bp+1
  2692 1F26 A4 21			ldy :STACKORIGIN+9
  2693 1F28 88				dey
  2694 1F29 B0 02			scs
  2695 1F2B C6 11			dec :bp+1
  2696 1F2D B1 10			lda (:bp),y
  2697 1F2F C9 20			cmp #$20
  2698 1F31 D0 03			jne l_089E
  2699 1F33 EE 6A 25			inc D
  2700 1F36			l_089E
  2701
  2702 				; --- ForToDoEpilog
  2703 1F36 C6 59			dec I0B
  2704 1F38 10 91			jpl l_082C
  2705 1F3A			l_083A
  2706 1F3A			l_0822
  2707
  2708 				; optimize OK (ai.inc), line = 50
  2709
  2710 1F3A A5 5C			lda AVAILDIR
  2711 1F3C 29 04			and #$04
  2712 1F3E F0 5F			jeq l_08C2
  2713
  2714 				; optimize OK (ai.inc), line = 51
  2715
  2716 1F40 A9 05			lda #$05
  2717 1F42 85 59			sta I0B
  2718
  2719 1F44			l_08CC
  2720 				; --- ForToDoCondition
  2721 1F44 A5 59			lda I0B
  2722 1F46 C9 01			cmp #$01
  2723 1F48 90 55			jcc l_08DA
  2724
  2725 				; optimize OK (ai.inc), line = 52
  2726
  2727 1F4A A5 5D			lda T0W
  2728 1F4C 38 E5 59			sub I0B
  2729 1F4F A8				tay
  2730 1F50 A5 5E			lda T0W+1
  2731 1F52 E9 00			sbc #$00
  2732 1F54 85 11			sta :bp+1
  2733 1F56 B1 10			lda (:bp),y
  2734 1F58 C9 20			cmp #$20
  2735 1F5A D0 03			jne l_08F2
  2736 1F5C EE 67 25			inc L
  2737 1F5F			l_08F2
  2738
  2739 				; optimize OK (ai.inc), line = 53
  2740
  2741 1F5F A5 5D			lda T0W
  2742 1F61 38 E5 59			sub I0B
  2743 1F64 A8				tay
  2744 1F65 A5 5E			lda T0W+1
  2745 1F67 E9 00			sbc #$00
  2746 1F69 85 11			sta :bp+1
  2747 1F6B 98				tya
  2748 1F6C 18 69 28			add #$28
  2749 1F6F A8				tay
  2750 1F70 90 02			scc
  2751 1F72 E6 11			inc :bp+1
  2752 1F74 B1 10			lda (:bp),y
  2753 1F76 C9 20			cmp #$20
  2754 1F78 D0 03			jne l_0915
  2755 1F7A EE 67 25			inc L
  2756 1F7D			l_0915
  2757
  2758 				; optimize OK (ai.inc), line = 54
  2759
  2760 1F7D A5 5D			lda T0W
  2761 1F7F 38 E5 59			sub I0B
  2762 1F82 A8				tay
  2763 1F83 A5 5E			lda T0W+1
  2764 1F85 E9 00			sbc #$00
  2765 1F87 85 11			sta :bp+1
  2766 1F89 98				tya
  2767 1F8A 38 E9 28			sub #$28
  2768 1F8D A8				tay
  2769 1F8E B0 02			scs
  2770 1F90 C6 11			dec :bp+1
  2771 1F92 B1 10			lda (:bp),y
  2772 1F94 C9 20			cmp #$20
  2773 1F96 D0 03			jne l_0938
  2774 1F98 EE 67 25			inc L
  2775 1F9B			l_0938
  2776
  2777 				; --- ForToDoEpilog
  2778 1F9B C6 59			dec I0B
  2779 1F9D 10 A5			jpl l_08CC
  2780 1F9F			l_08DA
  2781 1F9F			l_08C2
  2782
  2783 				; optimize OK (ai.inc), line = 58
  2784
  2785 1F9F A5 5C			lda AVAILDIR
  2786 1FA1 29 08			and #$08
  2787 1FA3 F0 5D			jeq l_095C
  2788
  2789 				; optimize OK (ai.inc), line = 59
  2790
  2791 1FA5 A9 05			lda #$05
  2792 1FA7 85 59			sta I0B
  2793
  2794 1FA9			l_0966
  2795 				; --- ForToDoCondition
  2796 1FA9 A5 59			lda I0B
  2797 1FAB C9 01			cmp #$01
  2798 1FAD 90 53			jcc l_0974
  2799
  2800 				; optimize OK (ai.inc), line = 60
  2801
  2802 1FAF A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  2803 1FB7 A4 59			ldy I0B
  2804 1FB9 B1 12			lda (:bp2),y
  2805 1FBB C9 20			cmp #$20
  2806 1FBD D0 03			jne l_098C
  2807 1FBF EE 68 25			inc R
  2808 1FC2			l_098C
  2809
  2810 				; optimize OK (ai.inc), line = 61
  2811
  2812 1FC2 A5 5D			lda T0W
  2813 1FC4 18 65 59			add I0B
  2814 1FC7 A8				tay
  2815 1FC8 A5 5E			lda T0W+1
  2816 1FCA 69 00			adc #$00
  2817 1FCC 85 11			sta :bp+1
  2818 1FCE 98				tya
  2819 1FCF 18 69 28			add #$28
  2820 1FD2 A8				tay
  2821 1FD3 90 02			scc
  2822 1FD5 E6 11			inc :bp+1
  2823 1FD7 B1 10			lda (:bp),y
  2824 1FD9 C9 20			cmp #$20
  2825 1FDB D0 03			jne l_09AF
  2826 1FDD EE 68 25			inc R
  2827 1FE0			l_09AF
  2828
  2829 				; optimize OK (ai.inc), line = 62
  2830
  2831 1FE0 A5 5D			lda T0W
  2832 1FE2 18 65 59			add I0B
  2833 1FE5 A8				tay
  2834 1FE6 A5 5E			lda T0W+1
  2835 1FE8 69 00			adc #$00
  2836 1FEA 85 11			sta :bp+1
  2837 1FEC 98				tya
  2838 1FED 38 E9 28			sub #$28
  2839 1FF0 A8				tay
  2840 1FF1 B0 02			scs
  2841 1FF3 C6 11			dec :bp+1
  2842 1FF5 B1 10			lda (:bp),y
  2843 1FF7 C9 20			cmp #$20
  2844 1FF9 D0 03			jne l_09D2
  2845 1FFB EE 68 25			inc R
  2846 1FFE			l_09D2
  2847
  2848 				; --- ForToDoEpilog
  2849 1FFE C6 59			dec I0B
  2850 2000 10 A7			jpl l_0966
  2851 2002			l_0974
  2852 2002			l_095C
  2853
  2854 				; optimize OK (ai.inc), line = 66
  2855
  2856 2002 AD 6A 25			lda D
  2857 2005 85 58			sta T0B
  2858
  2859 				; optimize OK (ai.inc), line = 67
  2860
  2861 2007 CD 69 25			cmp U
  2862 200A B0 05			jcs l_09FA
  2863 200C AD 69 25			lda U
  2864 200F 85 58			sta T0B
  2865 2011			l_09FA
  2866
  2867 				; optimize OK (ai.inc), line = 68
  2868
  2869 2011 A5 58			lda T0B
  2870 2013 CD 67 25			cmp L
  2871 2016 B0 05			jcs l_0A17
  2872 2018 AD 67 25			lda L
  2873 201B 85 58			sta T0B
  2874 201D			l_0A17
  2875
  2876 				; optimize OK (ai.inc), line = 69
  2877
  2878 201D A5 58			lda T0B
  2879 201F CD 68 25			cmp R
  2880 2022 B0 05			jcs l_0A34
  2881 2024 AD 68 25			lda R
  2882 2027 85 58			sta T0B
  2883 2029			l_0A34
  2884
  2885 				; optimize OK (ai.inc), line = 71
  2886
  2887 2029 A5 58			lda T0B
  2888 202B CD 6A 25			cmp D
  2889 202E D0 04			jne l_0A51
  2890 2030 A9 02			lda #$02
  2891 2032 85 58			sta T0B
  2892 2034			l_0A51
  2893
  2894 				; optimize OK (ai.inc), line = 72
  2895
  2896 2034 A5 58			lda T0B
  2897 2036 CD 69 25			cmp U
  2898 2039 D0 04			jne l_0A6C
  2899 203B A9 01			lda #$01
  2900 203D 85 58			sta T0B
  2901 203F			l_0A6C
  2902
  2903 				; optimize OK (ai.inc), line = 73
  2904
  2905 203F A5 58			lda T0B
  2906 2041 CD 67 25			cmp L
  2907 2044 D0 04			jne l_0A87
  2908 2046 A9 04			lda #$04
  2909 2048 85 58			sta T0B
  2910 204A			l_0A87
  2911
  2912 				; optimize OK (ai.inc), line = 74
  2913
  2914 204A A5 58			lda T0B
  2915 204C CD 68 25			cmp R
  2916 204F D0 04			jne l_0AA2
  2917 2051 A9 08			lda #$08
  2918 2053 85 58			sta T0B
  2919 2055			l_0AA2
  2920
  2921 				; optimize OK (ai.inc), line = 76
  2922
  2923 2055 A5 5C			lda AVAILDIR
  2924 2057 25 58			and T0B
  2925 2059 F0 07			jeq l_0AC1
  2926 205B A5 58			lda T0B
  2927 205D 85 5B			sta NEWDIR
  2928 205F 4C 65 20			jmp l_0AD1
  2929 2062			l_0AC1
  2930
  2931 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  2932
  2933 2062 20 87 1D			jsr AISTRAIGHT
  2934 2065			l_0AD1
  2935
  2936 				; ------------------------------------------------------------
  2937
  2938 = 2567			L	= DATAORIGIN+$0053
  2939 = 2568			R	= DATAORIGIN+$0054
  2940 = 2569			U	= DATAORIGIN+$0055
  2941 = 256A			D	= DATAORIGIN+$0056
  2942 = 0001			@FORTMP_0789	= $01
  2943 = 0001			@FORTMP_0829	= $01
  2944 = 0001			@FORTMP_08C9	= $01
  2945 = 0001			@FORTMP_0963	= $01
  2946
  2947 = 2567			@VarData	= L
  2948 = 0004			@VarDataSize	= 4
  2949
  2950 2065			@exit
  2951 					.ifdef @new
  2952 					lda <@VarData
  2953 					sta :ztmp
  2954 					lda >@VarData
  2955 					ldy #@VarDataSize-1
  2956 					jmp @FreeMem
  2957 					els
  2958 2065 60				rts						; ret
  2959 					eif
  2960 				.endl
  2961
  2962 2066			.local	AIBULLY						; PROCEDURE
  2963
  2964 				; optimize OK (ai.inc), line = 84
  2965
  2966 2066 AC 05 25 84 12 AC + 	mwy PLY :bp2
  2967 2070 A0 04			ldy #PLY.DIR-DATAORIGIN
  2968 2072 B1 12			lda (:bp2),y
  2969 2074 85 58			sta T0B
  2970
  2971 				; optimize OK (ai.inc), line = 86
  2972
  2973 2076 AD 2D 25			lda PLAYER1.ISALIVE
  2974 2079 0D 35 25			ora PLAYER2.ISALIVE
  2975 207C D0 03 4C 23 21		jeq l_0AEE
  2976
  2977 				; optimize OK (ai.inc), line = 88
  2978
  2979 2081 AD 2D 25			lda PLAYER1.ISALIVE
  2980 2084 F0 0F			jeq l_0AFB
  2981 2086 AD 09 25			lda PLAYER1
  2982 2089 8D 07 25			sta TMPPLY
  2983 208C AD 0A 25			lda PLAYER1+1
  2984 208F 8D 08 25			sta TMPPLY+1
  2985 2092 4C A1 20			jmp l_0B0A
  2986 2095			l_0AFB
  2987 2095 AD 0B 25			lda PLAYER2
  2988 2098 8D 07 25			sta TMPPLY
  2989 209B AD 0C 25			lda PLAYER2+1
  2990 209E 8D 08 25			sta TMPPLY+1
  2991 20A1			l_0B0A
  2992
  2993 				; optimize OK (ai.inc), line = 90
  2994
  2995 20A1 AC 05 25 84 12 AC + 	mwy PLY :bp2
  2996 20AB A0 01			ldy #PLY.Y-DATAORIGIN
  2997 20AD B1 12			lda (:bp2),y
  2998 20AF 85 21			sta :STACKORIGIN+9
  2999 20B1 AC 07 25 84 12 AC + 	mwy TMPPLY :bp2
  3000 20BB A0 01			ldy #TMPPLY.Y-DATAORIGIN
  3001 20BD B1 12			lda (:bp2),y
  3002 20BF C5 21			cmp :STACKORIGIN+9
  3003 20C1 B0 07			jcs l_0B23
  3004 20C3 A9 01			lda #$01
  3005 20C5 85 58			sta T0B
  3006 20C7 4C CE 20			jmp l_0B31
  3007 20CA			l_0B23
  3008 20CA A9 02			lda #$02
  3009 20CC 85 58			sta T0B
  3010 20CE			l_0B31
  3011
  3012 				; optimize OK (ai.inc), line = 91
  3013
  3014 20CE AC 05 25 84 12 AC + 	mwy PLY :bp2
  3015 20D8 A0 01			ldy #PLY.Y-DATAORIGIN
  3016 20DA B1 12			lda (:bp2),y
  3017 20DC 85 21			sta :STACKORIGIN+9
  3018 20DE AC 07 25 84 12 AC + 	mwy TMPPLY :bp2
  3019 20E8 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  3020 20EA B1 12			lda (:bp2),y
  3021 20EC C5 21			cmp :STACKORIGIN+9
  3022 20EE F0 06			jeq l_0B5Bx
  3023 20F0 A5 5C			lda AVAILDIR
  3024 20F2 25 58			and T0B
  3025 20F4 D0 2D			jne l_0B5B
  3026 20F6			l_0B5Bx
  3027
  3028 				; optimize OK (ai.inc), line = 92
  3029
  3030 20F6 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3031 2100 A0 00			ldy #PLY.X-DATAORIGIN
  3032 2102 B1 12			lda (:bp2),y
  3033 2104 85 21			sta :STACKORIGIN+9
  3034 2106 AC 07 25 84 12 AC + 	mwy TMPPLY :bp2
  3035 2110 A0 00			ldy #TMPPLY.X-DATAORIGIN
  3036 2112 B1 12			lda (:bp2),y
  3037 2114 C5 21			cmp :STACKORIGIN+9
  3038 2116 B0 07			jcs l_0B70
  3039 2118 A9 04			lda #$04
  3040 211A 85 58			sta T0B
  3041 211C 4C 23 21			jmp l_0B7E
  3042 211F			l_0B70
  3043 211F A9 08			lda #$08
  3044 2121 85 58			sta T0B
  3045 2123			l_0B7E
  3046 2123			l_0B5B
  3047 2123			l_0AEE
  3048
  3049 				; optimize OK (ai.inc), line = 96
  3050
  3051 2123 A5 5C			lda AVAILDIR
  3052 2125 25 58			and T0B
  3053 2127 F0 07			jeq l_0B9E
  3054 2129 A5 58			lda T0B
  3055 212B 85 5B			sta NEWDIR
  3056 212D 4C 33 21			jmp l_0BAE
  3057 2130			l_0B9E
  3058
  3059 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  3060
  3061 2130 20 0C 1E			jsr AISAPPER
  3062 2133			l_0BAE
  3063 2133			@exit
  3064 					.ifdef @new
  3065 					lda <@VarData
  3066 					sta :ztmp
  3067 					lda >@VarData
  3068 					ldy #@VarDataSize-1
  3069 					jmp @FreeMem
  3070 					els
  3071 2133 60				rts						; ret
  3072 					eif
  3073 				.endl
  3074
  3075 2134			.local	AIMIRROR					; PROCEDURE
  3076
  3077 				; optimize OK (ai.inc), line = 105
  3078
  3079 2134 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3080 213E A0 04			ldy #PLY.DIR-DATAORIGIN
  3081 2140 B1 12			lda (:bp2),y
  3082 2142 85 58			sta T0B
  3083
  3084 				; optimize OK (ai.inc), line = 107
  3085
  3086 2144 AD 2D 25			lda PLAYER1.ISALIVE
  3087 2147 F0 2F			jeq l_0BC5
  3088
  3089 				; optimize OK (ai.inc), line = 108
  3090
  3091 2149 AD 2A 25			lda PLAYER1.DIR
  3092 214C 8D 6B 25			sta @CASETMP_0005
  3093 214F C9 01			cmp #$01
  3094 2151 D0 07			jne l_0BD1
  3095 2153			@
  3096
  3097 				; optimize OK (ai.inc), line = 109
  3098
  3099 2153 A9 02			lda #$02
  3100 2155 85 58			sta T0B
  3101
  3102 2157 4C 78 21			jmp a_0005
  3103 215A			l_0BD1
  3104 215A C9 02			cmp #$02
  3105 215C D0 07			jne l_0BDE
  3106 215E			@
  3107
  3108 				; optimize OK (ai.inc), line = 110
  3109
  3110 215E A9 01			lda #$01
  3111 2160 85 58			sta T0B
  3112
  3113 2162 4C 78 21			jmp a_0005
  3114 2165			l_0BDE
  3115 2165 C9 04			cmp #$04
  3116 2167 D0 07			jne l_0BEB
  3117 2169			@
  3118
  3119 				; optimize OK (ai.inc), line = 111
  3120
  3121 2169 A9 08			lda #$08
  3122 216B 85 58			sta T0B
  3123
  3124 216D 4C 78 21			jmp a_0005
  3125 2170			l_0BEB
  3126 2170 C9 08			cmp #$08
  3127 2172 D0 04			jne l_0BF8
  3128 2174			@
  3129
  3130 				; optimize OK (ai.inc), line = 112
  3131
  3132 2174 A9 04			lda #$04
  3133 2176 85 58			sta T0B
  3134
  3135 2178			l_0BF8
  3136 2178			a_0005
  3137 2178			l_0BC5
  3138
  3139 				; optimize OK (ai.inc), line = 116
  3140
  3141 2178 A5 5C			lda AVAILDIR
  3142 217A 25 58			and T0B
  3143 217C F0 07			jeq l_0C1E
  3144 217E A5 58			lda T0B
  3145 2180 85 5B			sta NEWDIR
  3146 2182 4C 88 21			jmp l_0C2E
  3147 2185			l_0C1E
  3148
  3149 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  3150
  3151 2185 20 0C 1E			jsr AISAPPER
  3152 2188			l_0C2E
  3153
  3154 				; ------------------------------------------------------------
  3155
  3156 = 256B			@CASETMP_0005	= DATAORIGIN+$0057
  3157
  3158 = 256B			@VarData	= @CASETMP_0005
  3159 = 0001			@VarDataSize	= 1
  3160
  3161 2188			@exit
  3162 					.ifdef @new
  3163 					lda <@VarData
  3164 					sta :ztmp
  3165 					lda >@VarData
  3166 					ldy #@VarDataSize-1
  3167 					jmp @FreeMem
  3168 					els
  3169 2188 60				rts						; ret
  3170 					eif
  3171 				.endl
  3172
  3173 2189			.local	HUMAN						; PROCEDURE
  3174
  3175 				; optimize OK (main.pas), line = 14
  3176
  3177 2189 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3178 2193 A0 04			ldy #PLY.DIR-DATAORIGIN
  3179 2195 B1 12			lda (:bp2),y
  3180 2197 85 5B			sta NEWDIR
  3181
  3182 				; optimize OK (main.pas), line = 15
  3183
  3184 2199 A9 02			lda #$02
  3185 219B 8D 08 FF			sta JOY
  3186 219E A9 FF			lda #$FF
  3187 21A0 8D 30 FD			sta KEYSCAN
  3188 21A3 AD 08 FF			lda JOY
  3189 21A6 49 FF			eor #$FF
  3190 21A8 85 58			sta T0B
  3191
  3192 				; optimize OK (main.pas), line = 17
  3193
  3194 21AA 8D 6C 25			sta @CASETMP_0006
  3195 21AD C9 01			cmp #$01
  3196 21AF D0 19			jne l_0C56
  3197 21B1			@
  3198
  3199 				; optimize OK (main.pas), line = 18
  3200
  3201 21B1 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3202 21BB A0 04			ldy #PLY.DIR-DATAORIGIN
  3203 21BD B1 12			lda (:bp2),y
  3204 21BF C9 02			cmp #$02
  3205 21C1 F0 04			jeq l_0C68
  3206 21C3 A9 01			lda #$01
  3207 21C5 85 5B			sta NEWDIR
  3208 21C7			l_0C68
  3209
  3210 21C7 4C 1E 22			jmp a_0006
  3211 21CA			l_0C56
  3212 21CA C9 02			cmp #$02
  3213 21CC D0 19			jne l_0C78
  3214 21CE			@
  3215
  3216 				; optimize OK (main.pas), line = 19
  3217
  3218 21CE AC 05 25 84 12 AC + 	mwy PLY :bp2
  3219 21D8 A0 04			ldy #PLY.DIR-DATAORIGIN
  3220 21DA B1 12			lda (:bp2),y
  3221 21DC C9 01			cmp #$01
  3222 21DE F0 04			jeq l_0C8A
  3223 21E0 A9 02			lda #$02
  3224 21E2 85 5B			sta NEWDIR
  3225 21E4			l_0C8A
  3226
  3227 21E4 4C 1E 22			jmp a_0006
  3228 21E7			l_0C78
  3229 21E7 C9 04			cmp #$04
  3230 21E9 D0 19			jne l_0C9A
  3231 21EB			@
  3232
  3233 				; optimize OK (main.pas), line = 20
  3234
  3235 21EB AC 05 25 84 12 AC + 	mwy PLY :bp2
  3236 21F5 A0 04			ldy #PLY.DIR-DATAORIGIN
  3237 21F7 B1 12			lda (:bp2),y
  3238 21F9 C9 08			cmp #$08
  3239 21FB F0 04			jeq l_0CAC
  3240 21FD A9 04			lda #$04
  3241 21FF 85 5B			sta NEWDIR
  3242 2201			l_0CAC
  3243
  3244 2201 4C 1E 22			jmp a_0006
  3245 2204			l_0C9A
  3246 2204 C9 08			cmp #$08
  3247 2206 D0 16			jne l_0CBC
  3248 2208			@
  3249
  3250 				; optimize OK (main.pas), line = 21
  3251
  3252 2208 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3253 2212 A0 04			ldy #PLY.DIR-DATAORIGIN
  3254 2214 B1 12			lda (:bp2),y
  3255 2216 C9 04			cmp #$04
  3256 2218 F0 04			jeq l_0CCE
  3257 221A A9 08			lda #$08
  3258 221C 85 5B			sta NEWDIR
  3259 221E			l_0CCE
  3260
  3261 221E			l_0CBC
  3262 221E			a_0006
  3263
  3264 				; optimize OK (main.pas), line = 24
  3265
  3266 221E A5 5B			lda NEWDIR
  3267 2220 25 5C			and AVAILDIR
  3268 2222 D0 18			jne l_0CF5
  3269
  3270 				; optimize OK (main.pas), line = 25
  3271
  3272 2224 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3273 222E A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3274 2230 A9 00			lda #$00
  3275 2232 91 12			sta (:bp2),y
  3276 2234 A0 02			ldy #PLY.HEAD-DATAORIGIN
  3277 2236 A9 2A			lda #$2A
  3278 2238 91 12			sta (:bp2),y
  3279 223A C6 5A			dec ALIVE
  3280 223C			l_0CF5
  3281
  3282 				; ------------------------------------------------------------
  3283
  3284 = 256C			@CASETMP_0006	= DATAORIGIN+$0058
  3285
  3286 = 256C			@VarData	= @CASETMP_0006
  3287 = 0001			@VarDataSize	= 1
  3288
  3289 223C			@exit
  3290 					.ifdef @new
  3291 					lda <@VarData
  3292 					sta :ztmp
  3293 					lda >@VarData
  3294 					ldy #@VarDataSize-1
  3295 					jmp @FreeMem
  3296 					els
  3297 223C 60				rts						; ret
  3298 					eif
  3299 				.endl
  3300
  3301 223D			.local	PLAYERMOVE					; PROCEDURE
  3302
  3303 				; optimize OK (main.pas), line = 33
  3304
  3305 223D AC 05 25 84 12 AC + 	mwy PLY :bp2
  3306 2247 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3307 2249 B1 12			lda (:bp2),y
  3308 224B D0 03 4C 91 23		jeq l_0D14
  3309
  3310 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 34
  3311
  3312 2250 20 01 12			jsr CHECKAVAILDIR
  3313
  3314 				; optimize OK (main.pas), line = 36
  3315
  3316 2253 A5 5C			lda AVAILDIR
  3317 2255 D0 35			jne l_0D28
  3318
  3319 				; optimize OK (main.pas), line = 37
  3320
  3321 2257 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3322 2261 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3323 2263 A9 00			lda #$00
  3324 2265 91 12			sta (:bp2),y
  3325 2267 C6 5A			dec ALIVE
  3326
  3327 				; optimize OK (main.pas), line = 38
  3328
  3329 2269 A0 00			ldy #PLY.X-DATAORIGIN
  3330 226B B1 12			lda (:bp2),y
  3331 226D 8D 56 25			sta PUTCHAR.X
  3332 2270 A0 01			ldy #PLY.Y-DATAORIGIN
  3333 2272 B1 12			lda (:bp2),y
  3334 2274 8D 57 25			sta PUTCHAR.Y
  3335 2277 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3336 2279 B1 12			lda (:bp2),y
  3337 227B 18 69 80			add #$80
  3338 227E 8D 59 25			sta PUTCHAR.C
  3339 2281 A9 57			lda #$57
  3340 2283 8D 58 25			sta PUTCHAR.V
  3341 2286 20 71 11			jsr PUTCHAR
  3342 2289 4C 91 23			jmp l_0D49
  3343 228C			l_0D28
  3344
  3345 				; optimize OK (main.pas), line = 41
  3346
  3347 228C AC 05 25 84 12 AC + 	mwy PLY :bp2
  3348 2296 A0 05			ldy #PLY.BRAIN-DATAORIGIN
  3349 2298 B1 12			lda (:bp2),y
  3350 229A 8D 6D 25			sta @CASETMP_0007
  3351 229D C9 00			cmp #$00
  3352 229F D0 06			jne l_0D54
  3353 22A1			@
  3354
  3355 				; optimize FAIL ('HUMAN', main.pas), line = 42
  3356
  3357 22A1 20 89 21			jsr HUMAN
  3358 22A4 4C CC 22			jmp a_0007
  3359 22A7			l_0D54
  3360 22A7 C9 01			cmp #$01
  3361 22A9 D0 06			jne l_0D5E
  3362 22AB			@
  3363
  3364 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 43
  3365
  3366 22AB 20 87 1D			jsr AISTRAIGHT
  3367 22AE 4C CC 22			jmp a_0007
  3368 22B1			l_0D5E
  3369 22B1 C9 02			cmp #$02
  3370 22B3 D0 06			jne l_0D68
  3371 22B5			@
  3372
  3373 				; optimize FAIL ('AISAPPER', main.pas), line = 44
  3374
  3375 22B5 20 0C 1E			jsr AISAPPER
  3376 22B8 4C CC 22			jmp a_0007
  3377 22BB			l_0D68
  3378 22BB C9 03			cmp #$03
  3379 22BD D0 06			jne l_0D72
  3380 22BF			@
  3381
  3382 				; optimize FAIL ('AIBULLY', main.pas), line = 45
  3383
  3384 22BF 20 66 20			jsr AIBULLY
  3385 22C2 4C CC 22			jmp a_0007
  3386 22C5			l_0D72
  3387 22C5 C9 04			cmp #$04
  3388 22C7 D0 03			jne l_0D7C
  3389 22C9			@
  3390
  3391 				; optimize FAIL ('AIMIRROR', main.pas), line = 46
  3392
  3393 22C9 20 34 21			jsr AIMIRROR
  3394 22CC			l_0D7C
  3395 22CC			a_0007
  3396
  3397 				; optimize FAIL ('DRAWTAIL', main.pas), line = 49
  3398
  3399 22CC 20 0F 13			jsr DRAWTAIL
  3400 22CF AC 05 25 84 12 AC + 	mwy PLY :bp2
  3401 22D9 A0 04			ldy #PLY.DIR-DATAORIGIN
  3402 22DB A5 5B			lda NEWDIR
  3403 22DD 91 12			sta (:bp2),y
  3404
  3405 				; optimize OK (main.pas), line = 51
  3406
  3407 22DF A5 5B			lda NEWDIR
  3408 22E1 8D 6E 25			sta @CASETMP_0008
  3409 22E4 C9 01			cmp #$01
  3410 22E6 D0 16			jne l_0D98
  3411 22E8			@
  3412
  3413 				; optimize OK (main.pas), line = 52
  3414
  3415 22E8 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3416 22F2 A0 01			ldy #PLY.Y-DATAORIGIN
  3417 22F4 B1 12			lda (:bp2),y
  3418 22F6 38 E9 01			sub #$01
  3419 22F9 91 12			sta (:bp2),y
  3420
  3421 22FB 4C 49 23			jmp a_0008
  3422 22FE			l_0D98
  3423 22FE C9 02			cmp #$02
  3424 2300 D0 16			jne l_0DA2
  3425 2302			@
  3426
  3427 				; optimize OK (main.pas), line = 53
  3428
  3429 2302 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3430 230C A0 01			ldy #PLY.Y-DATAORIGIN
  3431 230E B1 12			lda (:bp2),y
  3432 2310 18 69 01			add #$01
  3433 2313 91 12			sta (:bp2),y
  3434
  3435 2315 4C 49 23			jmp a_0008
  3436 2318			l_0DA2
  3437 2318 C9 04			cmp #$04
  3438 231A D0 16			jne l_0DAC
  3439 231C			@
  3440
  3441 				; optimize OK (main.pas), line = 54
  3442
  3443 231C AC 05 25 84 12 AC + 	mwy PLY :bp2
  3444 2326 A0 00			ldy #PLY.X-DATAORIGIN
  3445 2328 B1 12			lda (:bp2),y
  3446 232A 38 E9 01			sub #$01
  3447 232D 91 12			sta (:bp2),y
  3448
  3449 232F 4C 49 23			jmp a_0008
  3450 2332			l_0DAC
  3451 2332 C9 08			cmp #$08
  3452 2334 D0 13			jne l_0DB6
  3453 2336			@
  3454
  3455 				; optimize OK (main.pas), line = 55
  3456
  3457 2336 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3458 2340 A0 00			ldy #PLY.X-DATAORIGIN
  3459 2342 B1 12			lda (:bp2),y
  3460 2344 18 69 01			add #$01
  3461 2347 91 12			sta (:bp2),y
  3462
  3463 2349			l_0DB6
  3464 2349			a_0008
  3465
  3466 				; optimize OK (main.pas), line = 58
  3467
  3468 2349 AC 05 25 84 12 AC + 	mwy PLY :bp2
  3469 2353 A0 00			ldy #PLY.X-DATAORIGIN
  3470 2355 B1 12			lda (:bp2),y
  3471 2357 8D 56 25			sta PUTCHAR.X
  3472 235A A0 01			ldy #PLY.Y-DATAORIGIN
  3473 235C B1 12			lda (:bp2),y
  3474 235E 8D 57 25			sta PUTCHAR.Y
  3475 2361 A0 02			ldy #PLY.HEAD-DATAORIGIN
  3476 2363 B1 12			lda (:bp2),y
  3477 2365 8D 58 25			sta PUTCHAR.V
  3478 2368 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3479 236A B1 12			lda (:bp2),y
  3480 236C 8D 59 25			sta PUTCHAR.C
  3481 236F 20 71 11			jsr PUTCHAR
  3482
  3483 				; optimize OK (main.pas), line = 61
  3484
  3485 2372 AD 2D 25			lda PLAYER1.ISALIVE
  3486 2375 D0 1A			jne l_0DDB
  3487 2377 AD 29 25			lda PLAYER1.COLOUR
  3488 237A 8D 59 25			sta PUTCHAR.C
  3489 237D A9 2A			lda #$2A
  3490 237F 8D 58 25			sta PUTCHAR.V
  3491 2382 AD 27 25			lda PLAYER1.Y
  3492 2385 8D 57 25			sta PUTCHAR.Y
  3493 2388 AD 26 25			lda PLAYER1.X
  3494 238B 8D 56 25			sta PUTCHAR.X
  3495 238E 20 71 11			jsr PUTCHAR
  3496 2391			l_0DDB
  3497 2391			l_0D49
  3498 2391			l_0D14
  3499
  3500 				; ------------------------------------------------------------
  3501
  3502 = 256D			@CASETMP_0007	= DATAORIGIN+$0059
  3503 = 256E			@CASETMP_0008	= DATAORIGIN+$005A
  3504
  3505 = 256D			@VarData	= @CASETMP_0007
  3506 = 0002			@VarDataSize	= 2
  3507
  3508 2391			@exit
  3509 					.ifdef @new
  3510 					lda <@VarData
  3511 					sta :ztmp
  3512 					lda >@VarData
  3513 					ldy #@VarDataSize-1
  3514 					jmp @FreeMem
  3515 					els
  3516 2391 60				rts						; ret
  3517 					eif
  3518 				.endl
  3519
  3520 2392			.local	STARTSCREEN					; PROCEDURE
  3521
  3522 				; --- RepeatUntilProlog
  3523 2392			l_0DF0
  3524
  3525 				; optimize OK (main.pas), line = 73
  3526
  3527 2392 A9 02			lda #$02
  3528 2394 8D 08 FF			sta JOY
  3529 2397 A9 FF			lda #$FF
  3530 2399 8D 30 FD			sta KEYSCAN
  3531 239C AD 08 FF			lda JOY
  3532 239F 49 FF			eor #$FF
  3533 23A1 85 58			sta T0B
  3534
  3535 				; optimize OK (main.pas), line = 74
  3536
  3537 23A3 C9 40			cmp #$40
  3538 23A5 D0 EB			jne l_0DF0
  3539 23A7			@exit
  3540 					.ifdef @new
  3541 					lda <@VarData
  3542 					sta :ztmp
  3543 					lda >@VarData
  3544 					ldy #@VarDataSize-1
  3545 					jmp @FreeMem
  3546 					els
  3547 23A7 60				rts						; ret
  3548 					eif
  3549 				.endl
  3550
  3551 23A8			.local	MAINLOOP					; PROCEDURE
  3552
  3553 				; optimize OK (main.pas), line = 81
  3554
  3555 23A8 A9 FF			lda #$FF
  3556 23AA 85 5A			sta ALIVE
  3557
  3558 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 83
  3559
  3560 23AC 20 31 14			jsr INITPLAYFIELD
  3561
  3562 				; optimize OK (main.pas), line = 85
  3563
  3564 23AF AD 24 25			lda LEVEL
  3565 23B2 8D 6F 25			sta @CASETMP_0009
  3566 23B5 C9 00			cmp #$00
  3567 23B7 D0 06			jne l_0E23
  3568 23B9			@
  3569
  3570 				; optimize FAIL ('SETLEVEL01', main.pas), line = 86
  3571
  3572 23B9 20 B1 14			jsr SETLEVEL01
  3573 23BC 4C 02 24			jmp a_0009
  3574 23BF			l_0E23
  3575 23BF C9 01			cmp #$01
  3576 23C1 D0 06			jne l_0E2D
  3577 23C3			@
  3578
  3579 				; optimize FAIL ('SETLEVEL02', main.pas), line = 87
  3580
  3581 23C3 20 CD 15			jsr SETLEVEL02
  3582 23C6 4C 02 24			jmp a_0009
  3583 23C9			l_0E2D
  3584 23C9 C9 02			cmp #$02
  3585 23CB D0 06			jne l_0E37
  3586 23CD			@
  3587
  3588 				; optimize FAIL ('SETLEVEL03', main.pas), line = 88
  3589
  3590 23CD 20 E9 16			jsr SETLEVEL03
  3591 23D0 4C 02 24			jmp a_0009
  3592 23D3			l_0E37
  3593 23D3 C9 03			cmp #$03
  3594 23D5 D0 06			jne l_0E41
  3595 23D7			@
  3596
  3597 				; optimize FAIL ('SETLEVEL04', main.pas), line = 89
  3598
  3599 23D7 20 05 18			jsr SETLEVEL04
  3600 23DA 4C 02 24			jmp a_0009
  3601 23DD			l_0E41
  3602 23DD C9 04			cmp #$04
  3603 23DF D0 06			jne l_0E4B
  3604 23E1			@
  3605
  3606 				; optimize FAIL ('SETLEVEL05', main.pas), line = 90
  3607
  3608 23E1 20 21 19			jsr SETLEVEL05
  3609 23E4 4C 02 24			jmp a_0009
  3610 23E7			l_0E4B
  3611 23E7 C9 05			cmp #$05
  3612 23E9 D0 06			jne l_0E55
  3613 23EB			@
  3614
  3615 				; optimize FAIL ('SETLEVEL06', main.pas), line = 91
  3616
  3617 23EB 20 3D 1A			jsr SETLEVEL06
  3618 23EE 4C 02 24			jmp a_0009
  3619 23F1			l_0E55
  3620 23F1 C9 06			cmp #$06
  3621 23F3 D0 06			jne l_0E5F
  3622 23F5			@
  3623
  3624 				; optimize FAIL ('SETLEVEL07', main.pas), line = 92
  3625
  3626 23F5 20 57 1B			jsr SETLEVEL07
  3627 23F8 4C 02 24			jmp a_0009
  3628 23FB			l_0E5F
  3629 23FB C9 07			cmp #$07
  3630 23FD D0 03			jne l_0E69
  3631 23FF			@
  3632
  3633 				; optimize FAIL ('SETLEVEL08', main.pas), line = 93
  3634
  3635 23FF 20 6F 1C			jsr SETLEVEL08
  3636 2402			l_0E69
  3637 2402			a_0009
  3638
  3639 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 96
  3640
  3641 2402 20 96 12			jsr ANIMATEOBSTACLES
  3642 2405 20 9C 11			jsr SHOWSCORE
  3643 2408 20 92 23			jsr STARTSCREEN
  3644
  3645 				; --- RepeatUntilProlog
  3646 240B			l_0E7A
  3647
  3648 				; optimize OK (main.pas), line = 99
  3649
  3650 240B A9 04			lda #$04
  3651 240D 8D 20 25			sta SYSTEM.PAUSE_006B.N
  3652 2410 A9 00			lda #$00
  3653 2412 8D 21 25			sta SYSTEM.PAUSE_006B.N+1
  3654 2415 20 23 11			jsr SYSTEM.PAUSE_006B
  3655
  3656 				; optimize OK (main.pas), line = 100
  3657
  3658 2418 AD 09 25			lda PLAYER1
  3659 241B 8D 05 25			sta PLY
  3660 241E AD 0A 25			lda PLAYER1+1
  3661 2421 8D 06 25			sta PLY+1
  3662 2424 20 3D 22			jsr PLAYERMOVE
  3663
  3664 				; optimize OK (main.pas), line = 101
  3665
  3666 2427 AD 0B 25			lda PLAYER2
  3667 242A 8D 05 25			sta PLY
  3668 242D AD 0C 25			lda PLAYER2+1
  3669 2430 8D 06 25			sta PLY+1
  3670 2433 20 3D 22			jsr PLAYERMOVE
  3671
  3672 				; optimize OK (main.pas), line = 102
  3673
  3674 2436 AD 0D 25			lda PLAYER3
  3675 2439 8D 05 25			sta PLY
  3676 243C AD 0E 25			lda PLAYER3+1
  3677 243F 8D 06 25			sta PLY+1
  3678 2442 20 3D 22			jsr PLAYERMOVE
  3679
  3680 				; optimize OK (main.pas), line = 103
  3681
  3682 2445 AD 0F 25			lda PLAYER4
  3683 2448 8D 05 25			sta PLY
  3684 244B AD 10 25			lda PLAYER4+1
  3685 244E 8D 06 25			sta PLY+1
  3686 2451 20 3D 22			jsr PLAYERMOVE
  3687
  3688 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 104
  3689
  3690 2454 20 96 12			jsr ANIMATEOBSTACLES
  3691
  3692 				; optimize OK (main.pas), line = 105
  3693
  3694 2457 A5 5A			lda ALIVE
  3695 2459 F0 04			jeq l_0E7Ax
  3696 245B C9 FF			cmp #$FF
  3697 245D D0 AC			jne l_0E7A
  3698 245F			l_0E7Ax
  3699
  3700 				; optimize OK (main.pas), line = 107
  3701
  3702 245F AD 2D 25			lda PLAYER1.ISALIVE
  3703 2462 F0 03			jeq l_0EBA
  3704 2464 EE 2C 25			inc PLAYER1.SCORE
  3705 2467			l_0EBA
  3706
  3707 				; optimize OK (main.pas), line = 108
  3708
  3709 2467 AD 35 25			lda PLAYER2.ISALIVE
  3710 246A F0 03			jeq l_0ECD
  3711 246C EE 34 25			inc PLAYER2.SCORE
  3712 246F			l_0ECD
  3713
  3714 				; optimize OK (main.pas), line = 109
  3715
  3716 246F AD 3D 25			lda PLAYER3.ISALIVE
  3717 2472 F0 03			jeq l_0EE0
  3718 2474 EE 3C 25			inc PLAYER3.SCORE
  3719 2477			l_0EE0
  3720
  3721 				; optimize OK (main.pas), line = 110
  3722
  3723 2477 AD 45 25			lda PLAYER4.ISALIVE
  3724 247A F0 03			jeq l_0EF3
  3725 247C EE 44 25			inc PLAYER4.SCORE
  3726 247F			l_0EF3
  3727
  3728 				; optimize OK (main.pas), line = 112
  3729
  3730 247F A9 64			lda #$64
  3731 2481 8D 20 25			sta SYSTEM.PAUSE_006B.N
  3732 2484 A9 00			lda #$00
  3733 2486 8D 21 25			sta SYSTEM.PAUSE_006B.N+1
  3734 2489 20 23 11			jsr SYSTEM.PAUSE_006B
  3735
  3736 				; ------------------------------------------------------------
  3737
  3738 = 256F			@CASETMP_0009	= DATAORIGIN+$005B
  3739
  3740 = 256F			@VarData	= @CASETMP_0009
  3741 = 0001			@VarDataSize	= 1
  3742
  3743 248C			@exit
  3744 					.ifdef @new
  3745 					lda <@VarData
  3746 					sta :ztmp
  3747 					lda >@VarData
  3748 					ldy #@VarDataSize-1
  3749 					jmp @FreeMem
  3750 					els
  3751 248C 60				rts						; ret
  3752 					eif
  3753 				.endl
  3754 248D			l_0007
  3755
  3756 				; --- RepeatUntilProlog
  3757 248D			l_0EFE
  3758
  3759 				; optimize OK (main.pas), line = 119
  3760
  3761 248D A9 30			lda #$30
  3762 248F 8D 2C 25			sta PLAYER1.SCORE
  3763 2492 8D 34 25			sta PLAYER2.SCORE
  3764
  3765 				; optimize OK (main.pas), line = 120
  3766
  3767 2495 8D 3C 25			sta PLAYER3.SCORE
  3768 2498 8D 44 25			sta PLAYER4.SCORE
  3769
  3770 				; optimize OK (main.pas), line = 121
  3771
  3772 249B A9 00			lda #$00
  3773 249D 8D 24 25			sta LEVEL
  3774
  3775 				; optimize OK (main.pas), line = 123
  3776
  3777 24A0 8D 25 25			sta GAMEOVER
  3778
  3779 				; --- RepeatUntilProlog
  3780 24A3			l_0F17
  3781
  3782 				; optimize FAIL ('MAINLOOP', main.pas), line = 125
  3783
  3784 24A3 20 A8 23			jsr MAINLOOP
  3785
  3786 				; optimize FAIL (0, main.pas), line = 126
  3787
  3788 24A6 EE 24 25			inc LEVEL
  3789 24A9 AD 24 25			lda LEVEL
  3790 24AC C9 08			cmp #$08
  3791 24AE D0 05			jne l_0F2E
  3792 24B0 A9 04			lda #$04
  3793 24B2 8D 24 25			sta LEVEL
  3794 24B5			l_0F2E
  3795
  3796 				; optimize OK (main.pas), line = 127
  3797
  3798 24B5 AD 2C 25			lda PLAYER1.SCORE
  3799 24B8 C9 39			cmp #$39
  3800 24BA D0 05			jne l_0F47
  3801 24BC A9 01			lda #$01
  3802 24BE 8D 25 25			sta GAMEOVER
  3803 24C1			l_0F47
  3804
  3805 				; optimize OK (main.pas), line = 128
  3806
  3807 24C1 AD 34 25			lda PLAYER2.SCORE
  3808 24C4 C9 39			cmp #$39
  3809 24C6 D0 05			jne l_0F60
  3810 24C8 A9 01			lda #$01
  3811 24CA 8D 25 25			sta GAMEOVER
  3812 24CD			l_0F60
  3813
  3814 				; optimize OK (main.pas), line = 129
  3815
  3816 24CD AD 3C 25			lda PLAYER3.SCORE
  3817 24D0 C9 39			cmp #$39
  3818 24D2 D0 05			jne l_0F79
  3819 24D4 A9 01			lda #$01
  3820 24D6 8D 25 25			sta GAMEOVER
  3821 24D9			l_0F79
  3822
  3823 				; optimize OK (main.pas), line = 130
  3824
  3825 24D9 AD 44 25			lda PLAYER4.SCORE
  3826 24DC C9 39			cmp #$39
  3827 24DE D0 05			jne l_0F92
  3828 24E0 A9 01			lda #$01
  3829 24E2 8D 25 25			sta GAMEOVER
  3830 24E5			l_0F92
  3831
  3832 				; optimize OK (main.pas), line = 131
  3833
  3834 24E5 AD 25 25			lda GAMEOVER
  3835 24E8 F0 B9			jeq l_0F17
  3836
  3837 				; optimize FAIL ('SHOWSCORE', main.pas), line = 133
  3838
  3839 24EA 20 9C 11			jsr SHOWSCORE
  3840
  3841 				; optimize OK (main.pas), line = 135
  3842
  3843 24ED A9 C8			lda #$C8
  3844 24EF 8D 20 25			sta SYSTEM.PAUSE_006B.N
  3845 24F2 A9 00			lda #$00
  3846 24F4 8D 21 25			sta SYSTEM.PAUSE_006B.N+1
  3847 24F7 20 23 11			jsr SYSTEM.PAUSE_006B
  3848
  3849 				; optimize OK (main.pas), line = 136
  3850
  3851 24FA 4C 8D 24			jmp l_0EFE
  3852
  3853 				; ------------------------------------------------------------
  3854
  3855 = 0800			ATTRIBUTE_ADDR	= $0800
  3856 = 0C00			SCREEN_ADDR	= $0C00
  3857 = 0009			VICTORIES	= $09
  3858 = 0005			LOOK_AHEAD	= $05
  3859 = 00FE			TRASH	= $FE
  3860 = 0020			EMPTY	= $20
  3861 = 00A0			WALL	= $A0
  3862 = 0041			WALL_COLOUR	= $41
  3863 = 0030			ZERO	= $30
  3864 = 0056			OBSTACLE_1	= $56
  3865 = 005B			OBSTACLE_2	= $5B
  3866 = 0035			OBST_COLOUR	= $35
  3867 = 0051			PLY_HEAD	= $51
  3868 = 002A			PLY_CRASH	= $2A
  3869 = 0057			PLY_BUSTED	= $57
  3870 = 0042			PLY_TAIL_UD	= $42
  3871 = 0040			PLY_TAIL_LR	= $40
  3872 = 007D			PLY_TAIL_RD	= $7D
  3873 = 006E			PLY_TAIL_RU	= $6E
  3874 = 006D			PLY_TAIL_LD	= $6D
  3875 = 0070			PLY_TAIL_LU	= $70
  3876 = 005F			PLY1_COLOUR	= $5F
  3877 = 005D			PLY2_COLOUR	= $5D
  3878 = 0071			PLY3_COLOUR	= $71
  3879 = 0055			PLY4_COLOUR	= $55
  3880 = 0000			PLY_CTRL	= $00
  3881 = 0001			AI_STRAIGHT	= $01
  3882 = 0002			AI_SAPPER	= $02
  3883 = 0003			AI_BULLY	= $03
  3884 = 0004			AI_MIRROR	= $04
  3885 = 0001			JOY_UP	= $01
  3886 = 0002			JOY_DOWN	= $02
  3887 = 0004			JOY_LEFT	= $04
  3888 = 0008			JOY_RIGHT	= $08
  3889 = 0040			JOY_FIRE	= $40
  3890 = 0002			JOY_SELECT_1	= $02
  3891 = 0004			JOY_SELECT_2	= $04
  3892 = 100E			adr.MUL40	= CODEORIGIN+$0000
  3893 24FD			.var MUL40	= adr.MUL40 .word
  3894 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  3895 24FD			.var DIRECTION	= adr.DIRECTION .word
  3896 = FD30			KEYSCAN	= $FD30
  3897 = FF08			JOY	= $FF08
  3898 = FF15			BACKGROUND	= $FF15
  3899 = FF19			BOREDER	= $FF19
  3900 = 0058			T0B	= $58
  3901 = 0059			I0B	= $59
  3902 = 005A			ALIVE	= $5A
  3903 = 005B			NEWDIR	= $5B
  3904 = 005C			AVAILDIR	= $5C
  3905 = 005D			T0W	= $5D
  3906 = 005F			adr.PLY	= $5F
  3907 24FD			.var PLY	= adr.PLY .word
  3908 = 2514			PLY.X	= DATAORIGIN+$0000
  3909 = 2515			PLY.Y	= DATAORIGIN+$0001
  3910 = 2516			PLY.HEAD	= DATAORIGIN+$0002
  3911 = 2517			PLY.COLOUR	= DATAORIGIN+$0003
  3912 = 2518			PLY.DIR	= DATAORIGIN+$0004
  3913 = 2519			PLY.BRAIN	= DATAORIGIN+$0005
  3914 = 251A			PLY.SCORE	= DATAORIGIN+$0006
  3915 = 251B			PLY.ISALIVE	= DATAORIGIN+$0007
  3916 = 0061			adr.TMPPLY	= $61
  3917 24FD			.var TMPPLY	= adr.TMPPLY .word
  3918 = 2514			TMPPLY.X	= DATAORIGIN+$0000
  3919 = 2515			TMPPLY.Y	= DATAORIGIN+$0001
  3920 = 2516			TMPPLY.HEAD	= DATAORIGIN+$0002
  3921 = 2517			TMPPLY.COLOUR	= DATAORIGIN+$0003
  3922 = 2518			TMPPLY.DIR	= DATAORIGIN+$0004
  3923 = 2519			TMPPLY.BRAIN	= DATAORIGIN+$0005
  3924 = 251A			TMPPLY.SCORE	= DATAORIGIN+$0006
  3925 = 251B			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  3926 = 2524			LEVEL	= DATAORIGIN+$0010
  3927 = 2525			GAMEOVER	= DATAORIGIN+$0011
  3928 = 2526			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  3929 24FD			.var PLAYER1	= adr.PLAYER1 .word
  3930 = 2526			PLAYER1.X	= DATAORIGIN+$0012
  3931 = 2527			PLAYER1.Y	= DATAORIGIN+$0013
  3932 = 2528			PLAYER1.HEAD	= DATAORIGIN+$0014
  3933 = 2529			PLAYER1.COLOUR	= DATAORIGIN+$0015
  3934 = 252A			PLAYER1.DIR	= DATAORIGIN+$0016
  3935 = 252B			PLAYER1.BRAIN	= DATAORIGIN+$0017
  3936 = 252C			PLAYER1.SCORE	= DATAORIGIN+$0018
  3937 = 252D			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  3938 = 252E			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  3939 24FD			.var PLAYER2	= adr.PLAYER2 .word
  3940 = 252E			PLAYER2.X	= DATAORIGIN+$001A
  3941 = 252F			PLAYER2.Y	= DATAORIGIN+$001B
  3942 = 2530			PLAYER2.HEAD	= DATAORIGIN+$001C
  3943 = 2531			PLAYER2.COLOUR	= DATAORIGIN+$001D
  3944 = 2532			PLAYER2.DIR	= DATAORIGIN+$001E
  3945 = 2533			PLAYER2.BRAIN	= DATAORIGIN+$001F
  3946 = 2534			PLAYER2.SCORE	= DATAORIGIN+$0020
  3947 = 2535			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  3948 = 2536			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  3949 24FD			.var PLAYER3	= adr.PLAYER3 .word
  3950 = 2536			PLAYER3.X	= DATAORIGIN+$0022
  3951 = 2537			PLAYER3.Y	= DATAORIGIN+$0023
  3952 = 2538			PLAYER3.HEAD	= DATAORIGIN+$0024
  3953 = 2539			PLAYER3.COLOUR	= DATAORIGIN+$0025
  3954 = 253A			PLAYER3.DIR	= DATAORIGIN+$0026
  3955 = 253B			PLAYER3.BRAIN	= DATAORIGIN+$0027
  3956 = 253C			PLAYER3.SCORE	= DATAORIGIN+$0028
  3957 = 253D			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  3958 = 253E			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  3959 24FD			.var PLAYER4	= adr.PLAYER4 .word
  3960 = 253E			PLAYER4.X	= DATAORIGIN+$002A
  3961 = 253F			PLAYER4.Y	= DATAORIGIN+$002B
  3962 = 2540			PLAYER4.HEAD	= DATAORIGIN+$002C
  3963 = 2541			PLAYER4.COLOUR	= DATAORIGIN+$002D
  3964 = 2542			PLAYER4.DIR	= DATAORIGIN+$002E
  3965 = 2543			PLAYER4.BRAIN	= DATAORIGIN+$002F
  3966 = 2544			PLAYER4.SCORE	= DATAORIGIN+$0030
  3967 = 2545			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  3968 = 2546			adr.OBSTACLES	= [DATAORIGIN+$0032] .array [8] .word
  3969 24FD			.var OBSTACLES	= adr.OBSTACLES .word
  3970 24FD			@exit
  3971
  3972 24FD A2 00		@halt	ldx #$00
  3973 24FF 9A				txs
  3974
  3975 2500 60				rts
  3976
  3977 				; ------------------------------------------------------------
  3978
  3979 				; ------------------------------------------------------------
  3980
  3981 2501			.local	@DEFINES
  3982 2501			C4P
  3983 				.endl
  3984
  3985 2501			.local	@RESOURCE
  3986 				.endl
  3987
  3988 = 2501 0E 10		MUL40
  3988 = 2503 40 10		DIRECTION
  3988 = 2505 5F 00		PLY
  3988 = 2507 61 00		TMPPLY
  3988 = 2509 26 25		PLAYER1
  3988 = 250B 2E 25		PLAYER2
  3988 = 250D 36 25		PLAYER3
  3988 = 250F 3E 25		PLAYER4
  3988 = 2511 46 25		OBSTACLES
  3988 				.endl							; MAIN
  3989
  3990 				; ------------------------------------------------------------
  3991 				; ------------------------------------------------------------
  3992
  3993 				.macro	UNITINITIALIZATION
  3994 				
  3995 					.ifdef MAIN.SYSTEM.@UnitInit
  3996 					jsr MAIN.SYSTEM.@UnitInit
  3997 					eif
  3998 				.endm
  3999
  4000 				; ------------------------------------------------------------
  4001
  4002 					ift .SIZEOF(MAIN.SYSTEM) > 0
  4003 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  4003 				SYSTEM: $10D5..$1170
  4004 					eif
  4005
  4006 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  4006 				CODE: $100E..$2500
  4007
  4008 				; ------------------------------------------------------------
  4009
  4010 2513				.align $04
  4011
  4012 2514			DATAORIGIN
  4013 2514 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  4014
  4015 = 0006			VARINITSIZE	= *-DATAORIGIN
  4016 = 005C			VARDATASIZE	= 92
  4017
  4018 = 2570			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  4019
  4020 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  4020 				DATA: $2514..$2570
  4021
  4022 				; ------------------------------------------------------------
  4023
  4024 				.macro	STATICDATA
  4025 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  4026 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  4027 				.by  $C0 $03 $01 $02 $04 $08
  4028 				.endm
  4029
  4030 					end
