mads 2.1.1
   129 					opt l+
    98
    99 				.print 'ZPAGE: ',psptr,'..',zpend-1
    99 				ZPAGE: $0002..$0057
   100
   101 				.print 'RTLIB: ',RTLIB,'..',*-1
   101 				RTLIB: $1044..$10B6
   102
   103 				; ------------------------------------------------------------
   104
   105 10B7			START
   106 10B7 BA				tsx
   107 10B8 8E 57 25			stx MAIN.@halt+1
   108
   109 					.ifdef fmulinit
   110 					fmulinit
   111 					eif
   112
   113 = 0059			VLEN	= VARDATASIZE-VARINITSIZE
   114 = 2572			VADR	= DATAORIGIN+VARINITSIZE
   115
   116 					ift VADR > $BFFF
   117 					ert 'Invalid memory address range ',VADR
   118 					eli (VLEN>0) && (VLEN<=256)
   119 10BB A2 A7			ldx #256-VLEN
   120 10BD A9 00			lda #$00
   121 10BF 9D CB 24 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   122 					eli VLEN>0
   123 					@fill #VADR #VLEN #$00
   124 					eif
   125
   126 10C5 A9 CB 85 02 A9 25 + 	mwa #PROGRAMSTACK psptr
   127
   128 10CD A2 00			ldx #$00
   129 10CF 86 10			stx bp						; BP = 0
   130
   131 10D1 CA				dex						; X = 255
   132
   133 10D2				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
Source: main.a65
   134
   135 10D2			.local	MAIN						; PROCEDURE
   136
   137 10D2 4C E4 24			jmp l_0007
   138
   139 				; ------------------------------------------------------------
   140
   141 10D5			.local	SYSTEM						; UNIT
   142
   143 10D5			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   144
   145 				; ------------------------------------------------------------
   146
   147 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   148 				; as Pointer
   149 10D5 B5 18			lda :STACKORIGIN,x
   150 10D7 85 08			sta A
   151 10D9 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   152 10DB 85 09			sta A+1
   153 10DD CA				dex
   154
   155 				; ---------------------  ASM Block 001  ---------------------
   156
   157 10DE A0 00			ldy #0
   158 10E0 B1 08 8D 77 25		mva (edx),y Result
   159
   160 10E5			@exit
   161
   162 				; ------------------------------------------------------------
   163
   164 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   165 				; as Pointer
   166
   167 10E5 E8				inx
   168 10E6 AD 77 25 95 18		mva RESULT :STACKORIGIN,x
   169
   170 					.ifdef @new
   171 					lda <@VarData
   172 					sta :ztmp
   173 					lda >@VarData
   174 					ldy #@VarDataSize-1
   175 					jmp @FreeMem
   176 					eif
   177
   178 				; ------------------------------------------------------------
   179
   180 = 0008			A	= edx
   181 = 2577			RESULT	= DATAORIGIN+$000B
   182
   183 = 2577			@VarData	= RESULT
   184 = 0001			@VarDataSize	= 1
   185
   186 10EB 60				rts						; ret
   187 				.endl
   188
   189 10EC			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 10EC B5 18			lda :STACKORIGIN,x
   196 10EE 85 0C			sta VALUE
   197 10F0 CA				dex
   198
   199 				; ------------------------------------------------------------
   200
   201 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   202 				; as Pointer
   203 10F1 B5 18			lda :STACKORIGIN,x
   204 10F3 85 08			sta A
   205 10F5 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   206 10F7 85 09			sta A+1
   207 10F9 CA				dex
   208
   209 				; ---------------------  ASM Block 016  ---------------------
   210
   211 10FA A0 00			ldy #0
   212 10FC A5 0C 91 08			mva value (edx),y
   213
   214
   215 				; ------------------------------------------------------------
   216
   217 = 0008			A	= edx
   218 = 000C			VALUE	= ecx
   219 1100			@exit
   220 					.ifdef @new
   221 					lda <@VarData
   222 					sta :ztmp
   223 					lda >@VarData
   224 					ldy #@VarDataSize-1
   225 					jmp @FreeMem
   226 					els
   227 1100 60				rts						; ret
   228 					eif
   229 				.endl
   230
   231 1101			.local	DPOKE						; PROCEDURE | ASSEMBLER | REGISTER
   232
   233 				; ------------------------------------------------------------
   234
   235 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   236 				; as Pointer
   237 1101 B5 18			lda :STACKORIGIN,x
   238 1103 85 0C			sta VALUE
   239 1105 B5 28			lda :STACKORIGIN+STACKWIDTH,x
   240 1107 85 0D			sta VALUE+1
   241 1109 CA				dex
   242
   243 				; ------------------------------------------------------------
   244
   245 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   246 				; as Pointer
   247 110A B5 18			lda :STACKORIGIN,x
   248 110C 85 08			sta A
   249 110E B5 28			lda :STACKORIGIN+STACKWIDTH,x
   250 1110 85 09			sta A+1
   251 1112 CA				dex
   252
   253 				; ---------------------  ASM Block 017  ---------------------
   254
   255 1113 A0 00			ldy #0
   256 1115 A5 0C 91 08			mva value (edx),y
   257 1119 C8				iny
   258 111A A5 0D 91 08			mva value+1 (edx),y
   259
   260
   261 				; ------------------------------------------------------------
   262
   263 = 0008			A	= edx
   264 = 000C			VALUE	= ecx
   265 111E			@exit
   266 					.ifdef @new
   267 					lda <@VarData
   268 					sta :ztmp
   269 					lda >@VarData
   270 					ldy #@VarDataSize-1
   271 					jmp @FreeMem
   272 					els
   273 111E 60				rts						; ret
   274 					eif
   275 				.endl
   276
   277 111F			.local	FILLCHAR_0056					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER
   278
   279 				; ---------------------  ASM Block 019  ---------------------
   280
   281 111F 20 5B 10			jsr @fill
   282
   283
   284 				; ------------------------------------------------------------
   285
   286 = 0008			A	= edx
   287 = 000C			COUNT	= ecx
   288 = 0004			VALUE	= eax
   289 1122			@exit
   290 					.ifdef @new
   291 					lda <@VarData
   292 					sta :ztmp
   293 					lda >@VarData
   294 					ldy #@VarDataSize-1
   295 					jmp @FreeMem
   296 					els
   297 1122 60				rts						; ret
   298 					eif
   299 				.endl
   300
   301 1123			.local	PAUSE_006B					; PROCEDURE | ASSEMBLER | OVERLOAD
   302
   303 				; ---------------------  ASM Block 034  ---------------------
   304
   305 1123 A5 A5 C5 A5 F0 FC	 lda:cmp:req :c4p_time+2
   306
   307 1129			@exit
   308 					.ifdef @new
   309 					lda <@VarData
   310 					sta :ztmp
   311 					lda >@VarData
   312 					ldy #@VarDataSize-1
   313 					jmp @FreeMem
   314 					els
   315 1129 60				rts						; ret
   316 					eif
   317 				.endl
   318
   319 112A			.local	PAUSE_006C					; PROCEDURE | ASSEMBLER | OVERLOAD
   320
   321 				; ---------------------  ASM Block 035  ---------------------
   322
   323
   324 112A AD 78 25		loop  lda n
   325 112D 0D 79 25		  ora n+1
   326 1130 F0 14		  beq stop
   327
   328 1132 A5 A5 C5 A5 F0 FC	  lda:cmp:req :c4p_time+2
   329
   330 1138 AD 78 25 D0 03 CE +   dew n
   331
   332 1143 4C 2A 11		  jmp loop
   333 1146			stop
   334
   335
   336 				; ------------------------------------------------------------
   337
   338 = 2578			N	= DATAORIGIN+$000C
   339
   340 = 2578			@VarData	= N
   341 = 0002			@VarDataSize	= 2
   342
   343 1146			@exit
   344 					.ifdef @new
   345 					lda <@VarData
   346 					sta :ztmp
   347 					lda >@VarData
   348 					ldy #@VarDataSize-1
   349 					jmp @FreeMem
   350 					els
   351 1146 60				rts						; ret
   352 					eif
   353 				.endl
   354
   355 1147			.local	RANDOM_006D					; FUNCTION | ASSEMBLER | OVERLOAD
   356 1147 8D 7A 25			sta RANGE
   357
   358 				; ---------------------  ASM Block 039  ---------------------
   359
   360
   361 114A AD 00 FF		  lda ted_timer_1   //Timer A Lo byte
   362 114D 4D 01 FF		  eor ted_timer_1+1 //Timer A Hi byte
   363 1150 4D 02 FF		  eor ted_timer_2   //Timer B Lo byte
   364 1153 6D 1E FF		  adc ted_hcount    //Horizontal counter
   365 1156 4D 04 FF		  eor ted_timer_3   //Timer C Lo byte
   366 1159 4D 1E FF		  eor ted_hcount    //Horizontal counter
   367 115C A8			  tay
   368
   369 115D AD 7A 25		  lda range
   370 1160 F0 08		  beq stop
   371
   372 1162 85 0C		  sta ecx
   373 1164 84 04		  sty eax
   374
   375 1166 20 A3 10		  jsr imulCL
   376 1169 A8			  tay
   377
   378 116A 8C 7B 25		stop  sty Result
   379
   380 116D			@exit
   381
   382 				; ------------------------------------------------------------
   383
   384 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   385 				; as Pointer
   386
   387 116D E8				inx
   388 116E AD 7B 25 95 18		mva RESULT :STACKORIGIN,x
   389
   390 					.ifdef @new
   391 					lda <@VarData
   392 					sta :ztmp
   393 					lda >@VarData
   394 					ldy #@VarDataSize-1
   395 					jmp @FreeMem
   396 					eif
   397
   398 				; ------------------------------------------------------------
   399
   400 = 257A			RANGE	= DATAORIGIN+$000E
   401 = 257B			RESULT	= DATAORIGIN+$000F
   402
   403 = 257A			@VarData	= RANGE
   404 = 0002			@VarDataSize	= 2
   405
   406 1173 60				rts						; ret
   407 				.endl
   408
   409 				; ------------------------------------------------------------
   410
   411 = 0101			__PORTB_BANKS	= $0101
   412 = 0648			M_PI_2	= $0648
   413 = 0192			D_PI_2	= $0192
   414 = 0004			D_PI_180	= $04
   415 = 0000			MGTIA	= $00
   416 = 0080			MVBXE	= $80
   417 = 0000			VBXE_XDLADR	= $00
   418 = 0100			VBXE_BCBADR	= $0100
   419 = 1000			VBXE_MAPADR	= $1000
   420 = 5000			VBXE_OVRADR	= $5000
   421 = B000			VBXE_WINDOW	= $B000
   422 = 0000			IDLI	= $00
   423 = 0001			IVBL	= $01
   424 = 00FE			CH_DELCHR	= $FE
   425 = 009B			CH_ENTER	= $9B
   426 = 001B			CH_ESC	= $1B
   427 = 001C			CH_CURS_UP	= $1C
   428 = 001D			CH_CURS_DOWN	= $1D
   429 = 001E			CH_CURS_LEFT	= $1E
   430 = 001F			CH_CURS_RIGHT	= $1F
   431 = 007F			CH_TAB	= $7F
   432 = 009B			CH_EOL	= $9B
   433 = 007D			CH_CLR	= $7D
   434 = 00FD			CH_BELL	= $FD
   435 = 007E			CH_DEL	= $7E
   436 = 009C			CH_DELLINE	= $9C
   437 = 009D			CH_INSLINE	= $9D
   438 = 0000			COLOR_BLACK	= $00
   439 = 000E			COLOR_WHITE	= $0E
   440 = 0032			COLOR_RED	= $32
   441 = 0096			COLOR_CYAN	= $96
   442 = 0068			COLOR_VIOLET	= $68
   443 = 00C4			COLOR_GREEN	= $C4
   444 = 0074			COLOR_BLUE	= $74
   445 = 00EE			COLOR_YELLOW	= $EE
   446 = 0028			COLOR_ORANGE	= $28
   447 = 00E4			COLOR_BROWN	= $E4
   448 = 003C			COLOR_LIGHTRED	= $3C
   449 = 0004			COLOR_GRAY1	= $04
   450 = 0006			COLOR_GRAY2	= $06
   451 = 000A			COLOR_GRAY3	= $0A
   452 = 00CC			COLOR_LIGHTGREEN	= $CC
   453 = 007C			COLOR_LIGHTBLUE	= $7C
   454 = 0004			FMOPENREAD	= $04
   455 = 0008			FMOPENWRITE	= $08
   456 = 0009			FMOPENAPPEND	= $09
   457 = 000C			FMOPENREADWRITE	= $0C
   458 = 256C			SCREENWIDTH	= DATAORIGIN+$0000
   459 = 256E			SCREENHEIGHT	= DATAORIGIN+$0002
   460 = 2570			DATESEPARATOR	= DATAORIGIN+$0004
   461 = D014			TVSYSTEM	= $D014
   462 = D20A			RND	= $D20A
   463 = 02C0			adr.PALETTE	= $02C0
   464 1174			.var PALETTE	= adr.PALETTE .word
   465 = D012			adr.HPALETTE	= $D012
   466 1174			.var HPALETTE	= adr.HPALETTE .word
   467 = 2571			FILEMODE	= DATAORIGIN+$0005
   468 = 2572			GRAPHMODE	= DATAORIGIN+$0006
   469 = 2573			IORESULT	= DATAORIGIN+$0007
   470 = 2574			EOLN	= DATAORIGIN+$0008
   471 = 2575			RNDSEED	= DATAORIGIN+$0009
   472
   473 = 1174 C0 02		PALETTE
   473 = 1176 12 D0		HPALETTE
   473 				.endl							; UNIT SYSTEM
   474
   475 1178			.local	PUTCHAR_0072					; PROCEDURE | OVERLOAD
   476
   477 				; optimize OK (tools.inc), line = 5
   478
   479 1178 AD AF 25			lda Y
   480 117B 0A				asl @
   481 117C A8				tay
   482 117D B9 0E 10			lda adr.MUL40,y
   483 1180 18 6D AE 25			add X
   484 1184 85 5D			sta T0W
   485 1186 B9 0F 10			lda adr.MUL40+1,y
   486 1189 69 08			adc #$08
   487 118B 85 5E			sta T0W+1
   488
   489 				; optimize OK (tools.inc), line = 6
   490
   491 118D 85 11			sta :bp+1
   492 118F A4 5D			ldy T0W
   493 1191 AD B1 25			lda C
   494 1194 91 10			sta (:bp),y
   495 1196 A5 5E			lda T0W+1
   496 1198 18 69 04			add #$04
   497 119B 85 11			sta :bp+1
   498 119D AD B0 25			lda V
   499 11A0 91 10			sta (:bp),y
   500
   501 				; ------------------------------------------------------------
   502
   503 = 25AE			X	= DATAORIGIN+$0042
   504 = 25AF			Y	= DATAORIGIN+$0043
   505 = 25B0			V	= DATAORIGIN+$0044
   506 = 25B1			C	= DATAORIGIN+$0045
   507
   508 = 25AE			@VarData	= X
   509 = 0004			@VarDataSize	= 4
   510
   511 11A2			@exit
   512 					.ifdef @new
   513 					lda <@VarData
   514 					sta :ztmp
   515 					lda >@VarData
   516 					ldy #@VarDataSize-1
   517 					jmp @FreeMem
   518 					els
   519 11A2 60				rts						; ret
   520 					eif
   521 				.endl
   522
   523 11A3			.local	PUTCHAR_0098					; PROCEDURE | OVERLOAD
   524
   525 				; optimize OK (tools.inc), line = 11
   526
   527 11A3 AD B3 25			lda Y
   528 11A6 0A				asl @
   529 11A7 A8				tay
   530 11A8 B9 0E 10			lda adr.MUL40,y
   531 11AB 18 6D B2 25			add X
   532 11AF 85 5D			sta T0W
   533 11B1 B9 0F 10			lda adr.MUL40+1,y
   534 11B4 69 0C			adc #$0C
   535 11B6 85 5E			sta T0W+1
   536 11B8 A4 5E			ldy T0W+1
   537 11BA 84 11			sty :bp+1
   538 11BC A4 5D			ldy T0W
   539 11BE AD B4 25			lda V
   540 11C1 91 10			sta (:bp),y
   541
   542 				; ------------------------------------------------------------
   543
   544 = 25B2			X	= DATAORIGIN+$0046
   545 = 25B3			Y	= DATAORIGIN+$0047
   546 = 25B4			V	= DATAORIGIN+$0048
   547
   548 = 25B2			@VarData	= X
   549 = 0003			@VarDataSize	= 3
   550
   551 11C3			@exit
   552 					.ifdef @new
   553 					lda <@VarData
   554 					sta :ztmp
   555 					lda >@VarData
   556 					ldy #@VarDataSize-1
   557 					jmp @FreeMem
   558 					els
   559 11C3 60				rts						; ret
   560 					eif
   561 				.endl
   562
   563 11C4			.local	SHOWSCORE					; PROCEDURE
   564
   565 				; optimize OK (tools.inc), line = 18
   566
   567 11C4 AD 81 25			lda PLAYER1.COLOUR
   568 11C7 8D B1 25			sta PUTCHAR_0072.C
   569 11CA AD 84 25			lda PLAYER1.SCORE
   570 11CD 8D B0 25			sta PUTCHAR_0072.V
   571 11D0 A9 00			lda #$00
   572 11D2 8D AF 25			sta PUTCHAR_0072.Y
   573 11D5 A9 1E			lda #$1E
   574 11D7 8D AE 25			sta PUTCHAR_0072.X
   575 11DA 20 78 11			jsr PUTCHAR_0072
   576
   577 				; optimize OK (tools.inc), line = 19
   578
   579 11DD AD 89 25			lda PLAYER2.COLOUR
   580 11E0 8D B1 25			sta PUTCHAR_0072.C
   581 11E3 AD 8C 25			lda PLAYER2.SCORE
   582 11E6 8D B0 25			sta PUTCHAR_0072.V
   583 11E9 A9 00			lda #$00
   584 11EB 8D AF 25			sta PUTCHAR_0072.Y
   585 11EE A9 20			lda #$20
   586 11F0 8D AE 25			sta PUTCHAR_0072.X
   587 11F3 20 78 11			jsr PUTCHAR_0072
   588
   589 				; optimize OK (tools.inc), line = 20
   590
   591 11F6 AD 91 25			lda PLAYER3.COLOUR
   592 11F9 8D B1 25			sta PUTCHAR_0072.C
   593 11FC AD 94 25			lda PLAYER3.SCORE
   594 11FF 8D B0 25			sta PUTCHAR_0072.V
   595 1202 A9 00			lda #$00
   596 1204 8D AF 25			sta PUTCHAR_0072.Y
   597 1207 A9 22			lda #$22
   598 1209 8D AE 25			sta PUTCHAR_0072.X
   599 120C 20 78 11			jsr PUTCHAR_0072
   600
   601 				; optimize OK (tools.inc), line = 21
   602
   603 120F AD 99 25			lda PLAYER4.COLOUR
   604 1212 8D B1 25			sta PUTCHAR_0072.C
   605 1215 AD 9C 25			lda PLAYER4.SCORE
   606 1218 8D B0 25			sta PUTCHAR_0072.V
   607 121B A9 00			lda #$00
   608 121D 8D AF 25			sta PUTCHAR_0072.Y
   609 1220 A9 24			lda #$24
   610 1222 8D AE 25			sta PUTCHAR_0072.X
   611 1225 20 78 11			jsr PUTCHAR_0072
   612 1228			@exit
   613 					.ifdef @new
   614 					lda <@VarData
   615 					sta :ztmp
   616 					lda >@VarData
   617 					ldy #@VarDataSize-1
   618 					jmp @FreeMem
   619 					els
   620 1228 60				rts						; ret
   621 					eif
   622 				.endl
   623
   624 1229			.local	CHECKAVAILDIR					; PROCEDURE
   625
   626 				; optimize OK (tools.inc), line = 28
   627
   628 1229 A9 00			lda #$00
   629 122B 85 5C			sta AVAILDIR
   630
   631 				; optimize OK (tools.inc), line = 29
   632
   633 122D AC 5E 25 84 12 AC + 	mwy PLY :bp2
   634 1237 A0 01			ldy #PLY.Y-DATAORIGIN
   635 1239 B1 12			lda (:bp2),y
   636 123B 0A				asl @
   637 123C A8				tay
   638 123D A9 00			lda #$00
   639 123F 18 79 0E 10			add adr.MUL40,y
   640 1243 85 21			sta :STACKORIGIN+9
   641 1245 A9 0C			lda #$0C
   642 1247 79 0F 10			adc adr.MUL40+1,y
   643 124A 85 31			sta :STACKORIGIN+STACKWIDTH+9
   644 124C A0 00			ldy #PLY.X-DATAORIGIN
   645 124E A5 21			lda :STACKORIGIN+9
   646 1250 18 71 12			add (:bp2),y
   647 1253 85 5D			sta T0W
   648 1255 A5 31			lda :STACKORIGIN+STACKWIDTH+9
   649 1257 69 00			adc #$00
   650 1259 85 5E			sta T0W+1
   651
   652 				; optimize OK (tools.inc), line = 31
   653
   654 125B A5 5D			lda T0W
   655 125D 38 E9 28			sub #$28
   656 1260 85 21			sta :STACKORIGIN+9
   657 1262 A5 5E			lda T0W+1
   658 1264 E9 00			sbc #$00
   659 1266 85 11			sta :bp+1
   660 1268 A4 21			ldy :STACKORIGIN+9
   661 126A B1 10			lda (:bp),y
   662 126C C9 20			cmp #$20
   663 126E D0 06			jne l_010B
   664 1270 A5 5C			lda AVAILDIR
   665 1272 09 01			ora #$01
   666 1274 85 5C			sta AVAILDIR
   667 1276			l_010B
   668
   669 				; optimize OK (tools.inc), line = 32
   670
   671 1276 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   672 127E A0 28			ldy #$28
   673 1280 B1 12			lda (:bp2),y
   674 1282 C9 20			cmp #$20
   675 1284 D0 06			jne l_012E
   676 1286 A5 5C			lda AVAILDIR
   677 1288 09 02			ora #$02
   678 128A 85 5C			sta AVAILDIR
   679 128C			l_012E
   680
   681 				; optimize OK (tools.inc), line = 33
   682
   683 128C A5 5D			lda T0W
   684 128E 38 E9 01			sub #$01
   685 1291 85 21			sta :STACKORIGIN+9
   686 1293 A5 5E			lda T0W+1
   687 1295 E9 00			sbc #$00
   688 1297 85 11			sta :bp+1
   689 1299 A4 21			ldy :STACKORIGIN+9
   690 129B B1 10			lda (:bp),y
   691 129D C9 20			cmp #$20
   692 129F D0 06			jne l_0151
   693 12A1 A5 5C			lda AVAILDIR
   694 12A3 09 04			ora #$04
   695 12A5 85 5C			sta AVAILDIR
   696 12A7			l_0151
   697
   698 				; optimize OK (tools.inc), line = 34
   699
   700 12A7 A4 5D 84 12 A4 5E + 	mwy T0W :bp2
   701 12AF A0 01			ldy #$01
   702 12B1 B1 12			lda (:bp2),y
   703 12B3 C9 20			cmp #$20
   704 12B5 D0 06			jne l_0174
   705 12B7 A5 5C			lda AVAILDIR
   706 12B9 09 08			ora #$08
   707 12BB 85 5C			sta AVAILDIR
   708 12BD			l_0174
   709 12BD			@exit
   710 					.ifdef @new
   711 					lda <@VarData
   712 					sta :ztmp
   713 					lda >@VarData
   714 					ldy #@VarDataSize-1
   715 					jmp @FreeMem
   716 					els
   717 12BD 60				rts						; ret
   718 					eif
   719 				.endl
   720
   721 12BE			.local	ANIMATEOBSTACLES				; PROCEDURE
   722
   723 				; optimize FAIL (0, tools.inc), line = 43
   724
   725 12BE EE B5 25			inc COUNTER
   726
   727 				; optimize OK (tools.inc), line = 44
   728
   729 12C1 AD B5 25			lda COUNTER
   730 12C4 29 01			and #$01
   731 12C6 F0 08			jeq l_019F
   732 12C8 A9 56			lda #$56
   733 12CA 8D B6 25			sta OBST
   734 12CD 4C D5 12			jmp l_01AD
   735 12D0			l_019F
   736 12D0 A9 5B			lda #$5B
   737 12D2 8D B6 25			sta OBST
   738 12D5			l_01AD
   739
   740 				; optimize OK (tools.inc), line = 45
   741
   742 12D5 A9 07			lda #$07
   743 12D7 85 59			sta I0B
   744
   745 12D9			l_01BA
   746 				; --- ForToDoCondition
   747 12D9 A5 59			lda I0B
   748 12DB 0A				asl @
   749 12DC A8				tay
   750 12DD B9 9E 25			lda adr.OBSTACLES,y
   751 12E0 85 21			sta :STACKORIGIN+9
   752 12E2 B9 9F 25			lda adr.OBSTACLES+1,y
   753 12E5 85 11			sta :bp+1
   754 12E7 A4 21			ldy :STACKORIGIN+9
   755 12E9 AD B6 25			lda OBST
   756 12EC 91 10			sta (:bp),y
   757 12EE C6 59			dec I0B
   758 12F0 10 E7			jpl l_01BA
   759 12F2			l_01C8
   760
   761 				; ------------------------------------------------------------
   762
   763 = 25B5			COUNTER	= DATAORIGIN+$0049
   764 = 25B6			OBST	= DATAORIGIN+$004A
   765 = 0000			@FORTMP_01B7	= $00
   766
   767 = 25B5			@VarData	= COUNTER
   768 = 0002			@VarDataSize	= 2
   769
   770 12F2			@exit
   771 					.ifdef @new
   772 					lda <@VarData
   773 					sta :ztmp
   774 					lda >@VarData
   775 					ldy #@VarDataSize-1
   776 					jmp @FreeMem
   777 					els
   778 12F2 60				rts						; ret
   779 					eif
   780 				.endl
   781
   782 12F3			.local	SAVEOBSTACLES					; PROCEDURE
   783
   784 				; optimize OK (tools.inc), line = 52
   785
   786 12F3 A9 07			lda #$07
   787 12F5 85 59			sta I0B
   788
   789 12F7			l_01E3
   790 				; --- ForToDoCondition
   791
   792 				; optimize OK (tools.inc), line = 53
   793
   794 12F7 A5 59			lda I0B
   795 12F9 0A				asl @
   796 12FA A8				tay
   797 12FB B9 9F 25			lda adr.OBSTACLES+1,y
   798 12FE C9 00			cmp #$00
   799 1300 D0 05			bne @+
   800 1302 B9 9E 25			lda adr.OBSTACLES,y
   801 1305 C9 7E			cmp #$7E
   802 1307			@
   803 1307 F0 29			jeq l_0205
   804
   805 				; optimize OK (tools.inc), line = 54
   806
   807 1309 B9 9E 25			lda adr.OBSTACLES,y
   808 130C 85 21			sta :STACKORIGIN+9
   809 130E B9 9F 25			lda adr.OBSTACLES+1,y
   810 1311 85 11			sta :bp+1
   811 1313 A4 21			ldy :STACKORIGIN+9
   812 1315 A9 56			lda #$56
   813 1317 91 10			sta (:bp),y
   814
   815 				; optimize OK (tools.inc), line = 55
   816
   817 1319 A5 59			lda I0B
   818 131B 0A				asl @
   819 131C A8				tay
   820 131D B9 9E 25			lda adr.OBSTACLES,y
   821 1320 38 E9 00			sub #$00
   822 1323 85 21			sta :STACKORIGIN+9
   823 1325 B9 9F 25			lda adr.OBSTACLES+1,y
   824 1328 E9 04			sbc #$04
   825 132A 85 11			sta :bp+1
   826 132C A4 21			ldy :STACKORIGIN+9
   827 132E A9 35			lda #$35
   828 1330 91 10			sta (:bp),y
   829 1332			l_0205
   830
   831 				; --- ForToDoEpilog
   832 1332 C6 59			dec I0B
   833 1334 10 C1			jpl l_01E3
   834 1336			l_01F1
   835
   836 				; ------------------------------------------------------------
   837
   838 = 0000			@FORTMP_01E0	= $00
   839 1336			@exit
   840 					.ifdef @new
   841 					lda <@VarData
   842 					sta :ztmp
   843 					lda >@VarData
   844 					ldy #@VarDataSize-1
   845 					jmp @FreeMem
   846 					els
   847 1336 60				rts						; ret
   848 					eif
   849 				.endl
   850
   851 1337			.local	DRAWTAIL					; PROCEDURE
   852
   853 				; optimize OK (tools.inc), line = 64
   854
   855 1337 AC 5E 25 84 12 AC + 	mwy PLY :bp2
   856 1341 A0 04			ldy #PLY.DIR-DATAORIGIN
   857 1343 B1 12			lda (:bp2),y
   858 1345 C5 5B			cmp NEWDIR
   859 1347 D0 14			jne l_0237
   860
   861 				; optimize OK (tools.inc), line = 65
   862
   863 1349 A5 5B			lda NEWDIR
   864 134B 29 0C			and #$0C
   865 134D F0 07			jeq l_024E
   866 134F A9 40			lda #$40
   867 1351 85 58			sta T0B
   868 1353 4C 5A 13			jmp l_025C
   869 1356			l_024E
   870 1356 A9 42			lda #$42
   871 1358 85 58			sta T0B
   872 135A			l_025C
   873 135A 4C CD 13			jmp l_0269
   874 135D			l_0237
   875
   876 				; optimize OK (tools.inc), line = 67
   877
   878 135D AC 5E 25 84 12 AC + 	mwy PLY :bp2
   879 1367 A0 04			ldy #PLY.DIR-DATAORIGIN
   880 1369 B1 12			lda (:bp2),y
   881 136B 29 0A			and #$0A
   882 136D F0 0A			jeq l_028F
   883 136F A5 5B			lda NEWDIR
   884 1371 29 05			and #$05
   885 1373 F0 04			jeq l_028F
   886 1375 A9 7D			lda #$7D
   887 1377 85 58			sta T0B
   888 1379			l_028F
   889
   890 				; optimize OK (tools.inc), line = 68
   891
   892 1379 AC 5E 25 84 12 AC + 	mwy PLY :bp2
   893 1383 A0 04			ldy #PLY.DIR-DATAORIGIN
   894 1385 B1 12			lda (:bp2),y
   895 1387 29 09			and #$09
   896 1389 F0 0A			jeq l_02BC
   897 138B A5 5B			lda NEWDIR
   898 138D 29 06			and #$06
   899 138F F0 04			jeq l_02BC
   900 1391 A9 6E			lda #$6E
   901 1393 85 58			sta T0B
   902 1395			l_02BC
   903
   904 				; optimize OK (tools.inc), line = 69
   905
   906 1395 AC 5E 25 84 12 AC + 	mwy PLY :bp2
   907 139F A0 04			ldy #PLY.DIR-DATAORIGIN
   908 13A1 B1 12			lda (:bp2),y
   909 13A3 29 06			and #$06
   910 13A5 F0 0A			jeq l_02E9
   911 13A7 A5 5B			lda NEWDIR
   912 13A9 29 09			and #$09
   913 13AB F0 04			jeq l_02E9
   914 13AD A9 6D			lda #$6D
   915 13AF 85 58			sta T0B
   916 13B1			l_02E9
   917
   918 				; optimize OK (tools.inc), line = 70
   919
   920 13B1 AC 5E 25 84 12 AC + 	mwy PLY :bp2
   921 13BB A0 04			ldy #PLY.DIR-DATAORIGIN
   922 13BD B1 12			lda (:bp2),y
   923 13BF 29 05			and #$05
   924 13C1 F0 0A			jeq l_0316
   925 13C3 A5 5B			lda NEWDIR
   926 13C5 29 0A			and #$0A
   927 13C7 F0 04			jeq l_0316
   928 13C9 A9 70			lda #$70
   929 13CB 85 58			sta T0B
   930 13CD			l_0316
   931 13CD			l_0269
   932
   933 				; optimize OK (tools.inc), line = 72
   934
   935 13CD AC 5E 25 84 12 AC + 	mwy PLY :bp2
   936 13D7 A0 00			ldy #PLY.X-DATAORIGIN
   937 13D9 B1 12			lda (:bp2),y
   938 13DB 8D B2 25			sta PUTCHAR_0098.X
   939 13DE A0 01			ldy #PLY.Y-DATAORIGIN
   940 13E0 B1 12			lda (:bp2),y
   941 13E2 8D B3 25			sta PUTCHAR_0098.Y
   942 13E5 A5 58			lda T0B
   943 13E7 8D B4 25			sta PUTCHAR_0098.V
   944 13EA 20 A3 11			jsr PUTCHAR_0098
   945 13ED			@exit
   946 					.ifdef @new
   947 					lda <@VarData
   948 					sta :ztmp
   949 					lda >@VarData
   950 					ldy #@VarDataSize-1
   951 					jmp @FreeMem
   952 					els
   953 13ED 60				rts						; ret
   954 					eif
   955 				.endl
   956
   957 13EE			.local	CHECKJOYSTATUS					; PROCEDURE
   958
   959 				; optimize OK (tools.inc), line = 79
   960
   961 13EE A9 02			lda #$02
   962 13F0 8D 08 FF			sta JOY
   963 13F3 A9 FF			lda #$FF
   964 13F5 8D 30 FD			sta KEYSCAN
   965
   966 				; optimize OK (tools.inc), line = 80
   967
   968 13F8 AD 08 FF			lda JOY
   969 13FB 49 FF			eor #$FF
   970 13FD 85 63			sta JOYSTATUS
   971 13FF			@exit
   972 					.ifdef @new
   973 					lda <@VarData
   974 					sta :ztmp
   975 					lda >@VarData
   976 					ldy #@VarDataSize-1
   977 					jmp @FreeMem
   978 					els
   979 13FF 60				rts						; ret
   980 					eif
   981 				.endl
   982
   983 1400			.local	INITPLAYERS					; PROCEDURE
   984
   985 				; optimize OK (init.inc), line = 5
   986
   987 1400 AD B7 25			lda P
   988 1403 8D 5E 25			sta PLY
   989 1406 85 12			sta :bp2
   990 1408 AD B8 25			lda P+1
   991 140B 8D 5F 25			sta PLY+1
   992 140E 85 13			sta :bp2+1
   993 				; optimize OK (init.inc), line = 6
   994 1410 A0 05			ldy #PLY.BRAIN-DATAORIGIN
   995 1412 AD BC 25			lda BRAIN
   996 1415 91 12			sta (:bp2),y
   997 1417 A0 00			ldy #PLY.X-DATAORIGIN
   998 1419 AD B9 25			lda X
   999 141C 91 12			sta (:bp2),y
  1000 141E A0 01			ldy #PLY.Y-DATAORIGIN
  1001 1420 AD BA 25			lda Y
  1002 1423 91 12			sta (:bp2),y
  1003 1425 A0 04			ldy #PLY.DIR-DATAORIGIN
  1004 1427 AD BB 25			lda DIR
  1005 142A 91 12			sta (:bp2),y
  1006
  1007 				; optimize OK (init.inc), line = 7
  1008
  1009 142C A0 02			ldy #PLY.HEAD-DATAORIGIN
  1010 142E AD BD 25			lda HEAD
  1011 1431 91 12			sta (:bp2),y
  1012 1433 A0 03			ldy #PLY.COLOUR-DATAORIGIN
  1013 1435 AD BE 25			lda COLOUR
  1014 1438 91 12			sta (:bp2),y
  1015 143A A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  1016 143C AD BF 25			lda ISALIVE
  1017 143F 91 12			sta (:bp2),y
  1018
  1019 				; optimize OK (init.inc), line = 8
  1020
  1021 1441 AD BF 25			lda ISALIVE
  1022 1444 F0 1D			jeq l_037C
  1023
  1024 				; optimize FAIL (0, init.inc), line = 9
  1025
  1026 1446 E6 5A			inc ALIVE
  1027 1448 AD BE 25			lda COLOUR
  1028 144B 8D B1 25			sta PUTCHAR_0072.C
  1029 144E AD BD 25			lda HEAD
  1030 1451 8D B0 25			sta PUTCHAR_0072.V
  1031 1454 AD BA 25			lda Y
  1032 1457 8D AF 25			sta PUTCHAR_0072.Y
  1033 145A AD B9 25			lda X
  1034 145D 8D AE 25			sta PUTCHAR_0072.X
  1035 1460 20 78 11			jsr PUTCHAR_0072
  1036 1463			l_037C
  1037
  1038 				; ------------------------------------------------------------
  1039
  1040 = 25B7			P	= DATAORIGIN+$004B
  1041 = 25B9			X	= DATAORIGIN+$004D
  1042 = 25BA			Y	= DATAORIGIN+$004E
  1043 = 25BB			DIR	= DATAORIGIN+$004F
  1044 = 25BC			BRAIN	= DATAORIGIN+$0050
  1045 = 25BD			HEAD	= DATAORIGIN+$0051
  1046 = 25BE			COLOUR	= DATAORIGIN+$0052
  1047 = 25BF			ISALIVE	= DATAORIGIN+$0053
  1048
  1049 = 25B7			@VarData	= P
  1050 = 0009			@VarDataSize	= 9
  1051
  1052 1463			@exit
  1053 					.ifdef @new
  1054 					lda <@VarData
  1055 					sta :ztmp
  1056 					lda >@VarData
  1057 					ldy #@VarDataSize-1
  1058 					jmp @FreeMem
  1059 					els
  1060 1463 60				rts						; ret
  1061 					eif
  1062 				.endl
  1063
  1064 1464			.local	INITPLAYFIELD					; PROCEDURE
  1065
  1066 				; optimize OK (init.inc), line = 17
  1067
  1068 1464 A9 1F			lda #$1F
  1069 1466 8D 15 FF			sta BACKGROUND
  1070 1469 A9 00			lda #$00
  1071 146B 8D 19 FF			sta BOREDER
  1072
  1073 				; optimize OK (init.inc), line = 18
  1074
  1075 146E A9 20			lda #$20
  1076 1470 85 04			sta SYSTEM.FILLCHAR_0056.VALUE
  1077 1472 A9 C0			lda #$C0
  1078 1474 85 0C			sta SYSTEM.FILLCHAR_0056.COUNT
  1079 1476 A9 03			lda #$03
  1080 1478 85 0D			sta SYSTEM.FILLCHAR_0056.COUNT+1
  1081 147A A9 00			lda #$00
  1082 147C 85 08			sta SYSTEM.FILLCHAR_0056.A
  1083 147E A9 0C			lda #$0C
  1084 1480 85 09			sta SYSTEM.FILLCHAR_0056.A+1
  1085 1482 20 1F 11			jsr SYSTEM.FILLCHAR_0056
  1086
  1087 				; optimize OK (init.inc), line = 20
  1088
  1089 1485 A9 27			lda #$27
  1090 1487 85 58			sta T0B
  1091
  1092 1489			l_03A9
  1093 				; --- ForToDoCondition
  1094
  1095 				; optimize OK (init.inc), line = 21
  1096
  1097 1489 A4 58			ldy T0B
  1098 148B A9 A0			lda #$A0
  1099 148D 99 00 0C			sta $0C00,y
  1100
  1101 				; optimize OK (init.inc), line = 22
  1102
  1103 1490 99 C0 0F			sta $0FC0,y
  1104
  1105 				; optimize OK (init.inc), line = 23
  1106
  1107 1493 A9 41			lda #$41
  1108 1495 99 00 08			sta $0800,y
  1109
  1110 				; optimize OK (init.inc), line = 24
  1111
  1112 1498 99 C0 0B			sta $0BC0,y
  1113
  1114 				; --- ForToDoEpilog
  1115 149B C6 58			dec T0B
  1116 149D 10 EA			jpl l_03A9
  1117 149F			l_03B7
  1118
  1119 				; optimize OK (init.inc), line = 27
  1120
  1121 149F A9 18			lda #$18
  1122 14A1 85 58			sta T0B
  1123
  1124 14A3			l_03E9
  1125 				; --- ForToDoCondition
  1126 14A3 A5 58			lda T0B
  1127 14A5 C9 01			cmp #$01
  1128 14A7 90 3A			jcc l_03F7
  1129
  1130 				; optimize OK (init.inc), line = 28
  1131
  1132 14A9 0A				asl @
  1133 14AA A8				tay
  1134 14AB A9 FF			lda #$FF
  1135 14AD 18 79 0E 10			add adr.MUL40,y
  1136 14B1 85 12			sta :bp2
  1137 14B3 A9 0B			lda #$0B
  1138 14B5 79 0F 10			adc adr.MUL40+1,y
  1139 14B8 85 13			sta :bp2+1
  1140 14BA A0 00			ldy #$00
  1141 14BC A9 A0			lda #$A0
  1142 14BE 91 12			sta (:bp2),y
  1143 14C0 C8				iny
  1144 14C1 91 12			sta (:bp2),y
  1145
  1146 				; optimize OK (init.inc), line = 29
  1147
  1148 14C3 A5 58			lda T0B
  1149 14C5 0A				asl @
  1150 14C6 A8				tay
  1151 14C7 A9 FF			lda #$FF
  1152 14C9 18 79 0E 10			add adr.MUL40,y
  1153 14CD 85 12			sta :bp2
  1154 14CF A9 07			lda #$07
  1155 14D1 79 0F 10			adc adr.MUL40+1,y
  1156 14D4 85 13			sta :bp2+1
  1157 14D6 A0 00			ldy #$00
  1158 14D8 A9 41			lda #$41
  1159 14DA 91 12			sta (:bp2),y
  1160 14DC C8				iny
  1161 14DD 91 12			sta (:bp2),y
  1162
  1163 				; --- ForToDoEpilog
  1164 14DF C6 58			dec T0B
  1165 14E1 10 C0			jpl l_03E9
  1166 14E3			l_03F7
  1167
  1168 				; ------------------------------------------------------------
  1169
  1170 = 0000			@FORTMP_03A6	= $00
  1171 = 0001			@FORTMP_03E6	= $01
  1172 14E3			@exit
  1173 					.ifdef @new
  1174 					lda <@VarData
  1175 					sta :ztmp
  1176 					lda >@VarData
  1177 					ldy #@VarDataSize-1
  1178 					jmp @FreeMem
  1179 					els
  1180 14E3 60				rts						; ret
  1181 					eif
  1182 				.endl
  1183
  1184 14E4			.local	AISTRAIGHT					; PROCEDURE
  1185
  1186 				; optimize OK (ai.inc), line = 5
  1187
  1188 14E4 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  1189 14EE A0 04			ldy #PLY.DIR-DATAORIGIN
  1190 14F0 B1 12			lda (:bp2),y
  1191 14F2 25 5C			and AVAILDIR
  1192 14F4 F0 07			jeq l_042E
  1193 14F6 B1 12			lda (:bp2),y
  1194 14F8 85 5B			sta NEWDIR
  1195 14FA 4C 68 15			jmp l_043E
  1196 14FD			l_042E
  1197
  1198 				; optimize OK (ai.inc), line = 7
  1199
  1200 14FD A5 5C			lda AVAILDIR
  1201 14FF C9 03			cmp #$03
  1202 1501 D0 10			jne l_0450
  1203 1503 A9 02			lda #$02
  1204 1505 20 47 11			jsr SYSTEM.RANDOM_006D
  1205 1508 B4 18			ldy :STACKORIGIN,x
  1206 150A B9 40 10			lda adr.DIRECTION,y
  1207 150D 85 5B			sta NEWDIR
  1208 150F CA				dex
  1209 1510 4C 2B 15			jmp l_0462
  1210 1513			l_0450
  1211
  1212 				; optimize OK (ai.inc), line = 9
  1213
  1214 1513 A5 5C			lda AVAILDIR
  1215 1515 8D C0 25			sta @CASETMP_0003
  1216 1518 C9 01			cmp #$01
  1217 151A D0 07			jne l_046D
  1218 151C			@
  1219
  1220 				; optimize OK (ai.inc), line = 10
  1221
  1222 151C A9 01			lda #$01
  1223 151E 85 5B			sta NEWDIR
  1224
  1225 1520 4C 2B 15			jmp a_0003
  1226 1523			l_046D
  1227 1523 C9 02			cmp #$02
  1228 1525 D0 04			jne l_047A
  1229 1527			@
  1230
  1231 				; optimize OK (ai.inc), line = 11
  1232
  1233 1527 A9 02			lda #$02
  1234 1529 85 5B			sta NEWDIR
  1235
  1236 152B			l_047A
  1237 152B			a_0003
  1238 152B			l_0462
  1239
  1240 				; optimize OK (ai.inc), line = 14
  1241
  1242 152B A5 5C			lda AVAILDIR
  1243 152D C9 0C			cmp #$0C
  1244 152F D0 1F			jne l_0496
  1245 1531 A9 02			lda #$02
  1246 1533 20 47 11			jsr SYSTEM.RANDOM_006D
  1247 1536 E8				inx
  1248 1537 A9 02 95 18			mva #$02 :STACKORIGIN,x
  1249 153B A9 00 95 28			mva #$00 :STACKORIGIN+STACKWIDTH,x
  1250 153F 95 27			sta :STACKORIGIN-1+STACKWIDTH,x
  1251 1541 20 44 10			jsr addAX_CX
  1252 1544 CA				dex
  1253 1545 B4 18			ldy :STACKORIGIN,x
  1254 1547 B9 40 10			lda adr.DIRECTION,y
  1255 154A 85 5B			sta NEWDIR
  1256 154C CA				dex
  1257 154D 4C 68 15			jmp l_04AC
  1258 1550			l_0496
  1259
  1260 				; optimize OK (ai.inc), line = 16
  1261
  1262 1550 A5 5C			lda AVAILDIR
  1263 1552 8D C1 25			sta @CASETMP_0004
  1264 1555 C9 04			cmp #$04
  1265 1557 D0 07			jne l_04B7
  1266 1559			@
  1267
  1268 				; optimize OK (ai.inc), line = 17
  1269
  1270 1559 A9 04			lda #$04
  1271 155B 85 5B			sta NEWDIR
  1272
  1273 155D 4C 68 15			jmp a_0004
  1274 1560			l_04B7
  1275 1560 C9 08			cmp #$08
  1276 1562 D0 04			jne l_04C4
  1277 1564			@
  1278
  1279 				; optimize OK (ai.inc), line = 18
  1280
  1281 1564 A9 08			lda #$08
  1282 1566 85 5B			sta NEWDIR
  1283
  1284 1568			l_04C4
  1285 1568			a_0004
  1286 1568			l_04AC
  1287 1568			l_043E
  1288
  1289 				; ------------------------------------------------------------
  1290
  1291 = 25C0			@CASETMP_0003	= DATAORIGIN+$0054
  1292 = 25C1			@CASETMP_0004	= DATAORIGIN+$0055
  1293
  1294 = 25C0			@VarData	= @CASETMP_0003
  1295 = 0002			@VarDataSize	= 2
  1296
  1297 1568			@exit
  1298 					.ifdef @new
  1299 					lda <@VarData
  1300 					sta :ztmp
  1301 					lda >@VarData
  1302 					ldy #@VarDataSize-1
  1303 					jmp @FreeMem
  1304 					els
  1305 1568 60				rts						; ret
  1306 					eif
  1307 				.endl
  1308
  1309 1569			.local	AISAPPER					; PROCEDURE
  1310
  1311 				; optimize OK (ai.inc), line = 31
  1312
  1313 1569 A9 00			lda #$00
  1314 156B 8D C2 25			sta L
  1315 156E 8D C3 25			sta R
  1316 1571 8D C4 25			sta U
  1317 1574 8D C5 25			sta D
  1318
  1319 				; optimize OK (ai.inc), line = 32
  1320
  1321 1577 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  1322 1581 A0 01			ldy #PLY.Y-DATAORIGIN
  1323 1583 B1 12			lda (:bp2),y
  1324 1585 0A				asl @
  1325 1586 A8				tay
  1326 1587 A9 00			lda #$00
  1327 1589 18 79 0E 10			add adr.MUL40,y
  1328 158D 85 21			sta :STACKORIGIN+9
  1329 158F A9 0C			lda #$0C
  1330 1591 79 0F 10			adc adr.MUL40+1,y
  1331 1594 85 31			sta :STACKORIGIN+STACKWIDTH+9
  1332 1596 A0 00			ldy #PLY.X-DATAORIGIN
  1333 1598 A5 21			lda :STACKORIGIN+9
  1334 159A 18 71 12			add (:bp2),y
  1335 159D 85 5D			sta T0W
  1336 159F A5 31			lda :STACKORIGIN+STACKWIDTH+9
  1337 15A1 69 00			adc #$00
  1338 15A3 85 5E			sta T0W+1
  1339
  1340 				; optimize OK (ai.inc), line = 34
  1341
  1342 15A5 A5 5C			lda AVAILDIR
  1343 15A7 29 01			and #$01
  1344 15A9 F0 73			jeq l_050A
  1345
  1346 				; optimize OK (ai.inc), line = 35
  1347
  1348 15AB A9 05			lda #$05
  1349 15AD 85 59			sta I0B
  1350
  1351 15AF			l_0514
  1352 				; --- ForToDoCondition
  1353 15AF A5 59			lda I0B
  1354 15B1 C9 01			cmp #$01
  1355 15B3 90 69			jcc l_0522
  1356
  1357 				; optimize OK (ai.inc), line = 36
  1358
  1359 15B5 0A				asl @
  1360 15B6 A8				tay
  1361 15B7 A5 5D			lda T0W
  1362 15B9 38 F9 0E 10			sub adr.MUL40,y
  1363 15BD 85 21			sta :STACKORIGIN+9
  1364 15BF A5 5E			lda T0W+1
  1365 15C1 F9 0F 10			sbc adr.MUL40+1,y
  1366 15C4 85 11			sta :bp+1
  1367 15C6 A4 21			ldy :STACKORIGIN+9
  1368 15C8 B1 10			lda (:bp),y
  1369 15CA C9 20			cmp #$20
  1370 15CC D0 03			jne l_053C
  1371 15CE EE C4 25			inc U
  1372 15D1			l_053C
  1373
  1374 				; optimize OK (ai.inc), line = 37
  1375
  1376 15D1 A5 59			lda I0B
  1377 15D3 0A				asl @
  1378 15D4 A8				tay
  1379 15D5 A5 5D			lda T0W
  1380 15D7 38 F9 0E 10			sub adr.MUL40,y
  1381 15DB 85 21			sta :STACKORIGIN+9
  1382 15DD A5 5E			lda T0W+1
  1383 15DF F9 0F 10			sbc adr.MUL40+1,y
  1384 15E2 85 11			sta :bp+1
  1385 15E4 A5 21			lda :STACKORIGIN+9
  1386 15E6 18 69 01			add #$01
  1387 15E9 A8				tay
  1388 15EA 90 02			scc
  1389 15EC E6 11			inc :bp+1
  1390 15EE B1 10			lda (:bp),y
  1391 15F0 C9 20			cmp #$20
  1392 15F2 D0 03			jne l_0561
  1393 15F4 EE C4 25			inc U
  1394 15F7			l_0561
  1395
  1396 				; optimize OK (ai.inc), line = 38
  1397
  1398 15F7 A5 59			lda I0B
  1399 15F9 0A				asl @
  1400 15FA A8				tay
  1401 15FB A5 5D			lda T0W
  1402 15FD 38 F9 0E 10			sub adr.MUL40,y
  1403 1601 85 21			sta :STACKORIGIN+9
  1404 1603 A5 5E			lda T0W+1
  1405 1605 F9 0F 10			sbc adr.MUL40+1,y
  1406 1608 85 11			sta :bp+1
  1407 160A A4 21			ldy :STACKORIGIN+9
  1408 160C 88				dey
  1409 160D B0 02			scs
  1410 160F C6 11			dec :bp+1
  1411 1611 B1 10			lda (:bp),y
  1412 1613 C9 20			cmp #$20
  1413 1615 D0 03			jne l_0586
  1414 1617 EE C4 25			inc U
  1415 161A			l_0586
  1416
  1417 				; --- ForToDoEpilog
  1418 161A C6 59			dec I0B
  1419 161C 10 91			jpl l_0514
  1420 161E			l_0522
  1421 161E			l_050A
  1422
  1423 				; optimize OK (ai.inc), line = 42
  1424
  1425 161E A5 5C			lda AVAILDIR
  1426 1620 29 02			and #$02
  1427 1622 F0 73			jeq l_05AA
  1428
  1429 				; optimize OK (ai.inc), line = 43
  1430
  1431 1624 A9 05			lda #$05
  1432 1626 85 59			sta I0B
  1433
  1434 1628			l_05B4
  1435 				; --- ForToDoCondition
  1436 1628 A5 59			lda I0B
  1437 162A C9 01			cmp #$01
  1438 162C 90 69			jcc l_05C2
  1439
  1440 				; optimize OK (ai.inc), line = 44
  1441
  1442 162E 0A				asl @
  1443 162F A8				tay
  1444 1630 A5 5D			lda T0W
  1445 1632 18 79 0E 10			add adr.MUL40,y
  1446 1636 85 21			sta :STACKORIGIN+9
  1447 1638 A5 5E			lda T0W+1
  1448 163A 79 0F 10			adc adr.MUL40+1,y
  1449 163D 85 11			sta :bp+1
  1450 163F A4 21			ldy :STACKORIGIN+9
  1451 1641 B1 10			lda (:bp),y
  1452 1643 C9 20			cmp #$20
  1453 1645 D0 03			jne l_05DC
  1454 1647 EE C5 25			inc D
  1455 164A			l_05DC
  1456
  1457 				; optimize OK (ai.inc), line = 45
  1458
  1459 164A A5 59			lda I0B
  1460 164C 0A				asl @
  1461 164D A8				tay
  1462 164E A5 5D			lda T0W
  1463 1650 18 79 0E 10			add adr.MUL40,y
  1464 1654 85 21			sta :STACKORIGIN+9
  1465 1656 A5 5E			lda T0W+1
  1466 1658 79 0F 10			adc adr.MUL40+1,y
  1467 165B 85 11			sta :bp+1
  1468 165D A5 21			lda :STACKORIGIN+9
  1469 165F 18 69 01			add #$01
  1470 1662 A8				tay
  1471 1663 90 02			scc
  1472 1665 E6 11			inc :bp+1
  1473 1667 B1 10			lda (:bp),y
  1474 1669 C9 20			cmp #$20
  1475 166B D0 03			jne l_0601
  1476 166D EE C5 25			inc D
  1477 1670			l_0601
  1478
  1479 				; optimize OK (ai.inc), line = 46
  1480
  1481 1670 A5 59			lda I0B
  1482 1672 0A				asl @
  1483 1673 A8				tay
  1484 1674 A5 5D			lda T0W
  1485 1676 18 79 0E 10			add adr.MUL40,y
  1486 167A 85 21			sta :STACKORIGIN+9
  1487 167C A5 5E			lda T0W+1
  1488 167E 79 0F 10			adc adr.MUL40+1,y
  1489 1681 85 11			sta :bp+1
  1490 1683 A4 21			ldy :STACKORIGIN+9
  1491 1685 88				dey
  1492 1686 B0 02			scs
  1493 1688 C6 11			dec :bp+1
  1494 168A B1 10			lda (:bp),y
  1495 168C C9 20			cmp #$20
  1496 168E D0 03			jne l_0626
  1497 1690 EE C5 25			inc D
  1498 1693			l_0626
  1499
  1500 				; --- ForToDoEpilog
  1501 1693 C6 59			dec I0B
  1502 1695 10 91			jpl l_05B4
  1503 1697			l_05C2
  1504 1697			l_05AA
  1505
  1506 				; optimize OK (ai.inc), line = 50
  1507
  1508 1697 A5 5C			lda AVAILDIR
  1509 1699 29 04			and #$04
  1510 169B F0 5F			jeq l_064A
  1511
  1512 				; optimize OK (ai.inc), line = 51
  1513
  1514 169D A9 05			lda #$05
  1515 169F 85 59			sta I0B
  1516
  1517 16A1			l_0654
  1518 				; --- ForToDoCondition
  1519 16A1 A5 59			lda I0B
  1520 16A3 C9 01			cmp #$01
  1521 16A5 90 55			jcc l_0662
  1522
  1523 				; optimize OK (ai.inc), line = 52
  1524
  1525 16A7 A5 5D			lda T0W
  1526 16A9 38 E5 59			sub I0B
  1527 16AC A8				tay
  1528 16AD A5 5E			lda T0W+1
  1529 16AF E9 00			sbc #$00
  1530 16B1 85 11			sta :bp+1
  1531 16B3 B1 10			lda (:bp),y
  1532 16B5 C9 20			cmp #$20
  1533 16B7 D0 03			jne l_067A
  1534 16B9 EE C2 25			inc L
  1535 16BC			l_067A
  1536
  1537 				; optimize OK (ai.inc), line = 53
  1538
  1539 16BC A5 5D			lda T0W
  1540 16BE 38 E5 59			sub I0B
  1541 16C1 A8				tay
  1542 16C2 A5 5E			lda T0W+1
  1543 16C4 E9 00			sbc #$00
  1544 16C6 85 11			sta :bp+1
  1545 16C8 98				tya
  1546 16C9 18 69 28			add #$28
  1547 16CC A8				tay
  1548 16CD 90 02			scc
  1549 16CF E6 11			inc :bp+1
  1550 16D1 B1 10			lda (:bp),y
  1551 16D3 C9 20			cmp #$20
  1552 16D5 D0 03			jne l_069D
  1553 16D7 EE C2 25			inc L
  1554 16DA			l_069D
  1555
  1556 				; optimize OK (ai.inc), line = 54
  1557
  1558 16DA A5 5D			lda T0W
  1559 16DC 38 E5 59			sub I0B
  1560 16DF A8				tay
  1561 16E0 A5 5E			lda T0W+1
  1562 16E2 E9 00			sbc #$00
  1563 16E4 85 11			sta :bp+1
  1564 16E6 98				tya
  1565 16E7 38 E9 28			sub #$28
  1566 16EA A8				tay
  1567 16EB B0 02			scs
  1568 16ED C6 11			dec :bp+1
  1569 16EF B1 10			lda (:bp),y
  1570 16F1 C9 20			cmp #$20
  1571 16F3 D0 03			jne l_06C0
  1572 16F5 EE C2 25			inc L
  1573 16F8			l_06C0
  1574
  1575 				; --- ForToDoEpilog
  1576 16F8 C6 59			dec I0B
  1577 16FA 10 A5			jpl l_0654
  1578 16FC			l_0662
  1579 16FC			l_064A
  1580
  1581 				; optimize OK (ai.inc), line = 58
  1582
  1583 16FC A5 5C			lda AVAILDIR
  1584 16FE 29 08			and #$08
  1585 1700 F0 5D			jeq l_06E4
  1586
  1587 				; optimize OK (ai.inc), line = 59
  1588
  1589 1702 A9 05			lda #$05
  1590 1704 85 59			sta I0B
  1591
  1592 1706			l_06EE
  1593 				; --- ForToDoCondition
  1594 1706 A5 59			lda I0B
  1595 1708 C9 01			cmp #$01
  1596 170A 90 53			jcc l_06FC
  1597
  1598 				; optimize OK (ai.inc), line = 60
  1599
  1600 170C A4 5D 84 12 A4 5E + 	mwy T0W :bp2
  1601 1714 A4 59			ldy I0B
  1602 1716 B1 12			lda (:bp2),y
  1603 1718 C9 20			cmp #$20
  1604 171A D0 03			jne l_0714
  1605 171C EE C3 25			inc R
  1606 171F			l_0714
  1607
  1608 				; optimize OK (ai.inc), line = 61
  1609
  1610 171F A5 5D			lda T0W
  1611 1721 18 65 59			add I0B
  1612 1724 A8				tay
  1613 1725 A5 5E			lda T0W+1
  1614 1727 69 00			adc #$00
  1615 1729 85 11			sta :bp+1
  1616 172B 98				tya
  1617 172C 18 69 28			add #$28
  1618 172F A8				tay
  1619 1730 90 02			scc
  1620 1732 E6 11			inc :bp+1
  1621 1734 B1 10			lda (:bp),y
  1622 1736 C9 20			cmp #$20
  1623 1738 D0 03			jne l_0737
  1624 173A EE C3 25			inc R
  1625 173D			l_0737
  1626
  1627 				; optimize OK (ai.inc), line = 62
  1628
  1629 173D A5 5D			lda T0W
  1630 173F 18 65 59			add I0B
  1631 1742 A8				tay
  1632 1743 A5 5E			lda T0W+1
  1633 1745 69 00			adc #$00
  1634 1747 85 11			sta :bp+1
  1635 1749 98				tya
  1636 174A 38 E9 28			sub #$28
  1637 174D A8				tay
  1638 174E B0 02			scs
  1639 1750 C6 11			dec :bp+1
  1640 1752 B1 10			lda (:bp),y
  1641 1754 C9 20			cmp #$20
  1642 1756 D0 03			jne l_075A
  1643 1758 EE C3 25			inc R
  1644 175B			l_075A
  1645
  1646 				; --- ForToDoEpilog
  1647 175B C6 59			dec I0B
  1648 175D 10 A7			jpl l_06EE
  1649 175F			l_06FC
  1650 175F			l_06E4
  1651
  1652 				; optimize OK (ai.inc), line = 66
  1653
  1654 175F AD C5 25			lda D
  1655 1762 85 58			sta T0B
  1656
  1657 				; optimize OK (ai.inc), line = 67
  1658
  1659 1764 CD C4 25			cmp U
  1660 1767 B0 05			jcs l_0782
  1661 1769 AD C4 25			lda U
  1662 176C 85 58			sta T0B
  1663 176E			l_0782
  1664
  1665 				; optimize OK (ai.inc), line = 68
  1666
  1667 176E A5 58			lda T0B
  1668 1770 CD C2 25			cmp L
  1669 1773 B0 05			jcs l_079F
  1670 1775 AD C2 25			lda L
  1671 1778 85 58			sta T0B
  1672 177A			l_079F
  1673
  1674 				; optimize OK (ai.inc), line = 69
  1675
  1676 177A A5 58			lda T0B
  1677 177C CD C3 25			cmp R
  1678 177F B0 05			jcs l_07BC
  1679 1781 AD C3 25			lda R
  1680 1784 85 58			sta T0B
  1681 1786			l_07BC
  1682
  1683 				; optimize OK (ai.inc), line = 71
  1684
  1685 1786 A5 58			lda T0B
  1686 1788 CD C5 25			cmp D
  1687 178B D0 04			jne l_07D9
  1688 178D A9 02			lda #$02
  1689 178F 85 58			sta T0B
  1690 1791			l_07D9
  1691
  1692 				; optimize OK (ai.inc), line = 72
  1693
  1694 1791 A5 58			lda T0B
  1695 1793 CD C4 25			cmp U
  1696 1796 D0 04			jne l_07F4
  1697 1798 A9 01			lda #$01
  1698 179A 85 58			sta T0B
  1699 179C			l_07F4
  1700
  1701 				; optimize OK (ai.inc), line = 73
  1702
  1703 179C A5 58			lda T0B
  1704 179E CD C2 25			cmp L
  1705 17A1 D0 04			jne l_080F
  1706 17A3 A9 04			lda #$04
  1707 17A5 85 58			sta T0B
  1708 17A7			l_080F
  1709
  1710 				; optimize OK (ai.inc), line = 74
  1711
  1712 17A7 A5 58			lda T0B
  1713 17A9 CD C3 25			cmp R
  1714 17AC D0 04			jne l_082A
  1715 17AE A9 08			lda #$08
  1716 17B0 85 58			sta T0B
  1717 17B2			l_082A
  1718
  1719 				; optimize OK (ai.inc), line = 76
  1720
  1721 17B2 A5 5C			lda AVAILDIR
  1722 17B4 25 58			and T0B
  1723 17B6 F0 07			jeq l_0849
  1724 17B8 A5 58			lda T0B
  1725 17BA 85 5B			sta NEWDIR
  1726 17BC 4C C2 17			jmp l_0859
  1727 17BF			l_0849
  1728
  1729 				; optimize FAIL ('AISTRAIGHT', ai.inc), line = 77
  1730
  1731 17BF 20 E4 14			jsr AISTRAIGHT
  1732 17C2			l_0859
  1733
  1734 				; ------------------------------------------------------------
  1735
  1736 = 25C2			L	= DATAORIGIN+$0056
  1737 = 25C3			R	= DATAORIGIN+$0057
  1738 = 25C4			U	= DATAORIGIN+$0058
  1739 = 25C5			D	= DATAORIGIN+$0059
  1740 = 0001			@FORTMP_0511	= $01
  1741 = 0001			@FORTMP_05B1	= $01
  1742 = 0001			@FORTMP_0651	= $01
  1743 = 0001			@FORTMP_06EB	= $01
  1744
  1745 = 25C2			@VarData	= L
  1746 = 0004			@VarDataSize	= 4
  1747
  1748 17C2			@exit
  1749 					.ifdef @new
  1750 					lda <@VarData
  1751 					sta :ztmp
  1752 					lda >@VarData
  1753 					ldy #@VarDataSize-1
  1754 					jmp @FreeMem
  1755 					els
  1756 17C2 60				rts						; ret
  1757 					eif
  1758 				.endl
  1759
  1760 17C3			.local	AIBULLY						; PROCEDURE
  1761
  1762 				; optimize OK (ai.inc), line = 84
  1763
  1764 17C3 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  1765 17CD A0 04			ldy #PLY.DIR-DATAORIGIN
  1766 17CF B1 12			lda (:bp2),y
  1767 17D1 85 58			sta T0B
  1768
  1769 				; optimize OK (ai.inc), line = 86
  1770
  1771 17D3 AD 85 25			lda PLAYER1.ISALIVE
  1772 17D6 0D 8D 25			ora PLAYER2.ISALIVE
  1773 17D9 D0 03 4C 80 18		jeq l_0876
  1774
  1775 				; optimize OK (ai.inc), line = 88
  1776
  1777 17DE AD 85 25			lda PLAYER1.ISALIVE
  1778 17E1 F0 0F			jeq l_0883
  1779 17E3 AD 62 25			lda PLAYER1
  1780 17E6 8D 60 25			sta TMPPLY
  1781 17E9 AD 63 25			lda PLAYER1+1
  1782 17EC 8D 61 25			sta TMPPLY+1
  1783 17EF 4C FE 17			jmp l_0892
  1784 17F2			l_0883
  1785 17F2 AD 64 25			lda PLAYER2
  1786 17F5 8D 60 25			sta TMPPLY
  1787 17F8 AD 65 25			lda PLAYER2+1
  1788 17FB 8D 61 25			sta TMPPLY+1
  1789 17FE			l_0892
  1790
  1791 				; optimize OK (ai.inc), line = 90
  1792
  1793 17FE AC 5E 25 84 12 AC + 	mwy PLY :bp2
  1794 1808 A0 01			ldy #PLY.Y-DATAORIGIN
  1795 180A B1 12			lda (:bp2),y
  1796 180C 85 21			sta :STACKORIGIN+9
  1797 180E AC 60 25 84 12 AC + 	mwy TMPPLY :bp2
  1798 1818 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1799 181A B1 12			lda (:bp2),y
  1800 181C C5 21			cmp :STACKORIGIN+9
  1801 181E B0 07			jcs l_08AB
  1802 1820 A9 01			lda #$01
  1803 1822 85 58			sta T0B
  1804 1824 4C 2B 18			jmp l_08B9
  1805 1827			l_08AB
  1806 1827 A9 02			lda #$02
  1807 1829 85 58			sta T0B
  1808 182B			l_08B9
  1809
  1810 				; optimize OK (ai.inc), line = 91
  1811
  1812 182B AC 5E 25 84 12 AC + 	mwy PLY :bp2
  1813 1835 A0 01			ldy #PLY.Y-DATAORIGIN
  1814 1837 B1 12			lda (:bp2),y
  1815 1839 85 21			sta :STACKORIGIN+9
  1816 183B AC 60 25 84 12 AC + 	mwy TMPPLY :bp2
  1817 1845 A0 01			ldy #TMPPLY.Y-DATAORIGIN
  1818 1847 B1 12			lda (:bp2),y
  1819 1849 C5 21			cmp :STACKORIGIN+9
  1820 184B F0 06			jeq l_08E3x
  1821 184D A5 5C			lda AVAILDIR
  1822 184F 25 58			and T0B
  1823 1851 D0 2D			jne l_08E3
  1824 1853			l_08E3x
  1825
  1826 				; optimize OK (ai.inc), line = 92
  1827
  1828 1853 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  1829 185D A0 00			ldy #PLY.X-DATAORIGIN
  1830 185F B1 12			lda (:bp2),y
  1831 1861 85 21			sta :STACKORIGIN+9
  1832 1863 AC 60 25 84 12 AC + 	mwy TMPPLY :bp2
  1833 186D A0 00			ldy #TMPPLY.X-DATAORIGIN
  1834 186F B1 12			lda (:bp2),y
  1835 1871 C5 21			cmp :STACKORIGIN+9
  1836 1873 B0 07			jcs l_08F8
  1837 1875 A9 04			lda #$04
  1838 1877 85 58			sta T0B
  1839 1879 4C 80 18			jmp l_0906
  1840 187C			l_08F8
  1841 187C A9 08			lda #$08
  1842 187E 85 58			sta T0B
  1843 1880			l_0906
  1844 1880			l_08E3
  1845 1880			l_0876
  1846
  1847 				; optimize OK (ai.inc), line = 96
  1848
  1849 1880 A5 5C			lda AVAILDIR
  1850 1882 25 58			and T0B
  1851 1884 F0 07			jeq l_0926
  1852 1886 A5 58			lda T0B
  1853 1888 85 5B			sta NEWDIR
  1854 188A 4C 90 18			jmp l_0936
  1855 188D			l_0926
  1856
  1857 				; optimize FAIL ('AISAPPER', ai.inc), line = 97
  1858
  1859 188D 20 69 15			jsr AISAPPER
  1860 1890			l_0936
  1861 1890			@exit
  1862 					.ifdef @new
  1863 					lda <@VarData
  1864 					sta :ztmp
  1865 					lda >@VarData
  1866 					ldy #@VarDataSize-1
  1867 					jmp @FreeMem
  1868 					els
  1869 1890 60				rts						; ret
  1870 					eif
  1871 				.endl
  1872
  1873 1891			.local	AIMIRROR					; PROCEDURE
  1874
  1875 				; optimize OK (ai.inc), line = 105
  1876
  1877 1891 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  1878 189B A0 04			ldy #PLY.DIR-DATAORIGIN
  1879 189D B1 12			lda (:bp2),y
  1880 189F 85 58			sta T0B
  1881
  1882 				; optimize OK (ai.inc), line = 107
  1883
  1884 18A1 AD 85 25			lda PLAYER1.ISALIVE
  1885 18A4 F0 2F			jeq l_094D
  1886
  1887 				; optimize OK (ai.inc), line = 108
  1888
  1889 18A6 AD 82 25			lda PLAYER1.DIR
  1890 18A9 8D C6 25			sta @CASETMP_0005
  1891 18AC C9 01			cmp #$01
  1892 18AE D0 07			jne l_0959
  1893 18B0			@
  1894
  1895 				; optimize OK (ai.inc), line = 109
  1896
  1897 18B0 A9 02			lda #$02
  1898 18B2 85 58			sta T0B
  1899
  1900 18B4 4C D5 18			jmp a_0005
  1901 18B7			l_0959
  1902 18B7 C9 02			cmp #$02
  1903 18B9 D0 07			jne l_0966
  1904 18BB			@
  1905
  1906 				; optimize OK (ai.inc), line = 110
  1907
  1908 18BB A9 01			lda #$01
  1909 18BD 85 58			sta T0B
  1910
  1911 18BF 4C D5 18			jmp a_0005
  1912 18C2			l_0966
  1913 18C2 C9 04			cmp #$04
  1914 18C4 D0 07			jne l_0973
  1915 18C6			@
  1916
  1917 				; optimize OK (ai.inc), line = 111
  1918
  1919 18C6 A9 08			lda #$08
  1920 18C8 85 58			sta T0B
  1921
  1922 18CA 4C D5 18			jmp a_0005
  1923 18CD			l_0973
  1924 18CD C9 08			cmp #$08
  1925 18CF D0 04			jne l_0980
  1926 18D1			@
  1927
  1928 				; optimize OK (ai.inc), line = 112
  1929
  1930 18D1 A9 04			lda #$04
  1931 18D3 85 58			sta T0B
  1932
  1933 18D5			l_0980
  1934 18D5			a_0005
  1935 18D5			l_094D
  1936
  1937 				; optimize OK (ai.inc), line = 116
  1938
  1939 18D5 A5 5C			lda AVAILDIR
  1940 18D7 25 58			and T0B
  1941 18D9 F0 07			jeq l_09A6
  1942 18DB A5 58			lda T0B
  1943 18DD 85 5B			sta NEWDIR
  1944 18DF 4C E5 18			jmp l_09B6
  1945 18E2			l_09A6
  1946
  1947 				; optimize FAIL ('AISAPPER', ai.inc), line = 117
  1948
  1949 18E2 20 69 15			jsr AISAPPER
  1950 18E5			l_09B6
  1951
  1952 				; ------------------------------------------------------------
  1953
  1954 = 25C6			@CASETMP_0005	= DATAORIGIN+$005A
  1955
  1956 = 25C6			@VarData	= @CASETMP_0005
  1957 = 0001			@VarDataSize	= 1
  1958
  1959 18E5			@exit
  1960 					.ifdef @new
  1961 					lda <@VarData
  1962 					sta :ztmp
  1963 					lda >@VarData
  1964 					ldy #@VarDataSize-1
  1965 					jmp @FreeMem
  1966 					els
  1967 18E5 60				rts						; ret
  1968 					eif
  1969 				.endl
  1970
  1971 18E6			.local	SETLEVEL01					; PROCEDURE
  1972
  1973 				; optimize OK (levels.inc), line = 13
  1974
  1975 18E6 A9 01			lda #$01
  1976 18E8 8D BF 25			sta INITPLAYERS.ISALIVE
  1977 18EB A9 62			lda #$62
  1978 18ED 8D BE 25			sta INITPLAYERS.COLOUR
  1979 18F0 A9 51			lda #$51
  1980 18F2 8D BD 25			sta INITPLAYERS.HEAD
  1981 18F5 A9 00			lda #$00
  1982 18F7 8D BC 25			sta INITPLAYERS.BRAIN
  1983 18FA A9 08			lda #$08
  1984 18FC 8D BB 25			sta INITPLAYERS.DIR
  1985 18FF A9 0C			lda #$0C
  1986 1901 8D BA 25			sta INITPLAYERS.Y
  1987 1904 A9 0A			lda #$0A
  1988 1906 8D B9 25			sta INITPLAYERS.X
  1989 1909 AD 62 25			lda PLAYER1
  1990 190C 8D B7 25			sta INITPLAYERS.P
  1991 190F AD 63 25			lda PLAYER1+1
  1992 1912 8D B8 25			sta INITPLAYERS.P+1
  1993 1915 20 00 14			jsr INITPLAYERS
  1994
  1995 				; optimize OK (levels.inc), line = 14
  1996
  1997 1918 A9 01			lda #$01
  1998 191A 8D BF 25			sta INITPLAYERS.ISALIVE
  1999 191D A9 5D			lda #$5D
  2000 191F 8D BE 25			sta INITPLAYERS.COLOUR
  2001 1922 A9 51			lda #$51
  2002 1924 8D BD 25			sta INITPLAYERS.HEAD
  2003 1927 A9 01			lda #$01
  2004 1929 8D BC 25			sta INITPLAYERS.BRAIN
  2005 192C A9 04			lda #$04
  2006 192E 8D BB 25			sta INITPLAYERS.DIR
  2007 1931 A9 0C			lda #$0C
  2008 1933 8D BA 25			sta INITPLAYERS.Y
  2009 1936 A9 1E			lda #$1E
  2010 1938 8D B9 25			sta INITPLAYERS.X
  2011 193B AD 64 25			lda PLAYER2
  2012 193E 8D B7 25			sta INITPLAYERS.P
  2013 1941 AD 65 25			lda PLAYER2+1
  2014 1944 8D B8 25			sta INITPLAYERS.P+1
  2015 1947 20 00 14			jsr INITPLAYERS
  2016
  2017 				; optimize OK (levels.inc), line = 15
  2018
  2019 194A A9 00			lda #$00
  2020 194C 8D BF 25			sta INITPLAYERS.ISALIVE
  2021 194F A9 71			lda #$71
  2022 1951 8D BE 25			sta INITPLAYERS.COLOUR
  2023 1954 A9 51			lda #$51
  2024 1956 8D BD 25			sta INITPLAYERS.HEAD
  2025 1959 A9 03			lda #$03
  2026 195B 8D BC 25			sta INITPLAYERS.BRAIN
  2027 195E A9 02			lda #$02
  2028 1960 8D BB 25			sta INITPLAYERS.DIR
  2029 1963 A9 04			lda #$04
  2030 1965 8D BA 25			sta INITPLAYERS.Y
  2031 1968 A9 14			lda #$14
  2032 196A 8D B9 25			sta INITPLAYERS.X
  2033 196D AD 66 25			lda PLAYER3
  2034 1970 8D B7 25			sta INITPLAYERS.P
  2035 1973 AD 67 25			lda PLAYER3+1
  2036 1976 8D B8 25			sta INITPLAYERS.P+1
  2037 1979 20 00 14			jsr INITPLAYERS
  2038
  2039 				; optimize OK (levels.inc), line = 16
  2040
  2041 197C A9 00			lda #$00
  2042 197E 8D BF 25			sta INITPLAYERS.ISALIVE
  2043 1981 A9 55			lda #$55
  2044 1983 8D BE 25			sta INITPLAYERS.COLOUR
  2045 1986 A9 51			lda #$51
  2046 1988 8D BD 25			sta INITPLAYERS.HEAD
  2047 198B A9 02			lda #$02
  2048 198D 8D BC 25			sta INITPLAYERS.BRAIN
  2049 1990 A9 01			lda #$01
  2050 1992 8D BB 25			sta INITPLAYERS.DIR
  2051 1995 A9 12			lda #$12
  2052 1997 8D BA 25			sta INITPLAYERS.Y
  2053 199A A9 14			lda #$14
  2054 199C 8D B9 25			sta INITPLAYERS.X
  2055 199F AD 68 25			lda PLAYER4
  2056 19A2 8D B7 25			sta INITPLAYERS.P
  2057 19A5 AD 69 25			lda PLAYER4+1
  2058 19A8 8D B8 25			sta INITPLAYERS.P+1
  2059 19AB 20 00 14			jsr INITPLAYERS
  2060
  2061 				; optimize OK (levels.inc), line = 18
  2062
  2063 19AE A9 FA			lda #$FA
  2064 19B0 8D 9E 25			sta adr.OBSTACLES+$00
  2065 19B3 A9 0C			lda #$0C
  2066 19B5 8D 9F 25			sta adr.OBSTACLES+1+$00
  2067
  2068 				; optimize OK (levels.inc), line = 19
  2069
  2070 19B8 A9 0E			lda #$0E
  2071 19BA 8D A0 25			sta adr.OBSTACLES+$02
  2072 19BD A9 0D			lda #$0D
  2073 19BF 8D A1 25			sta adr.OBSTACLES+1+$02
  2074
  2075 				; optimize OK (levels.inc), line = 20
  2076
  2077 19C2 A9 DA			lda #$DA
  2078 19C4 8D A2 25			sta adr.OBSTACLES+$04
  2079 19C7 A9 0E			lda #$0E
  2080 19C9 8D A3 25			sta adr.OBSTACLES+1+$04
  2081
  2082 				; optimize OK (levels.inc), line = 21
  2083
  2084 19CC A9 EE			lda #$EE
  2085 19CE 8D A4 25			sta adr.OBSTACLES+$06
  2086 19D1 A9 0E			lda #$0E
  2087 19D3 8D A5 25			sta adr.OBSTACLES+1+$06
  2088
  2089 				; optimize OK (levels.inc), line = 22
  2090
  2091 19D6 A9 7E			lda #$7E
  2092 19D8 8D A6 25			sta adr.OBSTACLES+$08
  2093 19DB A9 00			lda #$00
  2094 19DD 8D A7 25			sta adr.OBSTACLES+1+$08
  2095
  2096 				; optimize OK (levels.inc), line = 23
  2097
  2098 19E0 A9 64			lda #$64
  2099 19E2 8D A8 25			sta adr.OBSTACLES+$0A
  2100 19E5 A9 0C			lda #$0C
  2101 19E7 8D A9 25			sta adr.OBSTACLES+1+$0A
  2102
  2103 				; optimize OK (levels.inc), line = 24
  2104
  2105 19EA A9 84			lda #$84
  2106 19EC 8D AA 25			sta adr.OBSTACLES+$0C
  2107 19EF A9 0F			lda #$0F
  2108 19F1 8D AB 25			sta adr.OBSTACLES+1+$0C
  2109
  2110 				; optimize OK (levels.inc), line = 25
  2111
  2112 19F4 A9 7E			lda #$7E
  2113 19F6 8D AC 25			sta adr.OBSTACLES+$0E
  2114 19F9 A9 00			lda #$00
  2115 19FB 8D AD 25			sta adr.OBSTACLES+1+$0E
  2116
  2117 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 27
  2118
  2119 19FE 20 F3 12			jsr SAVEOBSTACLES
  2120 1A01			@exit
  2121 					.ifdef @new
  2122 					lda <@VarData
  2123 					sta :ztmp
  2124 					lda >@VarData
  2125 					ldy #@VarDataSize-1
  2126 					jmp @FreeMem
  2127 					els
  2128 1A01 60				rts						; ret
  2129 					eif
  2130 				.endl
  2131
  2132 1A02			.local	SETLEVEL02					; PROCEDURE
  2133
  2134 				; optimize OK (levels.inc), line = 34
  2135
  2136 1A02 A9 01			lda #$01
  2137 1A04 8D BF 25			sta INITPLAYERS.ISALIVE
  2138 1A07 A9 62			lda #$62
  2139 1A09 8D BE 25			sta INITPLAYERS.COLOUR
  2140 1A0C A9 51			lda #$51
  2141 1A0E 8D BD 25			sta INITPLAYERS.HEAD
  2142 1A11 A9 00			lda #$00
  2143 1A13 8D BC 25			sta INITPLAYERS.BRAIN
  2144 1A16 A9 08			lda #$08
  2145 1A18 8D BB 25			sta INITPLAYERS.DIR
  2146 1A1B A9 0C			lda #$0C
  2147 1A1D 8D BA 25			sta INITPLAYERS.Y
  2148 1A20 A9 0A			lda #$0A
  2149 1A22 8D B9 25			sta INITPLAYERS.X
  2150 1A25 AD 62 25			lda PLAYER1
  2151 1A28 8D B7 25			sta INITPLAYERS.P
  2152 1A2B AD 63 25			lda PLAYER1+1
  2153 1A2E 8D B8 25			sta INITPLAYERS.P+1
  2154 1A31 20 00 14			jsr INITPLAYERS
  2155
  2156 				; optimize OK (levels.inc), line = 35
  2157
  2158 1A34 A9 01			lda #$01
  2159 1A36 8D BF 25			sta INITPLAYERS.ISALIVE
  2160 1A39 A9 5D			lda #$5D
  2161 1A3B 8D BE 25			sta INITPLAYERS.COLOUR
  2162 1A3E A9 51			lda #$51
  2163 1A40 8D BD 25			sta INITPLAYERS.HEAD
  2164 1A43 A9 03			lda #$03
  2165 1A45 8D BC 25			sta INITPLAYERS.BRAIN
  2166 1A48 A9 04			lda #$04
  2167 1A4A 8D BB 25			sta INITPLAYERS.DIR
  2168 1A4D A9 0C			lda #$0C
  2169 1A4F 8D BA 25			sta INITPLAYERS.Y
  2170 1A52 A9 1E			lda #$1E
  2171 1A54 8D B9 25			sta INITPLAYERS.X
  2172 1A57 AD 64 25			lda PLAYER2
  2173 1A5A 8D B7 25			sta INITPLAYERS.P
  2174 1A5D AD 65 25			lda PLAYER2+1
  2175 1A60 8D B8 25			sta INITPLAYERS.P+1
  2176 1A63 20 00 14			jsr INITPLAYERS
  2177
  2178 				; optimize OK (levels.inc), line = 36
  2179
  2180 1A66 A9 00			lda #$00
  2181 1A68 8D BF 25			sta INITPLAYERS.ISALIVE
  2182 1A6B A9 71			lda #$71
  2183 1A6D 8D BE 25			sta INITPLAYERS.COLOUR
  2184 1A70 A9 51			lda #$51
  2185 1A72 8D BD 25			sta INITPLAYERS.HEAD
  2186 1A75 A9 03			lda #$03
  2187 1A77 8D BC 25			sta INITPLAYERS.BRAIN
  2188 1A7A A9 02			lda #$02
  2189 1A7C 8D BB 25			sta INITPLAYERS.DIR
  2190 1A7F A9 04			lda #$04
  2191 1A81 8D BA 25			sta INITPLAYERS.Y
  2192 1A84 A9 14			lda #$14
  2193 1A86 8D B9 25			sta INITPLAYERS.X
  2194 1A89 AD 66 25			lda PLAYER3
  2195 1A8C 8D B7 25			sta INITPLAYERS.P
  2196 1A8F AD 67 25			lda PLAYER3+1
  2197 1A92 8D B8 25			sta INITPLAYERS.P+1
  2198 1A95 20 00 14			jsr INITPLAYERS
  2199
  2200 				; optimize OK (levels.inc), line = 37
  2201
  2202 1A98 A9 00			lda #$00
  2203 1A9A 8D BF 25			sta INITPLAYERS.ISALIVE
  2204 1A9D A9 55			lda #$55
  2205 1A9F 8D BE 25			sta INITPLAYERS.COLOUR
  2206 1AA2 A9 51			lda #$51
  2207 1AA4 8D BD 25			sta INITPLAYERS.HEAD
  2208 1AA7 A9 02			lda #$02
  2209 1AA9 8D BC 25			sta INITPLAYERS.BRAIN
  2210 1AAC A9 01			lda #$01
  2211 1AAE 8D BB 25			sta INITPLAYERS.DIR
  2212 1AB1 A9 12			lda #$12
  2213 1AB3 8D BA 25			sta INITPLAYERS.Y
  2214 1AB6 A9 14			lda #$14
  2215 1AB8 8D B9 25			sta INITPLAYERS.X
  2216 1ABB AD 68 25			lda PLAYER4
  2217 1ABE 8D B7 25			sta INITPLAYERS.P
  2218 1AC1 AD 69 25			lda PLAYER4+1
  2219 1AC4 8D B8 25			sta INITPLAYERS.P+1
  2220 1AC7 20 00 14			jsr INITPLAYERS
  2221
  2222 				; optimize OK (levels.inc), line = 39
  2223
  2224 1ACA A9 FA			lda #$FA
  2225 1ACC 8D 9E 25			sta adr.OBSTACLES+$00
  2226 1ACF A9 0C			lda #$0C
  2227 1AD1 8D 9F 25			sta adr.OBSTACLES+1+$00
  2228
  2229 				; optimize OK (levels.inc), line = 40
  2230
  2231 1AD4 A9 0E			lda #$0E
  2232 1AD6 8D A0 25			sta adr.OBSTACLES+$02
  2233 1AD9 A9 0D			lda #$0D
  2234 1ADB 8D A1 25			sta adr.OBSTACLES+1+$02
  2235
  2236 				; optimize OK (levels.inc), line = 41
  2237
  2238 1ADE A9 DA			lda #$DA
  2239 1AE0 8D A2 25			sta adr.OBSTACLES+$04
  2240 1AE3 A9 0E			lda #$0E
  2241 1AE5 8D A3 25			sta adr.OBSTACLES+1+$04
  2242
  2243 				; optimize OK (levels.inc), line = 42
  2244
  2245 1AE8 A9 EE			lda #$EE
  2246 1AEA 8D A4 25			sta adr.OBSTACLES+$06
  2247 1AED A9 0E			lda #$0E
  2248 1AEF 8D A5 25			sta adr.OBSTACLES+1+$06
  2249
  2250 				; optimize OK (levels.inc), line = 43
  2251
  2252 1AF2 A9 7E			lda #$7E
  2253 1AF4 8D A6 25			sta adr.OBSTACLES+$08
  2254 1AF7 A9 00			lda #$00
  2255 1AF9 8D A7 25			sta adr.OBSTACLES+1+$08
  2256
  2257 				; optimize OK (levels.inc), line = 44
  2258
  2259 1AFC A9 64			lda #$64
  2260 1AFE 8D A8 25			sta adr.OBSTACLES+$0A
  2261 1B01 A9 0C			lda #$0C
  2262 1B03 8D A9 25			sta adr.OBSTACLES+1+$0A
  2263
  2264 				; optimize OK (levels.inc), line = 45
  2265
  2266 1B06 A9 84			lda #$84
  2267 1B08 8D AA 25			sta adr.OBSTACLES+$0C
  2268 1B0B A9 0F			lda #$0F
  2269 1B0D 8D AB 25			sta adr.OBSTACLES+1+$0C
  2270
  2271 				; optimize OK (levels.inc), line = 46
  2272
  2273 1B10 A9 7E			lda #$7E
  2274 1B12 8D AC 25			sta adr.OBSTACLES+$0E
  2275 1B15 A9 00			lda #$00
  2276 1B17 8D AD 25			sta adr.OBSTACLES+1+$0E
  2277
  2278 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 48
  2279
  2280 1B1A 20 F3 12			jsr SAVEOBSTACLES
  2281 1B1D			@exit
  2282 					.ifdef @new
  2283 					lda <@VarData
  2284 					sta :ztmp
  2285 					lda >@VarData
  2286 					ldy #@VarDataSize-1
  2287 					jmp @FreeMem
  2288 					els
  2289 1B1D 60				rts						; ret
  2290 					eif
  2291 				.endl
  2292
  2293 1B1E			.local	SETLEVEL03					; PROCEDURE
  2294
  2295 				; optimize OK (levels.inc), line = 55
  2296
  2297 1B1E A9 01			lda #$01
  2298 1B20 8D BF 25			sta INITPLAYERS.ISALIVE
  2299 1B23 A9 62			lda #$62
  2300 1B25 8D BE 25			sta INITPLAYERS.COLOUR
  2301 1B28 A9 51			lda #$51
  2302 1B2A 8D BD 25			sta INITPLAYERS.HEAD
  2303 1B2D A9 00			lda #$00
  2304 1B2F 8D BC 25			sta INITPLAYERS.BRAIN
  2305 1B32 A9 08			lda #$08
  2306 1B34 8D BB 25			sta INITPLAYERS.DIR
  2307 1B37 A9 0C			lda #$0C
  2308 1B39 8D BA 25			sta INITPLAYERS.Y
  2309 1B3C A9 0A			lda #$0A
  2310 1B3E 8D B9 25			sta INITPLAYERS.X
  2311 1B41 AD 62 25			lda PLAYER1
  2312 1B44 8D B7 25			sta INITPLAYERS.P
  2313 1B47 AD 63 25			lda PLAYER1+1
  2314 1B4A 8D B8 25			sta INITPLAYERS.P+1
  2315 1B4D 20 00 14			jsr INITPLAYERS
  2316
  2317 				; optimize OK (levels.inc), line = 56
  2318
  2319 1B50 A9 01			lda #$01
  2320 1B52 8D BF 25			sta INITPLAYERS.ISALIVE
  2321 1B55 A9 5D			lda #$5D
  2322 1B57 8D BE 25			sta INITPLAYERS.COLOUR
  2323 1B5A A9 51			lda #$51
  2324 1B5C 8D BD 25			sta INITPLAYERS.HEAD
  2325 1B5F A9 02			lda #$02
  2326 1B61 8D BC 25			sta INITPLAYERS.BRAIN
  2327 1B64 A9 04			lda #$04
  2328 1B66 8D BB 25			sta INITPLAYERS.DIR
  2329 1B69 A9 0C			lda #$0C
  2330 1B6B 8D BA 25			sta INITPLAYERS.Y
  2331 1B6E A9 1E			lda #$1E
  2332 1B70 8D B9 25			sta INITPLAYERS.X
  2333 1B73 AD 64 25			lda PLAYER2
  2334 1B76 8D B7 25			sta INITPLAYERS.P
  2335 1B79 AD 65 25			lda PLAYER2+1
  2336 1B7C 8D B8 25			sta INITPLAYERS.P+1
  2337 1B7F 20 00 14			jsr INITPLAYERS
  2338
  2339 				; optimize OK (levels.inc), line = 57
  2340
  2341 1B82 A9 00			lda #$00
  2342 1B84 8D BF 25			sta INITPLAYERS.ISALIVE
  2343 1B87 A9 71			lda #$71
  2344 1B89 8D BE 25			sta INITPLAYERS.COLOUR
  2345 1B8C A9 51			lda #$51
  2346 1B8E 8D BD 25			sta INITPLAYERS.HEAD
  2347 1B91 A9 03			lda #$03
  2348 1B93 8D BC 25			sta INITPLAYERS.BRAIN
  2349 1B96 A9 02			lda #$02
  2350 1B98 8D BB 25			sta INITPLAYERS.DIR
  2351 1B9B A9 04			lda #$04
  2352 1B9D 8D BA 25			sta INITPLAYERS.Y
  2353 1BA0 A9 14			lda #$14
  2354 1BA2 8D B9 25			sta INITPLAYERS.X
  2355 1BA5 AD 66 25			lda PLAYER3
  2356 1BA8 8D B7 25			sta INITPLAYERS.P
  2357 1BAB AD 67 25			lda PLAYER3+1
  2358 1BAE 8D B8 25			sta INITPLAYERS.P+1
  2359 1BB1 20 00 14			jsr INITPLAYERS
  2360
  2361 				; optimize OK (levels.inc), line = 58
  2362
  2363 1BB4 A9 00			lda #$00
  2364 1BB6 8D BF 25			sta INITPLAYERS.ISALIVE
  2365 1BB9 A9 55			lda #$55
  2366 1BBB 8D BE 25			sta INITPLAYERS.COLOUR
  2367 1BBE A9 51			lda #$51
  2368 1BC0 8D BD 25			sta INITPLAYERS.HEAD
  2369 1BC3 A9 03			lda #$03
  2370 1BC5 8D BC 25			sta INITPLAYERS.BRAIN
  2371 1BC8 A9 01			lda #$01
  2372 1BCA 8D BB 25			sta INITPLAYERS.DIR
  2373 1BCD A9 12			lda #$12
  2374 1BCF 8D BA 25			sta INITPLAYERS.Y
  2375 1BD2 A9 14			lda #$14
  2376 1BD4 8D B9 25			sta INITPLAYERS.X
  2377 1BD7 AD 68 25			lda PLAYER4
  2378 1BDA 8D B7 25			sta INITPLAYERS.P
  2379 1BDD AD 69 25			lda PLAYER4+1
  2380 1BE0 8D B8 25			sta INITPLAYERS.P+1
  2381 1BE3 20 00 14			jsr INITPLAYERS
  2382
  2383 				; optimize OK (levels.inc), line = 60
  2384
  2385 1BE6 A9 FA			lda #$FA
  2386 1BE8 8D 9E 25			sta adr.OBSTACLES+$00
  2387 1BEB A9 0C			lda #$0C
  2388 1BED 8D 9F 25			sta adr.OBSTACLES+1+$00
  2389
  2390 				; optimize OK (levels.inc), line = 61
  2391
  2392 1BF0 A9 0E			lda #$0E
  2393 1BF2 8D A0 25			sta adr.OBSTACLES+$02
  2394 1BF5 A9 0D			lda #$0D
  2395 1BF7 8D A1 25			sta adr.OBSTACLES+1+$02
  2396
  2397 				; optimize OK (levels.inc), line = 62
  2398
  2399 1BFA A9 DA			lda #$DA
  2400 1BFC 8D A2 25			sta adr.OBSTACLES+$04
  2401 1BFF A9 0E			lda #$0E
  2402 1C01 8D A3 25			sta adr.OBSTACLES+1+$04
  2403
  2404 				; optimize OK (levels.inc), line = 63
  2405
  2406 1C04 A9 EE			lda #$EE
  2407 1C06 8D A4 25			sta adr.OBSTACLES+$06
  2408 1C09 A9 0E			lda #$0E
  2409 1C0B 8D A5 25			sta adr.OBSTACLES+1+$06
  2410
  2411 				; optimize OK (levels.inc), line = 64
  2412
  2413 1C0E A9 E1			lda #$E1
  2414 1C10 8D A6 25			sta adr.OBSTACLES+$08
  2415 1C13 A9 0D			lda #$0D
  2416 1C15 8D A7 25			sta adr.OBSTACLES+1+$08
  2417
  2418 				; optimize OK (levels.inc), line = 65
  2419
  2420 1C18 A9 64			lda #$64
  2421 1C1A 8D A8 25			sta adr.OBSTACLES+$0A
  2422 1C1D A9 0C			lda #$0C
  2423 1C1F 8D A9 25			sta adr.OBSTACLES+1+$0A
  2424
  2425 				; optimize OK (levels.inc), line = 66
  2426
  2427 1C22 A9 84			lda #$84
  2428 1C24 8D AA 25			sta adr.OBSTACLES+$0C
  2429 1C27 A9 0F			lda #$0F
  2430 1C29 8D AB 25			sta adr.OBSTACLES+1+$0C
  2431
  2432 				; optimize OK (levels.inc), line = 67
  2433
  2434 1C2C A9 7E			lda #$7E
  2435 1C2E 8D AC 25			sta adr.OBSTACLES+$0E
  2436 1C31 A9 00			lda #$00
  2437 1C33 8D AD 25			sta adr.OBSTACLES+1+$0E
  2438
  2439 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 69
  2440
  2441 1C36 20 F3 12			jsr SAVEOBSTACLES
  2442 1C39			@exit
  2443 					.ifdef @new
  2444 					lda <@VarData
  2445 					sta :ztmp
  2446 					lda >@VarData
  2447 					ldy #@VarDataSize-1
  2448 					jmp @FreeMem
  2449 					els
  2450 1C39 60				rts						; ret
  2451 					eif
  2452 				.endl
  2453
  2454 1C3A			.local	SETLEVEL04					; PROCEDURE
  2455
  2456 				; optimize OK (levels.inc), line = 76
  2457
  2458 1C3A A9 01			lda #$01
  2459 1C3C 8D BF 25			sta INITPLAYERS.ISALIVE
  2460 1C3F A9 62			lda #$62
  2461 1C41 8D BE 25			sta INITPLAYERS.COLOUR
  2462 1C44 A9 51			lda #$51
  2463 1C46 8D BD 25			sta INITPLAYERS.HEAD
  2464 1C49 A9 00			lda #$00
  2465 1C4B 8D BC 25			sta INITPLAYERS.BRAIN
  2466 1C4E A9 04			lda #$04
  2467 1C50 8D BB 25			sta INITPLAYERS.DIR
  2468 1C53 A9 0C			lda #$0C
  2469 1C55 8D BA 25			sta INITPLAYERS.Y
  2470 1C58 A9 12			lda #$12
  2471 1C5A 8D B9 25			sta INITPLAYERS.X
  2472 1C5D AD 62 25			lda PLAYER1
  2473 1C60 8D B7 25			sta INITPLAYERS.P
  2474 1C63 AD 63 25			lda PLAYER1+1
  2475 1C66 8D B8 25			sta INITPLAYERS.P+1
  2476 1C69 20 00 14			jsr INITPLAYERS
  2477
  2478 				; optimize OK (levels.inc), line = 77
  2479
  2480 1C6C A9 01			lda #$01
  2481 1C6E 8D BF 25			sta INITPLAYERS.ISALIVE
  2482 1C71 A9 5D			lda #$5D
  2483 1C73 8D BE 25			sta INITPLAYERS.COLOUR
  2484 1C76 A9 51			lda #$51
  2485 1C78 8D BD 25			sta INITPLAYERS.HEAD
  2486 1C7B A9 04			lda #$04
  2487 1C7D 8D BC 25			sta INITPLAYERS.BRAIN
  2488 1C80 A9 08			lda #$08
  2489 1C82 8D BB 25			sta INITPLAYERS.DIR
  2490 1C85 A9 0C			lda #$0C
  2491 1C87 8D BA 25			sta INITPLAYERS.Y
  2492 1C8A A9 16			lda #$16
  2493 1C8C 8D B9 25			sta INITPLAYERS.X
  2494 1C8F AD 64 25			lda PLAYER2
  2495 1C92 8D B7 25			sta INITPLAYERS.P
  2496 1C95 AD 65 25			lda PLAYER2+1
  2497 1C98 8D B8 25			sta INITPLAYERS.P+1
  2498 1C9B 20 00 14			jsr INITPLAYERS
  2499
  2500 				; optimize OK (levels.inc), line = 78
  2501
  2502 1C9E A9 00			lda #$00
  2503 1CA0 8D BF 25			sta INITPLAYERS.ISALIVE
  2504 1CA3 A9 71			lda #$71
  2505 1CA5 8D BE 25			sta INITPLAYERS.COLOUR
  2506 1CA8 A9 51			lda #$51
  2507 1CAA 8D BD 25			sta INITPLAYERS.HEAD
  2508 1CAD A9 03			lda #$03
  2509 1CAF 8D BC 25			sta INITPLAYERS.BRAIN
  2510 1CB2 A9 02			lda #$02
  2511 1CB4 8D BB 25			sta INITPLAYERS.DIR
  2512 1CB7 A9 04			lda #$04
  2513 1CB9 8D BA 25			sta INITPLAYERS.Y
  2514 1CBC A9 14			lda #$14
  2515 1CBE 8D B9 25			sta INITPLAYERS.X
  2516 1CC1 AD 66 25			lda PLAYER3
  2517 1CC4 8D B7 25			sta INITPLAYERS.P
  2518 1CC7 AD 67 25			lda PLAYER3+1
  2519 1CCA 8D B8 25			sta INITPLAYERS.P+1
  2520 1CCD 20 00 14			jsr INITPLAYERS
  2521
  2522 				; optimize OK (levels.inc), line = 79
  2523
  2524 1CD0 A9 00			lda #$00
  2525 1CD2 8D BF 25			sta INITPLAYERS.ISALIVE
  2526 1CD5 A9 55			lda #$55
  2527 1CD7 8D BE 25			sta INITPLAYERS.COLOUR
  2528 1CDA A9 51			lda #$51
  2529 1CDC 8D BD 25			sta INITPLAYERS.HEAD
  2530 1CDF A9 03			lda #$03
  2531 1CE1 8D BC 25			sta INITPLAYERS.BRAIN
  2532 1CE4 A9 01			lda #$01
  2533 1CE6 8D BB 25			sta INITPLAYERS.DIR
  2534 1CE9 A9 12			lda #$12
  2535 1CEB 8D BA 25			sta INITPLAYERS.Y
  2536 1CEE A9 14			lda #$14
  2537 1CF0 8D B9 25			sta INITPLAYERS.X
  2538 1CF3 AD 68 25			lda PLAYER4
  2539 1CF6 8D B7 25			sta INITPLAYERS.P
  2540 1CF9 AD 69 25			lda PLAYER4+1
  2541 1CFC 8D B8 25			sta INITPLAYERS.P+1
  2542 1CFF 20 00 14			jsr INITPLAYERS
  2543
  2544 				; optimize OK (levels.inc), line = 81
  2545
  2546 1D02 A9 FA			lda #$FA
  2547 1D04 8D 9E 25			sta adr.OBSTACLES+$00
  2548 1D07 A9 0C			lda #$0C
  2549 1D09 8D 9F 25			sta adr.OBSTACLES+1+$00
  2550
  2551 				; optimize OK (levels.inc), line = 82
  2552
  2553 1D0C A9 0E			lda #$0E
  2554 1D0E 8D A0 25			sta adr.OBSTACLES+$02
  2555 1D11 A9 0D			lda #$0D
  2556 1D13 8D A1 25			sta adr.OBSTACLES+1+$02
  2557
  2558 				; optimize OK (levels.inc), line = 83
  2559
  2560 1D16 A9 DA			lda #$DA
  2561 1D18 8D A2 25			sta adr.OBSTACLES+$04
  2562 1D1B A9 0E			lda #$0E
  2563 1D1D 8D A3 25			sta adr.OBSTACLES+1+$04
  2564
  2565 				; optimize OK (levels.inc), line = 84
  2566
  2567 1D20 A9 EE			lda #$EE
  2568 1D22 8D A4 25			sta adr.OBSTACLES+$06
  2569 1D25 A9 0E			lda #$0E
  2570 1D27 8D A5 25			sta adr.OBSTACLES+1+$06
  2571
  2572 				; optimize OK (levels.inc), line = 85
  2573
  2574 1D2A A9 E1			lda #$E1
  2575 1D2C 8D A6 25			sta adr.OBSTACLES+$08
  2576 1D2F A9 0D			lda #$0D
  2577 1D31 8D A7 25			sta adr.OBSTACLES+1+$08
  2578
  2579 				; optimize OK (levels.inc), line = 86
  2580
  2581 1D34 A9 64			lda #$64
  2582 1D36 8D A8 25			sta adr.OBSTACLES+$0A
  2583 1D39 A9 0C			lda #$0C
  2584 1D3B 8D A9 25			sta adr.OBSTACLES+1+$0A
  2585
  2586 				; optimize OK (levels.inc), line = 87
  2587
  2588 1D3E A9 84			lda #$84
  2589 1D40 8D AA 25			sta adr.OBSTACLES+$0C
  2590 1D43 A9 0F			lda #$0F
  2591 1D45 8D AB 25			sta adr.OBSTACLES+1+$0C
  2592
  2593 				; optimize OK (levels.inc), line = 88
  2594
  2595 1D48 A9 F4			lda #$F4
  2596 1D4A 8D AC 25			sta adr.OBSTACLES+$0E
  2597 1D4D A9 0D			lda #$0D
  2598 1D4F 8D AD 25			sta adr.OBSTACLES+1+$0E
  2599
  2600 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 90
  2601
  2602 1D52 20 F3 12			jsr SAVEOBSTACLES
  2603 1D55			@exit
  2604 					.ifdef @new
  2605 					lda <@VarData
  2606 					sta :ztmp
  2607 					lda >@VarData
  2608 					ldy #@VarDataSize-1
  2609 					jmp @FreeMem
  2610 					els
  2611 1D55 60				rts						; ret
  2612 					eif
  2613 				.endl
  2614
  2615 1D56			.local	SETLEVEL05					; PROCEDURE
  2616
  2617 				; optimize OK (levels.inc), line = 97
  2618
  2619 1D56 A9 01			lda #$01
  2620 1D58 8D BF 25			sta INITPLAYERS.ISALIVE
  2621 1D5B A9 62			lda #$62
  2622 1D5D 8D BE 25			sta INITPLAYERS.COLOUR
  2623 1D60 A9 51			lda #$51
  2624 1D62 8D BD 25			sta INITPLAYERS.HEAD
  2625 1D65 A9 00			lda #$00
  2626 1D67 8D BC 25			sta INITPLAYERS.BRAIN
  2627 1D6A A9 08			lda #$08
  2628 1D6C 8D BB 25			sta INITPLAYERS.DIR
  2629 1D6F A9 0C			lda #$0C
  2630 1D71 8D BA 25			sta INITPLAYERS.Y
  2631 1D74 A9 0A			lda #$0A
  2632 1D76 8D B9 25			sta INITPLAYERS.X
  2633 1D79 AD 62 25			lda PLAYER1
  2634 1D7C 8D B7 25			sta INITPLAYERS.P
  2635 1D7F AD 63 25			lda PLAYER1+1
  2636 1D82 8D B8 25			sta INITPLAYERS.P+1
  2637 1D85 20 00 14			jsr INITPLAYERS
  2638
  2639 				; optimize OK (levels.inc), line = 98
  2640
  2641 1D88 A9 01			lda #$01
  2642 1D8A 8D BF 25			sta INITPLAYERS.ISALIVE
  2643 1D8D A9 5D			lda #$5D
  2644 1D8F 8D BE 25			sta INITPLAYERS.COLOUR
  2645 1D92 A9 51			lda #$51
  2646 1D94 8D BD 25			sta INITPLAYERS.HEAD
  2647 1D97 A9 04			lda #$04
  2648 1D99 8D BC 25			sta INITPLAYERS.BRAIN
  2649 1D9C 8D BB 25			sta INITPLAYERS.DIR
  2650 1D9F A9 0C			lda #$0C
  2651 1DA1 8D BA 25			sta INITPLAYERS.Y
  2652 1DA4 A9 1E			lda #$1E
  2653 1DA6 8D B9 25			sta INITPLAYERS.X
  2654 1DA9 AD 64 25			lda PLAYER2
  2655 1DAC 8D B7 25			sta INITPLAYERS.P
  2656 1DAF AD 65 25			lda PLAYER2+1
  2657 1DB2 8D B8 25			sta INITPLAYERS.P+1
  2658 1DB5 20 00 14			jsr INITPLAYERS
  2659
  2660 				; optimize OK (levels.inc), line = 99
  2661
  2662 1DB8 A9 01			lda #$01
  2663 1DBA 8D BF 25			sta INITPLAYERS.ISALIVE
  2664 1DBD A9 71			lda #$71
  2665 1DBF 8D BE 25			sta INITPLAYERS.COLOUR
  2666 1DC2 A9 51			lda #$51
  2667 1DC4 8D BD 25			sta INITPLAYERS.HEAD
  2668 1DC7 A9 03			lda #$03
  2669 1DC9 8D BC 25			sta INITPLAYERS.BRAIN
  2670 1DCC A9 02			lda #$02
  2671 1DCE 8D BB 25			sta INITPLAYERS.DIR
  2672 1DD1 A9 04			lda #$04
  2673 1DD3 8D BA 25			sta INITPLAYERS.Y
  2674 1DD6 A9 14			lda #$14
  2675 1DD8 8D B9 25			sta INITPLAYERS.X
  2676 1DDB AD 66 25			lda PLAYER3
  2677 1DDE 8D B7 25			sta INITPLAYERS.P
  2678 1DE1 AD 67 25			lda PLAYER3+1
  2679 1DE4 8D B8 25			sta INITPLAYERS.P+1
  2680 1DE7 20 00 14			jsr INITPLAYERS
  2681
  2682 				; optimize OK (levels.inc), line = 100
  2683
  2684 1DEA A9 01			lda #$01
  2685 1DEC 8D BF 25			sta INITPLAYERS.ISALIVE
  2686 1DEF A9 55			lda #$55
  2687 1DF1 8D BE 25			sta INITPLAYERS.COLOUR
  2688 1DF4 A9 51			lda #$51
  2689 1DF6 8D BD 25			sta INITPLAYERS.HEAD
  2690 1DF9 A9 02			lda #$02
  2691 1DFB 8D BC 25			sta INITPLAYERS.BRAIN
  2692 1DFE A9 01			lda #$01
  2693 1E00 8D BB 25			sta INITPLAYERS.DIR
  2694 1E03 A9 12			lda #$12
  2695 1E05 8D BA 25			sta INITPLAYERS.Y
  2696 1E08 A9 14			lda #$14
  2697 1E0A 8D B9 25			sta INITPLAYERS.X
  2698 1E0D AD 68 25			lda PLAYER4
  2699 1E10 8D B7 25			sta INITPLAYERS.P
  2700 1E13 AD 69 25			lda PLAYER4+1
  2701 1E16 8D B8 25			sta INITPLAYERS.P+1
  2702 1E19 20 00 14			jsr INITPLAYERS
  2703
  2704 				; optimize OK (levels.inc), line = 102
  2705
  2706 1E1C A9 FA			lda #$FA
  2707 1E1E 8D 9E 25			sta adr.OBSTACLES+$00
  2708 1E21 A9 0C			lda #$0C
  2709 1E23 8D 9F 25			sta adr.OBSTACLES+1+$00
  2710
  2711 				; optimize OK (levels.inc), line = 103
  2712
  2713 1E26 A9 0E			lda #$0E
  2714 1E28 8D A0 25			sta adr.OBSTACLES+$02
  2715 1E2B A9 0D			lda #$0D
  2716 1E2D 8D A1 25			sta adr.OBSTACLES+1+$02
  2717
  2718 				; optimize OK (levels.inc), line = 104
  2719
  2720 1E30 A9 DA			lda #$DA
  2721 1E32 8D A2 25			sta adr.OBSTACLES+$04
  2722 1E35 A9 0E			lda #$0E
  2723 1E37 8D A3 25			sta adr.OBSTACLES+1+$04
  2724
  2725 				; optimize OK (levels.inc), line = 105
  2726
  2727 1E3A A9 EE			lda #$EE
  2728 1E3C 8D A4 25			sta adr.OBSTACLES+$06
  2729 1E3F A9 0E			lda #$0E
  2730 1E41 8D A5 25			sta adr.OBSTACLES+1+$06
  2731
  2732 				; optimize OK (levels.inc), line = 106
  2733
  2734 1E44 A9 E1			lda #$E1
  2735 1E46 8D A6 25			sta adr.OBSTACLES+$08
  2736 1E49 A9 0D			lda #$0D
  2737 1E4B 8D A7 25			sta adr.OBSTACLES+1+$08
  2738
  2739 				; optimize OK (levels.inc), line = 107
  2740
  2741 1E4E A9 64			lda #$64
  2742 1E50 8D A8 25			sta adr.OBSTACLES+$0A
  2743 1E53 A9 0C			lda #$0C
  2744 1E55 8D A9 25			sta adr.OBSTACLES+1+$0A
  2745
  2746 				; optimize OK (levels.inc), line = 108
  2747
  2748 1E58 A9 84			lda #$84
  2749 1E5A 8D AA 25			sta adr.OBSTACLES+$0C
  2750 1E5D A9 0F			lda #$0F
  2751 1E5F 8D AB 25			sta adr.OBSTACLES+1+$0C
  2752
  2753 				; optimize OK (levels.inc), line = 109
  2754
  2755 1E62 A9 7E			lda #$7E
  2756 1E64 8D AC 25			sta adr.OBSTACLES+$0E
  2757 1E67 A9 00			lda #$00
  2758 1E69 8D AD 25			sta adr.OBSTACLES+1+$0E
  2759
  2760 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 111
  2761
  2762 1E6C 20 F3 12			jsr SAVEOBSTACLES
  2763 1E6F			@exit
  2764 					.ifdef @new
  2765 					lda <@VarData
  2766 					sta :ztmp
  2767 					lda >@VarData
  2768 					ldy #@VarDataSize-1
  2769 					jmp @FreeMem
  2770 					els
  2771 1E6F 60				rts						; ret
  2772 					eif
  2773 				.endl
  2774
  2775 1E70			.local	SETLEVEL06					; PROCEDURE
  2776
  2777 				; optimize OK (levels.inc), line = 118
  2778
  2779 1E70 A9 01			lda #$01
  2780 1E72 8D BF 25			sta INITPLAYERS.ISALIVE
  2781 1E75 A9 62			lda #$62
  2782 1E77 8D BE 25			sta INITPLAYERS.COLOUR
  2783 1E7A A9 51			lda #$51
  2784 1E7C 8D BD 25			sta INITPLAYERS.HEAD
  2785 1E7F A9 00			lda #$00
  2786 1E81 8D BC 25			sta INITPLAYERS.BRAIN
  2787 1E84 A9 04			lda #$04
  2788 1E86 8D BB 25			sta INITPLAYERS.DIR
  2789 1E89 A9 0C			lda #$0C
  2790 1E8B 8D BA 25			sta INITPLAYERS.Y
  2791 1E8E A9 12			lda #$12
  2792 1E90 8D B9 25			sta INITPLAYERS.X
  2793 1E93 AD 62 25			lda PLAYER1
  2794 1E96 8D B7 25			sta INITPLAYERS.P
  2795 1E99 AD 63 25			lda PLAYER1+1
  2796 1E9C 8D B8 25			sta INITPLAYERS.P+1
  2797 1E9F 20 00 14			jsr INITPLAYERS
  2798
  2799 				; optimize OK (levels.inc), line = 119
  2800
  2801 1EA2 A9 01			lda #$01
  2802 1EA4 8D BF 25			sta INITPLAYERS.ISALIVE
  2803 1EA7 A9 5D			lda #$5D
  2804 1EA9 8D BE 25			sta INITPLAYERS.COLOUR
  2805 1EAC A9 51			lda #$51
  2806 1EAE 8D BD 25			sta INITPLAYERS.HEAD
  2807 1EB1 A9 02			lda #$02
  2808 1EB3 8D BC 25			sta INITPLAYERS.BRAIN
  2809 1EB6 A9 08			lda #$08
  2810 1EB8 8D BB 25			sta INITPLAYERS.DIR
  2811 1EBB A9 0C			lda #$0C
  2812 1EBD 8D BA 25			sta INITPLAYERS.Y
  2813 1EC0 A9 16			lda #$16
  2814 1EC2 8D B9 25			sta INITPLAYERS.X
  2815 1EC5 AD 64 25			lda PLAYER2
  2816 1EC8 8D B7 25			sta INITPLAYERS.P
  2817 1ECB AD 65 25			lda PLAYER2+1
  2818 1ECE 8D B8 25			sta INITPLAYERS.P+1
  2819 1ED1 20 00 14			jsr INITPLAYERS
  2820
  2821 				; optimize OK (levels.inc), line = 120
  2822
  2823 1ED4 A9 01			lda #$01
  2824 1ED6 8D BF 25			sta INITPLAYERS.ISALIVE
  2825 1ED9 A9 71			lda #$71
  2826 1EDB 8D BE 25			sta INITPLAYERS.COLOUR
  2827 1EDE A9 51			lda #$51
  2828 1EE0 8D BD 25			sta INITPLAYERS.HEAD
  2829 1EE3 A9 02			lda #$02
  2830 1EE5 8D BC 25			sta INITPLAYERS.BRAIN
  2831 1EE8 8D BB 25			sta INITPLAYERS.DIR
  2832 1EEB A9 06			lda #$06
  2833 1EED 8D BA 25			sta INITPLAYERS.Y
  2834 1EF0 8D B9 25			sta INITPLAYERS.X
  2835 1EF3 AD 66 25			lda PLAYER3
  2836 1EF6 8D B7 25			sta INITPLAYERS.P
  2837 1EF9 AD 67 25			lda PLAYER3+1
  2838 1EFC 8D B8 25			sta INITPLAYERS.P+1
  2839 1EFF 20 00 14			jsr INITPLAYERS
  2840
  2841 				; optimize OK (levels.inc), line = 121
  2842
  2843 1F02 A9 01			lda #$01
  2844 1F04 8D BF 25			sta INITPLAYERS.ISALIVE
  2845 1F07 A9 55			lda #$55
  2846 1F09 8D BE 25			sta INITPLAYERS.COLOUR
  2847 1F0C A9 51			lda #$51
  2848 1F0E 8D BD 25			sta INITPLAYERS.HEAD
  2849 1F11 A9 03			lda #$03
  2850 1F13 8D BC 25			sta INITPLAYERS.BRAIN
  2851 1F16 A9 08			lda #$08
  2852 1F18 8D BB 25			sta INITPLAYERS.DIR
  2853 1F1B A9 12			lda #$12
  2854 1F1D 8D BA 25			sta INITPLAYERS.Y
  2855 1F20 A9 24			lda #$24
  2856 1F22 8D B9 25			sta INITPLAYERS.X
  2857 1F25 AD 68 25			lda PLAYER4
  2858 1F28 8D B7 25			sta INITPLAYERS.P
  2859 1F2B AD 69 25			lda PLAYER4+1
  2860 1F2E 8D B8 25			sta INITPLAYERS.P+1
  2861 1F31 20 00 14			jsr INITPLAYERS
  2862
  2863 				; optimize OK (levels.inc), line = 123
  2864
  2865 1F34 A9 FA			lda #$FA
  2866 1F36 8D 9E 25			sta adr.OBSTACLES+$00
  2867 1F39 A9 0C			lda #$0C
  2868 1F3B 8D 9F 25			sta adr.OBSTACLES+1+$00
  2869
  2870 				; optimize OK (levels.inc), line = 124
  2871
  2872 1F3E A9 0E			lda #$0E
  2873 1F40 8D A0 25			sta adr.OBSTACLES+$02
  2874 1F43 A9 0D			lda #$0D
  2875 1F45 8D A1 25			sta adr.OBSTACLES+1+$02
  2876
  2877 				; optimize OK (levels.inc), line = 125
  2878
  2879 1F48 A9 DA			lda #$DA
  2880 1F4A 8D A2 25			sta adr.OBSTACLES+$04
  2881 1F4D A9 0E			lda #$0E
  2882 1F4F 8D A3 25			sta adr.OBSTACLES+1+$04
  2883
  2884 				; optimize OK (levels.inc), line = 126
  2885
  2886 1F52 A9 EE			lda #$EE
  2887 1F54 8D A4 25			sta adr.OBSTACLES+$06
  2888 1F57 A9 0E			lda #$0E
  2889 1F59 8D A5 25			sta adr.OBSTACLES+1+$06
  2890
  2891 				; optimize OK (levels.inc), line = 127
  2892
  2893 1F5C A9 E1			lda #$E1
  2894 1F5E 8D A6 25			sta adr.OBSTACLES+$08
  2895 1F61 A9 0D			lda #$0D
  2896 1F63 8D A7 25			sta adr.OBSTACLES+1+$08
  2897
  2898 				; optimize OK (levels.inc), line = 128
  2899
  2900 1F66 A9 64			lda #$64
  2901 1F68 8D A8 25			sta adr.OBSTACLES+$0A
  2902 1F6B A9 0C			lda #$0C
  2903 1F6D 8D A9 25			sta adr.OBSTACLES+1+$0A
  2904
  2905 				; optimize OK (levels.inc), line = 129
  2906
  2907 1F70 A9 84			lda #$84
  2908 1F72 8D AA 25			sta adr.OBSTACLES+$0C
  2909 1F75 A9 0F			lda #$0F
  2910 1F77 8D AB 25			sta adr.OBSTACLES+1+$0C
  2911
  2912 				; optimize OK (levels.inc), line = 130
  2913
  2914 1F7A A9 F4			lda #$F4
  2915 1F7C 8D AC 25			sta adr.OBSTACLES+$0E
  2916 1F7F A9 0D			lda #$0D
  2917 1F81 8D AD 25			sta adr.OBSTACLES+1+$0E
  2918
  2919 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 132
  2920
  2921 1F84 20 F3 12			jsr SAVEOBSTACLES
  2922 1F87			@exit
  2923 					.ifdef @new
  2924 					lda <@VarData
  2925 					sta :ztmp
  2926 					lda >@VarData
  2927 					ldy #@VarDataSize-1
  2928 					jmp @FreeMem
  2929 					els
  2930 1F87 60				rts						; ret
  2931 					eif
  2932 				.endl
  2933
  2934 1F88			.local	SETLEVEL07					; PROCEDURE
  2935
  2936 				; optimize OK (levels.inc), line = 139
  2937
  2938 1F88 A9 01			lda #$01
  2939 1F8A 8D BF 25			sta INITPLAYERS.ISALIVE
  2940 1F8D A9 62			lda #$62
  2941 1F8F 8D BE 25			sta INITPLAYERS.COLOUR
  2942 1F92 A9 51			lda #$51
  2943 1F94 8D BD 25			sta INITPLAYERS.HEAD
  2944 1F97 A9 00			lda #$00
  2945 1F99 8D BC 25			sta INITPLAYERS.BRAIN
  2946 1F9C A9 04			lda #$04
  2947 1F9E 8D BB 25			sta INITPLAYERS.DIR
  2948 1FA1 A9 0C			lda #$0C
  2949 1FA3 8D BA 25			sta INITPLAYERS.Y
  2950 1FA6 A9 12			lda #$12
  2951 1FA8 8D B9 25			sta INITPLAYERS.X
  2952 1FAB AD 62 25			lda PLAYER1
  2953 1FAE 8D B7 25			sta INITPLAYERS.P
  2954 1FB1 AD 63 25			lda PLAYER1+1
  2955 1FB4 8D B8 25			sta INITPLAYERS.P+1
  2956 1FB7 20 00 14			jsr INITPLAYERS
  2957
  2958 				; optimize OK (levels.inc), line = 140
  2959
  2960 1FBA A9 01			lda #$01
  2961 1FBC 8D BF 25			sta INITPLAYERS.ISALIVE
  2962 1FBF A9 5D			lda #$5D
  2963 1FC1 8D BE 25			sta INITPLAYERS.COLOUR
  2964 1FC4 A9 51			lda #$51
  2965 1FC6 8D BD 25			sta INITPLAYERS.HEAD
  2966 1FC9 A9 03			lda #$03
  2967 1FCB 8D BC 25			sta INITPLAYERS.BRAIN
  2968 1FCE A9 08			lda #$08
  2969 1FD0 8D BB 25			sta INITPLAYERS.DIR
  2970 1FD3 A9 17			lda #$17
  2971 1FD5 8D BA 25			sta INITPLAYERS.Y
  2972 1FD8 A9 01			lda #$01
  2973 1FDA 8D B9 25			sta INITPLAYERS.X
  2974 1FDD AD 64 25			lda PLAYER2
  2975 1FE0 8D B7 25			sta INITPLAYERS.P
  2976 1FE3 AD 65 25			lda PLAYER2+1
  2977 1FE6 8D B8 25			sta INITPLAYERS.P+1
  2978 1FE9 20 00 14			jsr INITPLAYERS
  2979
  2980 				; optimize OK (levels.inc), line = 141
  2981
  2982 1FEC A9 01			lda #$01
  2983 1FEE 8D BF 25			sta INITPLAYERS.ISALIVE
  2984 1FF1 A9 71			lda #$71
  2985 1FF3 8D BE 25			sta INITPLAYERS.COLOUR
  2986 1FF6 A9 51			lda #$51
  2987 1FF8 8D BD 25			sta INITPLAYERS.HEAD
  2988 1FFB A9 03			lda #$03
  2989 1FFD 8D BC 25			sta INITPLAYERS.BRAIN
  2990 2000 A9 02			lda #$02
  2991 2002 8D BB 25			sta INITPLAYERS.DIR
  2992 2005 A9 04			lda #$04
  2993 2007 8D BA 25			sta INITPLAYERS.Y
  2994 200A A9 1E			lda #$1E
  2995 200C 8D B9 25			sta INITPLAYERS.X
  2996 200F AD 66 25			lda PLAYER3
  2997 2012 8D B7 25			sta INITPLAYERS.P
  2998 2015 AD 67 25			lda PLAYER3+1
  2999 2018 8D B8 25			sta INITPLAYERS.P+1
  3000 201B 20 00 14			jsr INITPLAYERS
  3001
  3002 				; optimize OK (levels.inc), line = 142
  3003
  3004 201E A9 01			lda #$01
  3005 2020 8D BF 25			sta INITPLAYERS.ISALIVE
  3006 2023 A9 55			lda #$55
  3007 2025 8D BE 25			sta INITPLAYERS.COLOUR
  3008 2028 A9 51			lda #$51
  3009 202A 8D BD 25			sta INITPLAYERS.HEAD
  3010 202D A9 02			lda #$02
  3011 202F 8D BC 25			sta INITPLAYERS.BRAIN
  3012 2032 A9 01			lda #$01
  3013 2034 8D BB 25			sta INITPLAYERS.DIR
  3014 2037 A9 15			lda #$15
  3015 2039 8D BA 25			sta INITPLAYERS.Y
  3016 203C A9 24			lda #$24
  3017 203E 8D B9 25			sta INITPLAYERS.X
  3018 2041 AD 68 25			lda PLAYER4
  3019 2044 8D B7 25			sta INITPLAYERS.P
  3020 2047 AD 69 25			lda PLAYER4+1
  3021 204A 8D B8 25			sta INITPLAYERS.P+1
  3022 204D 20 00 14			jsr INITPLAYERS
  3023
  3024 				; optimize OK (levels.inc), line = 144
  3025
  3026 2050 A9 FA			lda #$FA
  3027 2052 8D 9E 25			sta adr.OBSTACLES+$00
  3028 2055 A9 0C			lda #$0C
  3029 2057 8D 9F 25			sta adr.OBSTACLES+1+$00
  3030
  3031 				; optimize OK (levels.inc), line = 145
  3032
  3033 205A A9 0E			lda #$0E
  3034 205C 8D A0 25			sta adr.OBSTACLES+$02
  3035 205F A9 0D			lda #$0D
  3036 2061 8D A1 25			sta adr.OBSTACLES+1+$02
  3037
  3038 				; optimize OK (levels.inc), line = 146
  3039
  3040 2064 A9 DA			lda #$DA
  3041 2066 8D A2 25			sta adr.OBSTACLES+$04
  3042 2069 A9 0E			lda #$0E
  3043 206B 8D A3 25			sta adr.OBSTACLES+1+$04
  3044
  3045 				; optimize OK (levels.inc), line = 147
  3046
  3047 206E A9 EE			lda #$EE
  3048 2070 8D A4 25			sta adr.OBSTACLES+$06
  3049 2073 A9 0E			lda #$0E
  3050 2075 8D A5 25			sta adr.OBSTACLES+1+$06
  3051
  3052 				; optimize OK (levels.inc), line = 148
  3053
  3054 2078 A9 E1			lda #$E1
  3055 207A 8D A6 25			sta adr.OBSTACLES+$08
  3056 207D A9 0D			lda #$0D
  3057 207F 8D A7 25			sta adr.OBSTACLES+1+$08
  3058
  3059 				; optimize OK (levels.inc), line = 149
  3060
  3061 2082 A9 64			lda #$64
  3062 2084 8D A8 25			sta adr.OBSTACLES+$0A
  3063 2087 A9 0C			lda #$0C
  3064 2089 8D A9 25			sta adr.OBSTACLES+1+$0A
  3065
  3066 				; optimize OK (levels.inc), line = 150
  3067
  3068 208C A9 84			lda #$84
  3069 208E 8D AA 25			sta adr.OBSTACLES+$0C
  3070 2091 A9 0F			lda #$0F
  3071 2093 8D AB 25			sta adr.OBSTACLES+1+$0C
  3072
  3073 				; optimize OK (levels.inc), line = 151
  3074
  3075 2096 A9 F4			lda #$F4
  3076 2098 8D AC 25			sta adr.OBSTACLES+$0E
  3077 209B A9 0D			lda #$0D
  3078 209D 8D AD 25			sta adr.OBSTACLES+1+$0E
  3079
  3080 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 153
  3081
  3082 20A0 20 F3 12			jsr SAVEOBSTACLES
  3083 20A3			@exit
  3084 					.ifdef @new
  3085 					lda <@VarData
  3086 					sta :ztmp
  3087 					lda >@VarData
  3088 					ldy #@VarDataSize-1
  3089 					jmp @FreeMem
  3090 					els
  3091 20A3 60				rts						; ret
  3092 					eif
  3093 				.endl
  3094
  3095 20A4			.local	SETLEVEL08					; PROCEDURE
  3096
  3097 				; optimize OK (levels.inc), line = 160
  3098
  3099 20A4 A9 01			lda #$01
  3100 20A6 8D BF 25			sta INITPLAYERS.ISALIVE
  3101 20A9 A9 62			lda #$62
  3102 20AB 8D BE 25			sta INITPLAYERS.COLOUR
  3103 20AE A9 51			lda #$51
  3104 20B0 8D BD 25			sta INITPLAYERS.HEAD
  3105 20B3 A9 00			lda #$00
  3106 20B5 8D BC 25			sta INITPLAYERS.BRAIN
  3107 20B8 A9 08			lda #$08
  3108 20BA 8D BB 25			sta INITPLAYERS.DIR
  3109 20BD A9 17			lda #$17
  3110 20BF 8D BA 25			sta INITPLAYERS.Y
  3111 20C2 A9 01			lda #$01
  3112 20C4 8D B9 25			sta INITPLAYERS.X
  3113 20C7 AD 62 25			lda PLAYER1
  3114 20CA 8D B7 25			sta INITPLAYERS.P
  3115 20CD AD 63 25			lda PLAYER1+1
  3116 20D0 8D B8 25			sta INITPLAYERS.P+1
  3117 20D3 20 00 14			jsr INITPLAYERS
  3118
  3119 				; optimize OK (levels.inc), line = 161
  3120
  3121 20D6 A9 01			lda #$01
  3122 20D8 8D BF 25			sta INITPLAYERS.ISALIVE
  3123 20DB A9 5D			lda #$5D
  3124 20DD 8D BE 25			sta INITPLAYERS.COLOUR
  3125 20E0 A9 51			lda #$51
  3126 20E2 8D BD 25			sta INITPLAYERS.HEAD
  3127 20E5 A9 03			lda #$03
  3128 20E7 8D BC 25			sta INITPLAYERS.BRAIN
  3129 20EA A9 04			lda #$04
  3130 20EC 8D BB 25			sta INITPLAYERS.DIR
  3131 20EF A9 17			lda #$17
  3132 20F1 8D BA 25			sta INITPLAYERS.Y
  3133 20F4 A9 26			lda #$26
  3134 20F6 8D B9 25			sta INITPLAYERS.X
  3135 20F9 AD 64 25			lda PLAYER2
  3136 20FC 8D B7 25			sta INITPLAYERS.P
  3137 20FF AD 65 25			lda PLAYER2+1
  3138 2102 8D B8 25			sta INITPLAYERS.P+1
  3139 2105 20 00 14			jsr INITPLAYERS
  3140
  3141 				; optimize OK (levels.inc), line = 162
  3142
  3143 2108 A9 01			lda #$01
  3144 210A 8D BF 25			sta INITPLAYERS.ISALIVE
  3145 210D A9 71			lda #$71
  3146 210F 8D BE 25			sta INITPLAYERS.COLOUR
  3147 2112 A9 51			lda #$51
  3148 2114 8D BD 25			sta INITPLAYERS.HEAD
  3149 2117 A9 02			lda #$02
  3150 2119 8D BC 25			sta INITPLAYERS.BRAIN
  3151 211C 8D BB 25			sta INITPLAYERS.DIR
  3152 211F A9 01			lda #$01
  3153 2121 8D BA 25			sta INITPLAYERS.Y
  3154 2124 A9 0A			lda #$0A
  3155 2126 8D B9 25			sta INITPLAYERS.X
  3156 2129 AD 66 25			lda PLAYER3
  3157 212C 8D B7 25			sta INITPLAYERS.P
  3158 212F AD 67 25			lda PLAYER3+1
  3159 2132 8D B8 25			sta INITPLAYERS.P+1
  3160 2135 20 00 14			jsr INITPLAYERS
  3161
  3162 				; optimize OK (levels.inc), line = 163
  3163
  3164 2138 A9 01			lda #$01
  3165 213A 8D BF 25			sta INITPLAYERS.ISALIVE
  3166 213D A9 55			lda #$55
  3167 213F 8D BE 25			sta INITPLAYERS.COLOUR
  3168 2142 A9 51			lda #$51
  3169 2144 8D BD 25			sta INITPLAYERS.HEAD
  3170 2147 A9 04			lda #$04
  3171 2149 8D BC 25			sta INITPLAYERS.BRAIN
  3172 214C 8D BB 25			sta INITPLAYERS.DIR
  3173 214F A9 01			lda #$01
  3174 2151 8D BA 25			sta INITPLAYERS.Y
  3175 2154 A9 26			lda #$26
  3176 2156 8D B9 25			sta INITPLAYERS.X
  3177 2159 AD 68 25			lda PLAYER4
  3178 215C 8D B7 25			sta INITPLAYERS.P
  3179 215F AD 69 25			lda PLAYER4+1
  3180 2162 8D B8 25			sta INITPLAYERS.P+1
  3181 2165 20 00 14			jsr INITPLAYERS
  3182
  3183 				; optimize OK (levels.inc), line = 165
  3184
  3185 2168 A9 FA			lda #$FA
  3186 216A 8D 9E 25			sta adr.OBSTACLES+$00
  3187 216D A9 0C			lda #$0C
  3188 216F 8D 9F 25			sta adr.OBSTACLES+1+$00
  3189
  3190 				; optimize OK (levels.inc), line = 166
  3191
  3192 2172 A9 0E			lda #$0E
  3193 2174 8D A0 25			sta adr.OBSTACLES+$02
  3194 2177 A9 0D			lda #$0D
  3195 2179 8D A1 25			sta adr.OBSTACLES+1+$02
  3196
  3197 				; optimize OK (levels.inc), line = 167
  3198
  3199 217C A9 DA			lda #$DA
  3200 217E 8D A2 25			sta adr.OBSTACLES+$04
  3201 2181 A9 0E			lda #$0E
  3202 2183 8D A3 25			sta adr.OBSTACLES+1+$04
  3203
  3204 				; optimize OK (levels.inc), line = 168
  3205
  3206 2186 A9 EE			lda #$EE
  3207 2188 8D A4 25			sta adr.OBSTACLES+$06
  3208 218B A9 0E			lda #$0E
  3209 218D 8D A5 25			sta adr.OBSTACLES+1+$06
  3210
  3211 				; optimize OK (levels.inc), line = 169
  3212
  3213 2190 A9 E1			lda #$E1
  3214 2192 8D A6 25			sta adr.OBSTACLES+$08
  3215 2195 A9 0D			lda #$0D
  3216 2197 8D A7 25			sta adr.OBSTACLES+1+$08
  3217
  3218 				; optimize OK (levels.inc), line = 170
  3219
  3220 219A A9 64			lda #$64
  3221 219C 8D A8 25			sta adr.OBSTACLES+$0A
  3222 219F A9 0C			lda #$0C
  3223 21A1 8D A9 25			sta adr.OBSTACLES+1+$0A
  3224
  3225 				; optimize OK (levels.inc), line = 171
  3226
  3227 21A4 A9 84			lda #$84
  3228 21A6 8D AA 25			sta adr.OBSTACLES+$0C
  3229 21A9 A9 0F			lda #$0F
  3230 21AB 8D AB 25			sta adr.OBSTACLES+1+$0C
  3231
  3232 				; optimize OK (levels.inc), line = 172
  3233
  3234 21AE A9 F4			lda #$F4
  3235 21B0 8D AC 25			sta adr.OBSTACLES+$0E
  3236 21B3 A9 0D			lda #$0D
  3237 21B5 8D AD 25			sta adr.OBSTACLES+1+$0E
  3238
  3239 				; optimize FAIL ('SAVEOBSTACLES', levels.inc), line = 174
  3240
  3241 21B8 20 F3 12			jsr SAVEOBSTACLES
  3242 21BB			@exit
  3243 					.ifdef @new
  3244 					lda <@VarData
  3245 					sta :ztmp
  3246 					lda >@VarData
  3247 					ldy #@VarDataSize-1
  3248 					jmp @FreeMem
  3249 					els
  3250 21BB 60				rts						; ret
  3251 					eif
  3252 				.endl
  3253
  3254 21BC			.local	HUMAN						; PROCEDURE
  3255
  3256 				; optimize OK (main.pas), line = 15
  3257
  3258 21BC AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3259 21C6 A0 04			ldy #PLY.DIR-DATAORIGIN
  3260 21C8 B1 12			lda (:bp2),y
  3261 21CA 85 5B			sta NEWDIR
  3262
  3263 				; optimize OK (main.pas), line = 16
  3264
  3265 21CC A5 63			lda JOYSTATUS
  3266 21CE 8D C7 25			sta @CASETMP_0006
  3267 21D1 C9 01			cmp #$01
  3268 21D3 D0 19			jne l_0C74
  3269 21D5			@
  3270
  3271 				; optimize OK (main.pas), line = 17
  3272
  3273 21D5 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3274 21DF A0 04			ldy #PLY.DIR-DATAORIGIN
  3275 21E1 B1 12			lda (:bp2),y
  3276 21E3 C9 02			cmp #$02
  3277 21E5 F0 04			jeq l_0C86
  3278 21E7 A9 01			lda #$01
  3279 21E9 85 5B			sta NEWDIR
  3280 21EB			l_0C86
  3281
  3282 21EB 4C 42 22			jmp a_0006
  3283 21EE			l_0C74
  3284 21EE C9 02			cmp #$02
  3285 21F0 D0 19			jne l_0C96
  3286 21F2			@
  3287
  3288 				; optimize OK (main.pas), line = 18
  3289
  3290 21F2 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3291 21FC A0 04			ldy #PLY.DIR-DATAORIGIN
  3292 21FE B1 12			lda (:bp2),y
  3293 2200 C9 01			cmp #$01
  3294 2202 F0 04			jeq l_0CA8
  3295 2204 A9 02			lda #$02
  3296 2206 85 5B			sta NEWDIR
  3297 2208			l_0CA8
  3298
  3299 2208 4C 42 22			jmp a_0006
  3300 220B			l_0C96
  3301 220B C9 04			cmp #$04
  3302 220D D0 19			jne l_0CB8
  3303 220F			@
  3304
  3305 				; optimize OK (main.pas), line = 19
  3306
  3307 220F AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3308 2219 A0 04			ldy #PLY.DIR-DATAORIGIN
  3309 221B B1 12			lda (:bp2),y
  3310 221D C9 08			cmp #$08
  3311 221F F0 04			jeq l_0CCA
  3312 2221 A9 04			lda #$04
  3313 2223 85 5B			sta NEWDIR
  3314 2225			l_0CCA
  3315
  3316 2225 4C 42 22			jmp a_0006
  3317 2228			l_0CB8
  3318 2228 C9 08			cmp #$08
  3319 222A D0 16			jne l_0CDA
  3320 222C			@
  3321
  3322 				; optimize OK (main.pas), line = 20
  3323
  3324 222C AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3325 2236 A0 04			ldy #PLY.DIR-DATAORIGIN
  3326 2238 B1 12			lda (:bp2),y
  3327 223A C9 04			cmp #$04
  3328 223C F0 04			jeq l_0CEC
  3329 223E A9 08			lda #$08
  3330 2240 85 5B			sta NEWDIR
  3331 2242			l_0CEC
  3332
  3333 2242			l_0CDA
  3334 2242			a_0006
  3335
  3336 				; optimize OK (main.pas), line = 23
  3337
  3338 2242 A5 5B			lda NEWDIR
  3339 2244 25 5C			and AVAILDIR
  3340 2246 D0 18			jne l_0D13
  3341
  3342 				; optimize OK (main.pas), line = 24
  3343
  3344 2248 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3345 2252 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3346 2254 A9 00			lda #$00
  3347 2256 91 12			sta (:bp2),y
  3348 2258 A0 02			ldy #PLY.HEAD-DATAORIGIN
  3349 225A A9 2A			lda #$2A
  3350 225C 91 12			sta (:bp2),y
  3351 225E C6 5A			dec ALIVE
  3352 2260			l_0D13
  3353
  3354 				; ------------------------------------------------------------
  3355
  3356 = 25C7			@CASETMP_0006	= DATAORIGIN+$005B
  3357
  3358 = 25C7			@VarData	= @CASETMP_0006
  3359 = 0001			@VarDataSize	= 1
  3360
  3361 2260			@exit
  3362 					.ifdef @new
  3363 					lda <@VarData
  3364 					sta :ztmp
  3365 					lda >@VarData
  3366 					ldy #@VarDataSize-1
  3367 					jmp @FreeMem
  3368 					els
  3369 2260 60				rts						; ret
  3370 					eif
  3371 				.endl
  3372
  3373 2261			.local	PLAYERMOVE					; PROCEDURE
  3374
  3375 				; optimize OK (main.pas), line = 32
  3376
  3377 2261 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3378 226B A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3379 226D B1 12			lda (:bp2),y
  3380 226F D0 03 4C B5 23		jeq l_0D32
  3381
  3382 				; optimize FAIL ('CHECKAVAILDIR', main.pas), line = 33
  3383
  3384 2274 20 29 12			jsr CHECKAVAILDIR
  3385
  3386 				; optimize OK (main.pas), line = 35
  3387
  3388 2277 A5 5C			lda AVAILDIR
  3389 2279 D0 35			jne l_0D46
  3390
  3391 				; optimize OK (main.pas), line = 36
  3392
  3393 227B AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3394 2285 A0 07			ldy #PLY.ISALIVE-DATAORIGIN
  3395 2287 A9 00			lda #$00
  3396 2289 91 12			sta (:bp2),y
  3397 228B C6 5A			dec ALIVE
  3398
  3399 				; optimize OK (main.pas), line = 37
  3400
  3401 228D A0 00			ldy #PLY.X-DATAORIGIN
  3402 228F B1 12			lda (:bp2),y
  3403 2291 8D AE 25			sta PUTCHAR_0072.X
  3404 2294 A0 01			ldy #PLY.Y-DATAORIGIN
  3405 2296 B1 12			lda (:bp2),y
  3406 2298 8D AF 25			sta PUTCHAR_0072.Y
  3407 229B A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3408 229D B1 12			lda (:bp2),y
  3409 229F 18 69 80			add #$80
  3410 22A2 8D B1 25			sta PUTCHAR_0072.C
  3411 22A5 A9 57			lda #$57
  3412 22A7 8D B0 25			sta PUTCHAR_0072.V
  3413 22AA 20 78 11			jsr PUTCHAR_0072
  3414 22AD 4C B5 23			jmp l_0D67
  3415 22B0			l_0D46
  3416
  3417 				; optimize OK (main.pas), line = 40
  3418
  3419 22B0 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3420 22BA A0 05			ldy #PLY.BRAIN-DATAORIGIN
  3421 22BC B1 12			lda (:bp2),y
  3422 22BE 8D C8 25			sta @CASETMP_0007
  3423 22C1 C9 00			cmp #$00
  3424 22C3 D0 06			jne l_0D72
  3425 22C5			@
  3426
  3427 				; optimize FAIL ('HUMAN', main.pas), line = 41
  3428
  3429 22C5 20 BC 21			jsr HUMAN
  3430 22C8 4C F0 22			jmp a_0007
  3431 22CB			l_0D72
  3432 22CB C9 01			cmp #$01
  3433 22CD D0 06			jne l_0D7C
  3434 22CF			@
  3435
  3436 				; optimize FAIL ('AISTRAIGHT', main.pas), line = 42
  3437
  3438 22CF 20 E4 14			jsr AISTRAIGHT
  3439 22D2 4C F0 22			jmp a_0007
  3440 22D5			l_0D7C
  3441 22D5 C9 02			cmp #$02
  3442 22D7 D0 06			jne l_0D86
  3443 22D9			@
  3444
  3445 				; optimize FAIL ('AISAPPER', main.pas), line = 43
  3446
  3447 22D9 20 69 15			jsr AISAPPER
  3448 22DC 4C F0 22			jmp a_0007
  3449 22DF			l_0D86
  3450 22DF C9 03			cmp #$03
  3451 22E1 D0 06			jne l_0D90
  3452 22E3			@
  3453
  3454 				; optimize FAIL ('AIBULLY', main.pas), line = 44
  3455
  3456 22E3 20 C3 17			jsr AIBULLY
  3457 22E6 4C F0 22			jmp a_0007
  3458 22E9			l_0D90
  3459 22E9 C9 04			cmp #$04
  3460 22EB D0 03			jne l_0D9A
  3461 22ED			@
  3462
  3463 				; optimize FAIL ('AIMIRROR', main.pas), line = 45
  3464
  3465 22ED 20 91 18			jsr AIMIRROR
  3466 22F0			l_0D9A
  3467 22F0			a_0007
  3468
  3469 				; optimize FAIL ('DRAWTAIL', main.pas), line = 48
  3470
  3471 22F0 20 37 13			jsr DRAWTAIL
  3472 22F3 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3473 22FD A0 04			ldy #PLY.DIR-DATAORIGIN
  3474 22FF A5 5B			lda NEWDIR
  3475 2301 91 12			sta (:bp2),y
  3476
  3477 				; optimize OK (main.pas), line = 50
  3478
  3479 2303 A5 5B			lda NEWDIR
  3480 2305 8D C9 25			sta @CASETMP_0008
  3481 2308 C9 01			cmp #$01
  3482 230A D0 16			jne l_0DB6
  3483 230C			@
  3484
  3485 				; optimize OK (main.pas), line = 51
  3486
  3487 230C AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3488 2316 A0 01			ldy #PLY.Y-DATAORIGIN
  3489 2318 B1 12			lda (:bp2),y
  3490 231A 38 E9 01			sub #$01
  3491 231D 91 12			sta (:bp2),y
  3492
  3493 231F 4C 6D 23			jmp a_0008
  3494 2322			l_0DB6
  3495 2322 C9 02			cmp #$02
  3496 2324 D0 16			jne l_0DC0
  3497 2326			@
  3498
  3499 				; optimize OK (main.pas), line = 52
  3500
  3501 2326 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3502 2330 A0 01			ldy #PLY.Y-DATAORIGIN
  3503 2332 B1 12			lda (:bp2),y
  3504 2334 18 69 01			add #$01
  3505 2337 91 12			sta (:bp2),y
  3506
  3507 2339 4C 6D 23			jmp a_0008
  3508 233C			l_0DC0
  3509 233C C9 04			cmp #$04
  3510 233E D0 16			jne l_0DCA
  3511 2340			@
  3512
  3513 				; optimize OK (main.pas), line = 53
  3514
  3515 2340 AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3516 234A A0 00			ldy #PLY.X-DATAORIGIN
  3517 234C B1 12			lda (:bp2),y
  3518 234E 38 E9 01			sub #$01
  3519 2351 91 12			sta (:bp2),y
  3520
  3521 2353 4C 6D 23			jmp a_0008
  3522 2356			l_0DCA
  3523 2356 C9 08			cmp #$08
  3524 2358 D0 13			jne l_0DD4
  3525 235A			@
  3526
  3527 				; optimize OK (main.pas), line = 54
  3528
  3529 235A AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3530 2364 A0 00			ldy #PLY.X-DATAORIGIN
  3531 2366 B1 12			lda (:bp2),y
  3532 2368 18 69 01			add #$01
  3533 236B 91 12			sta (:bp2),y
  3534
  3535 236D			l_0DD4
  3536 236D			a_0008
  3537
  3538 				; optimize OK (main.pas), line = 57
  3539
  3540 236D AC 5E 25 84 12 AC + 	mwy PLY :bp2
  3541 2377 A0 00			ldy #PLY.X-DATAORIGIN
  3542 2379 B1 12			lda (:bp2),y
  3543 237B 8D AE 25			sta PUTCHAR_0072.X
  3544 237E A0 01			ldy #PLY.Y-DATAORIGIN
  3545 2380 B1 12			lda (:bp2),y
  3546 2382 8D AF 25			sta PUTCHAR_0072.Y
  3547 2385 A0 02			ldy #PLY.HEAD-DATAORIGIN
  3548 2387 B1 12			lda (:bp2),y
  3549 2389 8D B0 25			sta PUTCHAR_0072.V
  3550 238C A0 03			ldy #PLY.COLOUR-DATAORIGIN
  3551 238E B1 12			lda (:bp2),y
  3552 2390 8D B1 25			sta PUTCHAR_0072.C
  3553 2393 20 78 11			jsr PUTCHAR_0072
  3554
  3555 				; optimize OK (main.pas), line = 60
  3556
  3557 2396 AD 85 25			lda PLAYER1.ISALIVE
  3558 2399 D0 1A			jne l_0DF9
  3559 239B AD 81 25			lda PLAYER1.COLOUR
  3560 239E 8D B1 25			sta PUTCHAR_0072.C
  3561 23A1 A9 2A			lda #$2A
  3562 23A3 8D B0 25			sta PUTCHAR_0072.V
  3563 23A6 AD 7F 25			lda PLAYER1.Y
  3564 23A9 8D AF 25			sta PUTCHAR_0072.Y
  3565 23AC AD 7E 25			lda PLAYER1.X
  3566 23AF 8D AE 25			sta PUTCHAR_0072.X
  3567 23B2 20 78 11			jsr PUTCHAR_0072
  3568 23B5			l_0DF9
  3569 23B5			l_0D67
  3570 23B5			l_0D32
  3571
  3572 				; ------------------------------------------------------------
  3573
  3574 = 25C8			@CASETMP_0007	= DATAORIGIN+$005C
  3575 = 25C9			@CASETMP_0008	= DATAORIGIN+$005D
  3576
  3577 = 25C8			@VarData	= @CASETMP_0007
  3578 = 0002			@VarDataSize	= 2
  3579
  3580 23B5			@exit
  3581 					.ifdef @new
  3582 					lda <@VarData
  3583 					sta :ztmp
  3584 					lda >@VarData
  3585 					ldy #@VarDataSize-1
  3586 					jmp @FreeMem
  3587 					els
  3588 23B5 60				rts						; ret
  3589 					eif
  3590 				.endl
  3591
  3592 23B6			.local	STARTSCREEN					; PROCEDURE
  3593
  3594 				; optimize OK (main.pas), line = 71
  3595
  3596 23B6 AD 81 25			lda PLAYER1.COLOUR
  3597 23B9 18 69 80			add #$80
  3598 23BC 8D B1 25			sta PUTCHAR_0072.C
  3599 23BF AD 80 25			lda PLAYER1.HEAD
  3600 23C2 8D B0 25			sta PUTCHAR_0072.V
  3601 23C5 AD 7F 25			lda PLAYER1.Y
  3602 23C8 8D AF 25			sta PUTCHAR_0072.Y
  3603 23CB AD 7E 25			lda PLAYER1.X
  3604 23CE 8D AE 25			sta PUTCHAR_0072.X
  3605 23D1 20 78 11			jsr PUTCHAR_0072
  3606
  3607 				; --- RepeatUntilProlog
  3608 23D4			l_0E1F
  3609
  3610 				; optimize FAIL ('CHECKJOYSTATUS', main.pas), line = 72
  3611
  3612 23D4 20 EE 13			jsr CHECKJOYSTATUS
  3613 23D7 A5 63			lda JOYSTATUS
  3614 23D9 C9 40			cmp #$40
  3615 23DB D0 F7			jne l_0E1F
  3616
  3617 				; optimize OK (main.pas), line = 73
  3618
  3619 23DD AD 81 25			lda PLAYER1.COLOUR
  3620 23E0 8D B1 25			sta PUTCHAR_0072.C
  3621 23E3 AD 80 25			lda PLAYER1.HEAD
  3622 23E6 8D B0 25			sta PUTCHAR_0072.V
  3623 23E9 AD 7F 25			lda PLAYER1.Y
  3624 23EC 8D AF 25			sta PUTCHAR_0072.Y
  3625 23EF AD 7E 25			lda PLAYER1.X
  3626 23F2 8D AE 25			sta PUTCHAR_0072.X
  3627 23F5 20 78 11			jsr PUTCHAR_0072
  3628 23F8			@exit
  3629 					.ifdef @new
  3630 					lda <@VarData
  3631 					sta :ztmp
  3632 					lda >@VarData
  3633 					ldy #@VarDataSize-1
  3634 					jmp @FreeMem
  3635 					els
  3636 23F8 60				rts						; ret
  3637 					eif
  3638 				.endl
  3639
  3640 23F9			.local	MAINLOOP					; PROCEDURE
  3641
  3642 				; optimize OK (main.pas), line = 80
  3643
  3644 23F9 A9 FF			lda #$FF
  3645 23FB 85 5A			sta ALIVE
  3646
  3647 				; optimize FAIL ('INITPLAYFIELD', main.pas), line = 82
  3648
  3649 23FD 20 64 14			jsr INITPLAYFIELD
  3650
  3651 				; optimize OK (main.pas), line = 84
  3652
  3653 2400 AD 7C 25			lda LEVEL
  3654 2403 8D CA 25			sta @CASETMP_0009
  3655 2406 C9 01			cmp #$01
  3656 2408 D0 06			jne l_0E4E
  3657 240A			@
  3658
  3659 				; optimize FAIL ('SETLEVEL01', main.pas), line = 85
  3660
  3661 240A 20 E6 18			jsr SETLEVEL01
  3662 240D 4C 53 24			jmp a_0009
  3663 2410			l_0E4E
  3664 2410 C9 02			cmp #$02
  3665 2412 D0 06			jne l_0E58
  3666 2414			@
  3667
  3668 				; optimize FAIL ('SETLEVEL02', main.pas), line = 86
  3669
  3670 2414 20 02 1A			jsr SETLEVEL02
  3671 2417 4C 53 24			jmp a_0009
  3672 241A			l_0E58
  3673 241A C9 03			cmp #$03
  3674 241C D0 06			jne l_0E62
  3675 241E			@
  3676
  3677 				; optimize FAIL ('SETLEVEL03', main.pas), line = 87
  3678
  3679 241E 20 1E 1B			jsr SETLEVEL03
  3680 2421 4C 53 24			jmp a_0009
  3681 2424			l_0E62
  3682 2424 C9 04			cmp #$04
  3683 2426 D0 06			jne l_0E6C
  3684 2428			@
  3685
  3686 				; optimize FAIL ('SETLEVEL04', main.pas), line = 88
  3687
  3688 2428 20 3A 1C			jsr SETLEVEL04
  3689 242B 4C 53 24			jmp a_0009
  3690 242E			l_0E6C
  3691 242E C9 05			cmp #$05
  3692 2430 D0 06			jne l_0E76
  3693 2432			@
  3694
  3695 				; optimize FAIL ('SETLEVEL05', main.pas), line = 89
  3696
  3697 2432 20 56 1D			jsr SETLEVEL05
  3698 2435 4C 53 24			jmp a_0009
  3699 2438			l_0E76
  3700 2438 C9 06			cmp #$06
  3701 243A D0 06			jne l_0E80
  3702 243C			@
  3703
  3704 				; optimize FAIL ('SETLEVEL06', main.pas), line = 90
  3705
  3706 243C 20 70 1E			jsr SETLEVEL06
  3707 243F 4C 53 24			jmp a_0009
  3708 2442			l_0E80
  3709 2442 C9 07			cmp #$07
  3710 2444 D0 06			jne l_0E8A
  3711 2446			@
  3712
  3713 				; optimize FAIL ('SETLEVEL07', main.pas), line = 91
  3714
  3715 2446 20 88 1F			jsr SETLEVEL07
  3716 2449 4C 53 24			jmp a_0009
  3717 244C			l_0E8A
  3718 244C C9 08			cmp #$08
  3719 244E D0 03			jne l_0E94
  3720 2450			@
  3721
  3722 				; optimize FAIL ('SETLEVEL08', main.pas), line = 92
  3723
  3724 2450 20 A4 20			jsr SETLEVEL08
  3725 2453			l_0E94
  3726 2453			a_0009
  3727
  3728 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 95
  3729
  3730 2453 20 BE 12			jsr ANIMATEOBSTACLES
  3731 2456 20 C4 11			jsr SHOWSCORE
  3732 2459 20 B6 23			jsr STARTSCREEN
  3733
  3734 				; --- RepeatUntilProlog
  3735 245C			l_0EA5
  3736
  3737 				; optimize FAIL ('SYSTEM.PAUSE_006B', main.pas), line = 98
  3738
  3739 245C 20 23 11			jsr SYSTEM.PAUSE_006B
  3740 245F 20 EE 13			jsr CHECKJOYSTATUS
  3741
  3742 				; optimize OK (main.pas), line = 99
  3743
  3744 2462 AD 62 25			lda PLAYER1
  3745 2465 8D 5E 25			sta PLY
  3746 2468 AD 63 25			lda PLAYER1+1
  3747 246B 8D 5F 25			sta PLY+1
  3748 246E 20 61 22			jsr PLAYERMOVE
  3749
  3750 				; optimize OK (main.pas), line = 101
  3751
  3752 2471 A9 02			lda #$02
  3753 2473 8D 78 25			sta SYSTEM.PAUSE_006C.N
  3754 2476 A9 00			lda #$00
  3755 2478 8D 79 25			sta SYSTEM.PAUSE_006C.N+1
  3756 247B 20 2A 11			jsr SYSTEM.PAUSE_006C
  3757
  3758 				; optimize OK (main.pas), line = 102
  3759
  3760 247E AD 64 25			lda PLAYER2
  3761 2481 8D 5E 25			sta PLY
  3762 2484 AD 65 25			lda PLAYER2+1
  3763 2487 8D 5F 25			sta PLY+1
  3764 248A 20 61 22			jsr PLAYERMOVE
  3765
  3766 				; optimize OK (main.pas), line = 103
  3767
  3768 248D AD 66 25			lda PLAYER3
  3769 2490 8D 5E 25			sta PLY
  3770 2493 AD 67 25			lda PLAYER3+1
  3771 2496 8D 5F 25			sta PLY+1
  3772 2499 20 61 22			jsr PLAYERMOVE
  3773
  3774 				; optimize OK (main.pas), line = 104
  3775
  3776 249C AD 68 25			lda PLAYER4
  3777 249F 8D 5E 25			sta PLY
  3778 24A2 AD 69 25			lda PLAYER4+1
  3779 24A5 8D 5F 25			sta PLY+1
  3780 24A8 20 61 22			jsr PLAYERMOVE
  3781
  3782 				; optimize FAIL ('ANIMATEOBSTACLES', main.pas), line = 105
  3783
  3784 24AB 20 BE 12			jsr ANIMATEOBSTACLES
  3785
  3786 				; optimize OK (main.pas), line = 106
  3787
  3788 24AE A5 5A			lda ALIVE
  3789 24B0 F0 04			jeq l_0EA5x
  3790 24B2 C9 FF			cmp #$FF
  3791 24B4 D0 A6			jne l_0EA5
  3792 24B6			l_0EA5x
  3793
  3794 				; optimize OK (main.pas), line = 108
  3795
  3796 24B6 AD 85 25			lda PLAYER1.ISALIVE
  3797 24B9 F0 03			jeq l_0EE7
  3798 24BB EE 84 25			inc PLAYER1.SCORE
  3799 24BE			l_0EE7
  3800
  3801 				; optimize OK (main.pas), line = 109
  3802
  3803 24BE AD 8D 25			lda PLAYER2.ISALIVE
  3804 24C1 F0 03			jeq l_0EFA
  3805 24C3 EE 8C 25			inc PLAYER2.SCORE
  3806 24C6			l_0EFA
  3807
  3808 				; optimize OK (main.pas), line = 110
  3809
  3810 24C6 AD 95 25			lda PLAYER3.ISALIVE
  3811 24C9 F0 03			jeq l_0F0D
  3812 24CB EE 94 25			inc PLAYER3.SCORE
  3813 24CE			l_0F0D
  3814
  3815 				; optimize OK (main.pas), line = 111
  3816
  3817 24CE AD 9D 25			lda PLAYER4.ISALIVE
  3818 24D1 F0 03			jeq l_0F20
  3819 24D3 EE 9C 25			inc PLAYER4.SCORE
  3820 24D6			l_0F20
  3821
  3822 				; optimize OK (main.pas), line = 113
  3823
  3824 24D6 A9 64			lda #$64
  3825 24D8 8D 78 25			sta SYSTEM.PAUSE_006C.N
  3826 24DB A9 00			lda #$00
  3827 24DD 8D 79 25			sta SYSTEM.PAUSE_006C.N+1
  3828 24E0 20 2A 11			jsr SYSTEM.PAUSE_006C
  3829
  3830 				; ------------------------------------------------------------
  3831
  3832 = 25CA			@CASETMP_0009	= DATAORIGIN+$005E
  3833
  3834 = 25CA			@VarData	= @CASETMP_0009
  3835 = 0001			@VarDataSize	= 1
  3836
  3837 24E3			@exit
  3838 					.ifdef @new
  3839 					lda <@VarData
  3840 					sta :ztmp
  3841 					lda >@VarData
  3842 					ldy #@VarDataSize-1
  3843 					jmp @FreeMem
  3844 					els
  3845 24E3 60				rts						; ret
  3846 					eif
  3847 				.endl
  3848 24E4			l_0007
  3849
  3850 				; --- RepeatUntilProlog
  3851 24E4			l_0F2B
  3852
  3853 				; optimize OK (main.pas), line = 120
  3854
  3855 24E4 A9 30			lda #$30
  3856 24E6 8D 84 25			sta PLAYER1.SCORE
  3857 24E9 8D 8C 25			sta PLAYER2.SCORE
  3858
  3859 				; optimize OK (main.pas), line = 121
  3860
  3861 24EC 8D 94 25			sta PLAYER3.SCORE
  3862 24EF 8D 9C 25			sta PLAYER4.SCORE
  3863
  3864 				; optimize OK (main.pas), line = 122
  3865
  3866 24F2 A9 01			lda #$01
  3867 24F4 8D 7C 25			sta LEVEL
  3868
  3869 				; optimize OK (main.pas), line = 124
  3870
  3871 24F7 A9 00			lda #$00
  3872 24F9 8D 7D 25			sta GAMEOVER
  3873
  3874 				; --- RepeatUntilProlog
  3875 24FC			l_0F44
  3876
  3877 				; optimize FAIL ('MAINLOOP', main.pas), line = 126
  3878
  3879 24FC 20 F9 23			jsr MAINLOOP
  3880
  3881 				; optimize FAIL (0, main.pas), line = 127
  3882
  3883 24FF EE 7C 25			inc LEVEL
  3884 2502 AD 7C 25			lda LEVEL
  3885 2505 C9 08			cmp #$08
  3886 2507 D0 05			jne l_0F5B
  3887 2509 A9 05			lda #$05
  3888 250B 8D 7C 25			sta LEVEL
  3889 250E			l_0F5B
  3890
  3891 				; optimize OK (main.pas), line = 128
  3892
  3893 250E AD 84 25			lda PLAYER1.SCORE
  3894 2511 C9 39			cmp #$39
  3895 2513 D0 05			jne l_0F74
  3896 2515 A9 01			lda #$01
  3897 2517 8D 7D 25			sta GAMEOVER
  3898 251A			l_0F74
  3899
  3900 				; optimize OK (main.pas), line = 129
  3901
  3902 251A AD 8C 25			lda PLAYER2.SCORE
  3903 251D C9 39			cmp #$39
  3904 251F D0 05			jne l_0F8D
  3905 2521 A9 01			lda #$01
  3906 2523 8D 7D 25			sta GAMEOVER
  3907 2526			l_0F8D
  3908
  3909 				; optimize OK (main.pas), line = 130
  3910
  3911 2526 AD 94 25			lda PLAYER3.SCORE
  3912 2529 C9 39			cmp #$39
  3913 252B D0 05			jne l_0FA6
  3914 252D A9 01			lda #$01
  3915 252F 8D 7D 25			sta GAMEOVER
  3916 2532			l_0FA6
  3917
  3918 				; optimize OK (main.pas), line = 131
  3919
  3920 2532 AD 9C 25			lda PLAYER4.SCORE
  3921 2535 C9 39			cmp #$39
  3922 2537 D0 05			jne l_0FBF
  3923 2539 A9 01			lda #$01
  3924 253B 8D 7D 25			sta GAMEOVER
  3925 253E			l_0FBF
  3926
  3927 				; optimize OK (main.pas), line = 132
  3928
  3929 253E AD 7D 25			lda GAMEOVER
  3930 2541 F0 B9			jeq l_0F44
  3931
  3932 				; optimize FAIL ('SHOWSCORE', main.pas), line = 134
  3933
  3934 2543 20 C4 11			jsr SHOWSCORE
  3935
  3936 				; optimize OK (main.pas), line = 136
  3937
  3938 2546 A9 C8			lda #$C8
  3939 2548 8D 78 25			sta SYSTEM.PAUSE_006C.N
  3940 254B A9 00			lda #$00
  3941 254D 8D 79 25			sta SYSTEM.PAUSE_006C.N+1
  3942 2550 20 2A 11			jsr SYSTEM.PAUSE_006C
  3943
  3944 				; optimize OK (main.pas), line = 137
  3945
  3946 2553 4C E4 24			jmp l_0F2B
  3947
  3948 				; ------------------------------------------------------------
  3949
  3950 = 0800			ATTRIBUTE_ADDR	= $0800
  3951 = 0C00			SCREEN_ADDR	= $0C00
  3952 = 0009			VICTORIES	= $09
  3953 = 0005			LOOK_AHEAD	= $05
  3954 = 007E			TRASH	= $7E
  3955 = 0020			EMPTY	= $20
  3956 = 00A0			WALL	= $A0
  3957 = 0041			WALL_COLOUR	= $41
  3958 = 0030			ZERO	= $30
  3959 = 0056			OBSTACLE_1	= $56
  3960 = 005B			OBSTACLE_2	= $5B
  3961 = 0035			OBST_COLOUR	= $35
  3962 = 0051			PLY_HEAD	= $51
  3963 = 002A			PLY_CRASH	= $2A
  3964 = 0057			PLY_BUSTED	= $57
  3965 = 0042			PLY_TAIL_UD	= $42
  3966 = 0040			PLY_TAIL_LR	= $40
  3967 = 007D			PLY_TAIL_RD	= $7D
  3968 = 006E			PLY_TAIL_RU	= $6E
  3969 = 006D			PLY_TAIL_LD	= $6D
  3970 = 0070			PLY_TAIL_LU	= $70
  3971 = 0062			PLY1_COLOUR	= $62
  3972 = 005D			PLY2_COLOUR	= $5D
  3973 = 0071			PLY3_COLOUR	= $71
  3974 = 0055			PLY4_COLOUR	= $55
  3975 = 0000			PLY_CTRL	= $00
  3976 = 0001			AI_STRAIGHT	= $01
  3977 = 0002			AI_SAPPER	= $02
  3978 = 0003			AI_BULLY	= $03
  3979 = 0004			AI_MIRROR	= $04
  3980 = 0001			JOY_UP	= $01
  3981 = 0002			JOY_DOWN	= $02
  3982 = 0004			JOY_LEFT	= $04
  3983 = 0008			JOY_RIGHT	= $08
  3984 = 0040			JOY_FIRE	= $40
  3985 = 0002			JOY_SELECT_1	= $02
  3986 = 0004			JOY_SELECT_2	= $04
  3987 = 100E			adr.MUL40	= CODEORIGIN+$0000
  3988 2556			.var MUL40	= adr.MUL40 .word
  3989 = 1040			adr.DIRECTION	= CODEORIGIN+$0032
  3990 2556			.var DIRECTION	= adr.DIRECTION .word
  3991 = FD30			KEYSCAN	= $FD30
  3992 = FF08			JOY	= $FF08
  3993 = FF15			BACKGROUND	= $FF15
  3994 = FF19			BOREDER	= $FF19
  3995 = 0058			T0B	= $58
  3996 = 0059			I0B	= $59
  3997 = 005A			ALIVE	= $5A
  3998 = 005B			NEWDIR	= $5B
  3999 = 005C			AVAILDIR	= $5C
  4000 = 005D			T0W	= $5D
  4001 = 005F			adr.PLY	= $5F
  4002 2556			.var PLY	= adr.PLY .word
  4003 = 256C			PLY.X	= DATAORIGIN+$0000
  4004 = 256D			PLY.Y	= DATAORIGIN+$0001
  4005 = 256E			PLY.HEAD	= DATAORIGIN+$0002
  4006 = 256F			PLY.COLOUR	= DATAORIGIN+$0003
  4007 = 2570			PLY.DIR	= DATAORIGIN+$0004
  4008 = 2571			PLY.BRAIN	= DATAORIGIN+$0005
  4009 = 2572			PLY.SCORE	= DATAORIGIN+$0006
  4010 = 2573			PLY.ISALIVE	= DATAORIGIN+$0007
  4011 = 0061			adr.TMPPLY	= $61
  4012 2556			.var TMPPLY	= adr.TMPPLY .word
  4013 = 256C			TMPPLY.X	= DATAORIGIN+$0000
  4014 = 256D			TMPPLY.Y	= DATAORIGIN+$0001
  4015 = 256E			TMPPLY.HEAD	= DATAORIGIN+$0002
  4016 = 256F			TMPPLY.COLOUR	= DATAORIGIN+$0003
  4017 = 2570			TMPPLY.DIR	= DATAORIGIN+$0004
  4018 = 2571			TMPPLY.BRAIN	= DATAORIGIN+$0005
  4019 = 2572			TMPPLY.SCORE	= DATAORIGIN+$0006
  4020 = 2573			TMPPLY.ISALIVE	= DATAORIGIN+$0007
  4021 = 0063			JOYSTATUS	= $63
  4022 = 257C			LEVEL	= DATAORIGIN+$0010
  4023 = 257D			GAMEOVER	= DATAORIGIN+$0011
  4024 = 257E			adr.PLAYER1	= [DATAORIGIN+$0012] .array [6]
  4025 2556			.var PLAYER1	= adr.PLAYER1 .word
  4026 = 257E			PLAYER1.X	= DATAORIGIN+$0012
  4027 = 257F			PLAYER1.Y	= DATAORIGIN+$0013
  4028 = 2580			PLAYER1.HEAD	= DATAORIGIN+$0014
  4029 = 2581			PLAYER1.COLOUR	= DATAORIGIN+$0015
  4030 = 2582			PLAYER1.DIR	= DATAORIGIN+$0016
  4031 = 2583			PLAYER1.BRAIN	= DATAORIGIN+$0017
  4032 = 2584			PLAYER1.SCORE	= DATAORIGIN+$0018
  4033 = 2585			PLAYER1.ISALIVE	= DATAORIGIN+$0019
  4034 = 2586			adr.PLAYER2	= [DATAORIGIN+$001A] .array [6]
  4035 2556			.var PLAYER2	= adr.PLAYER2 .word
  4036 = 2586			PLAYER2.X	= DATAORIGIN+$001A
  4037 = 2587			PLAYER2.Y	= DATAORIGIN+$001B
  4038 = 2588			PLAYER2.HEAD	= DATAORIGIN+$001C
  4039 = 2589			PLAYER2.COLOUR	= DATAORIGIN+$001D
  4040 = 258A			PLAYER2.DIR	= DATAORIGIN+$001E
  4041 = 258B			PLAYER2.BRAIN	= DATAORIGIN+$001F
  4042 = 258C			PLAYER2.SCORE	= DATAORIGIN+$0020
  4043 = 258D			PLAYER2.ISALIVE	= DATAORIGIN+$0021
  4044 = 258E			adr.PLAYER3	= [DATAORIGIN+$0022] .array [6]
  4045 2556			.var PLAYER3	= adr.PLAYER3 .word
  4046 = 258E			PLAYER3.X	= DATAORIGIN+$0022
  4047 = 258F			PLAYER3.Y	= DATAORIGIN+$0023
  4048 = 2590			PLAYER3.HEAD	= DATAORIGIN+$0024
  4049 = 2591			PLAYER3.COLOUR	= DATAORIGIN+$0025
  4050 = 2592			PLAYER3.DIR	= DATAORIGIN+$0026
  4051 = 2593			PLAYER3.BRAIN	= DATAORIGIN+$0027
  4052 = 2594			PLAYER3.SCORE	= DATAORIGIN+$0028
  4053 = 2595			PLAYER3.ISALIVE	= DATAORIGIN+$0029
  4054 = 2596			adr.PLAYER4	= [DATAORIGIN+$002A] .array [6]
  4055 2556			.var PLAYER4	= adr.PLAYER4 .word
  4056 = 2596			PLAYER4.X	= DATAORIGIN+$002A
  4057 = 2597			PLAYER4.Y	= DATAORIGIN+$002B
  4058 = 2598			PLAYER4.HEAD	= DATAORIGIN+$002C
  4059 = 2599			PLAYER4.COLOUR	= DATAORIGIN+$002D
  4060 = 259A			PLAYER4.DIR	= DATAORIGIN+$002E
  4061 = 259B			PLAYER4.BRAIN	= DATAORIGIN+$002F
  4062 = 259C			PLAYER4.SCORE	= DATAORIGIN+$0030
  4063 = 259D			PLAYER4.ISALIVE	= DATAORIGIN+$0031
  4064 = 259E			adr.OBSTACLES	= [DATAORIGIN+$0032] .array [8] .word
  4065 2556			.var OBSTACLES	= adr.OBSTACLES .word
  4066 2556			@exit
  4067
  4068 2556 A2 00		@halt	ldx #$00
  4069 2558 9A				txs
  4070
  4071 2559 60				rts
  4072
  4073 				; ------------------------------------------------------------
  4074
  4075 				; ------------------------------------------------------------
  4076
  4077 255A			.local	@DEFINES
  4078 255A			C4P
  4079 				.endl
  4080
  4081 255A			.local	@RESOURCE
  4082 				.endl
  4083
  4084 = 255A 0E 10		MUL40
  4084 = 255C 40 10		DIRECTION
  4084 = 255E 5F 00		PLY
  4084 = 2560 61 00		TMPPLY
  4084 = 2562 7E 25		PLAYER1
  4084 = 2564 86 25		PLAYER2
  4084 = 2566 8E 25		PLAYER3
  4084 = 2568 96 25		PLAYER4
  4084 = 256A 9E 25		OBSTACLES
  4084 				.endl							; MAIN
  4085
  4086 				; ------------------------------------------------------------
  4087 				; ------------------------------------------------------------
  4088
  4089 				.macro	UNITINITIALIZATION
  4090 				
  4091 					.ifdef MAIN.SYSTEM.@UnitInit
  4092 					jsr MAIN.SYSTEM.@UnitInit
  4093 					eif
  4094 				.endm
  4095
  4096 				; ------------------------------------------------------------
  4097
  4098 					ift .SIZEOF(MAIN.SYSTEM) > 0
  4099 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  4099 				SYSTEM: $10D5..$1177
  4100 					eif
  4101
  4102 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  4102 				CODE: $100E..$2559
  4103
  4104 				; ------------------------------------------------------------
  4105
  4106 256C				.align $04
  4107
  4108 256C			DATAORIGIN
  4109 256C 28 00 18 00 2D 0C	.by  $28 $00 $18 $00 $2D $0C
  4110
  4111 = 0006			VARINITSIZE	= *-DATAORIGIN
  4112 = 005F			VARDATASIZE	= 95
  4113
  4114 = 25CB			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  4115
  4116 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  4116 				DATA: $256C..$25CB
  4117
  4118 				; ------------------------------------------------------------
  4119
  4120 				.macro	STATICDATA
  4121 				.by  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01  $40 $01 $68 $01 $90 $01 $B8 $01
  4122 				.by  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02  $20 $03 $48 $03 $70 $03 $98 $03
  4123 				.by  $C0 $03 $01 $02 $04 $08
  4124 				.endm
  4125
  4126 					end
